(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1189448,      26497]
NotebookOptionsPosition[   1175841,      26061]
NotebookOutlinePosition[   1176197,      26077]
CellTagsIndexPosition[   1176154,      26074]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The RGB Cube corners.", "Subtitle",
 CellChangeTimes->{{3.596031466553658*^9, 3.596031489449979*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ToMatlab`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5982701510309753`*^9, 3.5982701642642107`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.598099845581697*^9, 3.598099849188382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"TrigFactor", "[", 
    RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.5981038847377663`*^9, {3.598259839351358*^9, 3.5982598505757017`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      SqrtBox["3"]},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "3"}]]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "6"}]]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"5", "/", "6"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "6"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5981038863317966`*^9, 3.598259851375906*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cubeCorners", "[", "minMax_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598104076120545*^9, 3.5981043202884827`*^9}, 
   3.598109768098722*^9, 3.59826004305897*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YABCube", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"cubeCorners", "[", 
    RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"faces", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598260760658156*^9, 3.598260806851488*^9}, {
  3.600343003419705*^9, 3.600343008039996*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RGBAxisRanges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RGBCube", " ", "=", " ", 
   RowBox[{"cubeCorners", "[", "RGBAxisRanges", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"faces", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.600343066116569*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SqrtBox["3"], 
      SqrtBox["3"], "0", "0", "0", 
      SqrtBox["3"], 
      SqrtBox["3"]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5982608094277077`*^9, 3.5986409102905493`*^9, 
  3.600343086980898*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.600343046383244*^9, 3.60034305735287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "RGBCube", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "1", "0", "0", "0", "1", "1"},
     {"0", "0", "1", "1", "1", "0", "0", "1"},
     {"0", "0", "0", "0", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.598640916500905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Max", ",", "faces"}], "]"}]], "Input",
 CellChangeTimes->{{3.5982609733385687`*^9, 3.598260991513816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8", ",", "7", ",", "8", ",", "8", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.598260992555751*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBCube3D", "[", "corners_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RGBCube", ",", "faces", ",", "ranges"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ranges", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", "corners"}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Max", ",", "corners"}], "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], ",", 
       
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5907813365213704`*^9, 3.590781353176323*^9}, 
   3.596035624531362*^9, {3.596035672692958*^9, 3.596035678300202*^9}, {
   3.596035750201765*^9, 3.5960357820732727`*^9}, {3.5971359116909885`*^9, 
   3.597135995537106*^9}, {3.5971360336701593`*^9, 3.5971360569311924`*^9}, {
   3.5971361125852704`*^9, 3.597136114355273*^9}, {3.5971362181934185`*^9, 
   3.597136256185472*^9}, {3.597136307339544*^9, 3.597136337921587*^9}, {
   3.597136535776864*^9, 3.5971365800709267`*^9}, {3.597136784409214*^9, 
   3.5971368079612465`*^9}, {3.598099387329082*^9, 3.598099397896762*^9}, {
   3.5980994350873957`*^9, 3.598099554534875*^9}, 3.598099596242014*^9, {
   3.5981009882763042`*^9, 3.598100990882945*^9}, {3.598101059990138*^9, 
   3.5981011923287582`*^9}, 3.598102000742701*^9, 3.59810204260655*^9, {
   3.5981038703931913`*^9, 3.598103881595449*^9}, 3.598104341994803*^9, {
   3.598259992037691*^9, 3.59826002069662*^9}, {3.598260834608832*^9, 
   3.598260839330237*^9}, {3.598260869782176*^9, 3.5982608855420103`*^9}, 
   3.598260935288631*^9, {3.5982610352219467`*^9, 3.59826107956835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABCube3D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"corners", ",", "RGBCube", ",", "faces", ",", "ranges"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"corners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ";", 
     RowBox[{"RGBCube", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",",
           "1"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"faces", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ranges", " ", "=", " ", 
      RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], ",", 
       
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5907813365213704`*^9, 3.590781353176323*^9}, 
   3.596035624531362*^9, {3.596035672692958*^9, 3.596035678300202*^9}, {
   3.596035750201765*^9, 3.5960357820732727`*^9}, {3.5971359116909885`*^9, 
   3.597135995537106*^9}, {3.5971360336701593`*^9, 3.5971360569311924`*^9}, {
   3.5971361125852704`*^9, 3.597136114355273*^9}, {3.5971362181934185`*^9, 
   3.597136256185472*^9}, {3.597136307339544*^9, 3.597136337921587*^9}, {
   3.597136535776864*^9, 3.5971365800709267`*^9}, {3.597136784409214*^9, 
   3.5971368079612465`*^9}, {3.598099387329082*^9, 3.598099397896762*^9}, {
   3.5980994350873957`*^9, 3.598099554534875*^9}, 3.598099596242014*^9, {
   3.5981009882763042`*^9, 3.598100990882945*^9}, {3.598101059990138*^9, 
   3.5981011923287582`*^9}, 3.598102000742701*^9, 3.59810204260655*^9, {
   3.5981038703931913`*^9, 3.598103881595449*^9}, 3.598104341994803*^9, {
   3.598259992037691*^9, 3.59826002069662*^9}, {3.598260834608832*^9, 
   3.598260839330237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"cubeCorners", "[", " ", 
   RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.59827007227629*^9, 3.598270080076824*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", "1", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5981068311498413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", " ", 
  "YABCubeCorners"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABCube3D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "RGBinYABcorners", ",", "RGBCubeCorners", ",", "YABCubeCorners", ",", 
      "YABinRGBCubeCorners", ",", "faces", ",", "ranges"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RGBinYABcorners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RGBCubeCorners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]}], ";", 
     RowBox[{"YABCubeCorners", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", " ", 
        RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YABinRGBCubeCorners", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", " ", 
        RowBox[{
         RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", " ", 
         RowBox[{"cubeCorners", "[", " ", 
          RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"faces", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ranges", " ", "=", " ", 
      RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", "0.9", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.598105953448339*^9, {3.598105988521916*^9, 3.598105989261528*^9}, 
   3.598106034293277*^9, {3.598106156725143*^9, 3.59810623616577*^9}, {
   3.59810631744058*^9, 3.5981063447137938`*^9}, {3.598106500681981*^9, 
   3.598106553413378*^9}, {3.5981065865035543`*^9, 3.59810659540003*^9}, {
   3.598106675121546*^9, 3.5981066986506653`*^9}, 3.59810673141173*^9, {
   3.598106765793044*^9, 3.598106784275941*^9}, {3.5981068654982347`*^9, 
   3.598106893621772*^9}, {3.5981074853719797`*^9, 3.598107572894574*^9}, {
   3.598107614230008*^9, 3.5981076609034348`*^9}, {3.5981076985167837`*^9, 
   3.598107702671874*^9}, 3.598107799318324*^9, 3.5981079699746237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotation Matrices", "Subtitle",
 CellChangeTimes->{{3.59230779646035*^9, 3.5923078213303347`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixX", "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixY", "[", "\[Beta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", " ", "0", ",", " ", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Beta]", "]"}], ",", " ", "0", ",", " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixZ", "[", "\[Gamma]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "\[Gamma]", "]"}], ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", " ", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RotationMatrixZ", "[", "\[Gamma]", "]"}], ".", 
   RowBox[{"RotationMatrixY", "[", "\[Beta]", "]"}], ".", 
   RowBox[{"RotationMatrixX", "[", "\[Alpha]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5905831076862884`*^9, 3.5905831501507173`*^9}, {
  3.590583197255411*^9, 3.5905832177995863`*^9}, {3.5905988272233944`*^9, 
  3.5905988623024006`*^9}, {3.5905989029957285`*^9, 3.590598921010759*^9}, {
  3.590598968920499*^9, 3.590599032309125*^9}, {3.590689773258251*^9, 
  3.590689776538439*^9}, {3.590696395243007*^9, 3.5906964188513575`*^9}}],

Cell["\<\
Solution for the Yab cube. Luminocity axis is in the X value.\
\>", "Text",
 CellChangeTimes->{{3.596031163530446*^9, 3.596031186593289*^9}, {
  3.596031335752564*^9, 3.596031370656706*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"TrigFactor", "[", 
     RowBox[{
      RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", 
      RowBox[{"RotationMatrixZ", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "]"}], ".", 
      RowBox[{"RotationMatrixY", "[", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "4"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iYAB", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"TrigFactor", "[", 
     RowBox[{
      RowBox[{"RotationMatrixY", "[", 
       RowBox[{"Pi", "/", "4"}], "]"}], ".", 
      RowBox[{"RotationMatrixZ", "[", 
       RowBox[{"-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "]"}], ".", 
      RowBox[{"RotationMatrixX", "[", 
       RowBox[{"-", "\[Theta]"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iiYAB", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"TrigFactor", "[", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"TrigToExp", "[", 
       RowBox[{"Inverse", "[", 
        RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}], "]"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5981444941990137`*^9, 3.598144530214554*^9}, {
  3.598258137417379*^9, 3.598258243772018*^9}, {3.598258339360806*^9, 
  3.598258342636393*^9}, {3.598258544745542*^9, 3.5982585483449707`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", "RGBCube", "]"}]}], ",", "\"\<=\>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"iYAB", "[", "\[Theta]", "]"}], "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ",", "\"\<=\>\"", 
   ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", " ", 
      RowBox[{"YABCube", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596031389628778*^9, 3.596031398491406*^9}, {
   3.596031810629077*^9, 3.596031882107218*^9}, {3.5973413196459875`*^9, 
   3.5973413235732117`*^9}, {3.5982596858886547`*^9, 3.598259692780513*^9}, {
   3.5982611313576813`*^9, 3.5982611711710033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          SqrtBox["6"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1", "1", "0", "0", "0", "1", "1"},
        {"0", "0", "1", "1", "1", "0", "0", "1"},
        {"0", "0", "0", "0", "1", "1", "1", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        SqrtBox["3"]},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          SqrtBox["6"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          SqrtBox["2"]]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          SqrtBox["6"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          SqrtBox["2"]]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          SqrtBox["2"]]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          SqrtBox["6"]]}], 
        FractionBox[
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         SqrtBox["6"]], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {-
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[$CellContext`\[Theta]], -6^Rational[-1, 2] 
        Cos[$CellContext`\[Theta]] + 
       2^Rational[-1, 2] Sin[$CellContext`\[Theta]]}, {-
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 
       6^Rational[-1, 2] (3^Rational[1, 2] Cos[$CellContext`\[Theta]] + 
        Sin[$CellContext`\[Theta]])}}], 
    MatrixForm[{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, 1, 1, 1, 0, 0, 1}, {0, 0, 0, 
     0, 1, 1, 1, 1}}]], "=", 
   MatrixForm[{{
     0, 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^Rational[-1, 2], 2 
      3^Rational[-1, 2], 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^
      Rational[1, 2]}, {
     0, -Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
      6^Rational[-1, 2] Cos[$CellContext`\[Theta]] - 2^Rational[-1, 2] 
      Sin[$CellContext`\[Theta]], Rational[2, 3]^Rational[1, 2] 
      Cos[$CellContext`\[Theta]], 
      6^Rational[-1, 2] Cos[$CellContext`\[Theta]] + 
      2^Rational[-1, 2] Sin[$CellContext`\[Theta]], -6^Rational[-1, 2] 
       Cos[$CellContext`\[Theta]] + 
      2^Rational[-1, 2] Sin[$CellContext`\[Theta]], -
      Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 0}, {
     0, -Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], -6^Rational[-1, 2] (
       3^Rational[1, 2] Cos[$CellContext`\[Theta]] + 
       Sin[$CellContext`\[Theta]]), -Rational[2, 3]^Rational[1, 2] 
      Sin[$CellContext`\[Theta]], 
      2^Rational[-1, 2] Cos[$CellContext`\[Theta]] - 6^Rational[-1, 2] 
      Sin[$CellContext`\[Theta]], 
      6^Rational[-1, 2] (3^Rational[1, 2] Cos[$CellContext`\[Theta]] + 
       Sin[$CellContext`\[Theta]]), Rational[2, 3]^Rational[1, 2] 
      Sin[$CellContext`\[Theta]], 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.596031883014731*^9, 3.5962156989828453`*^9, 3.5962170412168503`*^9, 
   3.5967656249304237`*^9, 3.5971350868418283`*^9, 3.5973158513472843`*^9, 
   3.598099812502405*^9, 3.59814455154566*^9, {3.59826114412899*^9, 
   3.598261172187111*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}], 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          SqrtBox["6"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         SqrtBox["3"], 
         SqrtBox["3"], "0", "0", "0", 
         SqrtBox["3"], 
         SqrtBox["3"]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}], 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
           SqrtBox["6"]]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          RowBox[{"3", " ", 
           SqrtBox["6"]}]]}], 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["6"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["6"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["6"]}]], 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Pi]", "-", 
               RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "-", 
          
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Pi]", "-", 
               RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "-", 
          
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "-", 
          
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Pi]", "-", 
               RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "-", 
          
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Pi]", "-", 
               RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}], 
         RowBox[{"3", " ", 
          SqrtBox["3"]}]], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
          ")"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], -Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]]}, {
      3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2] 
       Cos[$CellContext`\[Theta]], -Rational[2, 3]^Rational[1, 2] 
       Sin[$CellContext`\[Theta]]}, {
      3^Rational[-1, 2], -6^Rational[-1, 2] Cos[$CellContext`\[Theta]] + 
       2^Rational[-1, 2] Sin[$CellContext`\[Theta]], 
       6^Rational[-1, 2] (3^Rational[1, 2] Cos[$CellContext`\[Theta]] + 
        Sin[$CellContext`\[Theta]])}}], 
    MatrixForm[{{
      0, 3^Rational[1, 2], 3^Rational[1, 2], 0, 0, 0, 3^Rational[1, 2], 3^
       Rational[1, 2]}, {-2^Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       6^Rational[-1, 2] Sin[
         Mod[
         Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], -2^
         Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       6^Rational[-1, 2] Sin[
         Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
       2^Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]],
        2^Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]],
        2^Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[
          Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], -2^
         Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       6^Rational[-1, 2] Sin[
         Mod[
         Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], -2^
         Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       6^Rational[-1, 2] Sin[
         Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
       2^Rational[-1, 2] Cos[
          Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[
          Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] 
           Pi]]}, {-2^Rational[-1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[-1, 2] 
       Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], -2^Rational[-1, 2] 
        Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[-1, 2] 
       Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], -2^Rational[-1, 2] 
        Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[-1, 2] 
       Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], -2^Rational[-1, 2] 
        Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[-1, 2] 
       Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], 2^Rational[-1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], 
       2^Rational[-1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], 
       2^Rational[-1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]], 
       2^Rational[-1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[-1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]}}]], "=", 
   MatrixForm[{{Rational[-1, 3] 6^Rational[-1, 2] (3 Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 3 Cos[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       3^Rational[1, 2] (Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 6] (6 - 6^Rational[1, 2] Cos[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[1, 2] Cos[
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       2^Rational[1, 2] Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 2^Rational[1, 2] Sin[
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
      Rational[1, 6] (6 - 6^Rational[1, 2] Cos[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 6^Rational[1, 2] Cos[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] - 
       2^Rational[1, 2] Sin[
         Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 2^Rational[1, 2] Sin[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]),
       Rational[1, 3] 6^Rational[-1, 2] ((-3) Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 3 Cos[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       3^Rational[1, 2] (-Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 6^Rational[-1, 2] (3 Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 3 Cos[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       3^Rational[1, 2] (Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 6^Rational[-1, 2] (3 Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 3 Cos[
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       3^Rational[1, 2] (Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 6] (6 + 6^Rational[1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 6^Rational[1, 2] 
       Cos[
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       2^Rational[1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] - 2^Rational[1, 2] 
       Sin[
         Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
      Rational[1, 6] (6 + 6^Rational[1, 2] Cos[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       6^Rational[1, 2] Cos[
          Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
       2^Rational[1, 2] Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
       2^Rational[1, 2] Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])}, {
     Rational[1, 3] 
      3^Rational[-1, 2] (
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Cos[$CellContext`\[Theta]] (3 Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        3^Rational[1, 2] Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Sin[Rational[1, 6] Pi + $CellContext`\[Theta]] + 
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
         3^Rational[1, 2] Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Cos[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Sin[Rational[1, 6] Pi + $CellContext`\[Theta]] + 
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
         3^Rational[1, 2] Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Cos[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Cos[$CellContext`\[Theta]] (3 Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (-
        Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Cos[$CellContext`\[Theta]] (3 Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (-
        Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Cos[$CellContext`\[Theta]] (3 Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        3^Rational[1, 2] Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Sin[Rational[1, 6] Pi + $CellContext`\[Theta]] - 
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
        3^Rational[1, 2] Cos[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Cos[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Sin[Rational[1, 6] Pi + $CellContext`\[Theta]] - 
       Sin[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
        3^Rational[1, 2] Cos[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Cos[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] 
            Pi]]))}, {
     Rational[1, 3] 
      3^Rational[-1, 2] (-
        Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Sin[$CellContext`\[Theta]] (3 Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Cos[Rational[1, 6] Pi + $CellContext`\[Theta]] - 
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
        3^Rational[1, 2] Cos[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Sin[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Cos[Rational[1, 6] Pi + $CellContext`\[Theta]] - 
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
        3^Rational[1, 2] Cos[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
          Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Sin[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (-
        Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Sin[$CellContext`\[Theta]] (3 Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        3^Rational[1, 2] Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Sin[$CellContext`\[Theta]] (3 Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        3^Rational[1, 2] Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] 
      3^Rational[-1, 2] (
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (3 Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Sin[$CellContext`\[Theta]] (3 Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         3^Rational[1, 2] Sin[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Cos[Rational[1, 6] Pi + $CellContext`\[Theta]] + 
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
         3^Rational[1, 2] Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) + 
       Sin[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
            Mod[
            Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
         Sin[
           Mod[
           Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]])), 
      Rational[1, 3] ((-3) 2^Rational[1, 2] 
        Cos[Rational[1, 6] Pi + $CellContext`\[Theta]] + 
       Cos[Rational[1, 6] (Pi - 6 $CellContext`\[Theta])] (
         3^Rational[1, 2] Cos[
            Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
           Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]) - 
       Sin[$CellContext`\[Theta]] (3^Rational[1, 2] Cos[
           Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
        Sin[
          Mod[
          Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]))}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.596031883014731*^9, 3.5962156989828453`*^9, 
  3.5962170412168503`*^9, 3.5967656249304237`*^9, 3.5971350868418283`*^9, 
  3.5973158513472843`*^9, 3.598099812502405*^9, 3.59814455154566*^9, 
  3.59826114412899*^9, 3.598261195228512*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5982615688127127`*^9, 3.598261587333194*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.598261572011495*^9, 3.598261587758152*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"iYAB", "[", "\[Theta]", "]"}], "]"}], "-", 
  RowBox[{"YAB", "[", "\[Theta]", "]"}]}]], "Input",
 CellChangeTimes->{{3.598261616292736*^9, 3.598261627120006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.598261627842696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"iYAB", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"iiYAB", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5981447790905933`*^9, 3.598144809614649*^9}, {
  3.598258280925929*^9, 3.598258286787797*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.598144810266417*^9, {3.59825828757443*^9, 3.59825831356367*^9}, 
   3.598258347821144*^9, 3.598258553605968*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.598144810266417*^9, {3.59825828757443*^9, 3.59825831356367*^9}, 
   3.598258347821144*^9, 3.598258553609817*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.598144810266417*^9, {3.59825828757443*^9, 3.59825831356367*^9}, 
   3.598258347821144*^9, 3.598258553613036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]], "Input"],

Cell["\<\
List(List(1/Sqrt(3),1/Sqrt(3),1/Sqrt(3)),List(-(Sqrt(0.6666666666666666)*Sin(\
Pi/6. + \[Theta])),Sqrt(0.6666666666666666)*Cos(\[Theta]),
    -(Sqrt(0.6666666666666666)*Sin(Pi/6. - \
\[Theta]))),List(-(Sqrt(0.6666666666666666)*Cos(Pi/6. + \[Theta])),
    -(Sqrt(0.6666666666666666)*Sin(\[Theta])),Sqrt(0.6666666666666666)*Cos(Pi/\
6. - \[Theta])))\
\>", "Output",
 CellChangeTimes->{3.598261236644788*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"CForm", "[", 
   RowBox[{"iYAB", "[", "\[Theta]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5981447790905933`*^9, 3.598144809614649*^9}, {
  3.598258280925929*^9, 3.598258286787797*^9}, {3.598261198478545*^9, 
  3.5982612342163*^9}}],

Cell["\<\
List(List(1/Sqrt(3),-(Sqrt(0.6666666666666666)*Sin(Pi/6. + \
\[Theta])),-(Sqrt(0.6666666666666666)*Cos(Pi/6. + \[Theta]))),
   List(1/Sqrt(3),Sqrt(0.6666666666666666)*Cos(\[Theta]),-(Sqrt(0.\
6666666666666666)*Sin(\[Theta]))),
   List(1/Sqrt(3),-(Sqrt(0.6666666666666666)*Sin(Pi/6. - \
\[Theta])),Sqrt(0.6666666666666666)*Cos(Pi/6. - \[Theta])))\
\>", "Output",
 CellChangeTimes->{3.598261210392034*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"TrigToExp", "[", 
   RowBox[{"iiYAB", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598258472048335*^9, 3.598258520097324*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5982584800404997`*^9, 3.5982585230108128`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABCube", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], "]"}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.596032403095932*^9, 3.5960324253912687`*^9}, {
   3.596032460461591*^9, 3.596032462451202*^9}, {3.598144734827881*^9, 
   3.598144771430924*^9}, 3.598144801914105*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.596032444419527*^9, 3.596032447549161*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      SqrtBox["3"]},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["6"]]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.596032448117144*^9, 3.5960324677272177`*^9}, 
   3.596035810354085*^9, 3.59713524478605*^9, 3.598144855800312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"YABCube3D", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
        RowBox[{
         RowBox[{"ranges", " ", "=", " ", 
          RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
         RowBox[{"Cuboid", "[", 
          RowBox[{"0.9", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
          "]"}]}]}], "}"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5971351701789455`*^9, 3.5971351830109634`*^9}, {
   3.597135218103012*^9, 3.5971352652450795`*^9}, {3.597135599457549*^9, 
   3.597135670504649*^9}, {3.5971366018829575`*^9, 3.5971366425860147`*^9}, {
   3.597136690520082*^9, 3.5971366931400857`*^9}, {3.5971376149943886`*^9, 
   3.59713763742642*^9}, {3.597137669999466*^9, 3.5971377266935453`*^9}, 
   3.5971378028786526`*^9, 3.597137855253726*^9, {3.597137901956792*^9, 
   3.5971379100378027`*^9}, {3.597137942899849*^9, 3.597137959951873*^9}, {
   3.597138006744939*^9, 3.597138020645958*^9}, {3.5971382386032643`*^9, 
   3.597138296827346*^9}, {3.597138480810604*^9, 3.59713852007366*^9}, 
   3.597139351088835*^9, {3.597139405402911*^9, 3.597139405962912*^9}, 
   3.597139452155977*^9, 3.598100818545738*^9, {3.598100902996138*^9, 
   3.598101005129779*^9}, {3.598102537424057*^9, 3.5981026541415167`*^9}, {
   3.598102716886051*^9, 3.59810274122301*^9}, {3.598102827959939*^9, 
   3.59810295048919*^9}, {3.598103002701921*^9, 3.59810305034873*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    360., {172., 177.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$19784$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$19784$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`YABCube3D[$CellContext`\[Theta]$$], 
        Graphics3D[{
          Opacity[
          0.5], $CellContext`ranges = \
$CellContext`YABAxisRanges[$CellContext`\[Theta]$$]; Cuboid[0.9 {{
               Part[$CellContext`ranges, 1, 1], 
               Part[$CellContext`ranges, 2, 1], 
               Part[$CellContext`ranges, 3, 1]}, {
               Part[$CellContext`ranges, 1, 2], 
               Part[$CellContext`ranges, 2, 2], 
               Part[$CellContext`ranges, 3, 2]}}]}]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {216., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.597137857453729*^9, 3.5971379112878046`*^9, 3.597137963171878*^9, 
   3.5971380217959595`*^9, 3.5971382548242874`*^9, 3.5971382980673475`*^9, 
   3.597138484310609*^9, 3.597138521333661*^9, 3.5971393551998405`*^9, 
   3.597139407442914*^9, 3.5971394537459793`*^9, 3.597341281472804*^9, 
   3.5973413427783103`*^9, 3.597787458427895*^9, 3.598099791610578*^9, 
   3.598099861061969*^9, 3.598100821277104*^9, {3.598100962786167*^9, 
   3.59810100613698*^9}, {3.5981025709963903`*^9, 3.598102656010915*^9}, 
   3.598102877111755*^9, 3.598102915714476*^9, {3.5981030111000834`*^9, 
   3.598103051351694*^9}, 3.5981077218411007`*^9, 3.598107807689767*^9, 
   3.598107982907465*^9, 3.598109800403185*^9, 3.6003431382981586`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"TrigExpand", "[", 
     RowBox[{
      RowBox[{"YABCube", "[", 
       RowBox[{"\[Theta]", " ", "+", 
        RowBox[{"Pi", "/", "6"}]}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.596032911249226*^9, 3.596032942281398*^9}, {
  3.59603303804349*^9, 3.596033159766564*^9}, {3.5960331916938457`*^9, 
  3.5960331986709642`*^9}, {3.59603437444278*^9, 3.5960343856383047`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["2"]]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["2"]]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.596033160433427*^9, 3.596033199486622*^9, 
  3.596034387463066*^9, 3.5973412738253665`*^9, 3.597341378896376*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"YABCube", "[", "\[Theta]", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5962155669430733`*^9, 3.5962156433415728`*^9}, {
  3.59621588083167*^9, 3.596215900269607*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
Te4SSmIYMZCJGUukUNm+s8OcWGtG5Q+NWxRGp6wOiCIO6oJ0r3sUhiqOjSrN
FEPKyxHpqykk/pstPu8irk3P31ucSmFHdetgAvHcQD1NqXQK3xo/3z1dWQw2
Dp9P6WdS+GOL9Etr4hOrU9q3ZVNoxj5rdp64YYJq/J08ChV+8G4PEp+6PXHq
CgGFe3zeZOapkHydfeXl8pRCq/j1Yx3EH/aHVp97TuHksA97pFXFsGDpn3MN
FRT61Sy6bEtsN7OgZ/QlyU/84OYg4tMSfms1qijUosr1EombX39leb0l8eMc
N/1IzM1KdYitpVBCzdl/iHhR7O6ionoKSzo2vJyiJoZdR9VnfGog33fWX6ZL
HObU4s9vpJDTKl+2ijhn7fV3es0UjuX83r+NuFVn6+JtLRRa7mlatJeYLzv5
clAbye91UlaJDQaqvt3uoPC8fJjcOWLHprB/Xn6icKR8y6JY4nDBmvvfuyks
fyy//xZx7l0WT15EoevMt8/uE7efK9ptIqZw3tpgw2xiac+A585fKLRL1ajI
Jza0MVA/941C6c6iw4XEzst7j2f0UrjqgTkUE19Uefjx3Q8KWz5Vaf31Y467
0ehPCm9fXK379/kukca1Wb8oNHmT/s/f902qbhvYMEyhvnji+Sxio5wbWzxH
KPxi6SpMJd59bXtWzBiJV1iGQxLxpWNTJxWNU9iwvq8/mrjQ+b/9nRI0bnDU
ST5LLFx//hWPopH/YqdvwN/5WTipaXJpFLDO5roRt1gu8VvFo9FLQ3X2VmJb
a6mqXVI0sgI0nyJx/dY29SMyNObtvXFBh9jK7pF/7EQa15w+Ffo3X6/tz73J
lqWx4tDH9L/5fOayOPDzNBpnzO4NFxCvdOP9J6lAo3Zb2sok4iceLbNnK9J4
20WoFkyc6X32rb0yjVXqNV5LiXV97bUCVWn8ZRvWKkucHLAwKEadxhM2ZUdE
ZD0mBDdrV2vSOGXo3coo4ukhmcfE2jS+Ssra40ocHXqmjqtDo+kklWID4vCL
esGwgMYld/IG/iPrnXuZerdTn8bIKuZ9HPHJ6EadgEU0ejwvFLkQB9wIacg0
pPHJGYvYXrK/fibaznuzjIy3nbz4EbHn7fmnGCMaV3FD//gS70l9P38WkPFu
F9V/kv1rk6975sp6Gs0Ox1xrmkH2fwGrOcOMxkY/6weRxBYl7/SrLGh8FtL1
xZTY9EXwR8qKxo3GCaN3SL3Qr6tb7GdL48S0P5ZWpL48bPj3XNQOGsMesBoH
FcSg3XSsLd2eRt8ROuoGsUqH9vkeJxqNZhhcbiP1Sub70U7bvTQOL/xQtpnU
t7AfVst899HYm59WwUwTA2dQM+LyAeKvRcPBxL9H/1v+yptGVVby5+SpYhBJ
zb5sfIRG/Bwg2TZZDM+1qkDlPI2ifSu0hiaIwTyizVz+Isnf2GKVIOK3Az+2
ToykcY5g/qk/MmQ/linu/xNFo66dWcQfaTEMObtda42jUX5oJP8zXwzzbrL7
Eu/T2Brvb3uEFkM2V3409iGNM3PcpnVTYlh+cK5kZDqNmfPaTSyJ162wUg7O
pvHwt4g6JY4Y/tecYOZYQOZ/mpl+lyWGWIXlt1Vf0Ugxk2X2jjAwM/ifNIUq
GqWmcGMKfjNwR+j4eFI1jQamaueliDNzQ6vHa2h08O8ruTfEwOst9b/bGmk0
rFi67uUAA6xLnluSGBqdoue0lH1nwIOXTKnzudioCiciyHn8mh12cbU0Fy33
q5TGdZD+YWyv/J4J5P632XPutTPwvW/+nAeTuXgr7avXo1YGDjfnWiyZwcWI
SU49ReR8P5b+IspMl4vjx8r9fUm/cMmmW81nIxezmX1pZ0g/0WdZkRq9iYu0
1U357QIGrM1SF+Vv5qJnnMd9rRIG5FYeWDO6lYt9j1StSwsZiNMecAt14OJ/
q/bdbSH9yd3fVEacJxcFdnrupaTfyU+aveL5ZS7mPAuW1b7KwOzxNUefXuFi
yEkWuyGGfH/X7ieCGC7e5v2wD4lmwH1G8pKi61wsTzi6qfEyAzOitRfk3uKi
zP2jc30uMBB0Vkc1JYuLT5ZML9t+kgHTg/oS52u4eEPfQL9/LwPVxiYvrCdL
ood7p6KXIQPhj31H1k2VxKOrjIqfGTCwfknGQmM5SXTYeatt6mIGShfMStRQ
lMTXy6jbWXqk/1Pn+f9Uk8Suvj7V5jkMXJOsnxOrL4mr7VwUhDMYcKnbd6Fx
kyS2Vo1nfhwTwZDHjS1OEZJYJy9VbC0QQeSRO5LBlyTxhP5mW8ViEWiFPyhM
iJJEF/cOw9YCEWxNLdRojpXE7OJjJc55Isjuae7felMSHRNlR7eliWC/68xo
i0xJtDu+w+ZLnAjadyXUG9ZK4kjWk4TXh0VQaXVz6wR5HtZkySrt0RCRem+S
khLNQ8PnuM4zsAf2fn0z8DGWhx1Bnhmr/XrA65bjminXeei5acxS/lAPBPND
OoISeKi8bsGivP09EN/4Usk6mYf+G3Ij2x17oCFw+6XRfB52L9jQ2ra2B8wL
fAI3N/NQbqN6WLhsD2w+SFWGtvBQT1e4VGtCD9jOipUvauPhOQ8ZrVJ+D7iF
P8nR6uLh0R2hJd/YPXB6B+vbyBce/rke0GM4IISS3xedk//wcOVxaZtDjUJ4
ka6a1czio9h0Db//nRCqnLPGZTl8NFaYKuFdK4TmV/XxRyX5GPP09BO310IY
ilN6byXLRwkLk61YLIRxyzTN0Cl87Kn6Vyv7iRC4HDhcOI2PRYdrTWblCWHa
PufJWop8/Lj60LKxdCEoqf503KnER9tyXxX3B0KYVXcm/ZIyH5U1/zGvSRGC
zlmFsReqfOQ6mxQtuyuEhcapFiPqfExIunA4MUkI/wcD2Jcs
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwd2Hk4Vd33AHBcw0UqQ2RKaNSkSZlaNxUZXmMRIWNkylCoUEoiXpmalKEy
JKmkKKptjDS8ikQSrumem5TxnnPvxW9/f3+d5/Occ/az9zp7r7Weo+5x3NZb
SEBAgCYoIPD/VyTxaWB7yC731vjqd0oBb1YSb/SXZVjBows2Dh1Npoj7ZJNX
V/oRKPMkD2U3OaIhOV+yIv040AXUlGOajqHvxnF1BelngXsqKdaz6RT6eiR9
dXb6FUjzczXTakpEtgGK32+k50L1k1tirm9vorQJ5/Jr6Y8hR8UpULe+GOk3
mkkYhdXA+kJjG4mWKhR82tK9PLgZFOYTJK5/rUeBL7xThDRb4Well1uxTAtq
Z5mKF3m0w8WC2z52Lq3o8qYZgQrHTrDIWO004NOGQtY1X60p+AGqtIYM4ZwO
xPX0f9QT1Afb67V035d0IY/X9tapR5mguNZZzMX/B/Icb6+pSRiEUYPdG9VN
elGyduXxwvhhiK60C1Yh+pBQTeWOuNMskAyiu/AVmEhay/xT7w02bPkTJCrz
zwDan2t072/6KOyxmlOnHAeRwp8PxmcrxyDPz9aZOjqEspqqBGnH/gJ3xaYz
6x2GkYHq7vnlXuMQdeYQ+rt8BK3rWzwYfWICtAfO12UxR5DlyPK68MgJqBdb
o6o/NIKCx7TzjkdNgJ1u81zXyAh6xrd2do+bANvwA/ayv0eQgWJa+97MCQi0
VbE9wRlBFrbSjZLPJuDAl+eH/kiyUECDdOHNyQlYUKmf2LyVhUrvy/g+D52E
86bjs3MxLBT3Fe2mRUzC2xg/keBYFnIWClS2OTMJSkfZxr0XWEjCuenT6IVJ
aKaZRbxIYKGji6K2r7g6Cf5VdxIOprPQ8vAhoYzKSYhcTBjrFbBQ5p4X2cH8
SVgQai5U+o6Fon66tK2LnwL7f2q8NkoRaMrEMNv78hTk8oodNRcRKKBMxSc3
ZQoi4hSvyEsT6HBcN1fm+hT85M1VceQIpKflqMEtmoJ2bRXZAhUCUScPhDS/
m4KPte8LS9YRKFzKfJG31DR0aH8I89lPoLFwra4c6Wmo5TnsXGFGoKN94vc6
l0xDD81Ct9ecQPblzToWy6Yh1Xr8j5UVgbY7Grtu3TQNGzy/rVexx/PL310q
aDMNWmtKW454EijEYKd5TuY0uD/79i49ikACQZlnr9yYBolvIsP8aAKl5P4t
P3d7GmxfioV7nyXQA6FiFc/8afhsvGl883kCMZsVx1Y/m4bTVx7ZvLhEoAMH
eallbdNQsrrx/ul0AukEvelokJmBjjtzy74WEqghV0myQn4GaK8W/it1n0C2
n8OhSGkG3L97BewtJlDQtk33EzVmYPDN9ZjSEgIVcXNPWW6ZgaVlUn8CnhBo
6aVYlU6bGdglqfM37yWBuLl7PX6lzkDXOWvyRwuBdnEM0zdfnYFVr7rDqPcE
irXcURdxcwY6lTSWyn0kEH12rYbwXfx+xZXve/4j0BKnRUyV8hng/qrd+28b
gbTlvrtbfp2BaV5ydlM3gcL829Iyu2ZgyaPcW29/EKii7kPt954Z+JahV1vf
QyDDEKTuMzwDMV0151/0EsjsU37/Wc4MPGxW7UkaIJB3wnH3MkUOWDfzervY
BLrf65vGUeVAV4WnZfUvAo3qeNQaanDAMc9oIGuUQKFDB9RbtDgg9mzluQNj
BDpnpNfP1OeAb0hLXNk4gbL4wu5yrhzQbDN9KEMSqDU4yy3iLr5v8ntxCI2N
tFIX804UciBgyFV/gTAbXXgcfzX0AQfkuLFNBdg6Y6EtgU85MO9fIdwuwkbZ
/ubbvOo4kGffJq1KZyO/o3wxGyYHjEXEj7svYKOGi6F3LYc5sF3f+gkTW7WA
ZWDB5kDV2le2HlJs1DrQHmIywYHhS8wq54VstMO9tNtQiARh2zSFXYvZSNjZ
9bGWBgkbVRfwn8qykeuZdtM1q0hIT15moSTHRpVZZoMrtUgQaWTyz2L7deko
qm8hYYOLzznjJWz02X7RBQUjEnjeFQtr5PH6wi+qLjEmISq/xFNJgY3irvIq
ZcxIEB/UUAzD3tk+MiplS4JVYGyB2lI2yrGpsRf2IOGfWL893opsRAbrjAse
JYE++v3WU2zb1IdJ88dI4IvkH5jDFvnvRg03hIShxA0jqUpsFGARojUeS8JC
s7wrd5XZ6K3/SMPYRRKmxx3YTGy1JJcjo4kkKATtK1BXYaMv70wzR9JI4Lo9
1c/C1jXRmOu5Q4KqeSA7QpWNtt1rSWgqIOEZQ3//A+yN86GyZcUkJO23ku/G
1qisXxNXRsJPriFt5zI2UpENKA98TsICBVkNL2z543K7HF6S0LNGsywFW3K1
t51WLQkvFdhqvdiiF6R+yjaS8HDl7XlhNTYS6H3uO9tMglzSWau12FPXRGNa
W0kQavwMgdhjE4/oVe0klCYa9CVjsywdMu51kiAb3/r3AXaP6P374X04nlKB
HkzsTg/rrW6DJCSYhNbzsL+8IV+bskjYvTQrU3Y5G31QurN/6ygJ4zIDX9di
vw03bVP5i+PFNL+0C7vmy7iL6BQJmeZt922wqzZmsf5wSJhbHannif3sslFY
F48EU39dgzDsx8Ps2bp5EiKWyz+KxX5glJHwkEZBsJ9Uagp2fo6+7DUxCkTj
ljFvYudwB7LPSlIwgfbn38O+YZ+85tgiCr4nJHWUYKc/3VZuK0uBqftw5FPs
5IU9hgYKFDwbOJRUiR3vd7F5pTIFp+uYUtXYsW832C1So4DZdEHgNXaURkcP
qUGBUoe+5/8cHhPjy1xFwa4RCZ1X2MHfV02+16JwvMYjX2L76fwX/XwjBTqh
Y+ueY3ulR9Bzt1DwzoFm9RjbdUwtI0GHgkYFbWYR9iGzZtVQPQr+0zw5lINt
Vxh8//AuCsJF2g5lYlsKKW7dZ0SBtquZQQL2ftfa1xuNKXAb6b5yGtuo6tj+
pWYUWIYm2PljG8jLtAlaUrCOZX3JCVsntMrllw0FsmY66/Zja3/yYLUfpIBe
pgvbsFfGl88WuVBQfiy3Ugx7OfNwQpo7BZSXsMof/L2VdgnLnvGmIOhF8t92
7IUzB9ZYBlJAq5Ni38Km284+3RFCwVSf+KJobKFHBYbqJymoXqud74zN8Z6x
nYqiwF2apqaAPVGb09NzjgKbznLhCbx/R1VNfJviKNipeN3pPXbf1+vRWckU
zB2Zsz+F/W6f7n3GbQpis6+l1+HzEtkUs/FsHgV++449TcZeY9rw7HU+BdHn
P/IOYMdbWNXqlVJwO8lJsg+fx7123t+3vaHgYT1ftQ+f36n2B25hdRSoKHy+
fAv7nv3f4bK3FOjxHNUPYgs5nZnc+B+Ol2/2+zqcD2rc0has7aNgU3n0kgSc
L4KZHek+gxR4X0ho3Yat5qWiWMiioGJl2PNenH9ifIpWao5TMDk9z9+EbRD0
epeqEBccrxVdqML5rPIMESy9ggtZw4onI3B+PDq7kWO1hgsGrTs/i2LLnz0R
nbKeCw49hQ6ZMmx04vx8ouR2LgRUpw4US7PRlsQl90SMuVC09SL5ZhEbPbq2
+yvlw4UD/Q+WpUni/bX00uGdAVz4ONiiScOWyvrQHx7MhapjLXZhEji/ZTuM
TUZyQTcjdZulOM6v+YFiY4lc0PjhzP0tykYFZTd1mSVcOLU3Ou+rIN7PvMNa
nY+5kLzGv3M7tva+ZcqfyrmgvcE3MlOAjV513uW/rObCPqj8azFPoLb5EpT2
ngsvrzTUP+ATSNDyzb7dv7gQtuotX5FDIBc20yZPiwevtnTQm3B91NhWYHRt
IzbxzGGKIBAr2mdr8hYezKYvWrwc+4T0qFykHg/CewJeh44QKGnn9DcrMx5Y
leouEBkk0Mt4Mdf5Yzz4hgTie3C9XqK53s+1mAcnG85buuL6n5qeZF9cyoPq
lR2jRh8IJCH0y2iqjAcWNc2PV+J+QaC/WPlyFQ+6B3ruDTXj+pyz+uPz93j8
LYtMrBpw/6KkqS01xgNW/M7kd1V4PjJKM9Vb+GBbzSt1wv3Nn9hTTNEdfFDi
ZEgIFxDIb7zzk40+HzZk5aSU3COQW+v1opE9fAjzCZKaziOQRcoSR9mDfHBv
qmCF3CKQpoT0K78IPki4W62XTSXQF0H6ecVXfNicUX1nKgL3f6U3Xa1r+NBk
MhThF04gcad1+pca+FCR/zXx5wkCMZ5aTk194IOnfaR7bQiBHnlcPdraw4fk
gE/MEH8cr3oN80vzfMj47Gcc40qgvRcN5aaNZiHzhJ7Lvj0Eek4PK2x9Nwv9
OropGWIEGo6K/f3m4yyoi+12qxbB/df4lW2ln2chQfHB434agaK6HtYlds2C
YKRM01oBPN6D4Z9GxCx0H/boLiJZ6Iu5k8Jz+hwMb4suP0yw0N+U3Qk3Teag
4qPDxF3cP69fstjPo3EOnjj6RVVcZKE/KTNyWzvm4bQiJ2vFzxGkeenSpuN+
AoxsD04/rB1BTKfu70YjAoxNElLaD92H0f6hNup5kCDDTts1d3HIEIoM9faV
/y3I2PDR1Jt1ehBZVtwykw8XYqTnGQ8mOQ6gMb5fFG1GiLHO2aDNegcT3fkW
+ywojMbwvbanT1m8H3F9Dd1O8WiMqv6e8gqXXqQ6m3Y45LQww1Dna45b5Q80
bJLUQhcWYaxin0w986IL1a/6AMuSRBgBdwxT8x90ID96obC6uCij/J7s55iq
NlSZt8KwPk2UUXe3et3xk63ok75Bo620GEN8Kqz1V2kLIv1u2bmliDGu3fGq
zw5vQM3WuQel5OmMaeG3m6P2ViMPXYOiokw6w9QwXM607SE69vvj9I9rdMYT
WuvrtW4PUfCdI3tlbtIZvgFlhvTfJeis+IX+qGw6485P9cE3oiXodtc7ZdtC
OsPSwr1WVq8YdZxySOVX0hnC/or+nnkFyKwq9JRNN53xp4fb9/jbbWQTJNwc
30NnXHCd76SP30KHNK7Jv+qlM07K0Z4ckbiFfC6/LF81SGcwkw7sFjO8ieKc
BMZ4o3TGkAr0wN2r6A33X4/COTrD4QxUfuhMRo2P1Mq6BcQZ829LBM0lk9AH
j7L5xTRxBs3/hkGTYSLqbmm/fUZMnLHsdNbiqrsXEZml/M16sTjDbhmSVeqK
QvOWpSvjZfDzqR3us4ankCgNTlTLiTOMl2fW/7x7Esn5e0ivUhRnfPjzuEK3
KwApq00dOawszpg5LmswddcbabRdfJSqKs4Inu7XcepyRlqXFGYb1cQZXqWf
L2Z0WaDN+sXmPHVxRlf74Vf/+z/wfwDhkd8=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
8MxiTkUcY3d62aZnEvj/AY2Jics=
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.3224758424985268, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
     0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.596215667361885*^9, 3.5962157077457438`*^9, 
  3.596215850412229*^9, 3.5962159178277273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["2"]], "+", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
            SqrtBox["2"]], "-", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", " ", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["2"]], "+", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "-", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
            SqrtBox["2"]], "-", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.596033824295966*^9, 3.596033855775996*^9}, {
  3.596033890132307*^9, 3.5960338910263968`*^9}, {3.596033927941462*^9, 
  3.596033966538685*^9}, {3.5973159652758007`*^9, 3.597315982707797*^9}, {
  3.59732259554603*^9, 3.597322621525516*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Z4Op4OTXfewl5qkqkTd7o6gQailUkoTZ3C36qlgcFVZcSYpOx1whK7tvMokK
a5WSaDmYFX+mcjenU+G8uuCzQsyPfVTqs/OoMG/ckV+MeWxL4bOwUiq8OCis
U4r5bCtYO3+lgtHEu31LXPagepthPRXSbNNjls7fpGo4vf03FQo/iDks3S+w
t+WzYDcVZnkZ8UvPG3ps+fjPABWcs6UPLbXHRJ1uWvuXCiFrykyW2lvEuCr7
doIKR9O+/nyBeUPk5J+Hc1Tg5duTH4r5gY5vvh25D1KbhfmX+oM1TL57SLAP
HrWd+noTs1HsY/1Nq/vgwTD3kC3mfL3VYjzr+4C6QvreUn/fTdqYVr61D87n
v/y7DTPdOO3mq1194PKG+4sY5uOkXchPow+6rNvJi3h8157X+a2h3weNyr21
tZj9+GtfSZ7qA0k7EcMMzP15Jx055/pArbxIOxRzxsqLi/mOfeCv7W1liHl1
GfNbpGsfaBtGhG/D7HXFOcLNuw9qzber8GPWrbq9RfURbq/JYHoRnr/vbvBN
rAzvg4kh/uAwzCtlQ8qGo/sgj57bboe581bcqfS3fdB8/kOOIGa0RUH6cVYf
bD1B0enG6yW5JZ3p+LEPvt3/p/Ees+vOUt/N3/rgb95910OY+RmdKW+YfbBS
Q+aPDV5/1yIuud4b6YP3hfYtmzE3HfijeZGNuc98+x+8nuNezvyS5qdBzP4L
0lcw7zaWmItWpIH8TVWhs7g+xCzGV3kq0yBc7LSpMGZS+uawM3tpUE4/tPwr
ri91fPsU1hyhwSv5xMKtmK1LTY1C7WhgNNUiS8f1SjV/rajEdRoscFs/CMTM
ndnR9NqDBjv/tizfijkh3vJMTgANvEyjAx1wvaPdt7NseUcDhUXdA/W4Xmb7
bJa5kEODYQ/a94uY791k9TGKaXAWvbk1geurnP01W04dDexn0/VWY7bWc3da
P0wDVanaFC1cn1UP7tuRNE0D2HLJ/MtK/HzNmeHtpH54efniniOYE7b73QCR
fpCb/XDuGK73tJX+3ta7+kFi6IXtXrw/WLdGBqR69EO5quCTIryfqDac0dt5
px88x21fymHm/iYhWBTQD/VcFb8C+PD9imJDvkf3gzDrfYYh3o9osUlRQ8X9
0HMrQLUa72fWNnmJaqQBWFYf7WSB97tLo83l5QEDsPKSAo8i3k+tvEPPFIYO
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
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw1mnk8VF8fxwczlqKQiCJLIS0kqWznpJ1CklJIsiUVKltoF/HLEooilS1C
dtmOJCRKyL6MwczcqezLjPU5/nj+4fV+mXvPuWf5ns97Ljnb66b23CQS6Tf+
sfybB634MbDbTS8uIeRmfAIdbSbKtWWeGYO4PsHs1nd0NPtR1a4j4gKQvPo3
RCiFjobEnNgFEdeB+xEuec8MOuo8/LAyKeIOIHkJle4rpqPfFyKU4iJCQYiZ
6UPfZjoydZHsfBHxGhz6snr1DJmBwsctc6MjskDZqoKE/EsMpP3VYIX+jQqg
Fv7ltrc0Ewm3JP/c86wCVOuqBMxtZKJBGnfU9twKsKr58WpfeSZ6SirZKDlR
AbLXBMZ7KTERTXvr7lH3z+B+zsH3F3YyUWDOSpt490qQ6K9tPHSQiVpf1+fP
ulWBhFU+PxqcmcjVx+hirmstSDQLv7kyh4kMrumk8ofVguEttx3k8phIwVZl
xCqrFvi5u/bsLsDXH+P14x+uBZPNCxbniplIV7L8hdWVbyB11bYn4ZVMtKJo
eyOfQx3IL7JNL2pioqQpQWB5vh7ISB2VIsaYyJ+YfZTtUw9EGY/dfk4w0dke
Zj1vbD2YOM5tkDfFRIJfq85lt9eDHVXq/t4cJnKP9PXgNW8Ar56cGx0jEQju
+pvx0eQHWKvcRItdTaCrRfZPuRUaQdOpO7r1Wwm049hJWS6NRmDA+S8mZTuB
Rjt0cpYONoL3frKq91QJdHNuTeu8QyNQyzbkVd1FIB+9SumZtEYQ8n79xVta
BAqoksn4o/4LtFiLfvhwlEAJjW3fW/SbwK4Ej09Vlwhke/GLVfOpJjBSUcrn
aE8ghfHMkV92TeCg14tgPkcCJa8JWPMzoAk8P/ly1wFnAmWYa5z/VtcElE0T
uJJcCVTcHcYqM20GSm3xvqJ+BGphHhNIsW0BVYsN2yIjCTQSo3zogXsL+O1L
HRuMItAKQ757F+63gJX9OZs0nuPnz6hiS7xtAYMbDjU3xBAo3Q0wA/tbwCWR
oZPD8QS6P6tR42zzGzg8Cf8ykEogVUHZRzusW4GLW9LY6xICGZQtVqy41gq0
ErKPlpcSyO5azzzdrxVEDUut7CojUGxj7M3Xca1AdDX6tbqCQLxRa+2Ee1rB
jubLdg5VBOqWXnlg/Hwb0Er0D6upJ9AT1WlSgUU7eG3hHGHRjcfT89hWunM7
6HYj9ZztIdBl9Oq0uG87mAniNjDvJdBR4wNpHvHt4EM5V7AhlUB818NO7Rlo
B+yhyeSNgwR6mKmSXOTSAWxT7fZc+4Pna9qvkenXAfgzbyYY/yXQJb1fs+tC
O4CZQ7eK6j8C6f/wNPbO7gAyz9zfMYcJxDVcxd433QFEiEW5Q+ME8t9+wbDk
Tico0Nt5JJFNoGu3cm79CesE1ure5Y4cAlmVURLWv+0E10SUzLfMEkjnxIfJ
21WdgLfTl548R6A5F06cjkAX0JGNCApeJJDXh2ejZRFd4LFLf8MsDws5TdKl
ht91gZsaRw8lkFnojI7WIZn8LjBdeKj7AIWFNOupMf5tXYDd/9vpES8LTf7Z
fgBs6AZHmfxzY/ws5La1NqoiqRvUZG+YdRVioUH7wbsJBd1A59uXsSnM5gkk
l7s13WDIoUjSexULaa3dpw+JbmDQbT/rvZqFuJfeD6NtPSDTpHPBXoSFbu6r
7nit2wNeWEx5dGOm36BV3THqAf1+62RPirJQHVPqJXDtAawac+7da1gooin4
CMrF12u3UxhiLEQWSlV/XdUDPkqcXTRay0IeR6qk7/zuAcF5bxXzMZ8rnZ/Q
m+kBb5m3eX3FWUg++WpCuVYvCDC5wz0pwUKR1KDgeMNekOgY5XViHQvxrk/2
8LfsBT7TUCYJMyu097iefy+Q0IFsI0kWyvE25pR97gXjpTr0ECkW2pR3ZTCu
qRfEU863t2GOHn7802+gF+wI7efIrmchn0sVSbqUPqCmuuZ7Bua/cd1h0uJ9
wPd2ns8YZut29u0FxT5gezPNYtcGFtI/sdO07Ggf4Na+n5SNOe/xCd04iz5A
2X9edBizYuVlZT/nPqBh55mpLM1CK/a8XdQJ6QO8rU43X2Bull2TXvqzD4Qf
rNa0lWGhw+dVo19R+0D7jhPSYZiLogzv+Y71ARPFWfVSzEaUyq3xAlTwXar4
z6qNLPRY3kRulSgVvDhT83Q35grQK+4vRQVb5EZszmFW95nlst5KBWm6DyPi
MV95HjjTsIsKxpv+jpVhTswT/6erQwVZ3g53uzD3/EqkZRykgk6FEd0ZzOIj
6u3SJ6igcuChiogsCxkLfm747zQV8PzdfHgL5sAtxl8WrKggIrQxDGD+fLin
6KoDFeTsf7DCDPPspSuZPdeogBStk+uA2UZkwqvUgwp0Jb96emD+Wu5z4KU/
FdQkFqU8xKziwr3KJ4AKWJbiB8Ixh0k+aT/7lApc/HuOvcI8XS3ybk80FYRZ
C5UmYba8GXNVPJ4KVl1JisnAXCknt3cqiQokVJJouZiVfqZyt2RQwXktwedF
mEN81Rpy8qlg0bSzoATz+Jai5+FlVPDqwGr9Msxn24Ct61cqMJlM27vM5Q9r
thk3UEG6fUbs8uc3qRvPbP9NBUUfxZ2W7xfU1/pZsIcK5ngZCcvtDYdYh/wZ
pALXHJlDy/0x06Kb1/2lgtC15WbL/S1mXJV7P0kFR9O//nyJeWPU1J/H81TA
y6dZEIb5ob5fgQO5H6S2rOZfHg/WCPneIcF+8KT91NdbmE3iQgw3ifWDhyPc
w/aYCwzExHk29APqKpn7y+N9L0khvWJrPzhX8OrvNsx00/Rbr3f1A9d33F/E
MR8n7YL+2v2g27aDvITnd915/d/ahv3gl2pfXR1mf/6611Kn+oGUg4hxJuaB
/JPOnHP9QKOiWC8Mc6bwxaUC537wSM/HxhizWDnzW5R7P9A1jozYhtn7imvk
TZ9+UGe5XY0f88HqO1vUn+D+mg1lFOP1m3aDb1I4oh9MDvM/DccsLBdaPhLT
DwroeR0OmLtux5/KeN8PWs5/zBXEDLcoyoRk94OtJyj6PXi/JLdmMJ0/9YPa
B/+0P2B231nmp/ytH/zNf+B+CDM/oyvlHbMfCGvL/rHD++9a5CX3+6P94EOR
Y6sy5ub9f3QusjH3W27/g/dz/KvZXzL8NBC774LMFcy7TSXnY5RoYNMtdaGz
uD7ELiVUe6nSQIT4afPVmEkZyuFn9tBABf3Qyq+4vtTz7VVce4QGXm9OLNqK
2bbM3CTMgQaMp1vl6LheqResE5W8TgOL3LYPgzBzZ3U2v/GkAbW/rSu3Yn6b
YH0mN5AGvM1jgpxwvaM9cLBuTaMBxaWD+xtwvczxVZa9kEsDo5607xcx37/F
6meU0MBZ+O72JK6v8o7X7Dn1NOA4l2EghtnWwMNlwwgNqEvXpeji+qx+YO+O
pBka0NtyyfKLMG5fZ3ZkO2kAvLp8UfMI5rfb/W8AkQEgN/fx3DFc72nCAT62
uwaA1PBL+z34fLBtiwpM9RwAFeqC/xXj80S98YzBzrsDwGvC/pU8Zu5vkoLF
gQOggavyVyAfvl9xXOj3mAEgzPqQaYzPI1pcUvRwyQDovR2oXoPPM1u7/EQN
0iBY0RDjYoXPu0tjLRUVgYNA+JIijxI+T218ws4UhQ0Cls3U0sUxAlnyHB/O
ejEIRI3WXnw5SiDztV/Wv04dBMeNvU0ERvB5vy/bw692EFwbUxv6hc/zHff+
26bFPwTUH6SNrR0iEFv48Ivcx0Mgc8+F6cutBJqM4VJNDx0CJs1iz91+E2hM
vuzr2+dDIK+4Nc6zhUAsDY2J8JQhYHmvrMe/iUA9Z+WNXGuGwKDgT2WfHwSq
TFjk2c5HB2GXxGcVqgkUolZ4PTmADtgigksH8whUp95Gv/WUDo7ecLu8MZdA
/LtnrA5F08HN1QxDdjbOH/v2HB9MogNf22PeSVkEuq1fqCz/lQ4O3ur2/JdG
IGezwv44HgYwYK4T03hDoCNehaei7jLAfbnnx1+F4Ot92ursAhkg8UNb96Fg
3B/fmf0aYQzwcUcg418QgfTu7VFrfs0AgpuDXfY9JpDmk0JBEcQAgcct95Tf
I9CmV4VfQxYYIHbzM5q/B4G4Kwr3PPRhAjMXY6UeawKlCYkmL9xnAqET6/s1
rAhket5FzDOYCdo/BjQ/OU+gd9OyY5dfMYFpcq7tzrMEOrj9SZpxORNIf83Z
fvkkzrexltLruQnQeU40/MEBnC9vcfHkBBGA0qDvbKdIIBEVwx99L1hgRfNQ
fg+dieh8r0VqE1jAJlEsmjnIRMVD42YfU1kgmSY/NkZjIrs3sV13i1jg5b2z
60h9TFS0jsWUa2cBCd+gHSvamMiaL4jHTuIP2PbLIup3NRN9GKzey4z6A8TO
GWwzSGKio6/1341G/AV+kr7fsq2YSGKk/vCdwmGwobHFbXMmA70IRxcJNAx8
lWetdNMZaJ1Gju+p2mFg37sl5VQqZu/nOUodw6Cl3OPk7bcMJMVjK9M4OwwW
VNxWFkYzkIzEzJSs3giwPBKvT/VnIEUgl1RZNQK2Zl7bOXeCgZL711RsaxgB
ToenNvUZ4L8/5O2K/j0C2vnUfD8fYSClb3+Er9BHQD2KN7+3n4Eit5wvFyCP
ApqJ6+d/GgwUnbtZJWfzKNiWWvLaez0DxdYUc/FcHgUsk7srLzDoaJT60XvE
BXNVMu+xQTo6Mps81uU6Co46X3izs5+OJrc968/zGgVDZYcKFjvpyCjiymeH
wFHQfV72UuAPOkpMv7jvVMgoCIwRsXH8TkdzVWeyQRi+fp3Y4sFaOkqdOfBm
3YtRYDkuJDP/mY64rTbcq0sZBa8c5CYs8unorIcopyB9FIw5MBe259BRVii/
27usUewbB9NJWXTE+36RGZo7CiIknOZ+pdORZeWkjW/hKOjIuj/8JpWOcrpY
7U4lo2BV19eHrkl0JDBFNTmNRkHqZ9ty3bd0ZLOqrXb/l1EwzvW+Wx1zgVID
3FGD21/4kGKPPy+4/0uR1PdRQJxfKf4c3+/SuU9qfD9HgexkhFINbk/4vyRZ
ausoOPjCYpcC7t+VcT9SBH0UnM++wqwrp6PKlTe9/FmjQN6o2HkMP9+6zc6j
zsOjQKU5/an4VzqqPmNOPTA9CoQX8ost8fjIlu2omKKMgVQ92fj2Njpqedx3
x2LzGKjab+X0dJSOdKT3L8najeG8eBaNyjLQUcsWd1unMeBwZVPQ1k0MZPbS
kf7OZQx4WfzOslNioCuSTxsUb40Bl4Z50abteH7Xdr3cFjAGVlB5VWK0GIgt
dGvv3tQx8P1lqFP7KQbKW0x1M/47Bh6PNMZIPmKgrVThQb+b40Bt4H5lLI2B
jBiylR5e4+ALn7K09hADuQ6rJVz3HQen9tUudjDw9fMmlhcfjgNTDzPzNf8Y
SEcyvOVg5Di4arrB9OYMAx03Ffm6Mm8cmDXlnx1ZyUQuVSLJMRPjQLBQO6h2
FxNlpIo65btPgPvHxhYW/Zno4W+0n8dzAlT7O1Nc7zGRJffV9SdvT+D8wDrc
9wD7umXNj78PJkAtj4FnUSATOaz23b0pagI4F78JPB3BRLIeQ9zPCieAlzBx
WAvv18gDRXGu8xNA0N2QO+MbE/n2WjVvDZgE5icq7HYI4fp9RDfO/skkeD33
3kIB+7lL9gbH108ngedDyVBxEQKdf9g1K/p8EvTOLRbPiBFIS8VCfjZlErSo
bViTtIFAnFtmbrXfJkHD5+/J6djnPYQMV9sLTYFWtfobjtjHhz1UOuJFpsDn
uTN7NxkQyIEq8K597RTo4Tm+r88Qnz+5tZrHZaZAmMnYiLExgXZbHLbepToF
tl9q27bBHPcvcX8G18kpoKKcUXcB+7ybzl7D+MgpYJPX9i3Cl0Cka5F3Ql9M
gRVtFPo89vOnr0dz776aAqaf+Dzs7+D6y/1+w6XEKfDrsOrYzvsEotVKDivl
TQGf0MyTRbiem52eC8tungLpSl9TfSJwfb9W3lolOg1a3yzK/E4mUNVrqZUF
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
Svcm0tFO7feGc3IC8P//P/0/GyWuBA==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601369}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601369}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
nhn/3/8Hz9nXfQ==
          "]], LineBox[CompressedData["
1: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
ajdlcdF6/VzzGQUOpKX/7XsrnYv+D5avte4=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k8VN0bAHBRSLIloQgtKFJSWvCUJaEi9UpZylpJhSxZS3lL5c1SRNmK
kYiy+ymORCTKvg8zgzv3Do0hRZR+pz/u536+n3PPcs+553nOVXa+bO3Gz8fH
9w1ff+8CSOTz8A5vg5T0KN/UdAJtoKr2Kj6whOQh0YKuDALNvdZy7Y07DXIX
x6OWPyfQqPS52dK4y+BjukglII9AfQciamhx14Dv6vK3uysI1Hk6TjUlLhqi
jltHhLQTyNpTri8xLg1M3ouLzyxmo9gp+6KEuFdQKVaaXuLCRnvrzEUMr1TD
1tj3wYEKJJLoyPqi+6AaPuhvujW/lkQjLP54zaJqEGu/LR6iQqL7fG/Wyn2r
hoIVkalXVUnE2rt5B8/nHdwoNH5xehuJIguXnUn1qQFa2F7LUWMSdaU1lcx5
18JTsaDPzR4k8go64lTk1QCZx2N9lxWSyPySXrZwTANw1YPdlYtJtM5504TD
qwYI8fGi7yjF9c0EQ4W5DfC9/ffJUxUk0perSnS48BGyxTTuxtaQSKRcs0XI
vRFKyp1zy9tIRPsuCvZ2TaAof1CemiRRGDX3b0FQE6xg3/b+8o1EtnSySfBx
E0wf4jcv/k4i0braUwU9TbClVjss8CeJfB6G+AvaNMOTu6d4k3wU2rd9PO+1
1WeQUWtjPRan0MVyt/v861qg/dg1/abNFNpidlRpkU4LmP/8L+m5JoV4vXqF
f4xb4EWokla4FoV851d0/XJvga0FFoJa2ykUZFCjMJPTAvderHby20OhW7WK
eWPardDpKPXy5UEKpbd0f+owbIPt6f7/q3WhkLPTe4f2Y23Aq34rdNaNQuum
8idaXdvA+GriPaGzFMpacWvFl1tt8Ojok+1GHhTKs9Gx+9jYBqrW6YtoXhSq
GIjhVFq3g2p3aohUKIU6SLOlz507oHahWePhQwpNJKmZ3PTpgK4QxuRIPIVE
LITCT9/oABFm4XqdR/j982pnVz3rgJE1Ju3NSRTK9QYyktkBLpKjR7mpFLox
p1PvcaYT3O/Gvh/OppCWqNK/Wxy74KI3bTLtDYXMKxeqRS51wZ70goNVbynk
eon+iwjtggSu/LL+Sgo9bnnsm5bSBVLiqFW8mkKC8StdJehdoNl+3tW9lkID
CsuMpuy6YU9mWEx9E4Xuav3gKz3ZA2knPeJODuD5DDDbTHj0AN2bj25Lp9B5
lPyPTEgPzN7hN7cZpNBBS6Mc/9QeeFm16J4Fg0JCl2OO6Q7j8tHprLUjFIrI
35RV7tkLztmuupfG8Hr9CG0hQ3tBON833XKcQi4GrXOy0b1w3H1gk9ZXChl+
DrAMLOgFxQc+GSSXQou4tbO7f/SCJLWgbDJFoTDN0xZvrvVBmcE208xZCl3y
K/Qbi+kDB+3AqrM/KeRQuSR99bM+uCSpaqM+RyG9wy+ng2v7YElfCJE1T6F5
z58pekv7QU8p7s69BQpdffmAVxnXD7c9mc1zAhx0bpqQ52b0g6/OQZP0xRx0
Qm+PiWJJP/woMxkwWsJBO5sYSWHd/TDL7Dz3ryAHTY9pGsGaATAjhecnhTnI
e3NDfDVtABoK1sx5LeegEbeR6+mlA6D38f3kd2ybdD7P6/UDQLiXywWKcdCe
lbsN91EDYDHgNhcozkH8f15wkQYdXln1/XaT5CDf3R960/TpkHjyu/8ANnGF
VXvtCB2YobJKR6U4qJGUfwJedODU2/DvWMFBcW33TFERHfL39ixhS3PQ4uXZ
2mm1dHi9ynbhyEoO8jetVbjWSYd7xc82lmCfevvrm8EMHTLIYMEQGQ5SybqY
XrVnEG5ZXeOfXsVBDxl37qVaDELm2firh2U5SHB1ln+Y/SAE/dinSMPmRA8e
MggbhFV6+2aPyHFQYaDlz8p3gzD1Vo+Ikueg9cUXRlLaBiF1iV1PN3YC9/aX
0OFB2BLN/Km0moOCXKpp+kuGYJvWik952OMpAzEKMkMQGlwcNInt2DMb/Hvj
EDj75pzcvoaDDA9vs648OAT8e2/QCrCLbx/WTzk5BIL77aS42BtrzquFegyB
jmtAvpoCB4noPlvQi8LlXed8E7HblVbkvv0yBLHGH3Y6K3LQATuthGTGEPRs
OawQg10ebxEeMjkERzfOab/FPrKkZnPqUgZ8kq8YE1vLQbdVrJTFpBiQeKL+
/g7sahiUCZNngLryxJlT2NpBc4scNzMgRz8iLhX7wqPImebtDJhqG5+sxM4s
lvmqr8eA14Hu1/ux6a2ZrDxjBvSvm9CfwZaZ0O5ROMyAmuGITZJKHGQp+q75
v38YIDC+4YA6dqS65fvfDgyIi26JAex3B+jlF90ZULT/pshx7DmXC/n0Swzg
S9Arcsc+I/nt6lt/BhjI1QX4Y9dVBRk9CWNAfWb58wjsTZ78YkG3GMCxlzGK
xY6Ru9tje58BnmF0s2TsHx8kM3QTGBDjuPwtDdveN+miTCoDxC7QkvKwa5SV
d32nMUB2E41VhK36JZu/I48BdntEH5VjR4VsbS4sYcCCdV/pG+wp9fJHsZUM
SDYSN6zEtu0GZ686BlhN5+z666qIeg3LZgbkuuU9/vv8em3LGc1OBpS/ljn3
t707Q13vROkMmBdkp//tjxvlGDU2wgCvQkWTv+M5voewaRxnQPTKquN/x1vB
vqj8YpoBZrl1X55gr43/Pnb7FwMEhXaWxmBHGIaWui9mQnaHuPDf+eBMLA43
EWXC3Z5jdX7YVilRFuulmRAxwc91wy41l5YRWMMEppjijb/zHU5bl1u9mQl2
pcnjGtiEda5f2nYmeGfwv5fBPsS3fV/YXiYMOPcu/oPXV9bOsHOvBRPatIYa
G7HDhBvT5I8xQd5d0jIfe7jkqMfPU0zQqa4wiMHOl3D6U+rBhFsGQWcssaWr
yI/xPkwwsHwYp4EdeMHroW8QExrtNbcKYxt/uKaufReP9/hoXgX+fnOuCE1L
xDFhmit8PxZbQjm6aiKJCaVEca87dn9w6rG8F0zosHtdJIq9T32jYlQBEzYf
XmJIx/slqyuP9PgfEz7e/Lr3JbbPtspQtY9MGC+56WOCLczuf55BMkFir9KY
K95/lx66+NzgMeFl+dkuNez2/WN6TrPYTHvNMbyfU5PnWhWFWfBk92nFC9g7
rOV+JamyYIOf9nJbHB8e/0n/cFWLBXEy/9iIY/PlqcWe0GVBNWGyrA7Hlyah
XRtXmrIgbUNm+WZs50obqxh3Flj96FImcLzSLpWVkrvMggV+54g72Pyv+tqf
BrBg23jXss3Yz9IdTxRFsiDQJunOORzvWDfdHbtyWLDxj/H+ZhwvC0PUlE4X
sYAXwPrkhH3Dj8Nkv2GB7b6M4GkcX1XOXnL72cSCs/N55tLYzub+nmsmWKCt
0PhcH8dnbaNdW2gzLAB1F/v3Erh/vbkJTb5hSDnvtNMU+5lm2BWQHAaV+den
zHC8Z0ncCnLePgzy3Cduujg/OHfHR2YHDEO1tuh/FTifaLecMN92fRiufnNL
VsHm/ygnWhE5DM2LalojhXB7FSnRn5KGQYLzMt8S5yNWCi2B+2YYBoMjtetx
PnN2LcnU4RuBZc1Jng4437lMdlRXR46AhMtGAVWcT88ExZwojxmBsTPf/zhN
Ushe4BD3VeIISB1Z6fSERyGble9Xp2WPwGHLQKulEzjf7y7wD20YgcuTW0db
cT7fEv6fxh7hUdh+M2dy5SiFZiUOJBbdHoV83dM/zndRaDppkVZu9ChYtUs/
8u6k0KRKZd2zR6NQXNGVEtBBIY6OzrfY56PgEF5JD2ujEN1W5YhX/SiMiH5R
C/pMoZr0BQFNIQJiXWTm1n2gUNTWsstZtwj4KSn6x7iYQo3a3YTffQLMr3if
X1tEIeEdMw4mCQT4ibMtZgvw+WO37qERGgEhzmaBtFcUCjYsU1OpI8DYbyDg
aw6FPI6XMVME2GBOykrrPKWQ6dWyY/HX2XBD+dGh5ChcP6i70TWSDZkvuwdM
7uHxhMzs14lhQ8GWSPbXOxQyCNfd2p7GBtEN9zx336bQzrtlopKIDZGH7HWr
wim0PrmsLuo3Gx5veMAK86cQf3WZbkQQCcc9LVXpjhTKWS6V9fsGCWKHVzN1
HChkbecpHXCPhN7Xt9rv2lEo44fS5PlkEqyzipy32VLIWPNujmUVCQp1hZrn
j+Lz7WN7hdX8FPSdkoq9aYTPl36LBArvUCDYbOjhupFCkpssPg8lckCkfbSE
TpCIEEqTbEjngFOmdAI5QqKK0anjr7M5kM1SmZxkkcj16eP+6+UcSA63leUb
IlG5LIdU7uHAqpA7W0S6SeQodEfAddUYaLSejO/8QKKXIx92kfFjIH3KXMOc
RqKDaYYZvLhxCJML+VjgQKJVE00HrpVxQbGlw3tDPhslxiInCnEhVG3OQT+X
jWR1CkOONXDBfVD9+bFs7MBHhaq9XOio8j8a/IyN5AWcFVvmuLCwyXtZWQIb
Ka6a+a5kMAH2pqmGjDA22gjKtJraCdDIv7Rt/jAbZTFXVGs0T8C5A9/XD5nj
8gjB/oTOCegT2hryzpSNVD+OSVwgJqAJpdqE72ejh+p2VUsX84Bl5fXuqw4b
JRRt2FS4gQca2W/SAlez0eP6ikUC53nAsbq+7DSbQDzG68AJTx6M1WYJmo0Q
yHQua7LfiwcHPU4/3cYk0LTGA2bxVR4QlSalC30EOhJ34Z17JA8G7ZRcIj8T
KDPXafexKB5EJkmeOfuJQPO1JwogBteXlV4wbiBQ9ozRU9lEHjhOLVf89Y5A
/A5rwhuf8yDFXfnbyRIC2fpL/SzN5cGUO/lbs5BAr6KFvTNe8aBuwTiX7xWB
BF8skNFFPHiw6tx8ay6B7Gumz4SU8aDv1Q3u02wCFfZzes694YF4f12EF41A
ibZ8H3QreSCFAk/M4P/h/wPJ6jPx
          "]], LineBox[CompressedData["
1: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
DA==
          "]], LineBox[CompressedData["
1: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
NZvucNF6/VyLaQUOZGT+7Xczk4v+D3aTK30=
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]},
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277244, 0.8164965809277244}}, {{
         0, 3.141592653589793}, {-0.8164965809277244, 0.8164965809277244}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
O2XO+X//DxawyXY=
          "]], LineBox[CompressedData["
1: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
YoNI1v/7fx687Zo=
          "]], LineBox[CompressedData["
1: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
mqxxzv/7f68tqg4=
          "]], LineBox[CompressedData["
1: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
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1:eJxl13k8VN0bAHAZWcuWylahpJC8KuGtnhKlFGUrWdNub9NCpUgUQkgkSWRJ
QpY2x/aGShuKVJbqztyLmXvNTIai3/H374/5zOf7uWfuPec5z3nuM9o+QQ77
xMXExEbxZ/K7JrLJ0L61FxzWW1SczyXQAhP7kSUdvWC9qedkRT6BYno+1k37
2gvyZ+98ZRcRyMmCcHk52AsKF5/H2JQR6Ak7QLtA0AttyWXvQioINC9FOHDp
Ty8k2IlV51QTiOJJnLee1geCBX37R2sIdD53flGtQR/wmt3XJr8i0APF3X8r
ffvgik1u1aUfBFKp4bSkHOkDaf6GoSw2gU75BScfO90HrVFmtZUUgaxenFts
crkPWHpbVvfSBOoOveVYXNAH2Qv/xuuME0ia3X0vh9MHY5mLD+ydyUY+z122
Jezvhz+7CnK6rdjIpFJVWS2oH1ocFPUkbdhIvORzW/aJfthhEC++1JaN7tz2
3FEe3Q+3znBqQ7ezUX/Efs+Phf1w1bzdaYonvt/mEH9NXj/c6Xx771kI9qeU
6PwT32HA682R4Tw22sO019ZG/4CosoZGO3EOijWuCsqLImDud9mC6HQOemny
iTgeT8DqCZPdxTc5SHrFiId1KgGLXk+58+4WB0War9zyI5eAQSOl58o5HBRq
WbVI5z8C5J76OV8s4iBfp6q+TBYbtjRODM9/xkEbT1Y5poSzIb2ieOqGLxwk
Xlu1MvI0B4Q6BfxZqiQqnK6cN36BAwn29w+w1Enk4OavcuIKBxrcpqpxNUiU
80uLOXQT+8rSZTXzSGS15HKhfQ0HCi/kr9ukR6KodPc5GuIkNAZUFsiakkj2
+BRWWQwJy1UV68wdSFRW73bYIIkEEqKzhhxJtEuxsuduOgnq5zZUZTmTqKjI
99n1IhKqMjWSJnaSaEt/2/EzrSTMfNXN5HmRKN4+j2OjRIHFomq4408iJX3b
Nz1pFHSpJdlaXiQRIZWl1HybAtf6Y29zokj05Oew08N8CrY1uTSyokm0Nzu9
O7yaAoF0gxi6TKJqVYqj3UlBewmnTieBRJ5SMay9swcg6LG6Y1Y6ie7/eGHG
SRmAB/8Uz/d/QKLz9eph7zIHQFG2NCujhEQutwNRde4AmH5ddrnlIYnE3Gdt
iKkYALG3/oVa5SRybNvnqN8xAP7Pimc+qyLRWJ1EoL/KIHhpv7p0r5ZENlmW
OXTSICxqOemz7T2JLjW/+3ohYxC+vOl+6vOBRC8YT9WZdwchkBi3ONpGImur
0DjzikGYbfFPYXwHiSzJ8hMXPg1Cf4D55pIuEq1aprtFRXMI8lIPhF/vI1Go
e3lU3oIh8F75xTC2H8fj4ro6syVDoKHCHj/7nUTmnR6mHmuGQEp4arrXTxKZ
nknVyvMegrP8R73SJImMm6SEK3OHoKhTYMOiSRREpyx9WTwE0YeGTD9jP1Bb
4OteOQSC0OM2JQyJlviv7QlvGoJgnZEORz6J9JVOtbSQQ5DarXkj6heJFrhR
mW5GXGDvsy5P+kOiPZEnO4dMueAR4dJmO06iO8WSM8KBCyapyrNYEyTSFpsf
fXcbF74v3MHy/0uiubluR4aOcOHzmsJQPXEKzea93nCuiguVskWdVlIUSktE
u0nEBbHpfzd/xVZdXhbm2MwFK4Wr9FFp7FPXy/S6uLApxrwjQ4ZC6iyfue/G
uPDswk3WRzkKpec6mVuweLCmo1zeexqFNGw2Ot2V44GffdUWDrZmnOHlk5o8
sDH02M2fTqG5s0eEWmt4QGcsGOQrUOjWY1LxygYe3Pa+GRekSKF57l8MhHY8
kAmo3k1ia2XX7W7x4oHKq6fZn5QopGMQ23r4PA+INLnwWzMotBC0c+sbeWCg
qlrSMYtCeX0zag1beZCzVe/E8tn4eqRkd2oHD9pFPocTsfVaBhT9CB6sUNvw
x1qVQsmL3WpkJGiQdVfwu6FGofbT7a/WSNMwYN7RQGKrvN7adXQaDVGZ1+3M
1CmUErhW8FWFhj73P6NvsVPLdfXLdGmIj6m4R2pQ6KNE1kr2YhpMIt5cNdCk
0CwXVWtNIxpmKTwr8MO+LpL1jjKlYcKSdZTA7twUGfDUgoYbAU462nNwvDPG
T9NraLi59BBrF3baajpl10Ya0r+17nqB3Rl/KOeqLQ2dW2e9H50c39v/sNGe
BhnXGacM5lLoxoWOV0Y7afC9N8czBvtzm13XHncaUvwXZFRgq+s2E2neNNx/
/0GmFzu96ckU1iEaVvWohy2dRyG69+Epnj8NFzzuKjhgbxzLY7qDaXh0nKV0
FFtgeK3v0UkawjMsPB5ib94Q45odRsO+Ufn819jZXufex4XT0JpY6s3Gtkvy
q9sfTUODppuGqhaF7hbtNneMpWGettccI+zfjTtKIYGGxAiDOEtsh29bFxsm
03BSBvk6Y+ePrM9WTaNhb4Jq5X7sCUULtak3aVCSXxkUgu2sb5zIZNFwOEEt
NRL7/vqFMt9yaLizGuknYot7aJ5/eY+GX456S25i7wxRHq0sooG7eHtmLnbJ
VenDOSV4/UarQouxJQsmOFfL8XzZ7Bfl2O71Au+wKhpShY7h1dhl3VTnwac0
/JYPv/cUW0bYu80Z4fmx/Fc9x/aW/9S8roGG009mw6Qr9VrXGjXRoLI8omRy
/LR1DdXqr2hYGf0gbvJ+e3Y9NpZ6S8Mc9o2uyec9OVqSz/9Ag/EN62uT81GM
y9Xq/Yjz82/pk8n5HsjLSHv9mYaQxB77yfXUoETFx99oCOx74zC5XpWuS9G5
/TTopIU3TMbDb/iMWBKB8zlEmD0Zr3q5YyfPUjS47jDiTsZTVdeX9uXSYGBg
mD8Z76A13gd3DNNg/4f3dnI/Xuxw6V3/i4bvg6f3Te6X5uEtO43HaLBY+ebg
5H4evWz5TnOChvdLBrrEsLWeG9UKpzJQ1n9paive/5CPC8z6ZRjg1cjWTuZL
K0/94ZvpDNhFeHCSsE/rSN2+N5OBA7KnL0zm27t/x2cnqzGQcH+jYDIf9Zz5
V8PnMPBUONgmh91+qeecqy4D4huavtTg/NXP7hixXsyAHFdMMhX7/JNXQSZL
GKDOamT6YRsNVXnJrWBA/t64ijJ2tEMCPLdiQDqwwWALPj/f/KKqCmwYeKi4
vXEW9oqLYUtTtzCQnv/xZQ8+n/1VB+cFOTHwTuaTdgD2qjnr/mrtZeD7LAXR
MXzebdzbj/gcZGDPYJzrEmynjANEjj8D81Og/zuuD35q8a0LjzPAsd12yBY7
fWZ3hmEUA1aKdXYSuL7kOQUqBF5mYOuOIKoY16Oya1MiSuIZMHlwptgZu0Vp
ka/JdQZW5LYVZOH6JZp+3MwsnwHhU42wObjeSWyVvn/qPgNpGeGO1TNxvsRm
zHv6kIHk+aEO27H1ZOsl1zxmYPioXdMZFQq5SCp0rH/JwLedlnG1yhR6NJF/
2H6QATEyMHFInkK1q1f9TKAZsPnY99MX+3XY250fBAxk3g/0IXD9/j4mBOdx
BkIrfrd9wvVdecRS3k1+GGIGmRt3ZSkUzPtSuN94GHxnmDz5OZVCYUbBc/OX
D8OaaCbZGjs6gJVEmg2DYkxwWo4EhbIGFp/yXzcMzxZ2q+1iUegNO2TjEYdh
uPizSKpUjEIGvYo/zhwbBo/dzA3J3ySyY2vVh5wchg97XSqdx0gUzDW+HRQ2
DHNXdJvljJLo0Z9t7rsjh2GzS3CwuQi/39US262ShyH1k3iRgxD3Rw5K/8k9
Ggbna0M7zHgk8m9UyrvBHwYZX0P2O/z+j3+lHZk0gscfavw22Euihx/+8bny
exhuzZ2+Rgpb0Lt97hkWH/w9yWUrv5EobDwx1XsGH3SLvCYiPpMo1lT5kt4y
PlwqXqzxHvcjxfnKByuO8GFCIrbXvJ5EkR1oHesEH+iLdLRcHYncxQM0tofy
QZywcOpGuP9zb3ozGMEH9WNdjsefk2i/QtiKBSl8iMp/MJpUTSKtkJ/i16r4
8DmnlH8M91fJ66szg//w4cbCwY3taSTyC953okZMAM3/2p/2vY77nUzl7dOm
CsBqd8aHiRQSMb/8JfKnC+CR5U6h9jUcz0Jtv565AviRt1XSIY5E0kpXzOzW
CaDjdl+A63m8vm8ebQZRAvCyiVaVPIjXv3F15r7LAhgQOzVwcD+OX6nmgax4
AYgbdYla9pLILbJ7TPm6AFReuzVE4c7CQt9VZ+yeAM7Y3VQf2EWi0eNOh5tb
BJD8hjXouZVEIdNtFfZNF4I0XULzjUl0eJWZ7a1kIehcQumfhzlILDD53NU0
IWzRDXWkaQ6Kz6LLw28KoTIuPVqCx0GF4gWae+4K4crasIOLBjiov1mNq/dI
CGqUirjndw5ycv6dUNomBDFL06rwNg4yDaz52Kj8C+jHPeK5ZRw0lmXlM5Dw
C+JHcs2D/TnoXXC694k7I2AsYX1gCLGRfoLi72N5IzD+t9NyxXM2iiiJSjlS
OAKSNt53Q5+wkSn3yMuAshFY6PdrlFXBRpl+tsv31o+AIjFVIF7IRr77/0ht
7x8Bb67u5ifX2EjC3bNEX0cELgmdlQr72cgztH3TooUiuKJWmrdoDxtVpW/+
oasvAtM/s3TWeuPfd5mqaZuI4LCe1TPfXWz03kUhYralCDzSLCIe2LHRre21
LhI+Iqh5ez2SNmUj8406E1+zRfDywutsL0k2Wp7zMropVwQf9qn1u7LYyOjv
kRmlBSJYK6lf7yDGRjpVDYsiS0Xwj8DeZ+0YgeT0cP9dJ4KH2/7Tk+MS6Ktk
fn5Irwh8XLfTnh0E6vTZtsz7B7Z1neX6DwT6UCN6vokjgu/WP1YufEugFyGb
2jRpEYyZistxmglUQlDj9X9F0Gnb5er2jECFltei77NGgftUs2n5YwLdvfXv
jFSpUXjRkNQ5rZJAaS6xiw4pjEIf+xOnuoRASWXLyx1mjMKDb1Kc2PsEipX/
unrV7FGw0TGM9SogUJTvxWZdjVH47Hi8wzgP//99scRRYR6+vlilUSzn//0/
s8dqKQ==
          "]], LineBox[CompressedData["
1:eJxl13k8lNsbAPD3nRllS1chWxE3VykhCeF9SJss0WLJlkvkCqmQpKIsKdEN
qUTIFiUSRY5KCymiiEqiZuadCtlug5n5nf7+/TWf7+dzPu+cc55znuc5i31C
nPwYBEEwSYL4/RseExMwoMWn8pQkVK4WsFFor9bYi2V86nDG9+iXRWwUaNR2
tFqXT2lJzTk5XcpGvucjxHMM+JRlq4me9k028hxS+zfRiE9prLM6se02G20r
DC3eZcGnXLz+lC2sYSN7htKq9VZ8agWV7fDyPhtt8nz4QHcDn2rdrGcw9oCN
zBTmdZL2fErd5MuAaRMbLYmvEhR58Cnr2HU/7rWzUfN6k2K4wqee/K3m9Z7k
oMhnMbrHcvmUr/+jME0xDtLe3HTnQQGf8l98j7NXnIPibR0empbzqZju6vGf
Mhxkvc2v17CBT4kSjl0YUuGgRu806aX9fErQZ1ebtZqDao7QobJ/TlFCxg1h
tT8HXb+dZTJwY4pKUJq1c+opB8lrLg/0LJmmOFGH+1/t4aLU88k7S8qnqdDn
PpEOe7lIkvHNavz2NHVGGGH/6h8uIj6XqJy+P00l7Ai+8zSUi75f/etl9Ytp
ykc12ScvioualDX15gxNU2Ojo2piKVx0cJ7yZJ3BDJWxL4MOr+KiDlI8Vql+
hnLeYXKQweeiofIsz62NM9TTZx1Fs6e5SMJNZ21C0wzlse6RmpSAi6DSfny8
dYay2iv3QZqk0U2f9D3tH2eogcr82GlxGiU/1tiSIJqhiGNPAk4p0sj6lLnc
hJWAyru+pNTGiEbe+m0jOhsFlP+xM0sUjWl05KP3S58tAqrrvfTnQRMaVa4+
Gd++TUA1FfUuCDenkTq75dcNXwG1Tmv1iVPWNJrZ4PLRJ15AXS7L/WurE42q
xQ8UtjcLqB+NZ4f/DaIRO/rEj4aX+P+kR2bmBNNI8ec5w/LXAiq1xv9EfAiN
onvKHiX1CKg0d7PhsDA8v1J2nxUtoMyCWe4mkTTq2OK2oFpcSHUPl+yJjqPR
SIplYtZGIXUwZaak9yKNNJhb2xK2CCn+6bYQzUs02h7hqRDuIKQKH8uUBl6m
Ua3XkQInZyHlQ8YdGc+m0TG96kYpfyFVcE4tdSKPRjId2vyj8ULKJcgzpLyM
Rsvl/wj0eSKkRBPxJ8caaDT/Vl3Z9WYhdUd90WqNRhpNbfIf5r4UUn66rbIO
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
          "]], LineBox[CompressedData["
1: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
MeRgl+aiXyoEWy3LdR4z4uB78+mhlYL/B+9xnAE=
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277244, 0.8164965809277244}}, {{
         0, 3.141592653589793}, {-0.8164965809277244, 0.8164965809277244}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.596033967999305*^9, 3.5973226245386887`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABPolygon", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960354271578703`*^9, 3.596035462352043*^9}, {
  3.596035956423437*^9, 3.596035961302988*^9}, {3.596036034792096*^9, 
  3.596036069458777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
       "Blue", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"YABPolygon", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", ",", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", ",", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$19889$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$19889$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Rectangle[
          Apply[Sequence, 
           Transpose[{
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 2], 
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 3]}]]], 
         Blue, 
         Polygon[
          $CellContext`YABPolygon[$CellContext`\[Theta]$$], VertexColors -> 
          MapThread[RGBColor, 
            Transpose[
             Part[
              Transpose[$CellContext`RGBCube], {2, 3, 4, 5, 6, 7}]]]]}, 
        PlotRange -> {{-(2/3)^Rational[1, 2], (2/3)^
           Rational[1, 2]}, {-(2/3)^Rational[1, 2], (2/3)^Rational[1, 2]}}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {222., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.596035349166172*^9, 3.5960353862995577`*^9, 
  3.5960354813813*^9, 3.596035526695188*^9, 3.59603587068089*^9, 
  3.596036074818692*^9, 3.5960361066321297`*^9, 3.596036376239118*^9, 
  3.596036474069346*^9, 3.5960365314348516`*^9, 3.596036943221499*^9, 
  3.596037004104776*^9, 3.596038994849193*^9, 3.596039163411475*^9, 
  3.5960392476156397`*^9, 3.597140037569601*^9, 3.597140071563545*^9, 
  3.597341418320631*^9, 3.597787447877696*^9, 3.6003431859122868`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YABAxisRanges", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Pi", "/", "6"}]}], ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["6"]]}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]", " ", "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]", "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["6"]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["6"]]}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
         SqrtBox["6"]]}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ToMatlab", "[", 
  RowBox[{"YABAxisRanges", "[", "theta", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960366725689793`*^9, 3.596036711393558*^9}, {
  3.596036745787457*^9, 3.596036749864942*^9}, {3.596036799148944*^9, 
  3.596036801523638*^9}, {3.5973229879164724`*^9, 3.5973230202603226`*^9}, {
  3.598109630150674*^9, 3.598109650625567*^9}, {3.598272677680348*^9, 
  3.598272683205419*^9}, {3.5982727928092813`*^9, 3.598272793751638*^9}}],

Cell[BoxData[
 RowBox[{"ToMatlab", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SqrtBox["3"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "theta"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "theta"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "theta"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "theta"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"theta", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"theta", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"theta", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"theta", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.597322992380728*^9, 3.5973230208863583`*^9}, 
   3.597341273408343*^9, 3.597392392783821*^9, 3.5976822988769903`*^9, 
   3.597782233832562*^9, 3.597840826887998*^9, 3.597858373913493*^9, 
   3.598109651820496*^9, 3.59827268513698*^9, 3.5982727946765823`*^9, 
   3.5986406965493245`*^9, 3.6003427651767178`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToMatlab", "[", 
  RowBox[{"scaleMatrix", "[", "theta", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598271075997684*^9, 3.59827108999648*^9}}],

Cell[BoxData["\<\"[3.^(-1/2),0,0;0,(1/2).*(2.^(-1/2).*cos(Mod((-1/6).*pi+\
theta,(1/3) ...\\n  \
.*pi))+6.^(-1/2).*sin(Mod((-1/6).*pi+theta,(1/3).*pi))).^(-1),0;0, ...\\n  \
0,(1/2).*(2.^(-1/2).*cos(Mod(theta,(1/3).*pi))+6.^(-1/2).*sin(Mod( ...\\n  \
theta,(1/3).*pi))).^(-1)];\\n\"\>"], "Output",
 CellChangeTimes->{{3.59827108556421*^9, 3.59827109125844*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scaleMatrix", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ")"}]}], ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", " ", 
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}]}], ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", " ", 
         RowBox[{"2", " ", 
          RowBox[{
           RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nYAB", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"scaleMatrix", "[", "\[Theta]", "]"}], ".", " ", 
    RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"RotationMatrixZ", "[", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "]"}], ".", 
    RowBox[{"RotationMatrixY", "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "4"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596218438567684*^9, 3.596218455613493*^9}, 
   3.597342443431264*^9, {3.5973427194150496`*^9, 3.597342737537086*^9}, {
   3.5973428117983336`*^9, 3.597342863958317*^9}, {3.597343203583742*^9, 
   3.5973432303012705`*^9}, {3.59827029642635*^9, 3.598270299099518*^9}, {
   3.598270345712167*^9, 3.598270352609261*^9}, {3.5982704640091143`*^9, 
   3.598270477222456*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["6"]]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["6"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.596216951868449*^9, 3.5962184609957247`*^9, 
  3.5973229267449737`*^9, 3.597342868448574*^9, 3.597343231447336*^9, 
  3.5974278415053716`*^9, 3.597682299491026*^9, 3.5977874350329857`*^9, 
  3.5978583750887737`*^9, 3.598270300130087*^9, 3.598270354644113*^9, 
  3.5982704782105494`*^9, 3.6003432186772423`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      SqrtBox["3"]},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         SqrtBox["6"]]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.596216951868449*^9, 3.5962184609957247`*^9, 
  3.5973229267449737`*^9, 3.597342868448574*^9, 3.597343231447336*^9, 
  3.5974278415053716`*^9, 3.597682299491026*^9, 3.5977874350329857`*^9, 
  3.5978583750887737`*^9, 3.598270300130087*^9, 3.598270354644113*^9, 
  3.5982704782105494`*^9, 3.600343218863336*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], "1"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"3", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["3"]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]}], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.596216951868449*^9, 3.5962184609957247`*^9, 
  3.5973229267449737`*^9, 3.597342868448574*^9, 3.597343231447336*^9, 
  3.5974278415053716`*^9, 3.597682299491026*^9, 3.5977874350329857`*^9, 
  3.5978583750887737`*^9, 3.598270300130087*^9, 3.598270354644113*^9, 
  3.5982704782105494`*^9, 3.600343219734923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598270395610587*^9, 3.598270429611389*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 1.7215927741672068`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    626., {21.125, 26.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$684685$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$684685$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[
        FullSimplify[
         Dot[
          $CellContext`nYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube]]],
       "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{671., {66., 71.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.598270400455459*^9, 3.598270430172385*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nYABCube", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596032403095932*^9, 3.5960324253912687`*^9}, {
  3.596032460461591*^9, 3.596032462451202*^9}, {3.59734294706007*^9, 
  3.597342949132189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nYABPolygon", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nYABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nYABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960354271578703`*^9, 3.596035462352043*^9}, {
  3.596035956423437*^9, 3.596035961302988*^9}, {3.596036034792096*^9, 
  3.596036069458777*^9}, {3.597342980925007*^9, 3.597342987605389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
       "Blue", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"nYABPolygon", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], " ", ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}, 
   3.59734299916105*^9, {3.5973430308648634`*^9, 3.597343042741543*^9}, {
   3.5973431225271063`*^9, 3.59734313867903*^9}, 3.5973431790783405`*^9, {
   3.5973432425659723`*^9, 3.597343244014055*^9}, {3.597343658742776*^9, 
   3.597343671238491*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 2.494424566950296, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$22117$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$22117$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Rectangle[
          Apply[Sequence, 
           Transpose[{
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 2], 
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 3]}]]], 
         Blue, 
         Polygon[
          $CellContext`nYABPolygon[$CellContext`\[Theta]$$], VertexColors -> 
          MapThread[RGBColor, 
            Transpose[
             Part[
              Transpose[$CellContext`RGBCube], {2, 3, 4, 5, 6, 7}]]]]}, 
        PlotRange -> {{(-1)/2, 1/2}, {(-1)/2, 1/2}}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {222., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.597343014306916*^9, 3.597343058694455*^9, 3.597343140547137*^9, {
   3.597343236330615*^9, 3.597343244678093*^9}, 3.5973436740786533`*^9, {
   3.5974278285666313`*^9, 3.597427844935568*^9}, {3.5977874232248287`*^9, 
   3.597787440203265*^9}, 3.6003432282282743`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Representation of the rotation", "Subtitle",
 CellChangeTimes->{{3.5973454530504045`*^9, 3.597345477643811*^9}}],

Cell["\<\
We have a source which makes discrete steps of 1/srcRange the question is to \
what degree of precision do we need to represent the transformation given \
that we require a precision of 1/wrkRange. What is required is the smallest \
number which can result from the transformation of a unit cube!\
\>", "Text",
 CellChangeTimes->{{3.5973454946247826`*^9, 3.597345557436375*^9}, {
   3.597345806644629*^9, 3.597345862714836*^9}, {3.5973459020910883`*^9, 
   3.597345907075373*^9}, 3.597345937683124*^9, {3.5973491859789157`*^9, 
   3.5973492457713356`*^9}, {3.597350621074999*^9, 3.5973506825555153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                 "}"}]}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"2", "/", "3"}]], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", " ", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"2", "/", "3"}]]}], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", " ", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                 "}"}]}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"2", "/", "3"}]], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"2", "/", "3"}]]}], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.597351221902364*^9, 3.597351261917653*^9}, {
  3.5973516348489833`*^9, 3.5973516436734877`*^9}, {3.597351722841016*^9, 
  3.5973517842085257`*^9}, {3.597351816816391*^9, 3.5973518295521193`*^9}, {
  3.597351878568923*^9, 3.5973518907106175`*^9}, {3.5973519723752885`*^9, 
  3.59735197554947*^9}, {3.597352012907607*^9, 3.5973520595872765`*^9}, {
  3.5973521504114714`*^9, 3.597352165507335*^9}, {3.597352208027767*^9, 
  3.597352215163175*^9}, {3.597352252627318*^9, 3.5973522638269587`*^9}, {
  3.5973523123877363`*^9, 3.597352312874764*^9}, {3.5973523535870924`*^9, 
  3.5973523547151575`*^9}, {3.597352409771306*^9, 3.5973524105463505`*^9}, {
  3.597352470747794*^9, 3.5973524743069973`*^9}, {3.597352519244568*^9, 
  3.597352585107335*^9}, {3.5973583625797873`*^9, 3.597358419764058*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//uo/wGyl+ZG
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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

         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.40807730570469364`, 0.40807730570469364`}}, {{
         0, 3.141592653589793}, {-0.40807730570469364`, 
         0.40807730570469364`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAA78KzuM1cT7/Q3W7yRpsPiXpvjse
k08/v4JRV9bHST/6sC9k2ZJfP+Vi+Fidx1k/5RRo+LaSbz8eAB8bfsdpP9pG
hMKlkn8/GXqLgWPHeT/VX5InnZKPP4BqXkoqx4k/UmwZ2piSnz/GsJsHXsaZ
P5HyXLOWkq8/nRxabTnDqT87xUoKQnPAPy6mRlEKyro/cHpOYbNwyD8X/4gK
l9XDP224ZY4CI9A/37dkYKkSyj/U6EkJp2LUP4WlnGdTXdA/ii/2ALZZ2D9M
kyda42fTP3EryJXApdw/HgPEkwSe1j/kZeSAoLbcPwnBYH5vqtY/VqAAbIDH
3D8uhZrV2LbWPzoVOUJA6dw/eq1xxqbP1j8C/6nuvyzdP3OEjJkvAdc/ktKL
R7+z3T/+iMFE9GPXP7J5T/m9wd4/+eh2r0Mo2D8ktGvkndLeP8kr5IN6NNg/
lu6Hz33j3j8kmompr0DYP3pjwKU9Bd8/VwwY5RRZ2D9CTTFSvUjfPxRehwXL
idg/0yATq7zP3z/ftzMu5erYP0ZbL5ac4N8/9XKOsAD32D+4lUuBfPHfP6Fe
m3YaA9k/TgXCK54J4D85eG7KSBvZPzJ6+gFeK+A/oU9zeZBL2T/6Y2uu3W7g
PzXDKjnLq9k/YBHzeLx24D+Frng0/LbZP8W+ekObfuA/vPySoSvC2T+QGYrY
WI7gP7oFeM6F2Nk/9sYRozeW4D/VnuiMsOPZP1x0mW0WnuA/fFdxutnu2T8n
z6gC1K3gP6DuF2AnBdo/jHwwzbK14D9kbdzWSxDaP8k901MdueA/sscQeCEV
2j8BdDSn
          "]], LineBox[CompressedData["
1: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
AfOgY1I=
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAp11P/7PzBECqxxB4IRXaP7gDaDr8
9ARAInSfTt8N2j/k6COYIvcEQFOAmxqyAdo/OrObU2/7BEBw7QsRUunZP+ZH
i8oIBAVAIup1kHu42T9iS2AgJQYFQCiP1lp6rNk/3U41dkEIBUBi7LVbd6DZ
P9RV3yF6DAVAaSBJBGyI2T/CYzN56xQFQOSWMghAWNk/nX/bJ84lBUDIfgKX
k/fYP1S3K4WTRwVAsECBtu402D/DJsw/HosFQGmhPZCkqtY/agimBCEJBkCw
oxPRfrrTP7egJD3DkQZAv6K7K2910D/OOzzFUhEHQAP0c9Drrco/+GqbU2CO
B0CPoWTDnXbEP8hQn1UNFghA6ATGMXxEuz9iOTynp5QIQC49dhRJ06w/ae3N
9dyWCECWA9C9KWCsP3ChX0QSmQhATGyxPQjtqz9/CYPhfJ0IQIXeIeS+Bqs/
nNnJG1KmCEAzTGHBEzqpP9Z5V5D8twhA6GoZa2OgpT9KunJ5UdsIQLjd+uCv
15w/UW4EyIbdCEBLXv/YCPGbP1gilha83whAPxQDsF8Kmz9nirmzJuQIQKuL
VEEHPZk/hFoA7vvsCECuHD/dP6KVP776jWKm/ghA6no/t8zYjD/Frh+x2wAJ
QJLGqwFLC4s/zGKx/xADCUCUapg8xz2JP9vK1Jx7BwlAr3maELqihT/4mhvX
UBAJQHcdvxMa2Xw//06tJYYSCUAnj9Zh/T15PwYDP3S7FAlAah+Uw96idT8U
a2IRJhkJQBTur7Y52Ww/Gx/0X1sbCUA/bhM89KJlPyLTha6QHQlAAvLhNlrZ
XD8qhxf9xR8JQIem0YWT2Uw/MTupS/shCUATPqS6yRpsPpjuGEY=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAA78KzuM1cT7/Q3W7yRpsviXpvjse
k08/v4JRV9bHSb/6sC9k2ZJfP+Vi+Fidx1m/5RRo+LaSbz8eAB8bfsdpv9pG
hMKlkn8/GXqLgWPHeb/VX5InnZKPP4BqXkoqx4m/UmwZ2piSnz/GsJsHXsaZ
v5HyXLOWkq8/nRxabTnDqb87xUoKQnPAPy6mRlEKyrq/cHpOYbNwyD8X/4gK
l9XDv224ZY4CI9A/37dkYKkSyr/U6EkJp2LUP4WlnGdTXdC/ii/2ALZZ2D9M
kyda42fTv3EryJXApdw/HgPEkwSe1r/kZeSAoLbcPwnBYH5vqta/VqAAbIDH
3D8uhZrV2LbWvzoVOUJA6dw/eq1xxqbP1r8C/6nuvyzdP3OEjJkvAde/ktKL
R7+z3T/+iMFE9GPXv7J5T/m9wd4/+eh2r0Mo2L8ktGvkndLeP8kr5IN6NNi/
lu6Hz33j3j8kmompr0DYv3pjwKU9Bd8/VwwY5RRZ2L9CTTFSvUjfPxRehwXL
idi/0yATq7zP3z/ftzMu5erYv0ZbL5ac4N8/9XKOsAD32L+4lUuBfPHfP6Fe
m3YaA9m/TgXCK54J4D85eG7KSBvZvzJ6+gFeK+A/oU9zeZBL2b/6Y2uu3W7g
PzXDKjnLq9m/YBHzeLx24D+Frng0/LbZv8W+ekObfuA/vPySoSvC2b+QGYrY
WI7gP7oFeM6F2Nm/9sYRozeW4D/VnuiMsOPZv1x0mW0WnuA/fFdxutnu2b8n
z6gC1K3gP6DuF2AnBdq/jHwwzbK14D9kbdzWSxDav8k901MdueA/sscQeCEV
2r8Nvken
          "]], LineBox[CompressedData["
1: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
q2ydMeT27GDqbVWCdUMZM87w//0fa46Y0g==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAp11P/7PzBECqxxB4IRXav7gDaDr8
9ARAInSfTt8N2r/k6COYIvcEQFOAmxqyAdq/OrObU2/7BEBw7QsRUunZv+ZH
i8oIBAVAIup1kHu42b9iS2AgJQYFQCiP1lp6rNm/3U41dkEIBUBi7LVbd6DZ
v9RV3yF6DAVAaSBJBGyI2b/CYzN56xQFQOSWMghAWNm/nX/bJ84lBUDIfgKX
k/fYv1S3K4WTRwVAsECBtu402L/DJsw/HosFQGmhPZCkqta/agimBCEJBkCw
oxPRfrrTv7egJD3DkQZAv6K7K2910L/OOzzFUhEHQAP0c9Drrcq/+GqbU2CO
B0CPoWTDnXbEv8hQn1UNFghA6ATGMXxEu79iOTynp5QIQC49dhRJ06y/ae3N
9dyWCECWA9C9KWCsv3ChX0QSmQhATGyxPQjtq79/CYPhfJ0IQIXeIeS+Bqu/
nNnJG1KmCEAzTGHBEzqpv9Z5V5D8twhA6GoZa2Ogpb9KunJ5UdsIQLjd+uCv
15y/UW4EyIbdCEBLXv/YCPGbv1gilha83whAPxQDsF8Km79nirmzJuQIQKuL
VEEHPZm/hFoA7vvsCECuHD/dP6KVv776jWKm/ghA6no/t8zYjL/Frh+x2wAJ
QJLGqwFLC4u/zGKx/xADCUCUapg8xz2Jv9vK1Jx7BwlAr3maELqihb/4mhvX
UBAJQHcdvxMa2Xy//06tJYYSCUAnj9Zh/T15vwYDP3S7FAlAah+Uw96idb8U
a2IRJhkJQBTur7Y52Wy/Gx/0X1sbCUA/bhM89KJlvyLTha6QHQlAAvLhNlrZ
XL8qhxf9xR8JQIem0YWT2Uy/MTupS/shCUATPqS6yRpsvg5lLEY=
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.4077437702859919, 0.4077437702859919}}, {{
         0, 3.141592653589793}, {-0.4077437702859919, 0.4077437702859919}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]},
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.40824824512832186`, 0.40824824512832186`}}, {{
         0, 3.141592653589793}, {-0.40824824512832186`, 
         0.40824824512832186`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlGs0lAkAhoVSTh23rC6OpZJEkVLb9S2VSqWiLZUVU2yF0NpCctmUS47L
l5GSW3ZcogiNKY0ZziBtLmUw3wzNN4NCmvkql8x2WfvjPe95znl/PT9eM0aA
i7e6mpqa+1T+bw2edmuffdAWiwAPcE3FMB+q3Why8wBGXF2EhKEYqnKb0yRx
EgtM1Tp8tMUYmHvmC5sIQGHSNl3tURJix5h6FhGJGq1zWZubSHSeJCyyiGRo
DhtkHvMn4eI3X5xB5KDykEhxliNC6if3ynSiDAGR3tn6Tt3Y2OCk7fAHH62C
uiaBsRCBYc5elYHPUTCcv/Wa7iv4c7yT1Be3467acq25M15COLhnViFDiFJX
yvTi7gYk2IyrsY+JUFwt6TvdzkWQ1XMmn9WDHTtZMwQ1Zej37o/KZfdgsvEL
X7y/DEdy1fyimnpQ7WTtrJQ+xAbD9Q5bh3pwOV7wQ0/zIdR/FCt41r1wDXvK
3LKvFMTrG7t4lb3woNZu3thThIrQA5PcujfQblRpflHlYUmVb3/W6zc4f9xy
pDsxD+mK2LYrfW8wpTaTbZKHsFN81ubpUvBv7zwf6JALh/2rXLi7pTC8ufLq
A4MsdJgalDxrkyKuMDRryDYdjids0u9SUqwKKkuKP8wEh7k3OvyjFA0GuzSX
haTBeXq9VfYsCh25/U88eQTswlTTPKwoHC1lT1zLTILqlO/D3vMUVitMrpcL
o+Cp9znk2UUKBSm/18suRKChNmx7ZgQFxhydPM9Nl5EyP0HklkSBFyDOPtYW
jPFGvfx16RQqFkSZCTOC4B582/+nbAqlS5wtMgV+sGgrUhc+oHBudNT+i/Ak
EsNtWyoeU2ANPJV3qlzwyZJzK5VL4fKAZ0HzX7/ArRuMwAYKqVLOk4aBDaiN
abI+0ELhaqrrm7Sbrlhid2BiRSeF9Ij4ZMlaT8RLu+pm91LIEXdUvc/3weEN
b4+8GKHgWKzD1+AF4ek7f7PiUQqbtJJs4seC8TNz7H3sVwpuHleOz7EOwbBS
M3rnbBmS3EsW6t2OQDRrcQnfSoZDwfP8o55cw0Ndrx/sczIcXKQIYO5Jxdza
wWbmBRkcb2kNWBkRCPUNTAsOk8Gr79u2un4COxojLe0SZMiYrI8ejEyD5HK2
64NiGQzpqGcW7FuY+U5SmD8owxqtnM0ei7LB4B45mOIjB0Oy0P5+OAt27Hn6
8wPk6K/hbJs2woJ6mbgj75IcWbtW8I6cKMC9XI+jlXFyvOfSI1/XF0J+1cej
674cZyxs1tpPFIHhdNHPWCmHLdeTcA4qBaObGVd0qQ81QZzY8UePcOqjkM+P
68f4cSOn5FwOEm2rAwquv4XlDcvwjtp6qPOr18WEDYLQ8h9XqZ5Db/neVmnG
MMSzdLZV5bdhd45DPk2MoMau+i56X8NI+dIxslqBO9nmJ20Mu5CRyvMa4inw
rV9efc+sC/PWVIS7PlfgzyJZ3NyVUxx6q8KCVGBfvl3KZ8cuLNBgmLSrFGDu
0DPOCemCidHEmOkWJf6ZTD1TIunCUpix6gVKOEtFIiK3GwUyA751ixIue/VS
O0q7sTRmhiS9c2r/fV2B/pNuWDS/1/V9q4TA4UPfjVfdSLM8UTtLk0bii93M
c+oipFeaL68wp1HnVK4vOiXCnaan0zTO0mAIOEx/cxI0VR6q9KPBfZyWUWRL
Ypeq4KMkkEZ7Sq6RfCOJUeubsqoQGnZUWuxBFxLOhG+dTxyNWC0d44WRJP4u
8VrvmkjDuCnuw54EEv8Kjj5CCo3TCa32l5gkiia2583LoJE3OGdZSwkJ9d+M
o18U0hh6mRzlIyLhdlF/kl1Co6Pl7lhcH4my5JlB+WU0WjqNeooVJGYUfx9M
rqRRnvLr6uZJEu71o57h1TTc6u+r3mqKUSEZFp2poVHh6LdKQ1eMDDe1xnVc
Guwm3RCzqX/+Dxgx+Eo=
          "]], LineBox[CompressedData["
1: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
TIc=
          "]], LineBox[CompressedData["
1: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
y19pbbnoEHkAGler4f8RUshc
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlGs0lAkcxoUop06uq4tjqSRRpNSW9C+VSqWilcqKqWyF0Fq5FTblkuPy
ZqTklh2XKKLGoPEfzqDapDKYd4bmnXHJrZm3kstsl7UfnvOc3znPp9+Hx5QR
6HpGVUVFxXMm/7caar3qswveah7oBVwTEZoNN9gb3zwIY26uAsJAhMpK69Mk
cRIWm6h0+GqJcED/7BSbCITilO3aWuMkipzimlhENNRrns9xaCWx8yRhnkOk
gvqIXvaxABJd/ReJsog8qD4slJ/jCDH9k2d1JlEBgdFncnWdu9G+2VnL8Q8e
vOI3tvKNBBgU4eJTHfQMikYKt13TfoMBnDMpqstew12VVZr6Gi9RMLR3bjFD
AOVulEnonmZMsp5QYR8TQmmNuO/0ay4GWz5j8lg9sHMXS4NfX4H9Z/pj8tk9
MN0yxRMdqED3fBX/mNYeqHG2clFIHuJmg02O24Z7IDKR/0NH/SGq/iiVo1Uv
uEXUMbfuL0fi7Y3dWN0LXtQGB/ueEqwKPzjNbXwHWi1K9SllAS5/7Nef8/Yd
XDhuMdadXICZ8vj2y33vYEZtNtu4ACNO8VgOsyXAu73rQpBjPjoeWOvK3SMB
g5trrj7Qy8EOE72yp+0SSCgOzxm2yUSnE9aZdykJrA2uSEk8wkQOc19s1EcJ
NOvtVl8ZloEus5ssc+dS0JHfX+uNBNpGKGd5WVJwtJw9eS07BZWn/B72XqBg
ndz4eqUgBr11Poc9DaWgKO33JunFK9jcELEj+woFjPkLCry3RGLaoiShRwoF
GCjKPdYeghMtOoUbMymoWhxjKsgKRs+Q2wE/5VJQvtzFPJvvj+btJaqCBxSc
Hx+3mxKcxOQom7aqJxSwBupknUpX/GTBuZXOpSBywLvo+V+/oEc3MIKaKUiX
cGqbBzZjQ1yr1cE2Cq6mu73LuOmGy20PTq7upCDzSmKqeIM3Jkq6Guf1UpAn
6ng8WuiLRzYPur8Yo8CpdAFPDYOx7n2Aaek4BVs0U6wTv4Tgz8wvo/FfKfDw
unx8vlUYjijUY3fNk0KKZ9kSndtXMJa1rIxnKYXDIQsDYmqv4UNtnx/s81I4
tFQeyNybjvoNQ8+ZF6XgdEtzwNKQwHC/oIyQCCn49H3b3thP4M6WaAvbJClk
TTfFDkVnoDgy1+1BqRQM6Jin5uxbOOe9uLhwSArrNfMcvJbmIoPrfijNVwYM
8RK7+1EstGUv1F0UKIP+es72WWMsVK0QdRRckkHO7tXofqII7+V7Ha1OkMEo
lx77uqkYZVd9vbruy+CsufUGu8kSZDiH+hspZGDD9SZcgsuR0c1MKLnUB/XB
nPiJR4/w1EcBj5fQDxPHDZ1T8zmYbFMTWHR9ECxuWER1NDShKq9mY1zEEBCa
ARNK5TPUWbXvlSRrBERzF2x/XNiOe/IcC2liDOpta+5C71s0VLx0iq6Rw51c
s5PWBl2YlY4+wyiHb/2ymnumXbhwfVWU2zM5/FkiTdBfM8Pht6rMSTnsL7RN
++zUhYvVGMavlXJg7tQxygvrQmPDyS8mWxXwz3T62TJxF64AU1YTXwEuEqGQ
yO/GIqkez6pNAa77dNI7yrtxRZyGOLNzZv99Y5FubTeaPx/V9htUAN/xQ9+N
N92YYXGiYa46Dckv9jDPqwoxs9psVZUZDY3OlbrCU0K801o3S+0cDQw+hxlg
RiJNVYYr/GngPsnIKrEhcbey6KM4iIbXafmGMnsSx61uSh+H0WBLZcQfciXR
hfBr9E2gIV5zgdGSaBL/LvPZ5JZMg1Frwoe9SST+yz/6CNJoOJ30yu4Sk8SS
yR0FC7NoKBiav7KtjETV34xiXxTTMPwyNcZXSKJHqO40u4yGjra7XxL6SKxI
nRNcWEFDW6dhT6mcRI3S70Op1TRUpv267vk0iZ5N495RNTR4NN1XDqqLsEo8
IjxbT0OVk/9aNW0RZnmotGzk0sBu1Q4znfnn/wAd3iZZ
          "]], LineBox[CompressedData["
1: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
tp/YPrVkM0GGHB2erDL7//tfhsyDBw==
          "]], LineBox[CompressedData["
1:eJwVUns41Pke/o35DjMu56SYlBCt6Wifra1Yhx3m02WfZu0eKylSGmTOavS4
xDrLkdaKTOIQ2QqriaXaGsus5NZHOcK45OQy85uhCzYquXU31Jn9433ef97L
87zPax8a5Ss2oCgqRI8/2a/tV9+1/6XgW6X9h5olGizl7pWtvEOBdgUVf4Wl
wTmx4YxZOwXq8cfBxfM0bqlReDKUFLgGJTdnT9OYQ0KyXnZS4FMfeSZ5jMb1
pQ3rtHcp+OaiTra3h0bJw2jxJRUFDmkuAYsyGkcCtZqt4xTMNs906YQ0mnr4
VwQ/oeBKt6jjEZ9GF7u+2ORn+vxqGePOpzRmjCpN66cpKJ1gOEmtaNxwuN5z
41sK6txeS+bH1Zh09NxFOw4DSmt5idJ0NVpe8JcsrGOARtiCotsqFP7R964m
kgEJp95a27gM4vdHxOHc5wxYdvbQ3AlBH3pfL/TixhtAmDIrNeDpXZxakCQx
XxtAUPr5JLOyDpSpUn6PjGWC5aTQNjCsBefDPYITdEw40tfWXLykDr0a1sF3
i0wY9hUbrx2+gYVmVqtjPjDBauJ0l/zyDeRXzz0IZxJIKt7RVrf1BibrKkQB
JgR2hjRNNcXVIjN7qcjVmsAusX9niroGTRXjQa/cCXzhf/mZWUk17mcNeMzy
CThdnZEcjqjGa/63bZ57Egi04bd3uFaj90LR8NhWAlJWnlNKbxXmfOEb1O9F
YFnu+ocjjCq0UDfuVwQSyOlK6XjSLkebxdx9MYkE7Nt8lvftvITCkX/U/ZRE
gBFbserXRxUY18ZZfjOZgK93YnhKTAUqc1PuGacSqBfoXvwttxzjeTFflmUS
eBMraArrLcPeb3xcVUUEaljaDQXeMtQ5m55Z/JmA8p9uh/bcv4C8le1za2QE
9p1qkFhGXsCkMYE8+hcCCoON3XbWJeiUsMHRWE7glTTyy+mzhfjjxb8s80AC
T0SKXzbl5+O1E8rog7cInNcMXc9T5KH6cHqPtIXA0FLlvhf3TuN61/fSwTYC
vWv7ZHLzXNR2PqeiewlIePUdn9hmomHV5QMF9wgE99/6fWi/FDcViBsb+/X7
bRtVSgtPYEbw8L84NIFtUYL5+1bH0flV19TFRwQWl02PzvISUaTJ+LpjlEBB
Tfdxt7J4PInbr0z/QeC3PZapx+xjsaaMYnMnCBg1BwoyPKLwobRRzH9KQF4x
/9lf/x6OJlHft4ROEsg7TUfmbwrBz/yc7aVTBPJ/zvrfp4F+GOo2k1w5Q2CS
ynYe5rthlu3VoYE5/T+MqyqNpz3xBjPcfeGlvu+WAbfxzm4cm1hz1uENgdL/
NL+mJ0LQXVG4K0qn92+2ieh+EYWPd2Qq2YQFkiA/LyVJxtCvglc7GrLgk1LX
kuyGH3DY2yV+C5sFFkKr6etxP2L/7gf2iaYsMC46eoY5noa3D25OeGbBglUr
jWTSzlNYfEy7tseRBWMtCU+5XmfQr/bjtLwdLGC/s5rDDBm28LoEtpksKMjI
HCFfV6KEXU7sOYYwEbpnJDWqEWsvfOTRkmsIa3IPVtZzW7Hnc36rr7kRTAV4
CkURnfhWUrgrONsIbJ/Nxo3c7sV2n5LdZlw2RGx5LNhG9ev34VdU5LPhpkPn
9sXZQTz0vPvVUAEbPlrz09zs+0GMlom2Lz3HhsrT9IMxExUe46Q+Sipmg/e5
u3GtjiosojusfcvZcKBp4nDMXhUOJvjnLNSyYTz3eF1sswq96o8k7NSy4Y3O
/cnKLDXujCTt6cNsMDFeVTJwTo0BDgXcxgds4Fk6fpddrsZvT9YpeGNscFb0
HJ1HNR4PpKZ0k2zwNxE/bphT4835rNDy92xI8xLwR/1pbJXbVWkpDrgcLfnh
WBiNXaFVH5YwOXCp+vrAihgatcr+on8bceAac7NceJLGt+etVT5LOCA8K13M
bqTxg/c1x/SlHCjY3HbVuoNGQ6YgrsGCAzHh5uLyARotIkLNeSs44CV4N1kz
RaO13UvRPmu93lxe766j0aEvTZ5jw4GN94uzmow0uO7E8sVWO31/cX+Yp4UG
N35++SudPQecog4ImlZr8P/KUfjc
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.4082482451283221, 0.4082482451283221}}, {{
         0, 3.141592653589793}, {-0.4082482451283221, 0.4082482451283221}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.5973526320630207`*^9, 3.597358391754456*^9, 
  3.5973584231032495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"d", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", "srcRange"}], "]"}], 
        "]"}], "-", " ", 
       RowBox[{"N", "[", 
        RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"srcRange", ",", "1", ",", "255", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5973460721728163`*^9, 3.5973461013404846`*^9}, {
  3.597358776423458*^9, 3.5973588033569984`*^9}, {3.597358907724968*^9, 
  3.597358978440013*^9}, {3.5973590414136143`*^9, 3.597359049741091*^9}, {
  3.597359082981992*^9, 3.597359163001569*^9}, {3.597359193702325*^9, 
  3.597359207197097*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`srcRange$$ = 1, $CellContext`\[Theta]$$ = 0,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}, {
      Hold[$CellContext`srcRange$$], 1, 255, 1}}, Typeset`size$$ = {
    2521., {78.125, 25.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$637752$$ = 
    0, $CellContext`srcRange$637753$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`srcRange$$ = 1, $CellContext`\[Theta]$$ = 
        0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$637752$$, 0], 
        Hold[$CellContext`srcRange$$, $CellContext`srcRange$637753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[N[
           $CellContext`d[
            $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`srcRange$$]] - N[
          $CellContext`YAB[$CellContext`\[Theta]$$]]], 
        MatrixForm[
         N[
          $CellContext`YAB[$CellContext`\[Theta]$$]]]}, 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 
         Pi}, {$CellContext`srcRange$$, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{2823., {108., 113.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5973592087651863`*^9, 3.598099879688583*^9}]
}, Open  ]],

Cell[BoxData["]"], "Input",
 CellChangeTimes->{3.597359173543172*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597782548459406*^9, 3.5977825515414343`*^9}, {
  3.5978679287992573`*^9, 3.597867932875432*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       SqrtBox["3"]},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597346046030321*^9, 3.5977825521061087`*^9, 
  3.5978679339186974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#1", "==", "0"}], ",", 
         RowBox[{
          RowBox[{"-", "Pi"}], " ", "\[LessEqual]", "\[Theta]", " ", 
          "\[LessEqual]", "Pi"}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
    ",", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.59784090462996*^9, 3.597840918653735*^9}, {
   3.597842530167472*^9, 3.5978426171789703`*^9}, {3.597842648058074*^9, 
   3.597842648349503*^9}, {3.59784287916609*^9, 3.5978429000543127`*^9}, 
   3.5978429463428097`*^9, {3.597843016060707*^9, 3.597843044703567*^9}, {
   3.597843077724524*^9, 3.597843083091751*^9}, 3.597843183385046*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", "}"}], 
      RowBox[{"{", "}"}], 
      RowBox[{"{", "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "6"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "6"]}], "}"}]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "3"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "3"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}], "}"}]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597842900945286*^9, 3.597843046930542*^9, 
  3.597843084209511*^9, 3.597843184271803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maskPos", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", ">", "0"}], ",", 
          RowBox[{"0", " ", "\[LessEqual]", "\[Theta]", " ", "<", 
           RowBox[{"2", "Pi"}]}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
     ",", 
     RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskNeg", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "<", "0"}], ",", 
          RowBox[{"0", " ", "\[LessEqual]", "\[Theta]", " ", "<", 
           RowBox[{"2", "Pi"}]}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
     ",", 
     RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"maskPos", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"maskNeg", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597843222068576*^9, 3.597843225426893*^9}, {
  3.597843288882839*^9, 3.597843304098762*^9}, {3.5978434827735786`*^9, 
  3.597843557881648*^9}, {3.5978442241098127`*^9, 3.597844240716446*^9}, {
  3.597844281274*^9, 3.597844304412792*^9}, {3.597858415371831*^9, 
  3.59785842100244*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "6"]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "2"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{
       FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
     {
      RowBox[{
       FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "3"]}], 
      RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597843554786337*^9, 3.5978435590158377`*^9}, {
  3.597844283685298*^9, 3.597844305437006*^9}, {3.597858402889884*^9, 
  3.597858422634592*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"False", "False", "False"},
     {
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{
       FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "6"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "3"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "3"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597843554786337*^9, 3.5978435590158377`*^9}, {
  3.597844283685298*^9, 3.597844305437006*^9}, {3.597858402889884*^9, 
  3.597858422637436*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"maskPos", "[", "\[Theta]", "]"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597843608415818*^9, 3.5978436521528*^9}, {
  3.597889540281514*^9, 3.5978895467835817`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.05026548245743669, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}}, Typeset`size$$ = {
    157., {2.4375, 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$117529$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$117529$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[
         MatrixForm[
          $CellContext`maskPos[$CellContext`\[Theta]$$]]]}, 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{246., {49., 54.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5978436299726267`*^9, 3.597843653184766*^9}, 
   3.597889563313673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABpos", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "#2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"#3", ",", "#1"}], "}"}]}], "}"}], ",", "0"}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]YABneg", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "#1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"#3", ",", "#2"}], "}"}]}], "}"}], ",", "0"}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.59784371846437*^9, 3.597843726152996*^9}, {
   3.5978437666913023`*^9, 3.597843844167652*^9}, {3.597844004557733*^9, 
   3.597844024755147*^9}, {3.597844134842841*^9, 3.597844148567986*^9}, {
   3.597844180349573*^9, 3.597844182986196*^9}, {3.59784435211915*^9, 
   3.597844438136723*^9}, {3.597844485713447*^9, 3.59784451921074*^9}, {
   3.597844561583799*^9, 3.5978445620455112`*^9}, {3.5978446474678383`*^9, 
   3.597844647948608*^9}, {3.597858482287752*^9, 3.597858632156273*^9}, {
   3.597858685615637*^9, 3.59785874127633*^9}, {3.597858777064166*^9, 
   3.597858812595772*^9}, {3.59785886907635*^9, 3.5978589674323*^9}, 
   3.597859321247953*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], 
             RowBox[{
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "2"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], 
             RowBox[{
              FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], 
             RowBox[{
              FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
            {
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597858813622283*^9, {3.597858916617807*^9, 3.59785893373429*^9}, 
   3.5978589732813463`*^9, 3.59785932234354*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "2"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
             RowBox[{
              FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597858813622283*^9, {3.597858916617807*^9, 3.59785893373429*^9}, 
   3.5978589732813463`*^9, 3.597859322349412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5978797273913717`*^9, 3.597879733548462*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597879734936338*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{"\[Pi]", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", "0"}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{"0", "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597879734939929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{
    RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{
    RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597859232935964*^9, 3.597859285347989*^9}, {
  3.597859380831429*^9, 3.597859396840639*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597859287772705*^9, 3.597859327007152*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", "0"}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"0", "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"\[Pi]", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597859287772705*^9, 3.597859327013344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "[", 
  RowBox[{"[", "All", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5978622133455057`*^9, 3.597862219541812*^9}, {
  3.597862299691298*^9, 3.597862301882668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.5978622203595877`*^9, 3.597862302627359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABExtrema", "[", 
   RowBox[{"\[Theta]_", ",", "form_", ",", "idx_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"PiecewiseExpand", "[", 
     RowBox[{"matrixForm", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"max", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "]"}], "[", 
       RowBox[{"[", "idx", "]"}], "]"}], "]"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"max", "\[Rule]", "Max"}], ",", 
     RowBox[{"matrixForm", "\[Rule]", "form"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "All"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597859232935964*^9, 3.597859285347989*^9}, {
   3.597859380831429*^9, 3.597859426575728*^9}, 3.5978594682253523`*^9, {
   3.597859529743981*^9, 3.597859538437546*^9}, {3.5978595701659307`*^9, 
   3.597859579501873*^9}, {3.59785984125247*^9, 3.5978598926365128`*^9}, {
   3.597860560197558*^9, 3.5978605962104607`*^9}, {3.597860644263948*^9, 
   3.597860681919763*^9}, {3.597862226179043*^9, 3.597862329777371*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {"0"},
             {"0"},
             {"0"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", "\[Pi]"}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{"\[Pi]", "<", "\[Theta]", "\[LessEqual]", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
         RowBox[{"2", " ", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
         
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", "<", 
         FractionBox["\[Pi]", "2"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.597862320163498*^9, 3.5978623302943983`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.597862348633926*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         SqrtBox["3"],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.5978623497859364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.597862365972543*^9, 3.597862366459293*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
          ")"}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]", 
         
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597862368005928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597862438921811*^9, 3.597862439400033*^9}, {
  3.597862900744207*^9, 3.59786290206735*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["2"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "\[LessEqual]", 
         "\[Pi]"}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597862440879546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "1"}], "]"}], ",", 
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "2"}], "]"}], ",", 
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "3"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5978630440257063`*^9, 3.59786305574687*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            SqrtBox["3"],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
            ")"}], "||", 
           RowBox[{
            FractionBox[
             RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
            "<", 
            RowBox[{"2", " ", "\[Pi]"}]}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", 
           "\[LessEqual]", "\[Pi]"}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.5978630202712793`*^9, 3.597863056474147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"0.2", ",", "StandardForm", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.597863146887295*^9, 3.597863172770954*^9}}],

Cell[BoxData["0.800221009888911`"], "Output",
 CellChangeTimes->{{3.597863147368678*^9, 3.5978631737024317`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              SqrtBox["3"],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
               RowBox[{
                RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
              ")"}], "||", 
             RowBox[{
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]",
               "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", 
             "\[LessEqual]", "\[Pi]"}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597863191772518*^9, 3.597863284166863*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQzbyf69xj00a7VT4RL6q2/bYPypG8NWPSensYf+Kn
mM3TJu2H862PenE5FV+A8wuq/BI3F9yA83N3pPYxKT+A81OLdS2CDiL4V154
ci5PegLnd+l/Y9gW+QLOL9Q+MfXA0jdw/q/k7HV38z6gmYfgJ+0NC5iQ9gnO
T/545cCBji9wfo/B9vxlbd/gfKYD281bqn7A+RK6LiG/FX/C+YJa3ufuz/gF
53vMd1r8YdIfOF/8/Rm3+u3/4PxZx3cxMmcyOKC6D8G3kXX8r5DCCOdrPxB4
UlvCBOevXSGUsbWIGc6vuRd7WbuNBc63v2BxbNlHBL/QxsJ73hRWOP/XfJek
1xPY4PwLBbMSyhexw/mW7kr/7i7kcED1Lyecf9LVcoXDHAR/6caZlo9Wc8H5
oso6WXErueH8S4wcTZJ7eOD8T53+j/yDeOH8rRzFyy6cRPB1RAWyko7ywfnv
+76JGF/jh/OV29v187ME0MIPwX8UdfuW03ME3+Pp5Z9b8wTh/Iqi1Ayxtwi+
37bZXmJlQgj3KhrX19xE8N/9yaph/obgL7zeuCWvWBgRnhm2CZW/EXzZvxOj
C6tE0OIDwX/m3n2Kg0UUzj+sdsZerhvBz+JYxqLIKQbnb1+gYnt4IoK/us6O
9yKnOJx/ztrmaJAggv8ja3ZwQh+CfyJgfiivmAScn2Rps3z5FATfa1dRZeBt
BN/QeqX3b0VJOB8A7xj+MA==
      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwV1Hs0lAkYBvBhZeWyacltRSWXqFRjosgzUSptKt0cM9LWSmrJ6OJEaSsy
3chIiy4otwqNkGHcsiZD1splGveRzMz3NW0ubSW72W//eM9zfue857zn+eed
v/+ob5A6jUZjUfN/flOr3TrMOOeuvlg3vHoeCWuixtUiORAhx7U8Kil/4Tv+
3M07CpNLDAGfcvFHdM0uisTWqpT2TMojhoc+P+WdRZRqcdJlyldNxXpFwguw
iqV9CKWca8fOoBXFgxZlPOVNuc55dNmOzCuQb4vKnU+5xyu2PoeXiGZj+scx
S+qeva796fok/B6yhRRSjl8hicgRJmM6VHL+LGXD1ZnC1tIUNL7qq3WjnLX2
sMbnwt9wSh6eNWFBYukmpy3z89JwLijbNpuycNvXFO/MW2AXXPb1odwVyLO9
w8tAwqOGm4lzqT70pS7DokyoWr34NpQjnZP7IuuzYH5dGlZuTkIDAdZZwvuI
E6X2in4g0exR38QQZMNbQ/2yJ+UkL9uw5tIcqE6M9leakbDwGXs6UZgHxqXh
kzdNSbzZvpvFfZgPnZ2OVV9MSDzaJZw2z3uAmdkJeX6UXQLiNnplPkKFjS1H
zZiE7y+mPam8x9jI5XRqGpLQdUHtzQ18nImmbXUxIDFawZk9JOLDtnEm58D3
JJ5WS8pO1BfDwIFdkKtPwlOU+fWusAQm4zqaQ7okbDZ0bCNWlaI7J6x+UIeE
dtOM+3RBKWJYc+yk2iTaWg5vEJeW4dP4stEyLRIBnU7XxwrLUeWmGW2tQYK5
O/i162IBGm8Pc8fUSSyUpjldfCjA0f3LPcrVSJC9X6VmeRV4nLpd4DhNIHJY
PH9dphAL1h8Qdk4SSBpnl9zk1YKv9Ufw+3cErs1Jd6vTqwOTdSKLriLQXhxn
yfCtw1zFp/BwkgCLZI9Y9NbBjsbr6JATCGPpcMZVz6BiVpetHSRwY80hbpp+
A8TLp0IqWwl0d+848t2uBlTXBXtwWwhYnITPhbQGvI+qrvBpJpBXZGQYukAE
R/sn8SIRgUpLUQbT6Tl23TMq8a8iMKi2oFyxR4yppcFDVvkEFt7VS2ffFsPf
IHAyOofAodWTp1/KxKgNOCJsuUdgPKLNQxjShPiLXUy/OwQ03sS0JkQ3I9Ht
w0FjHgH7570jjIwWNJ/3f7UyioCryFvb41gbNPL3hdHWE9DvzP3TObkN3tFM
u4K1BN68Vk9ZUtKGcdualO3uBBJoQkvTiTbQ9d4lXHIm8NrVgTEa8RI+w/LZ
RYsIcJ/o7Lsb0Y5dfv1zm3UJSDJayr5wOiHkBVTtbFXiUZFd9GhSJ+y5pnku
zUr8Wh3LlBd3wnnBmgNGz5VY1Ov24uVYJ5aH9e2orVbitFGhLJ/TBfWGCnpj
gRJW167p7OFI0Dqk6nt8SYnwKJ+fSsKl4C7i3FG5K+Ed5pavdV2KLVWGLOvV
1P5++/cBj6UYWWHl7cdQQrJJ84zWX1JUJ5g/K3BQYo1pTWrAkW7MsZ9N1zdR
QluwpO3bgz1wuDtrWf17BXL+1gWb1Yf7YmfL3nQFYogvccVRfXD1FAeyUxTw
61e2aKb34c2Qx+SrRAV0RQ3+xdI+dGl7uNXEKhBx4/RJzd390PVssN0QpgCT
rirkbxtAXZFNw2amAma2PR9mhA8gJOZfp2OrFZgwE7uyEgcw6xnXMMVJgVz1
7KYZrQPQnLfXWmyngF47a8R/8yCS91aUvdVXIFQQlKBuJQNdwuhYJJNT/2X7
PDUnGeQ71dZFdMsx2u32ZHqdDFP2Gp6l7XIcnzKQ/HNQBq+RHycWiuRYeXU6
eCpSBqkkKH9HjRyfzN9OTnJlOL6KPRFdLoegUHLlc5oMNWYWkjt8OaLc6+d+
eijDx923fCseyLFE69RRJV+G4AnmC588Of4DO5bbBw==
      "]], 
     LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
mfA/MVWdcA==
      "]], LineBox[CompressedData["
1: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
0O+29288T1+J/1J0zZEHyq21deyC//d/AeH4TF8=
      "]], LineBox[CompressedData["
1:eJxl1nk8lWn7AHBK9nPO/TxFkkwy00IiNbLluviVJqQoUS+FFCNRmakGMWlT
SSlbU6EI7ZYImWNJCpFtbFnScs55TgY5pU157/fv3x/P5/l8/7m367ru+9Lz
DXHdPklOTu4R/f73bxzQ2KbkwcNs+czooesi4E5ng40nD1s0v12qzhXBbFHd
p5t+PIy9K3rrJRSB9TnPf14G8NBQN09H75EI3G2G8mbs4uFKw76vvfUiiEti
dh7/nYfOy8V/r+gSwbi9R6/vMR4uC63VqZGJQEvGlVw4ycPUR7mxG7+IYEla
eFJTHA+bcs0uvZATQ+DH1LU2yXT+zt5zAzwxdGa/qZyRw8OEPRa3kuaJoVA5
NKuplod2wnH5p5vEIIo49K+wgYdVA1+yTm0Vg9a7M0tvN/NQ8iowe+V2MUR0
3ao60cVDdWPtwpzdYlhxQ9Rnx/GQHXfrNTguhhbHzdMLlfl41q7SVLdADCNx
tjEXVvHRzOXao/uKEpgzed2z44583KglXFmhJoEN+7do7lvLx4mawo9VRALF
W8MzXd35qJAQNFikLYEok8IKNX8+jqTs+eixSAL8lvmfDx7jY3HvitgjGySw
UIME+j7iY+2bG8I9lyQw9e6DW9dq+fiJeyvRviKBL7/4D0sa+Fj9UlHj72sS
eBIh/C2knY+R8Sd2Dd6RgN/roKgIMR+HNv76daxCApcLahOSVARoqesRXPpK
AkfW/N7RxRPgbosiHZlYAkHi2dqzWAFK1ZqLfxyUgOXMA2kZ2gIMiA8v3Pte
Au3Rc2/kGgrQvbE+rUSBA77r4fK6NQI8kmtqPqrPwYe3iybxXQWovnJgWck8
DnqOdq9w2SjAPlg89Q9DDm6ULK7r2CLAFR6/e7wy5cBe70Xb6xAB8teDnK8t
B5Ej1tLv8QKMbCADil4cDMeNTVvSLsADTZFLJXEcDI7oVhl1C1CmN/I1OZ4D
qeuqkPl9AqxQeh9im8DBa82U2lkiAboK2f8cusBBd6pFpPKYADObLhsWZnDg
6y6UDakSPFeQZjBYxIFPjKvDoDrBuCvpIWYlHHiXiNI5PsHXLTvcwx5w4DVT
4PyaJXjzjiJvuJwDj/6tOV3aBB3W2cvHPuFgjb+8V7UBwXHX6JTznRw4pSQW
VC4kaF+iUre/mwOH2gWq5YsIftTVSXLr4eAXQ9f7JaYE7bJUx7/1c2A3fJW5
a0nwctSRUXkxB7azlwXcsib48/XGt/kSDtClXnjdhuDzcN0ILykHywtkOzPt
CKbEGXin/cuB+f4VNRccCGb5NRi0yzhYltOpk+xEcF4x27z+AwdmXUGhCc4E
TXuXq9WPcbDEKnH2GVeCjT2tFlmfOVg08SbsyGaCSget9gkmOFhoEtZ8yJPg
JJWBvE1yUjD04c+P2kLQBfIjL8tLYf5Ds3/+8CXo2pxSxyhIQf/4ceOQQILR
FdP1bytLYW/70kjfIDreSpe9QhUpVPz08qlbMF1/xr2ztapS2FJtHWi9l6Db
1nGLBnUp/CU/mqkSRtez+suyk0QK3Lo02Xg4wexnLz//ykjBPN3JbuQgnd99
zon/Y6XQbpPd336IoNe3Tv7rqVJgIzy1M08QfDqvK69bUwo+9Sq/Jp8i6Dys
3xUzXQq52vfvnzxN0NDY5amJlhScSxi3PfEEhR33NIJnSOGycnmG33mCIU1p
OydrS2HQPWjUPZHgUZ/22HPUJ8dqzthcIPhXdppJ6kwpdK38rW/xRYI7Skfz
tXXoeSTqGf10mSDosXLx1PtfN4ZrpdH4PBiYLj9LCjVLIurUrhCseWn/JZBa
4/CCGRNXCSoGzs9upPZrafcfzSQYlhqsu1BXCpP2LJ7SlUPQ/VrzzjZql4q+
9U9vEGwPrbH94QcppAtir5bfIlgpfjawjXp4i8W7/DsE5+b2Ol6ltrkjgqxc
gtpjL6K6qU9/Ox93IZ/u1/PpQfXZUuhxsu2NvUfzTz5hpTm14aUhwz+LCIrD
jDq8qMPeXgwLLSY45fkZ04PUtZara3eU0njeLnBPotY6OTZ9cxk9r7Fz9tep
/bsydqwREuw1WzBRSL091MjctZJgkcHUm2XUUw58n7y0iuDDbyEN//OGxzdd
51UTnHij+6qIOkNz0xXtGoLVMYeqblCPblcc4T0haPnkr50p1LaFBTbydQSv
yIX0RVGfVfA5/b6e4AZlhZk+1P3r+T3iBoJVxj561tSLMh4YPH9GcJ/tmXeE
+uBowB+NzQT50Smn+ul5PLXVfFLZStAiN2Y4m3pm/EPNwn8I3lPYNSuQOvDF
7u05HbS+TTdozKUuMda9d7GLYMN2547nNB7KUfWTzjwnqGG/a9spavfGAy7R
vQS/yB6WLKXOmjU3/fd+gmtV/bs7aHw/BLUOBQwQ7L8c9Og36hVlfy73fEXQ
f/lgmBr1y83Pu+3EBEXW5Svn0vxRX+6e7c0RTM53PpZG8+3nH1pDI98S9E1s
3M9Qx7yqUy8dJvisAoP7af7mP7Lv6nhHUL0oJtSKuie76toHGcEje4IMztJ8
Nw4qtVn8iWDAtNrb+rQePJzN1NZ+IbhuSk6YL62XaJP8jqBxgk7Phj5f0KD1
9f767hw5BvWikoiM1lfEwQtXf1Bh0LVkNHMNrc+srRohy9UYvH06S81VIIVn
tvFW/+ExqB9VNnctXwpzFE+0JTEMWt0yDV9C6/tJ3AFFvjaD/fOLrmUq0fju
ft9iqMOg4/nu+8GK9PzX705brcvgvql9fy6eIoXg6QHmR+cweD9RbH5lEq2X
dPfAcQMGrc9bOS74xoFNdKuZthGDtm6HdEu+chDgt3ayuTGD+bev3bT9wkHZ
/FWXQpcwuDnZ5IP1R3rf55k1Sq0YvBfl7NIzwsGdKg3TLicGZ+esSxC+5KAz
M/77mDODkSXLrLpfcCB/nFc/zYXBWu3DGUN9HGxwnOK3zo3BCeeQUvnnHHxt
fZ/42IvBiFgDprmF3udvWj8XBjNYUW7xZlolBwcN48Lv7mYw1zbL5Y2Qg/w9
v3zL2ctgd8OL/XfLOJj5vUzu0j4Gx+ZwMpNiDoY0s5SiIxmEH8tKJHc4SPjl
gIZzHINN97S+GV7koDbONHnVWQaNjno7pKRw8L1tUMv2HN1vV/3m74kc+Pv4
6CxNYlD9QfLj+2c5sAxz0NdOZXCR3o+v+o9y8OKmzmLRbQY7q5SKp4RwoDHa
nt9/l8EGk8Fj/CD6PpnHL+3KY9ChrFGf+ZWDguop5k8LGZTU/FE3eRsHx3qH
bPL/ZjDa2+hF6kb6PggqnSIbGFy/f0HnLWsODuzdHqD5L4OJE3DViPYDMY5D
/pbDdL2aGzX15DhI/nG//5Z3DD78GuHDG5dAUXvMjqwPDMYN3DjUJJOAzPKW
n9l3BrWPlajK034keLLMe6OARcfV0rXqtF/ZlvDnpqTFLObw8863/SaBvbtU
NpUuYTFl6rENb0IkEG1/zqPvZxZLD5VqDAdKIP1ThvtcSxYVykdT//WWQJ/n
Y7ciOxatWiXvk5wk4PET37V9PYsTmcUfL86RgHPRRQfNfSwWuJ1RCqsVQ4DM
d0LjAIuemzxtSLUYDpsY3NMIYzHL4vXRdKEYim8Uz9KIZDHXIMHpLu3/5qT9
MzL1GIvf+9v6jl4Ww9hxQTKTxOKQXp6zFu0fyaN2RyaFRaG787J1gWIwnJQq
x/zFokGbYFW0nxi8IxYGklQWR1waBto8xFC3e/VyQRaLz1r1jZbaiiF10+FX
6kUsvqyO8+8hdP4khxT1YhYlV0+H3lcVQ2srs0a9lMWq0TPCWAUxKDunF6kJ
WTxtXTt97icR7LX7+4RqDYtrpx6fNK1fBLFRR2xUn7Dop0JMKztFkF3mKFOp
Y3H2Rs3bAS0i6DHr9lRpZPG8kuxUFu3Xx0KvMCpNLGYqfB61LhcBkxdQo9xC
4xPz/GZDsQgWDhmHK7fR8d/+XOyRLwJ7w4/Gyu0sLnmXOaPvpgi8A4SvlTpZ
rHhc0+x17f/7v/IcvHw=
      "]], LineBox[CompressedData["
1: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
nK/K4P/7aJDc
      "]], LineBox[CompressedData["
1:eJwV0nk01WkYB3BDkZCl+L2/e3EtUxlRabP3PJNGu6xZWpS2Ey1yLCVLacGl
UeqYKEUqtJA0WVJKbiPh1O2eNpei3Hvf38RQaURpfvPHe57zOec5z/Oc830t
w3b5blZXU1Nbw7//q5FugGenDoObPuFjr2IFDCaNLF6lx2B9zqiO8VUFhHUI
U/31GYz13XFXfEMBba5uEl9DBue+sm8brlaAuDpmxHMig3lWD74vrFfAornl
Dq7GDIptH9enSxRwb7rVWWuWwSgd50F1qQIqLcfFfbZgMOPFyEglp4BTWjKb
nJkMjrZ1zdQXKmHjs4jMVysZ/LPD0rUgTgkW3hcbWn0YPPww6oNzohLkLZ1D
9/0Y1Djerd6WooRVD302Xw5k0FW3NbjnqBIW1zjO3xfKYO92ufhJkRKmn9Po
N93FoItz4/M/2pQwFH7ab/3vDJrbX/DoEqkgK75IK/kYg/evmMyaMVkFU8RX
budn8/P9goNibVUQUHrbuj2Hwaefwzz756jghrL9U8A5Bm39EpOzl6hg+ybT
k8uuM1hu2GidtVsFb9fmy+ZJGexa7pIeWqeCuB0X0wJkDD7ozqh6ek8FExKv
uUU/Z/BA1pcBN4kK3M/cuVDxmsEnv1gdGW1VQd7rjmi7d/y+5kzt6W9U4B9o
bmz1mUGB30CkuxqFJu9zAXomBJvG+j82dqcQ3thzV4sQrM4PXheOFPSc7GzU
BQRvxq9urPag4CuqGf5iRtD9AKvpsZRCe6/03NvJBBe8dl6qF0ihT6zJVc4l
2JUvn7pnF4Vjo8v9yhwJRqX3Zm6LojA76kRdiTPB71vvVfvHUNgTbJGV705Q
7bh0A9lHQd3GZU7qbwQvqHQU/kcoGEt2JIUEENSS95mfP02h2umm0j+QYGNC
S/6MsxRCrg57rwwmqLO+6uWtAgpnT6RaL1zL37PEff+NixRswgqb7DcTnDZG
cHhdOQW3HzKjn2II5tUWvUu7T6EzSpgwEkvQvyxRXvGAwgHFhp7BPQSNo53S
ZBIKD1v7qrgEguazXb9oNlNYeWbcWtkhgjHajuYWUgphzm7FxScJDuhNdrDu
orCtt3VQnkNwn0/yAuE7CpGFoQuNcgn+VSOK1OmhkKx9sCshn6D9/pdmMhWF
M68eCX0vEQz1c6zU7KdQdHR1eGoJwaSg+pz6AQqXf+2trrtMUPtnJjvyE4Wa
UoNVU8v5PApt2mq/UHi+N/DYtyqClxd8W9H/jUKHPe10qCVoWiro3jZK4X1X
vP3WOr7/up24/QeFT0vONj+9x+cRHjGpWJ0DA0HPmOJHBHPcc8e+0eKAaYv1
kz8m2JqQbs9qc2CeMu68YRtBl7ppW5aN58CemwYJUoLPgiaOO6XLwdLaqL0+
7QQdVkjHSA048Nk5pulIB8HtPRdKWgw5CLLKMal7Q7ClICWk3oiDreKayinv
Ca40cFFmTuJg5/xl6msUBC0Fqfe3GnMQ+1HufVxF8PxHSYmLCQeHQtT6Rj7w
/2m9IL+J4SBjQrabwz983mW3Sg8SDrIbrDO2DBCUO/k2zGM5KLRdZPN0kOBG
UbnJYQEHJZ0vYzWHCGbljPe1EHJwPTtc4jpMMCIl91Ql77vDR8MujRL8N6/A
s8GUA0mZqKJdjUV2ycNr7mYctIRV/DDQYFGxM15UwVtm4uHlOZbFNR25p03N
OWhvlp3Zp8VinFTDaj/v7qQtf1/XZtHla+6Ndt7crCFnhQ6LNdtwxQwRBwOK
9DThBBbNSjsG4nkP5QlfeBuwWFkaUnCX9w+va5OPGLHY13w+aJi3pgZE357E
4u5XRYLpFhzoVT1p6DdhUV/fSxHMe1JEmOEUlsXnRidvJ/IWij6HrhayOOFr
eF4ub6tnh8uOmbGIHs0p13jbpjLfJSIWHd9eia7h7eBaumzEkkV1O93IO7z/
A4MWpGs=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
OuQJ
      "]], LineBox[CompressedData["
1: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
ZtlZN0Dm8cnCnp27axnMr287qr5l/7//CwL9E8E=
      "]], LineBox[CompressedData["
1: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
bIrzcHbN/3//DyFbOWI=
      "]], LineBox[CompressedData["
1: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
F2xyKhDD/wEKwlXY
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1:eJwVlnk8VdsbxmWIBkLOXucgBwmVpCSR7nrrKopQKCWZQkmGTEnRjSjKVKmM
yRQyFIWQJKXIL0NdOoYk55x9unQTEslv3T/2Z3++n3P2Xu+z3ud91lZx8dnr
JiwkJPSQXP/dq0SOGv4alwOLl+W8kCIu/sxfflP1hxyEuQ9P+T3gYsPyVGuf
GTng5nw8YfGUi7kmsa8lRBmw09HKs4rDxS5mTsor5jMgSNaizeUTF/dZ6AVt
lWCAnJJC53yai7tsB1ROL2aAbVZ95eZJLn7mqhvyRY4Bk+m91XbSPJweztFo
W8GA+RlXFx/+k4dtKldfuGrCAKGhsuxLOTz89rEQp3QnA7hBa0qPFPKw2ZN3
Oq1mDPiX27zcoIyHtzWF94paMaDr58DWthoe1uns1A2yY8BunXi1gg4eXvw1
9JPdMQb0vxdSVZ7j4Ub1VqwUywDVEmFLCWs+3hU3sIu6woCAcX/nyv18/HZi
zFYqngGHNorEOR3i4/7nLK/fSQzIeDylk+XGx1MuHjf7UxhgtHMmjBPMx1qZ
wt8yChngnfl1u24qHycjgzvs1wzQRo3so318rBhuXoxaGWAWUepsN8jH2VzH
qiVtRL+lc9q2YT4uexjVNtdOWNtsSnSEj1usu6YHehhw5LOoztZffCyU4GN9
m2bA77HtHcksGntK5ImqLKBgIm6gucySxi3CF6/8uYiCPxLTqlStaaw1e4xy
l6Tgrsxlvyv7aPz12xrNIhkKDvLYm3c70DiA89BMT56CqSR72SBPGp8taUra
uZoC1dVf5nlF0Lj/br6C1xoK2iwj5TyjaAykC3FrKbAIqBh0ukRj4Zu7H3Xq
UuC0LvTupngaR/31rsfBiIIXz8+9TUihcYLNsPLJ3RTcDNbu/lRK428WLwuu
WVKQtM5H1+sBjffuLFhfuYeCyMw6o9EKGjP+OGH8y5aCdoXCfb3VNE7RmPCI
OkzBIxnja06NNM6ZFi1N8SH1NHlmSbyjsdgEV7/Oj+gDh8uKf9PY/Wvz0wF/
Cgz5tPzKHhqv/Hy5Q+0UBTkqYcpafTQueSM3WXKOgo0hT+p6PtO48rbalsZE
sl9ln5s7xmisNmcc2nCVvE+z19N2nNTv4FZdf53U66+c2j5B46PyeXq1tyiw
uoByH03RWP6ahvbDLAqW2rfb6P4m+sdMvMqzKQj8oed4fo7GY1ZHC+/nUiAl
rTLxWkiAWyQL1EsKKHg7vf2ZqYgAn4lexc6/T0Gz8589k+ICzB/e5ZBbTkGy
9U592QUCbGt8PDX7IQW6s4FKGgsFWHvePXS7mgJvmfXRWxYL8MDpNdK3GijA
Bxg1itICbN6z2+JGIwU69Ap7URkBrtL3vny9iYLlakfODxNOGC+RSHpF/p8S
63ZtqQBv89aZF9tOARXZdiqHEuCSVit8qZOC9JWXzO2QACus9jsb/Y7oNR7I
FWMK8Djv/s+IHgqazMr55iwBdtrRoX+eQ4HDj4F2LuHWnLHAc30UcK6LwWl5
Ac511h07M0jBb05h4RUFAZZ9aq0TOkRBowo3T1JRgMOUArxDholfkhM1ogkL
zly7F8wj9UrHa00T3sepEATSFMjMNTx0XybAzwzeaQZ8oeCD75LGVsJrb064
nxyhYFTqsI2WkgBL2G4c8v5G/HQ+S7ibcED5PpUT3ymorzzOVmML8KBMsOPx
CbLf3YP1xwhb+N5IP/aDgoVpY0N3CT9uq+R4/CT7bRMXO0hYfU03y32Ggg3/
5j1aqizASbFT+4/MUrBrZq0bJvybZia7zFEwnaZ04wjh46YGXU7zELBuHTOP
INydd0DWUQRBi+WCC6mEjcVOWzmIIYip+wHFhMtcU+LsxREoh+qcqyKs+Oxx
64EFCIrryrbVEb6ozFlotwhB/r7gizWEJ8JmTPdJIugrj9xTTtilTyHaZgkC
34EP6TmE2zYbNe2VQdAdfvZEPOGYqsCZHUsRPAiusQ8gbKJXum4zA8H8J1OS
1oRFH/A91iIEsH1L5GrCT7VVM5azENw5k/Rklug/W2TfhRQQbLESqXtF2FDz
+sLFyxBMaqaFxxOezGkDITaCsH8851sSLleRCB5XRmA5G7ZHgrBvxtZiviqC
QkPaqYb0Q0shdKhXDUGiUO2Go4TpGxWsdnUEjRqL3kgRzpMbtWzSRFAr9s/K
UtJfl0SNqOpVRL9XoNlOwmwp59piLQSORfXr+og/bop3aSbrIBg5OGc+Rvxl
GynpGLMeQVG31nn///w2z+R62AYEv0xiz4wSP8ZOV8/z2ITgpI99Qzvxq2nw
d317Q/I8U2axIWHRcS1vSyMEycnhimnE72EjmR/0AcHiXez43WQeDD17pLW2
IUixuf0tjczLD66sibIxgme9IfJcBtH78UK5hCmCMnduvZucALt2Hr/cY4mg
LbH5sDyZP2Wr3Gdv9pDnrdV/6pN57W3tn2qwRuCu42pvuYT4/cUet8L9//Xn
wKnjkqS+av0/Qh0RKHYVyB8geSC20S/AxxlBVYXbtLEEmYcHhYWurghem3Cz
V5H82HxvGTL3IP08a2w7JEryIlPkX0UfUh9Px2AhyR+BwhZ1GT8EmXWN3s9J
XuXfDDok5o/g/GNH31OzNFZOoptHgsj6Ud+630zTeOmF/2U9CUPw4WWEqTbJ
vynPVGunONJ/5qnRJj6N409ni4cnIFhh4XNviktj9ZiimvQkot/q43K1YRrb
FtQs5yQjWLsetroN0vgBj/PdNhPB3ole4wSSz15HFK+ZlSHonTw6cqmZxiIB
aqaeD4hf7dQumL4g+R+h9etiBdE3Fz0wR/L/1R2jIy+qEJwS5fTb1ZP1Bg9t
2NqAIE5YXb7iIY0/OqR3bexAUJpasEw6i8bBJ3Iv2nYhUHezWWefQWOps8VG
Ae8R/PTrl81MpfGWtLqc+x8QNEzkbJNJJut96AvQGkLgv2zWMzOGxjb7lRiq
4wg0iiOuu56kcbNVpq0kxYSaHS2+iUbk/H0+/EScyYSMVfZ1egY0ltykpSks
z4TIU4X9nXrkfGNXT08uY4Il9+87s9o05ox0ZH5cwYRFZyZNxVVoPBozX1Cu
x4SlU4FvvouQ86/pRNhBWybsa3m7ZFMTH1dtquDZ7GeCl11FEbOBjw/em7ay
PMCEs0WVBt9r+TjjavRyYwcmuEau0Umu4GNNl6zmNW5M+Dl5I/tqNh8bzXXJ
zgtkQruEZfyJc3zsYmCUn3+NCS6yd5Ry9fj42Mibid5kJujJh+Rv0OFj3yxH
Y9lbTDD2UWmvXcXH4QsiBs+kMyGwPkmyks3HaT2vFPbmMcH9ufZB6wV8/D5k
f8KvSvK+dQcatTg8vOvxyZA9HCZ0T9zY6xPCw3u8RZuj+phQ6+tiT/nzsJ1q
MlU7wASLvVl/PPLiYY+Y6nL1z0wQZxunfXTk4ciDQqMz/zBBw0vqy8B2Hn4y
fcUl7zcT3qTaXo8h34dNJez7HCEW/HXMQvfpAh5udbk/Jy3CggKx9y2jwjzM
ed2VFirOAtfEofGNE1w8laLwt5U0Cz713nP27+HiOYviFVGyLNgv9kzKr4OL
54vggBo5FswZbn3p0cLFcsddZNRZLPBtW+oKdVyswB53tFdgQW9Q5S7VR1ys
2nmhJGEZ+f2p247ZEi5eFY1mm9gsGELmdu35XLxuc4HZjAoLbMRSzmfc5uL/
A1hZLIo=
      "]]}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7000000000000001},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5978631991403437`*^9, 3.597863285490423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", " ", 
     TagBox[
      FormBox[
       RowBox[{"  ", 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Pi", "/", "6"}]}], ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
           RowBox[{"Pi", "/", "3"}]}], "]"}]}]}],
       StandardForm],
      StandardForm,
      Editable->True], ",", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597863673256822*^9, 3.597863683067122*^9}, {
  3.597863716663989*^9, 3.597863719111368*^9}, {3.5978638167477903`*^9, 
  3.597863895791603*^9}, {3.597864002341485*^9, 3.597864039752674*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQzbyf69xj00a7VT4RL6q2/bYPypG8NWPSensYf+Kn
mM3TJu2H862PenE5FV+A8wuq/BI3F9yA83N3pPYxKT+A81OLdS2CDiL4V154
ci5PegLnd+l/Y9gW+QLOL9Q+MfXA0jdw/q/k7HV38z6gmffBfiWUn7Q3LGBC
2ie4fPLHKwcOdHyB83sMtucva/sG5zMd2G7eUvUDzhfXdQn5rfjTfjWUL6jl
fe7+jF9weY/5Tos/TPqDUP/+jFv99n9w/qzjuxiZMxkcUN2H4NvIOv5XSGGE
87UfCDypLWGC89euEMrYWsQM59fci72s3cYC59tfsDi27COCX2hj4T1vCiuc
/2u+S9LrCWxw/oWCWQnli9jhfEt3pX93F3LA+ZJg/3LC+SddLVc4zEHwl26c
afloNRecL6qskxW3khvOv8TI0SS5hwfO/9Tp/8g/iBfO38pRvOzCSQRfR1Qg
K+koH5z/vu+biPE1fjhfub1dPz9LAC38EPxHUbdvOT1H8D2eXv65NU8Qzq8o
Ss0Qe4vg+22b7SVWJgTnX1Y0rq+5KeQAi993f7JqmL8h5Bdeb9ySVyyMCM8M
24TK3wi+7N+J0YVVImjxgeA/c+8+xcEiCucfVjtjL9eN4GdxLGNR5BSD87cv
ULE9PBHBX1Nnx3uRUxzuvnPWNkeDBMXh8j+yZgcn9CH4JwLmh/KKScD5SZY2
y5dPQfC9dhVVBt5G8A2tV3r/VpSE8wHwyP40
      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwV1HtUjAkYBvApSWrarS1R2wXpotynURTPKERWurh0mkmWTWKlyaWjwiKM
W5ehtkIXuqEyqTSZbtqGKW2bjDEpTNLMfJ+x3axUVvvtH+95zu+c95z3PP+8
s3YeCAjTptFobGr+z0n1+m29zJMrtefRo2pnkrAj6tytr4Qi4pCe50PKY4KF
v3TyD2DGeaZQQLnsM14Yl8ZgU01qRw7lPtM9Xx7wTyBWMy/lAuVL5hLDUtFp
2CbQPu2nXODIyaaVngMtdvq4D+UG14FFgTkXofSLLZhF+dXahMZ8fhJapjM+
D9pQ95zoTvGNKfgjYiMponxuiSw6X3QFE/tlp05QNl2eI2qrSMWTl931HpRz
V+3V+VLyO44qo3KHrUksWO+ycVZhBk6G5TnkURb5fUv1ybkGTvGFAF/KL0L5
Djf42Ui825SWZEX1YSxw6xXnQNO2VmBPOcb1SndMYy4sk+WRVZYkdBBilyu6
hTPi9C7xjyRaPBubmcI8+OhoX/CinLLWIbKlIh+awwOvH1qQsPYdfDBcUgjm
+d4jaeYk3vtvZfPuFIG+eWHN2AwSd7eIJiwLb2NqXmJhEGW3kDPr1ubcRbW9
A1drOomAX81fpfPvYR2PK9U1JUF3Q32atwDH4mib3ExIDFRzjXvEAjg8mcrd
9QOJB7WyysONZTBx5hQXGJHwEud8yxKVY8aQgW4PnYS993M/YlkFOvMjG98a
kNBvnnyLIazAcfY0R7k+ifbWvd6SikqMDC0aqNQjESJ1SR4sqUKNh26cnQ4J
1tbwd+7zhHhyvZc3qE1ijjzD5ewdIQ7sXOxZpUWC7Pomtyisxr10f+HCCQIx
vZJZq3NEmL1ml0g6SiBliFOexq+HQO/P8P6PBC5Py/RoMGwAi304l6Eh0FF2
xoYZ0AAr1UhUFEmATXL6rLsa4EjjP3+uJBDJNuAOaR5Bw6qtXPWWwNUVe3gZ
Rk2QLB6PeNhGoLMzcN93W5pQ2xDuyWslYH0EvqczmtAfW1vt20KgsNTMdP9s
MRY63T8nFhN4aCPOZrk8xpabZuXBNQTeas2uUm2TYHxBeI9tEYE5WYaZnOsS
BJuEjsblE9izfDT+mUKChpB9otabBIai2z1FEc3gnX3BCrpBQOf98bbEuBYk
e3zaPZ1PwOlxVx8zuxUtp4JfLo0l4C720fc82I7JRTsiaWsIGEkL/nK90g6f
OJZj8SoC799pp84vb8ewQ12q/0oCiTSRjflwOxiGHxPPuxJ45+7MHIh+hk29
SuPSuQR49w12ZEV3YEvQa6sWOgFZdmvlGFeKGn5IzeY2Ne6WOsYNpEjhzDMv
dGtR47faBJayTArX2St2mT1WY26Xx9Nng1IsjuwOrK9VI96sRFHEfYFJTdWM
J8Vq2F6+bLCNK0Nbj6b73nk1omJ9fy6PkoM3l3tDs1INn0iPIr1kOTbWmLLt
llP7O536Q+7J0bfE1ieIqYZsve4xvb/lqE20fFTsrMYK87r0kH2dmOZkzDCa
oYa+cH77lN2v4Jz1/aLGfhXy/6GDw+5GnsTVpitThePE2Jmy2G64e0lCOakq
BL1Wt+pmduN9j+foyyQV6OKm4DJ5N2T6nh51CSpEX40/orv1NeheTQ7ekSqw
GJoSgd8bPCq1b9rAUsHC4dWnyVFvEHH8X5eDy1UYtpC4s5PewOgRzzTVRYUC
7bzmyW1vMGXmdjuJowqGHey+4A1vwd9eXfnBSIX9wrBEbVsFGDLm87kKJfVf
/GdquSjQt1lrdXSnEgOdHvcnVivw1UnHq6JDiUPjJrKvuxXw7vtpeI5YiaWX
JsLHYxR4KQsrCqxTYsTyw+goT4FDyzjDcVVKCEtkF79kKFBnYS27IVAidmWj
1cgdBUa2Xguovq3EfL2jB9QCBfYMs576FirxH1cG2xc=
      "]], 
     LineBox[CompressedData["
1:eJxl1ns0VekbB/DjUi6jRpFQGqmZNCXlEoq+hkpTiWJSuSTSBamI6ogog6KY
LqTJpVwKo6kUJaTSTVckTXUM0jl7b5yz9znOOUj1e+fv3x977fVZa+/nXet9
n/d5nqlBO9eEqPJ4vDvk+e+d29HFq23uxBaZ89NVF4WoZ5NapYJO+EtMFi75
S4iExF0hnLgTzwLcgmZUCuEy3k8p+dYJW8UeM7UaIdQK3Y6Idbvw9XD1/rcN
QiQ3TqnoteoC/fDRp50vhFj2mzYY1y6M/bFBMa9NCC2h/BXl3YXKZ2bZ/e+F
SNd4PvAppgvbf8mMX00LcXJ5rGNnTRfUrq6pfKomQsGr9qevXbrxVFSun2on
QtCm+/6tXt0wo7c4djuJME16WdK8uRtuO0a9sV0sQolest7L5G5MLn/q88RT
hIq1Nr5Pmrqxbv/n4PPbRaj5kMnUrfmIrvtyQ/2zIrymftW6GNSDTjXFjEG5
CJIc8yWHI3vguuDdtB8+i6C9QiNx46EeHIwpWejMo+Bc0Tg48UIPYueKb+3S
plC+G1RqVw8sZ6x6cXQKhUPDNo9CAz9B/c0V1wtLKFjqmP4+J0CIwMvXDddm
UFhe97VBO0II58XvHetPUtgcIRgRxgnhyoX5mJ6hcPbV2T35uUJI98SHtRRQ
GH16wmZdgRAjaflc/1UKH0y+c5X6itD7+850lVYKRy0VvKr1FFR/Lf12UpcG
f++vs4ShFPjxp54l69PYfufcbwYHKBwbY+ofaUhjmYdrWUweBXbmqUZrUxoa
OzO97D5SSFF5cmyjJY2kyz+X3AynMXqr1sQNK2nsUcS9ouJoxAjazr71oBG8
qHnYMIOGd9SPzR5eNFxe7PXYf5VGv4PnavMNNFTEjYMOChoSxfqkxK004i02
rrh9kMEv/Rs6WxNoRERfi+7NZCC48tlQcJiGf92ogkkXGBwrNZF3JNNwdP9r
ILaRQRkVcepZOo3P4UO5jlq9GNyR6ONxhsa+v06ydSd68dzJwV5aQWPbgNBY
XNiLofy9S36/QsPHccGSKTd6oc5507qVNOY/68yJb+/F+4NfuXE3aQz0Wrhi
ch8+aKjLau7S2D3r8emG4j58tMgyvtRKoyekJ6Ggqg96ivPRNW001hbwwhMe
9WGSXsr5B+00FkxwcHGm+3DLN2f7w/c0VL+Viu/M7ofukcjy3R/Jfjk8/Cff
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
AFsDJ9Y=
      "]], LineBox[CompressedData["
1:eJxllnk8VO8Xx++duba0WCNZK8qS9E2FynmkUEkRISqKyF7KUnyplCiJCpGQ
iOhra0GLSIssWVpIIWVm7pQkpBlm/B5///64r/t6v57zOs8593zOuUdjX6Cd
J4MgiFr8TL9bVdU3HtPjwZr0rd66hSwI8ztWMWLIg8I/R8skS1nwSmzZRdZG
HjwN/a1d9ZgFQQ5xwr02PHB0DXI4U88Cxdyvfl07eXBUu19layMLDpqmbWry
4sGL/8T/fdnJghlHSWZ5HA/CbdMsAkdYUF7nckg3mQfDPb2LJPgs2CV1v/dm
Og9YYYpJ1wg2FBX5PEot4sGVQoFk6Sw2WPd3HI1s5sFV1/1OcYvZcGFbPsdK
mg9U0s8HzF1skNbZ0tKbxocflnftJavZwBLLkn6VzYcbjz7fDqphQ/XAb/vS
Aj6ozP/HsLWeDR456d3RlXzI11HpjnzDhkpFLkejkw8D6qkOl76xYY9YHNND
YQJ+66f35M3iQPG3F0acKxMgrjOW6ubCgRN1ShGtmRMgXWL4TcKNAzuzA2oq
8yZgsNRz7R0PDhCucy3i7k3ArZvyM/v9ObCjw3OHzrsJ0NK1laCiOcCvpQL8
5Cahv1Lt9JJcDlhlrc/9lTwJ9+qcVX9840Dsq9bPJzMmwdQ/MHkJzYEXw3sU
5W9OArMosG/3IAc2bjieYHxvEgo37xapGOPAeroi9OSHSciYed1WTJSGtSs0
reWUBaC3Xji0U5OG464VZ/IXCYAhZheirk1D9WmzWqOlAnBnG9b369Fg3Ll7
1W5TAeT7OZfbGtKwKjJFPd9NACPtvtWd62kweCk2tjpPAA8V+cnxe2gI/HVl
2es7ApAfcpTvc6fhv3mLfFzvC8ClbcJG35OGpX6oN/qlAKICrb/d9aVBRzq8
oYEWQIyRSKRPGA2LXLiZLvpC0M7emRlykYb9MWGdg6uEQHW+1XK8RMONO6Ky
0SCEy+pezgYpNGgQC8/e3C6EopGY+00ZNKjmuRwePCwEHVVLkzv5NCgMNVlE
PRACM6nn4cyHNKQl1bjTNULgJxUb+z2mQdGwPGLHKyE0+5BX62swh6eWL+4S
wnOfQt7eehqUmPtUW/lCIHw2LjdrpiE9z97YhDkFt5YkFnq9oWG+laX9Tckp
CDh/QHimjQblBL34MOUpMNXyWlP6DsejMD6mbjoF38Ie/S7+TMP1KlrqnMUU
3PA8DOm9NKi5ftIds5kCD7U1HtFfaFDPqXVv2DsFuxcMrlg9QMMC3fPNh05M
wYkDGZ9tftCgBRp5dfVTsKvpy09NHg35X2Sf6jVPgfQp2ZPZfHweI9qd8m4K
OtN7BmQnaVjc8F3KlzUFvZIFKgNCGi5ruzyRoAikpLLJfDnFhbfH3jaaihNI
RyV8+2ERLsg1be0KnkmgmoANusWiXLgSgEY/yxHIpmmH1QwJLqRUaOqUaxLI
z8VeIWgWF95TWavZ2gSq/7rtbOhsLszdqbhRWZ9AG6W960PncCH17wy3M6sI
NNn39to+aS50borxf2hCoIraHKOtMlxQzBAc+2VKoIf1x68byHIhbd2vK7ss
CbTu+u6XX+Sw/YWDuYlbCHTx1mBciTy27+svrd9GIDHjDPmQuVy4evJdo74T
gYKtj8YOKnDhY4dN135XAhWNG/tfV+SCkuYrVpobgW5FWs+3mseF9JfVJPMg
gVzdc96cVuLCr77S8CE/Aqk5ceSl5nPBkp8/3B1EoCDyvNxlzKN6l77cDSNQ
6g9fkzhlLmy2iHPOiSDQs5X+7nzMOXuj2hKiCWSCHJCnChdskn1rD5wlUJnF
Ec0lqly4WeRuvOM8ztctQjca80S9YxlcJNDssFl0G2a7nq3aepcJJPpVdo+K
GhcKxs1zFNMI1H4sMn4fZqGUyTyRawS6nmEckIPZQccgaTiLQAmLjCU+Yi42
15LoycXxhAa4zFTnAmO38onXtwi091izhxFmpxAZ3v0iAp29vEVzD+aSRPFD
uSUEOljWey0Ss2ihkJNYQSBDONmYgtm1btQt4gGBNJctLSvEXN7N7fR+SKCY
se6t9zFLjPVtd6ghUF7cuZxHmD2DlxrZ1RLISn0sf5rvL25G+i9xPWM5/tP2
M82eVSo1EuhaYCpr2t/+XVUGYm8INEdj89xUzNXBJQUj7QS6s0BEMB2PVEKe
et97Asn925I+Ha9XfkZa00cCDdbcGZrO50lNklRVD4G+jxdNTOcr1xV7Nq8f
66+y48n09/D9HUkks3A+isuNb2CukzwS9i+XQKP/tfnsx6yo6fPL5yeBHqfV
71DFHGjq5u34m0DoiNJoO67HC8edfeZ/CLRw/8CWE5iVD1k7GfAJJJQwdtHG
HBy/vlVZSCD7izoLGnG91R/rPx0TIRHT2/zDBNZDyPtFRv0SJGpNufY8HnPz
kFJpyywSje8d95XFfGyBWPYteRI5zNf6Io311bpGoHB5HonCSaPSWKzHxQ4j
idEqJHp28OXqcazXt7G9Uc6aJAq1+B70DOtZJ+fd+EZtEjnXNyxQx3yiujHw
n6UkMvlQlRCC9a8/+GCv5EoSmfsGJ0rh/jhrdxEebyDRQI6GJQ/3W4/vmQeF
ViSSPuf4YiHmlacjlqVYk6grfw5hhfuz/4G3WqA9iThB3bmRuH/XqphNqXuQ
aF+WeEWmJBesXN8e3udNorK08CNRM7hgn+HFyvXD/rcEfHDG88F33oVmraMk
Om2z/NRfPD/S5bsz9M6QaOLMg+OfSS7k2wfMCYgnkXpYm10MgfV1iTxVcgHH
b7C+ZeEUDQ3SS3z+SSXRxzlVFdZ4fv2dddTIqIBEBm+9N1j8oYHaKl4cXkwi
i9KUTeWjNEidz1B7WEoimRvBf+aO4Hk3o07UtIpEY0GzN70eomGn6Jx35q9J
FF0l0tvJoeGusODQth/4vphq05QuGp6uWztw8ReJ/MRHeec/0NAU8capfZRE
SySUPSPw/P7KHwMHAYmKviRu3Yjnu8z4+tkusxkowXsgNOoVDUFDn24fMGAg
31HG0yv3aIjQD1ItMGSg0U8v6hUqaDjrz0ymjRgoYM/rU8mlNGR91w73M2Mg
0Qy/FYeLaGhhh1getmOgHJ00/4/ZNOj2SX2LPMJAVZZKf23iabBhq9eFhDHQ
H3AJSozF9/00yA6MYKA0Za/Mhhicz+R2V/cYBtornqmoG4X/7/OS3m64zEDD
amK3bgTTYG0n/VzyLgN9OyD33MOFBr966fyrIwykZK/mbqJFw4VGjZjkcQZy
e/joa/kCGkrbl+87N8FAzASGoaYaDaN9tqqRTCaapGaYjSvg/ARJKW6yTLSy
Y0jTVoKG86tkYhevYCKNp3bsT1wO3CmQ8b53mIlK7pH8XYUciHlXY8YMZaLi
sezm8psccGX4z7c9zkQpoBXFzObADNeXLT9OMVHUVdsTiSkcODAnYuWiK0zU
H5y3xO4UB9RDBhiXHjDReEvbulN4v7psXpkZNMlEw+cN6q6LcsA3yDP0CUGh
KxLfleRJvO9kytjOFKFQQgU7OmaCDcN//KiCWRSKouYft/nFBpvbGr69qhTq
MGbsTOxig7j0OSMbMwoNb9ae9+I2GyJ6dnfonqHQwDqqU9aKDaOW6zI94ymU
ZjDEbzJjg1+ZslfWBQq1vC7MjlrDBpeYbr5MKoVGdqUdb9Nng4mO8wL+LQrV
fhTPWSzPxvo2+rGimEKWm2Vm3pnNBh2Bwn3/UgoRc5eJ64mzQan1/aYvlRQq
bWRVz51gAe+o/aFXDRQ6AYnrsvrwPt27Yg2jhUJd57w8hrtYwLGSFVnbjv01
SOiu62BB5/z2tJKPFHpjrp1V+5wF20+X7aN7KNQce3A7/wnez39e1Fv4lULZ
DbwCvUoWIKegP65sCs2eqLntVMaCytptT1O+U+hGe67jv7dZYKC7LL51iEJ6
jRfKMnP/n/8HRzWlNQ==
      "]], LineBox[CompressedData["
1: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
rp5d8P/+LxsBRFs=
      "]], LineBox[CompressedData["
1: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
rHYWK5/UNDln/H//FwZDuLc=
      "]], LineBox[CompressedData["
1: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
rHO8KoH/A8uEj0Q=
      "]], LineBox[CompressedData["
1:eJwV0Xk0lXkYB3BDWRKheH+vi2uZyiiVNtnmeSaNkrLL0qI0ZdImoZKlVGRp
SB0TZa/QQtIJpUjdRsLJ7Z42l6Lce3/vlKHSiGLe+eM5z/mc85znec75moXs
9t6irKSktI6v//vUyX4u3ZoM/v4JH7uXymAofnTFGi0GG7PHNPWvyCCkS5Ds
O4XBfd4776Zel0G7g6PIW5fBRS+t20dqZZBaGzXqMpXBXPP735c1yGD5okob
B30G06weN6SIZNA4xzzfgmVwr6bdkLJYBtVm6vs+mzKY/nx0tJqTwRk1iWX2
PAbH23vmTRHIYfPT7ekvPRi82WXmULhPDqaeF5ravBhMehjx3i5ODtLW7uF7
PgyqnOxVbk+Uw5qHXlsu+TPoOLktsO+EHFbU2f58MJjB/h3S1CclcphToDJg
tJtBe7sHz/5sl8Nw2FmfjX8waGJ93rlHqICMmBK1hEwGmy4bzJ87XQEzUi/f
zsvi9/sEBkRbKcCv/LZFZzaD4s8hLgMLFXBd3vnJr4BBK5+4hCxXBez4zei0
2zUGK3UfWGTsUcCb9XmSxWIGe1fZpwTXK2DfzgvH/SQM3u9Nq+loVIB23FXH
yGcMJmZ8GXQUKcDp3J3zVa8Y7PjJPGmsTQG5r7oiZ7/l77Wka8x5rQBffxN9
888MCnwGw52UKDR7FvhpGRBsnuj7WN+JQtiDvrtqhGBtXuCGMKSgtWS2pbIh
wRsxax/UOlPwFtaNfDEm6HSYVXVeSaHzg7jgzXSCS1/ZrdTyp9CfqspVLyLY
kyeduX83hcyxVT4VtgT3pnxI3xZBYUHEqfoyO4LfQxtrfaMo7A80zchzIqh0
UryJHKSgbGm/MPlXgucVmjLfJAr6op3xQX4E1aT9JsVnKdQuuSH39Scoim3N
m5tPIejKiKdHIEHNjTUvbhZSyD+VbLFsPf+Pq9Oh6xcoWIYUNVtvIThrguGx
DZUUHMclej9EEcy9VfL2+D0K3RGC2NFogn4VcdKq+xQOyzb1De0nqB+55LhE
ROFhW38NF0vQZIHDF9UWCh7n1NdLjhKM0rA1MRVTCLFzLC09TXBQa7qNRQ+F
bR/ahqTZBA96JSwVvKUQXhS8TC+H4F91wnDNPgoJGkd6YvMIWh96YSxRUDj3
8pHA+yLBYB/batUBCiUn1oYllxGMD2jIbhikcOmXD7X1lwhq/MhkhX+iUFeu
s2ZmJZ9HkWX7rS8Unh3wz/xWQ/DS0m+rB75R6LKm3Ta3CBqXG/ZuG6PwrifG
OrSen782O7VznMIn1/yWjkaCEWHbp5Uqc6Bj2Deh9BHBbKecia/VOGDao32k
jwm2xaZYsxocmCSqF+u2E7Svn7XVbRIH1twsiBUTfBowVf3MZA5W3oo44NVJ
0Ga1eIJYhwOvXROak7oI7ug7X9aqy0GAebZB/WuCrYWJQQ16HISm1lXPeEfQ
Q8denj6Ng10/uymvkxE0N0y+F6rPQfRHqedJBcHij6IyewMOjgYp9Y++J9i7
0TCvmeEgTTvL0eYfPu+Km+VHCAdZTRZpWwcJSpd4Ny1mOSiyWm7ZMURws7DS
4JghB2XdL6JVhwlmZE/yNhVwcC0rTOQwQnB7Ys6Zat53R06EXBwj+G9uoUuT
EQeiCmFVpxKLrOvDq07GHLSGVI3rqLAo2xUjrOItMXB2d5nI4rqunLNGJhx0
tkjOHVRjcb9YxfwQ7974rX9f02DR/mvO9U7e3PxhO5kmi3XbcPVcIQeDspTj
Am2Wz6drMIb3cK7guacOi9XlQYV3eY+7X52epMdif0txwAhvVRWIvD2NxT0v
SwznmHKgVfOkacCAxSlT3GWBvKdtD9GdwbL4TO/07TjeAuHn4LUCFrW/huXm
8DZ/eqwi05hFdG5JvMrbKpn5LhKyaPvmcmQdbxuHcrdRMxaVZ08Ov8P7PwLV
pIg=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
KeQ1
      "]], LineBox[CompressedData["
1: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
ZtlZN0Dm8cnCnp27axnMr287qr5l/7//CwL9E8E=
      "]], LineBox[CompressedData["
1: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
0dPZNff//T9TwjmT
      "]], LineBox[CompressedData["
1:eJxl1nlcTO0XAPDKUjNz78wV7RF6I0q0SELnlDZtU1my9hJCtGhRtCAqhSEl
xhbayxJKKlLeQhIlS+WlDGbmXiRRlNLvvn///rif+/n+cZfzPOec50zyC/be
qKSgoFDJXv/dd8TFbZZM4eDNXYuvns6XQkj7lO8N0znofunH9d4rUgiwfBpb
asLB/KyWRS6lUthwLFIl04yDRU+2hYorpeDbpZd2wJKDFbIFRu9rpLA4NyR/
lQ0H9T0SnPyfSMFDScvcwY6DvalDeZnPpeDsW3PHxJGDEdeuHWtpl8J8ddUW
RQ8Ochs6FIxkUjBIvDGUt4aD57N1NU4OS6HeYW4+nuFgc/LqV61rZBD1IM5k
93kOvtAqE3I2yMBwUW3JnWwOTn1VaGYeIINEN2GN9WUO7oZg07AdMrBfvLHd
ooqDvgfdJVkiGVSvTSWmdXJQaTAl4/4dGZRF0yFj/uLibOP7z0dpyMF/yOSn
0JCL7hKFzWt15aC+OzxWZMzFNtce05JJcgiPH07mzebipFu/1zsZy8EsWS1r
lCMXo9IMNHRt5XAlw/ZF/yYuRr8aFR67RQ4518RzJUVcRIVyG/VSOQT8XjW9
9SoXNZaJwblcDrMcJug8ucHFQ8s1TMPvyOF268XB8kouHnj68l15nRxahovu
pjZwkXdfz3fwhRwUPaocbD9xMbAh88PqXjmsYSRe56fz0Fs0TpQwk4bJFjl2
GSY8jGG21X43o0Eeu8n8kBlrz6ONqyxpCB/zeVyUNQ+daiRLtBbQcNCq95XQ
hYechyUTXVxoKE9U9h3ewkPfSUP9e9fToKZvHOBbwMOW5MMBDqk0HD12cFnB
ZR6aJn7VNkingav0ye7HNR5+rusLHMqgQeFdgU5KBQ/N1hX/OnGGhs/npjaW
NvBwWMc/JTyPhlpt/VlkFw+L1yf0PKqkAVLidZf38DBU53iwRRUNFf3vVLL6
eMjrnrEvo5qG4tbz76yGeWgcbrPVvo6GMxkT0jZQBH6cYGTs9ISNR1W7r9KM
wNyMWxLZWxq+7t0pGT2HwKfBxbvaO2kI+Nb6xGsegUf2z8msk9CwtulEnmwh
gcff3T2YIKXBTaS2YuxSAoP1698XfaHhwVC4g+8KAq8fmdfs95UGu8DnpgVr
CGwh+E6q32iwckvjgj+BPZEf6lf+oEGfO+Z2QCSBv62d9Y4N0HBuZ0h+aTSB
N13P2pGDNGjST9MV9hDo+voSs2eIBv5DUWDGAQLXZHg98FJgYCCB0LsnJrB+
VEKeeBQDEb1beeQ5Agv2hX5sHc1A94aGnz4XCXR69CebUmFAujCl6UshgY1N
orwtXAaeKarEa90m8NOuhddq+Ax0XRb7elYTyF+4wblawABnpdG8pFoCO3NV
s8soBvC6x48fjwl8UKycf1SVgdW+nU1GzQTOGtsgDB3LQCQ39LLfCwLVU9Qq
3cYxcMXvuH/TGwI97IWvP6kx8Ig/daGyhMD4JQ1HitUZ+FhxS89GSqDmWPno
IA0GdMf+21rUReAiD/P5LZoMWN0NLJX0ELis8E//Li0GlmwdTtX6SWB1WPZO
HW0GDv4z2TVpmH1+2tM7jjoM5AaXTK0aQWKFimJ8M+t7Oo4je5VJhAWblJfq
MvD2watOI4JEC6c37s2sB8K23PGjSPxUgEsdxzOgPvG3WDyOxLhPIeNLWJs+
PrSjSZPEjnRhrvYEBjb/VTzTZhKJul75/c2s9zfZEhEGJNrv//rPZD0GMmNa
5EXTSHz3926PbawrDDfWSWaQuDN6ofgK65fP+y5omZF4bPu0bJp1z54DcZ6W
JJZ0TAweP5EBcob2qiRrEoP9dQYWsTZsK5pTZUOiXwHhEMzaPmHBuF47EucI
GeFh1mtNn3YbOZF4RfGSdjbr6DdrG/1cSRQHuubcYJ2R3FMgFpLYaVf7tZL1
9dn7E5sWk5hgMW7gNusn79TWKy8n8cIv69qbrOnDeWCzmsSNztYeBaxHWs/V
jVhLolan2sl01hOlj34VbSBx/O6WC1Gs5x9b/UKymcSPsl1bl7L2sem6phVI
4kCHWu901qHMbpHndhJ7Zhbb9LPxijLGbE2KIDEsy8e5mnWhXZZT1U4SjTi6
qntY13VZ/NUbS2KDmeCMFevOU/cVjONJVOm1l9Lseg86Ln/jl0iiaGpLdxpr
ze90uTiFxKHs5kpL1uaZ0RlNIhI/uKx0esbun4crGaacxuZD/4E0f9YBP88J
bU6Q2Jweff47u/+JWbOMI06TuETJO2gn6wvCeyqXMkmcb2Qy9JPNn9a8jzVa
+ez6rU327WDz7cfiyHOel0ic677M1Jm1QIETnVRMonZJbV0Bm5+Oy40tem+R
mNI4x8KHzd9SlbDcpnoSm+7WGq9i818as/dLVSOJyrZRa06y9aH57YjF5WYS
l8W52T1l6yem7dK95DYS30i1p01n68u+UPrWjibx6Nk/Ielsfe6Y0Gtg+oXE
6cmrnTNJBvKPjQjU+0biM4OUF1kEA7zoib9//yKx+6Gz6qn/6tt1pUapCh9t
NXx057H9YGT1Zt8sgo/nXYwKxrL9wtIiMieV4mO8d8eXjyMYOKWbbh6kycfs
Wt75SEUG1n1pFE415OPHFY1XhWw/6hbZHhA78XGSSU7ts272vBjh+TTJlY9O
GZ9/OLL9bkmkr/oOIR/lej6SErYf3vo7Otvbh4+j1+n0xTI07J5VWs3bxEfz
W2uIuvdsP3tm2B+byMeYmlzPqS9oQMc5uC2Fj/p6XfvmtNAQWuGQtFLEx4z2
CdG2zTS8vOinNieDj6UVk8vsGmk4G3bGtDuHjysOLQkbqKXBWI0K8KvjY4eZ
dxDcoGHs1cpLOfXs9wYbD5UX0zDgvOmrvJGPDwNGrTW+QsPDmKrw4Jd8nKd+
ZOpgPg0bPmzbHSPjo8XZVqH9Ofb9N+rTMzgClGhtuB6ZRMN+94hXbaQAjb6S
UbH7adgmm6g9XlWACw4rDUfvpcFaJyozS1uAUapWS9ZHs/8bP6Ww2EiAP99Y
W7wOYuP13nf3kbsAg5SOpocsoaH3k4kS31uAr10etyl50fBvQru91zIBTuR+
6zrsTkNhuemjV74C3P5dckjkSIPjpM7nH4IF6Hl//Y25VjTEdc9n/qQKsC1m
XaqVNnt+ifrGmb8UoFmT0qzOVjl87p5wb0a7AFecu7iw9bkcGG+nYMO3AtTP
SzJ71CSHD+on68dLBXjUekru6YdyaD83N06lT4D2hsaKvWVy8POp+t7FpTBK
xAmOPy4H902Ka2qnUzjZoLhK4CYHt5PHb9QYU9gU077IwUkOLvXTuHdNKMx9
4dkSbicHZyPvsnIzCoWl0o81VnKw+3pxzFVrCjsCg4zGGcjBKtL+vtiFQhfl
fS6nBmWgn5Q0MziAwtXhFRWz82QQ+tIizm8bhbzROwLrL7Dzl4Hk8dIgChPW
Pdnrc0YGvrXzA+aHUngvYv9zv1QZnFLsyebsonBktdjRMloGqjGrtbOTKXTX
XJ/Y7C6DdQ2cLScOUhgZYvKN5yyDYu2yspTDFH4r/fwM7WTgUT5m6fZUCk1b
6xROWcogpe/+ERsxhf/ceGLM1ZOB0nbTUW35FN4Oy1d83yUFr+q3ix8XUhi7
pWFfnVwK5wWHLt69RKFk8YG0ixIp2LAzcG4xhYVL89a5vZTC4aE0kfg6heae
vyZrNUnhXzfbN4dKKBwYWRPZWS+FXZ9O7wq7RWHc8Zx3vnfY+dV6Ub1/BYUR
ORX9amVS0Ezp01h5m0L/V3OLHhRLYVNblr97FYU/fl/8GVYohZuGXqVYTaG2
cWSndvb/+38K71qg
      "]], LineBox[CompressedData["
1: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
a7PvFkqhdf7EI+k99Pl92OhSIIX/A7iZQTE=
      "]], LineBox[CompressedData["
1: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
120uMJ9RZYGNWMq5jNtc/H8UHDSA
      "]]}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7000000000000001},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5978640132649107`*^9, 3.597864040819208*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      TagBox[
       FormBox[
        RowBox[{" ", 
         RowBox[{"{", " ", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
             RowBox[{"Pi", "/", "3"}]}], "]"}]}]}]}],
        StandardForm],
       StandardForm,
       Editable->True], ",", 
      TagBox[
       FormBox[
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Pi", "/", "6"}]}], ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
           RowBox[{"Pi", "/", "3"}]}], "]"}]}],
        StandardForm],
       StandardForm,
       Editable->True]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597863496872953*^9, 3.597863568311686*^9}, {
  3.597863622429501*^9, 3.59786362302238*^9}, {3.597863728926734*^9, 
  3.597863792285536*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "1"}], "]"}], ",", 
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "2"}], "]"}], ",", 
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "3"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5978629118407917`*^9, 3.597863008018065*^9}, {
  3.597863076101473*^9, 3.597863134346489*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.597862980623207*^9, 3.597863009869273*^9}, {
  3.5978630770496063`*^9, 3.597863114108869*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "[", 
   RowBox[{"src_", ",", "srcRange_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"IntegerPart", "[", 
    RowBox[{"src", "*", "srcRange"}], "]"}], "/", "srcRange"}]}]], "Input",
 CellChangeTimes->{{3.5973578771120205`*^9, 3.5973579777017736`*^9}, 
   3.597790954184369*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], ".", 
        "RGBCube"}], "]"}], "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"tRange", ",", "1", ",", "765", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.597782502459159*^9, 3.597782510946663*^9}, {
   3.597787395626924*^9, 3.5977874075438423`*^9}, {3.597787492184195*^9, 
   3.5977875441939087`*^9}, 3.597792000205372*^9, {3.597792081409504*^9, 
   3.597792095375978*^9}, {3.59779279928274*^9, 3.597792817576613*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tRange$$ = 
    311, $CellContext`\[Theta]$$ = -0.1537, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {
      Hold[$CellContext`tRange$$], 1, 765, 1}}, Typeset`size$$ = {
    809., {82.125, 13.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$30592$$ = 
    0, $CellContext`tRange$30593$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`tRange$$ = 
        1, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$30592$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$30593$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[
         N[
          Dot[
           $CellContext`d[
            $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube]]], 
        MatrixForm[
         N[
          Dot[
           $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`RGBCube]]]}, 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {$CellContext`tRange$$, 1, 765, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{854., {104., 109.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.597787514417426*^9, 3.597787545489477*^9, 
  3.5977920021183558`*^9, 3.597792097271496*^9, 3.597792818563271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", " ", "255"}]], "Input",
 CellChangeTimes->{{3.59779184024319*^9, 3.597791843327667*^9}}],

Cell[BoxData["765"], "Output",
 CellChangeTimes->{3.597791844337289*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cube", "=", 
     RowBox[{"d", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{
           RowBox[{"nYAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], 
         ".", "RGBCube"}], "-", " ", 
        RowBox[{
         RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}]}], ",", 
       "dstRange"}], "]"}]}], ";", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"cube", "  ", "dstRange"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Max", "[", "cube", "]"}], " ", "dstRange"}], ",", 
      RowBox[{
       RowBox[{"Min", "[", "cube", "]"}], " ", "dstRange"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tRange", ",", "255"}], "}"}], ",", "1", ",", "1024", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dstRange", ",", "255"}], "}"}], ",", "1", ",", "255", ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5977880864722567`*^9, 3.5977881928886127`*^9}, {
  3.5977882668744717`*^9, 3.597788269762632*^9}, {3.597788333721455*^9, 
  3.597788336819146*^9}, {3.597788440500194*^9, 3.5977885113153887`*^9}, {
  3.59778854137212*^9, 3.5977885513234053`*^9}, {3.597788600498378*^9, 
  3.597788609747533*^9}, {3.597788657874672*^9, 3.597788671052372*^9}, {
  3.597788784830915*^9, 3.597788794780958*^9}, {3.5977914012803*^9, 
  3.5977914046241207`*^9}, {3.597791557163344*^9, 3.597791579185073*^9}, {
  3.597791684645949*^9, 3.597791685233151*^9}, {3.5977917189600277`*^9, 
  3.597791719079159*^9}, {3.5977918491867933`*^9, 3.597791849780739*^9}, {
  3.597792663498433*^9, 3.597792669774373*^9}, {3.597792900684722*^9, 
  3.597792905052825*^9}, {3.597793271678891*^9, 3.597793277166144*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
    857, $CellContext`\[Theta]$$ = -3.141592653589793, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {{
       Hold[$CellContext`tRange$$], 255}, 1, 1024, 1}, {{
       Hold[$CellContext`dstRange$$], 255}, 1, 255, 1}}, Typeset`size$$ = {
    829.50634765625, {2893.4375, 12.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$31018$$ = 0, $CellContext`tRange$31019$$ = 
    0, $CellContext`dstRange$31020$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
        255, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$31018$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$31019$$, 0], 
        Hold[$CellContext`dstRange$$, $CellContext`dstRange$31020$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cube = $CellContext`d[Dot[
            $CellContext`d[
             $CellContext`nYAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube] - Dot[
           $CellContext`nYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube], \
$CellContext`dstRange$$]; {
         MatrixForm[$CellContext`cube $CellContext`dstRange$$], 
         Max[$CellContext`cube] $CellContext`dstRange$$, 
         Min[$CellContext`cube] $CellContext`dstRange$$}), 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {{$CellContext`tRange$$, 255}, 1, 1024, 
         1}, {{$CellContext`dstRange$$, 255}, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{875., {1523., 1528.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.597788109632285*^9, 3.5977881236815777`*^9}, 
   3.597788194895542*^9, 3.597788337559786*^9, 3.597788461294986*^9, {
   3.5977884997007847`*^9, 3.597788513578912*^9}, 3.597788552905973*^9, 
   3.597788613412838*^9, 3.597788672242565*^9, 3.597788800533147*^9, 
   3.597790960066607*^9, 3.5977914091120987`*^9, {3.597791560529758*^9, 
   3.597791580490794*^9}, 3.597791687444585*^9, 3.597791720277866*^9, 
   3.597791798715774*^9, 3.5977918506043797`*^9, 3.5977926715251713`*^9, 
   3.597792906329767*^9, 3.5977932783511257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"-", "0.333"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.597789130932472*^9, 3.597789157239986*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["2", "5"]}]], "Output",
 CellChangeTimes->{3.597789157803268*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", 
  RowBox[{"-", "3.33"}], "]"}]], "Input",
 CellChangeTimes->{{3.59778918946749*^9, 3.597789208785906*^9}}],

Cell[BoxData[
 RowBox[{"-", "4"}]], "Output",
 CellChangeTimes->{3.59778920975275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597880130903573*^9, 3.5978801450394897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      FractionBox["2", "3"]]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["6"]]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["2"]]}], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5978801456434927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597880152014372*^9, 3.597880196871119*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00Y7WeMJrssrH9kH5UjemjFpvT2MP/FT
zOZpk/bD+dZHvbicii/A+QVVfombC27A+bk7UvuYlB/A+VdeeHIuT3oC53fp
f2PYFvkCzi/UPjH1wNI3cP6v5Ox1d/M+wPlJe8MCJqR9gvOTP145cKDjC5zf
Y7A9f1nbNzif6cB285aqH3C+oJb3ufszfsH5HvOdFn+Y9AfOF39/xq1++z84
f9bxXYzMmQwOML6NrON/hRRGOF/7gcCT2hImOH/tCqGMrUXMcH7NvdjL2m0s
cH6hjYX3vCmscP6v+S5JryewwfkXCmYllC9ih/Mt3ZX+3V3IAeefdLVc4TCH
E85funGm5aPVXHC+qLJOVtxKbjj/EiNHk+QeHjh/K0fxsgsneeF8HVGBrKSj
fHD++75vIsbX+OF85fZ2/fwsATj/UdTtW07PEXyPp5d/bs0ThPMrilIzxN4i
+H7bZnuJlQnB+e/+ZNUwf0PwF15v3JJXLIwIjwzbhMrfCL7s34nRhVUicP4z
9+5THCyicP5htTP2ct0IfhbHMhZFTjE4f/sCFdvDExH8c9Y2R4MExeH8H1mz
gxP6EPwTAfNDecUk4PwkS5vly6cg+F67iioDbyP4htYrvX8rSsL5AHp9aIE=

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k4VN8bAHBr1pi5g1BIexEpJYX3pFJRylJUtqgsqSTJliJJmygpsmdr
UVlKWTpRCm2KrFnCLHe+yG5mbL/7+2uezzPzzD3nXc57rqbraetjIkJCQi+E
hYT+/ymKpb/3rA8zsaqLLK1RDXm3lHy3Wf2uMySKXon+/fkgFrzUPdpy5zSc
ndu2PvGzJ2YqePBe37kIpZMN0Wc+B+JWs4jKrDu34Ydm6z69z9fwb+c7y5Pv
pEJp0NXrRz4lYGtvldYHd17AEFdLZ/OHxzh22KEw/g4GjV1rbF++fos3V5lL
m56tg73f7d2DY2uxT5DlkUKfZnhjFd+8N7Aen3xzLFpkcRdsrO+7lAItuIGz
SyrHtRek/iYlrFPsxNd1x4VeH+TAk5/lcmli3fiMVvW991l9YNst/fC+Wy/u
PdZ7Ke11H/jqvfRb692LD6QJeV/63AeN0wFpn/168SZFQ1NE9oH/M25v15Ve
LDL7eABr98PPkx0d33N68Z1fN3bgwn4oLamIiuf24oLAvfzyigFwvfI2/uMJ
Jha4nXjefmoQiuM15BY6sLALfSSgzH8QWn3/+XxwZeGqd0FbH4YOQnL6Es8j
niwco3K92T56EIK+2jNu+bPw8h+5Ig15g2BZfnzRoxgWtt3EOlDbNwhbHjl/
qf7Aws9pR2Zfew1B2v6nMf+WsrHCO07NPd8hWLMvJ7Vbi40DT/jE+QUNQUGX
E6NOj423fbq4cu116vfB2xcnGrNxW3CKTd7jIRjHauVcWzaWZLflPOIMQbVC
e0pIOBu7lh/YF3N8GGZOPY892MLGa18rEyqnh+HO+TXuEp1sLPKitT79/DAs
lVH2fd7LxhlpTnaFUcNwU+SpJucfG3dfPu7U+GQYVHutS6XmcLCrub/3gn/D
cLc8JUhMj3LTvajc8yNQlLA19VsYB6+tszPXuzQCLb+iVqZGcrBIjYpsSdQI
WDtceet5g4MzSpJvf0kYgZwra5lkHAd3J2fFD5SOgH70i+3xOdT/HX2VqS80
CjMeVmIpXzjYbajh/fuoUeBd03/iIkdil6AYuzcxo8BMd3k5lyCxg+jugRcP
RuFy4JqLRYokPqD4YX5q7ijc/qZ29t8CEu80zPe/UD0KkZs2PFTVIrFO2C3t
TZJjgHSfrNxuRuJV0rs+6NHG4MH8b/uid5F4+V2xQyuVx2CovG7tz90kXpgV
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
Tog=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
5Nw4wgRF7q2Ned8kEavf/fH2E0wIbntec61NEkloKxfnejNh21NGlxkpiehz
+zo1opjw3fKgQrGIFIoze6urWsQETqxpdOoOKbTZLvt9qRALlgnYfomylEL7
Fau2V4uzYK+/s7yfjRSa/1A8VUOwoOxIUJa9gxQSTPAYLlFmQZhOcbW4mxTi
pPhMOa5jgdR39T8hkVKorHNbzJW9LFgrR7i7vpdCdYNPq3zus0Dm5evn2XVS
aJocYik/YMHMTrdR1mcpVNsnJPcmmwUfg6vOezVLodDb184Ov2DB8QGPsGCm
FBrZf3p2spoFaUV1CUmi0shQ1dGzgtIxV6wutLRJSiNvg5LFY0wWeDCXKqvQ
pRFb/FvZimEWGC4KyHikLI1O3Q4qPjfOguaIVU/zNaWRQ+OnjHJBEqTsL+N6
K2l0JV9Xn7echImhdQuk7KWRxPZevfLVJHRcbd9mt18adcF6mYuaJDwtX1/f
4iyNtjlecOzXJcFcrefHgJc0ktoDfK6mJIRyjNn/bkuj0M9Er5ATCaOxk7Ib
mqVRwNfQjaxYSjdxVGu02qXRmBpnNvk2CWz7HV7qXdKoWnjcyzSBhAH5lDoV
hjSyr6IfCk8loT3dIFRkUhplfU3TLH5EgqtD1diIGIHiizI0hktIOBptbzEs
QaDYB5lem8tJcClnZJJSBBr4ftIh8DUJToukrQfoBHr2QkhyFJPg2H0kt02Z
QBa25vwxH0mwcuN3qtUg0Jx9RMqdVhJ2pyQWvV1LIPNy0Xr/dhIs6taI4XUE
mlJdnLSvg4Sdmval5boEMssRm/vbTYLZ6EPaS0MCpYVd4fEzSTBdqnfquTGB
Nj1pHCpkkYDsPlU92UKgX0GqwU5sEkyKxs5kmREoJVbDJeM3Cfr+2z6kWhAo
5/hnjeYxEvRyWxcn7ybQ6jL6tz0TJGxu8/BNsCaQbqeJ+CdKZ24wSlx6y55A
jR1NBjl/SFg3Pxh45SCBhEOM/KTnSVirE/gt/DCBFoj2FhzgY4PmUSn1MGcC
2UFhaBo/G9Tfbf550ZVA9t9S6mmCbFgeFaXt5U6giGqF5XkibDjXvDHU1YOy
t93uXJUoG6pX9jXs86Tu/+hVXJ0YG5xrjd2NzxFo35E5g88SbLjLz8sSDaTu
s2tG7zrBBtI2Y2wuiECPv/T9OU1jg37mbjNOCHW+w7JrW+lsaN7yuLs5nEBO
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
8qX+/3/b/wCfer3d
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
Olw=
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.8164964964434397, 0.8164965809277194}}, {{
     0, 6.283185307179586}, {-0.8164964964434397, 0.8164965809277194}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.597880198244688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}], "-", 
   FractionBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    SqrtBox["2"]]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597880240168996*^9, 3.597880289564253*^9}, {
  3.5978803209731493`*^9, 3.5978803258440104`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["6"]}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"3", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.597880248800294*^9, 3.597880290470766*^9}, 
   3.597880326404903*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597880248800294*^9, 3.597880290470766*^9}, 
   3.597880326406925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597880448752018*^9, 3.597880476230926*^9}, {
  3.597880581112226*^9, 3.597880583903514*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597880454991905*^9, 3.597880479743347*^9}, 
   3.597880584484406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Reduce", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], "==", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", ",", "\[Theta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597880536807497*^9, 3.597880554640568*^9}, {
  3.5978806011974783`*^9, 3.59788061978401*^9}, {3.597880650733955*^9, 
  3.597880699063414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["3"]}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["3"]}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}]}]], "Output",\

 CellChangeTimes->{{3.597880544462129*^9, 3.597880555306375*^9}, {
  3.59788060425844*^9, 3.597880620325838*^9}, {3.597880653308145*^9, 
  3.59788070011345*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.597880544462129*^9, 3.597880555306375*^9}, {
  3.59788060425844*^9, 3.597880620325838*^9}, {3.597880653308145*^9, 
  3.5978807001443996`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], "==", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597880752836281*^9, 3.597880825656514*^9}, {
  3.5978808743002787`*^9, 3.597880902510867*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = -1.8472564803107985`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}}, Typeset`size$$ = {
    31., {1., 8.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$111920$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = -0.1537}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$111920$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> {{
         1/3^Rational[1, 2], 1/3^Rational[1, 2], 1/3^
          Rational[1, 2]}, {(-(2/3)^Rational[1, 2]) 
          Sin[$CellContext`\[Theta]$$ + Pi/6], (2/3)^Rational[1, 2] 
          Cos[$CellContext`\[Theta]$$], (2/3)^Rational[1, 2] 
          Sin[$CellContext`\[Theta]$$ - Pi/6]}, {(-(2/3)^Rational[1, 2]) 
          Cos[$CellContext`\[Theta]$$ + Pi/6], (-(2/3)^Rational[1, 2]) 
          Sin[$CellContext`\[Theta]$$], (2/3)^Rational[1, 2] 
          Cos[$CellContext`\[Theta]$$ - Pi/
            6]}} == $CellContext`YAB[$CellContext`\[Theta]$$], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{246., {49., 54.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5978807621773376`*^9, 3.597880790659925*^9}, 
   3.5978808426584177`*^9, 3.597880921690187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1", "1"},
        {
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]},
        {
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.597881526575115*^9, 3.597881624565824*^9}, {
  3.5978816882212877`*^9, 3.597881698107583*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1"},
     {
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", "\[Theta]"}], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "4"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], 
         RowBox[{"4", " ", 
          SqrtBox["3"]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "48"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
         Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2], 
         Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2], 
         Rational[-1, 48]}, 0, 5, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "24"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {1, 0, 
         Rational[-1, 2], 0, 
         Rational[1, 24]}, 0, 5, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", "\[Theta]"}], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], 
         RowBox[{"4", " ", 
          SqrtBox["3"]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "48"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2], 
         Rational[1, 4], Rational[-1, 4] 3^Rational[-1, 2], 
         Rational[-1, 48]}, 0, 5, 1],
       Editable->False]},
     {
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SqrtBox["3"], "2"]}], "+", 
        FractionBox["\[Theta]", "2"], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", 
          SuperscriptBox["\[Theta]", "2"]}], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "12"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], 
         RowBox[{"16", " ", 
          SqrtBox["3"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {Rational[-1, 2] 3^Rational[1, 2], 
         Rational[1, 2], Rational[1, 4] 3^Rational[1, 2], 
         Rational[-1, 12], Rational[-1, 16] 3^Rational[-1, 2]}, 0, 5, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", "\[Theta]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "6"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 1, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {-1, 0, 
         Rational[1, 6]}, 1, 5, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        FractionBox[
         SqrtBox["3"], "2"], "+", 
        FractionBox["\[Theta]", "2"], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", 
          SuperscriptBox["\[Theta]", "2"]}], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "12"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], 
         RowBox[{"16", " ", 
          SqrtBox["3"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "5"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 5, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
        Rational[1, 2] 3^Rational[1, 2], 
         Rational[1, 2], Rational[-1, 4] 3^Rational[1, 2], 
         Rational[-1, 12], Rational[1, 16] 3^Rational[-1, 2]}, 0, 5, 1],
       Editable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597881625306417*^9, 3.597881698548362*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rYAB", "[", "\[Theta]_", "]"}], ":=", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1"},
     {
      RowBox[{"-", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", "6"]}], "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", "6"]}], "]"}]}]},
     {
      RowBox[{"-", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", "6"]}], "]"}]}], 
      RowBox[{"-", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", "6"]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.597881788231358*^9, 3.5978818024399767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cube", "=", 
      RowBox[{"d", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{
            RowBox[{"rYAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], 
          ".", "RGBCube"}], "-", " ", 
         RowBox[{
          RowBox[{"rYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}]}], ",", 
        "dstRange"}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MatrixForm", "[", 
        RowBox[{"cube", "  ", "dstRange"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Max", "[", "cube", "]"}], " ", "dstRange"}], ",", 
       RowBox[{
        RowBox[{"Min", "[", "cube", "]"}], " ", "dstRange"}]}], "}"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"-", "0.1537"}]}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tRange", ",", "255"}], "}"}], ",", "1", ",", "1024", ",", 
      "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dstRange", ",", "255"}], "}"}], ",", "1", ",", "255", ",", 
      "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597881778112784*^9, 3.597881810878399*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
    64, $CellContext`\[Theta]$$ = 3.141592653589793, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {{
       Hold[$CellContext`tRange$$], 255}, 1, 1024, 1}, {{
       Hold[$CellContext`dstRange$$], 255}, 1, 255, 1}}, Typeset`size$$ = {
    779.30126953125, {88.19921875, 9.80078125}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$112569$$ = 0, $CellContext`tRange$112570$$ = 
    0, $CellContext`dstRange$112571$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
        255, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$112569$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$112570$$, 0], 
        Hold[$CellContext`dstRange$$, $CellContext`dstRange$112571$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cube = $CellContext`d[Dot[
            $CellContext`d[
             $CellContext`rYAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube] - Dot[
           $CellContext`rYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube], \
$CellContext`dstRange$$]; {
         MatrixForm[$CellContext`cube $CellContext`dstRange$$], 
         Max[$CellContext`cube] $CellContext`dstRange$$, 
         Min[$CellContext`cube] $CellContext`dstRange$$}), 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {{$CellContext`tRange$$, 255}, 1, 1024, 
         1}, {{$CellContext`dstRange$$, 255}, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{825., {119., 124.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5978818131102047`*^9}]
}, Open  ]],

Cell["Where does this error ocure", "Text",
 CellChangeTimes->{{3.597887946096026*^9, 3.5978879575297737`*^9}, {
  3.597889344895341*^9, 3.597889359585155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABsign", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "#1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "#2"}], "}"}]}], "}"}], ",", "0"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.59788962323405*^9, 3.59788967293137*^9}, {
  3.597889703823958*^9, 3.597889716645357*^9}, {3.597890378363041*^9, 
  3.59789038046367*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "2"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{
              FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{
              FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{"-", "1"}], 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597889674345372*^9, 3.597889717625826*^9, 
  3.597890381100012*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597889853158505*^9, 3.597889857540435*^9}, {
  3.597890120922997*^9, 3.597890124098057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5978901339394817`*^9, 3.597890212670632*^9}, {
  3.597890288132381*^9, 3.597890290769993*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597890177673686*^9, 3.5978902132417183`*^9, 
  3.597890292227797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.597891050772461*^9, 3.597891122188867*^9}, {
  3.5978912618360443`*^9, 3.597891316005412*^9}, {3.597891353051839*^9, 
  3.597891370734918*^9}, {3.597891465216514*^9, 3.5978914811457977`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"0", "0", "0"},
            {"0", "0", "0"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {
             RowBox[{"-", "1"}], "1", "1"},
            {
             RowBox[{"-", "1"}], "1", "1"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"0", "0", "0"},
            {"0", "0", "0"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"1", 
             RowBox[{"-", "1"}], "1"},
            {"1", 
             RowBox[{"-", "1"}], "1"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"1", "1", 
             RowBox[{"-", "1"}]},
            {"1", "1", 
             RowBox[{"-", "1"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597891372013459*^9, 3.597891482359988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Piecewise", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"G", "+", "B"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
         FractionBox["\[Pi]", "2"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "+", "G"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "+", "B"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
         FractionBox["\[Pi]", "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         RowBox[{"2", " ", "\[Pi]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]"}], "<", "\[Theta]", "<", "0"}]}], "}"}]}], 
    "}"}], ",", "Null"}], "]"}]], "Input",
 CellChangeTimes->{{3.597926924783389*^9, 3.597926965351029*^9}, {
  3.5979270052058887`*^9, 3.597927023352458*^9}, {3.597927076112207*^9, 
  3.597927375278658*^9}, {3.597928972466358*^9, 3.597928988156109*^9}, {
  3.597929046867424*^9, 3.5979290885372753`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{"B", "+", "G"}], "<", "1"}], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
       {
        RowBox[{
         RowBox[{"G", "+", "R"}], "<", "1"}], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        RowBox[{
         RowBox[{"B", "+", "R"}], "<", "1"}], 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {"Null", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.5979272167747107`*^9, 3.597927249334537*^9}, {
   3.597927349746253*^9, 3.5979273757327213`*^9}, 3.597929096349326*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "6"}], ",", 
    RowBox[{"\[Pi]", "/", "2"}], " ", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"7", " ", "\[Pi]"}], ")"}], "/", "6"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Pi]"}], ")"}], "/", "2"}]}], "}"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5", "\[Pi]"}], ")"}], "/", "6"}], " ", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "\[Pi]"}], ")"}], "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"11", "\[Pi]"}], ")"}], "/", "6"}]}], "}"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "6"}], ",", 
    RowBox[{"\[Pi]", "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"7", " ", "\[Pi]"}], ")"}], "/", "6"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Pi]"}], ")"}], "/", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.597928031858972*^9, 3.597928059891905*^9}, {
  3.597928091653737*^9, 3.597928148525792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<G + B < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{" ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{" ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<R + G < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}]}], 
         "}"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<R + B < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "+", "0.5"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597928559794848*^9, 3.5979286685837593`*^9}, {
   3.597928733728745*^9, 3.597928754275741*^9}, {3.597928815049721*^9, 
   3.5979288717941*^9}, {3.5979291159386272`*^9, 3.597929127980763*^9}, {
   3.597929163885757*^9, 3.5979291961844187`*^9}, {3.597929454486833*^9, 
   3.5979294748445463`*^9}, {3.597929511495516*^9, 3.59792959945166*^9}, {
   3.597929675282404*^9, 3.5979297271172028`*^9}, {3.597929762649514*^9, 
   3.5979297790034122`*^9}, 3.597929819123199*^9, {3.597929850729494*^9, 
   3.597929881188436*^9}, {3.597929917589932*^9, 3.5979299563399487`*^9}, {
   3.5979300064839287`*^9, 3.597930121325137*^9}, {3.5979415084271317`*^9, 
   3.597941566709869*^9}, {3.597941596739175*^9, 3.597941618990679*^9}, {
   3.597941747047269*^9, 3.597941758121895*^9}, 3.5979418723002977`*^9, {
   3.597943577416791*^9, 3.597943607910387*^9}, {3.597943656859023*^9, 
   3.597943672813488*^9}, {3.597944945687141*^9, 3.5979449854601917`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxdWgVQllu0BayLgYXdhdjd6Dawu7AbbLHBwlYETFQsRMVEEBVBUdCFNNLd
3Y1doM/H3h9v5jl35syatdb2+v/f2ef79zodVm+dY6CmoqLiWF1F5X/XiGKL
jNufvWhqSo3dXtUD6Ph4tczz+x1oQ/7CGtb9QymSeUxhHmbMQ3gc1Pgc0Ha4
P/nrhu0fvCqEFn02cKwx9TlNclozrdrHCDrMPPyYx1LmITx69Fn83PpwEN2d
P/19VEo4lXlNKRy70JmSSltauU6KoZ7Mw5Z5fGYewqPo4cppZ9aEUfopJ12N
M1FkeqmP9mGDV7StV0TqltvxVMw80piHBfMQHmOHao4OOhlB7d2b+U8cEUtt
DTQN3u54Q9U3mXXr9COJxjGPdsyjI/MQHtf8/QbUeRxFK0oPTD2SH08ug37e
+XXoLU2fd3tYUdc0us48ljMPN+YhPMoW7u86JTiGbDpmhLy5kkRdq20tvTHB
g5p93p/iG5lOH5nHTebRjXkIjwn5vVuZlcVRyvyJc76MT6Udm9LPDA9+TxkX
Fhy7cyiTJjGPJOZhxDyEx829GRr+jRPpnG5MQdNfafQucm7P+Lle5NB3gPaB
Htl0i3mcZR6ezEN4fFG3Uqs1JJl6p5xyGDA7g2rr+H4wTvAm41CNYL3YHPrG
PHoxDw3mITymXp/8bfziVAoxHmE461Em6d0buqHpKl8aY1iwvd+xPJrOPIKZ
x2LmITxmX/6zy/NdGhk2LOmz5W8W2da1r+WS60d16/k2rdungOYwjy3M4wHz
EB4HlsWVrApLp3r2tz+a6eVQya42D+YaBlCM/R23nIRCMmEedZnHJ+YhPB51
cVqvmpFBT3TnvnjwJJeGJ5/T/fTlA92eYrLy/clismMeDsyDmIfw4P2XKfsv
X/ZfkOy/Utl/mbL/8mX/Bcn+K4Wyb8NlH3c7SDGpTX3JvOGmH+VOgVX70kT2
aeumue1CTj2lQ41PPdQeH061lmoO0HqwXUel8k8YGSWnf5ljuFsn8eWWf/9F
0jTZ92HSB7pzfZhxfQTIvj4g+7wD14fUR21zm2nD9pq7S300X2s35F2j8+5S
H1E2D94uW/aBqrlf//vKNKyqD3SXvnBvSdy0e+FO1Gg2fUy2jqKs5U9fHhq8
V6fSnhhD0eyHGvshfmhL33jIfogfPUyrBaTmWbqLH0dR737i3RAaW/r36MdB
kVV9pFD6ik7Pt2bpKS708Oy34Re/xNLctAN7HP4c0LnQebJl58kJdIz9ED8y
pM8USN8ZzX6IH6MeLVusisvu4kezbcN9e+4Op8MdDWr2yIqu6kNjpC9FlN/x
bVvkSsODnhyfNC2R0vt2ubl5zWGdzZUfYDKJH4fYjw7Sp0ZL34phP8SP2QGv
CjtevuoufmxRKXm96WokYf4HM33LuKo+dlX62sbgk9WW/nSjUHWDkIq7KXTt
Y50/Ryce1an837f8t+/Yj3fsx0rpc1ek7xmyH+KHQUFDE91NN9zFD+/zd548
doumv6f61LMZnVjVB0ulL6rabBp9rSbIqZPG6fiKNJrt9Gn5tR7HdSwrC2SQ
D/vxh/24LX2yWPpmLfZD/NhbZ7PG2jE27uJHqw7z7+SnxNIo90vnY0uSq/ro
eOmr04c8GlWo/p4OeOb3dbbLIPWd8Xha/6TslyxqzX6MZD9Spc/qSt+dxX6I
HxOaZoZ6WdyW/ZCFHc//u6ytlkD4Xm52akZaVR+2lr589VbLZLPznjRxlU/0
2flZ9H6AR3vfz6Y6hpXfXzbtZD/esR/ixw3p29bsh/gRpnX+atS3O+7iR8AY
91PruiTR8gtPp96/n17Vxz9LX8+qdWa/djNvaqhyZ98G1Rza++XBkaRYM52k
yg2USx/YD/Gjj/T5j9L389gP8WPxkJGrslfddRc/2kdsPfBgUgr96b66nmd5
RtU5MFnOhb7b/rbwu+lDSTYH2un+66/9XM5kfHKz0JlS+QXmUwf2o4L9CJVz
YpKcGwPZD/Eja2JBt29B99zFjxHPG7p+GpRGNt6aoSlzs6rOkVlyrhyI2+5q
0NmPHoxc6N12UT7l7d41Tv32GR3Xyv5RQDrsx032Q/yYKefOYfZD/DBceOVT
zaEP3MWPdXsL+1lOTKeRy/3O/36cXXUO7ZdzyX90ll51e3/anjRgw8/qhXR7
8JJ77Y6f09Gq3D9FtJ79ED805JwSP4LYD/Hjx3pdt2Z3H7qLH5ZjfOz7Lcqg
5O975zRXy606xx7KuaZpp/fVtt8HGrG/vkbUsyJy+H1brZXzeZ1LlfunhC6y
H0nsh6Occw/k3GvBfogfR/d+PKatYecufrxVv9UlfGMmHbjQU3PQoryqczBc
zsUVDQMujnENpBotC50cl5bIeXVB9l8ZvWM/9rMf0+ScDJNzU5/9EL+cR49l
/5VBOSe15dxE698Xdcx3yv4KJws557rKudfW/kfy4plnZP+Eo7qcW8o51tvG
f/6GOcY6lR9v52gSHpFyTtka6amEmlxwF145N+iwnEPW7ayaWbXcL/01jsbJ
uXJIzhmXK88ulM29JP0zDsq50VTOkdp31sR7ZhzU+fP3f/8k0hE5F5rIOeHn
WrtTo+5X3IWH0vc3yzkw8sLVYOP5R3QSKvdnKnlIX98kfT4xXt95gMp1d+Gh
9G0v6eNfZx/qfXbYMXl/SCcVM+7LntKnS3+9Gz8/xlrO/3Qofbel9OEnjdae
u9fmhHx+mUTSV1tIn63WukWskcMt+fwyofTN7dJHDSKnlb1RNdV5Vbm/spS+
iq3SJy1shg2cNuaOu/BYIX1P6YNtLw2YHZ59SvZXDq2UvuYnfa7p05zypQ62
sn9yoPStttLHoue1dMoNMNe5WPkF5dFf6UttpE/dwkWfLc3uuQuv9A0aLn3I
oolq4z9PTsvzXaD0JQyTPqMdNvrswaP35fktUPY9rZU+ohuTu1PT8qzO1soP
uJBGSV8wkD7xIq1Y71zxA3fhkSL7XukDh6au29hkxHmdlMrvp5hSZV9fkH0+
6uP1drcXPnIXHsq+dZd9nGCfcL19rwvSn0vJRPalm+xTX9VJec+87KT/lkJ3
cb1Fy5oHknlwh47ra76nsCe7jvRRc6SWui3nj9gaRgZbew1wtrOmFY31T5sE
hdJ41sOM9YhmPUQPQ9ZD9DjU9VbFPA0ncjwSblPmG0lHGUMwmv44NtyylQuN
xam8+21jqQVjCMYT//XGodquFFNO/ZcYJdBzxhAM3WvTnesOdqONw7/vbxCS
TJMYQzCSNvT/OHncO1LRic3I+Pe+lMEYgjH8Zp0r4x550IcEJ9O3ozJoJGMI
xskaBwdl9Paky3vP9rxakElmjCEYEVvKIg+7eNGK5hvDd1hlUzRjCEbbmNU7
2un4UPdX442mj82lDowhGBtHRTd45+lLX+Z3aKVdkkeGjCEYLx9MfLp0sj/h
SznUrhfQG8YQDNX6b6b/Dg0gs4tx+snji6gmYwjGNOOeRdf0Amluf2d114/F
NJsxBGNExCBatjOMutpMT1vk4E0D0HPFS9NnlJnx9WeTVhFUP7U4+r91d2h+
3+ZB22ZEkg7rocV6DGY9RI8mrIfoMe97VrjF4kjyNtxrM3WOP30419D686UX
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
oSdzR2UO2faj14+hVv+3+mlu2Fqx9D1lpadcPRkaRwtljih6tGMdRI8A1iOT
9VDmgsqc8OSr68OT1KLphKwuUaE7fG57ke5077nldZJITeZ8z2TuZ8o6iB6v
WI9xrMdCmdspc7xSk+0HDm2NpRJZ714abHQmy4fuu9pp7JiUSotkDlcqc7ky
1kH0uM963GM9nspcTZmzLdSd9K5jUjzpyXph3s2987X9qZqlX9bOsen0TOZk
fWRutoh1ED0ush6iR02ZeylzMI/a7VR8JyURZD2kWd2kzeYP5DxxuKdjWgbV
kjmWocy1PFkH0eMI6/GC9VgmcyllTtUt/OuYDS4ppC3rlqiNh7OfBpF+hcOt
/INZtFzmTE9k7tSddRA9trIeooezzI2UOVLA1JwxNf/9zvSXdcml8GNPPodQ
kxftTDq3ySEXmQN9k7nQB9ZB9FjOemiyHnVkrqPMeSocwzMW+KVTuaydu1t7
vbkRRr7rLRevcMulujKnsZK5zR/WQfTQYj18WI9VMneROQn1a/T2mF1FRtXa
ynymj83bcDJqW2Po9UX5tEbmKDK3QX/WQfRow3rsZj2WylxEmZOs3f2o8+9/
v1cMZG1UoOZ3NDWCukYZN4n+XkDLZM4RLXOPdayD6KHJemixHqdkbqHMMa7H
XfSZtjGbrsmqPuWl/1rVKIo1K/hU36qIRI/dMpe4wTqIHnVYjxjWw0nmCsqc
IXjEobU2t3MoSNa/dhs+TOn0b1/TsrApA0vohcwJGsvcIIR1ED1UH1fqcYL1
4Hq+Us+X5krupORQ7PcVvy/mSW7UVXIklXWc80RK7qPKGBGS0zhIjqLkKo6S
ewhGT8kplNyil+QKMyVnOCo5gJILHJO5/RmZ48fLnF2ZuyfIXDxY5uR9ZY6t
zLX7ydy5rsyhTWVOrMyNT8lcVzCUOayvzGVTZW7qI3PUQTLnVOaeg2UuaSBz
ygkyR1TmihNl7ldd5oDbZU6nzO12yFztnszZbsocTJmL2cjcSlfmWH4yZ1Lm
Tv4yF8qQOdFgNb1HY+oF0CBZh/AKwah+rlrPUznBVE3WGrxCMArPxC3IXRFO
BbIKhmDMmff0mnlQJM2WdS6vEAy3licTew2LoTeyuvMKweiUvrRN+P046ihr
Z14hGKcfDlixq1EiWch6hlcIxtctte80O5RMn2X9xisEY8XA9Iw3ham0TNaV
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
Mr2QLjVZtf7HyVQSjPOM8T8z7DUg
      "], {{
        {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwlkk8rhFEUh+8Zn8S3sGXDwkKysLAYEhb+hQUlLEYJi1HCYpSwGCWkIQ1p
SEMa0pCGNKQhsWHDhvKcfoun3zPve+855713ylt66rsjIYQKKIMrGIN9C+GA
bIRR/IacgFO8gTyEmCmbYBzPkFGYwmvJNAya0vcM4XVBdUdMfbxuFj8nB2AN
fyZX4cvU3+tO4p1B65J4Imjdp6n/McTxM7IXVvCOoN/LeIy8hRye87lgE4+T
D1A05QI84tPkPRRMOQt3phkvIWU6jwLkTfue4N2US/Bh2leEEp4PmuPIVGMY
dkxzeb8L0zNflzHV9vmuTTX8m19Ms/s9pfFs0Lksms6gFWbwbbIKmvFXch3+
8Mqgd1E8Sb5BJKK1u17LdH5+Rhume/D9v6b3fq9dpu8rwTeeImug3XT/JzBn
eu89fkx9tvw/Rq/qoD1tpn170Gea3b8nYXrm/5V+Uz2/y3n8H+e3ba4=
            "]], 
           PolygonBox[CompressedData["
1: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
Dh44No+zgk5Fl3Jm/g8UMZwE
            "]], PolygonBox[CompressedData["
1:eJwtlXtojmEYxt/necOY83lmmJkZZhg2ZvyBPyiKoqgpx5oyh6IcayvH2sqx
KMeinM1oDjmsjTWsYW2sObShiSwimojf5d4fX7/vva/ne7/3ue7rud/Yxavm
ZPsgCNL4RPDZwyc1DIJaWO2CYDf8wIJE+BnuhTXOdK3T+miYBJvQF8Kd6Hfh
UOqZsCPsBsvQF8Bc9Nswkfp82AF2gaXoF2EAG8Ek6hfgQJgOQ3gW/uL372EG
12dgLByv38HlYD96CRzO9TLYGfaCFdx3McxHL4bDqC+CnWAP+BB9FlyNXgQH
U58J28FIeAt9DlyPfgMmUJ8NI2EHeAf9NPyO/hZOpH4KDoCp8A/6PLgZ/RYc
Qn0ubA87wWL0GXAF+jUYT306bAvbwuvoG+EV9Ao4ivoG2APGwpfo2fA4ehkc
QX0l7AqjYZW3fj5Er4Zjqe+CUaH1V33eAkdzXQmLWLce1lLvD19726/2rf2v
c/a8ei49321v+9W+tf9v6EfhT+op8Le3/Wrf2v8mZ37LV/l7z5vf8l3+r0Kf
Bq9SbwNvwqlwEHohXII+BbYJ/7c+KPSWJ+VK+cpx1i/1Rf0pgSdgOnq98ox+
WP2iPgo2e8uTcqV8NaOfVN6oj4V/veVRuVQ+/zrrt/qq/nrqB3SWYB2sQ8+H
n9CHwS/wEByP/grWOztPOjc6P9/gNjgGvUrPi74VvqEeB99565f6pv6Vo+fC
BurxsBEegRPQ3+ga/SD8Sj0Z/vCWJ+VK+cpCnwwvU2+lfsMcmIL+VP10ljfl
Svmq97Z+IfUCGMe6SbB1aL/XfbTfJ+jP4TjqebBPaPuXD+rnUmf9Ux/Vz4jQ
+qs+L2o5lzqfec7mheaC5kO5t341OPNPPsrPmND6pz4qbx+c7V8+yI9+oeVP
OVSez6M/giOpr4PdQ8u3ci4/7zjbv3yQH71C81c+y8+Xzvqb1tLvvqH5K5/V
r+vOzo/Okc5Tz9D6pz4qT03O8qccKo/9Q8uXcrYCHka/D5OoZ8EuMEq+evNT
vsrfStZth++pJ8CPcC08Tb0cJrNuDewGY2CNt2vVpZ9y9n+6r+5f7c0P+SJ/
zjmbJ5obmh8vvM0bzR3NnwJn/6f76v513uaN5o7mzzFn81hzV/P3mbd5rLms
+bzP2ftC7wW9Hx57e1/ovaH3xw5n81JzUfPxgbf9ljo7HzonOi+9Q9u/fMhq
8U3+HXI27zXXNd8rveVVuVV+M9EzYCuu+RpcQv8HsznfAg==
            
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0UsrxFEYB+Bj8EHmY1DTNCTJSG5pGpJbmlwmMUlIQhLSZCQhCcltwcLC
wsLCwsLCwsLCwkLJl/D8m8XT75zezfs7Jz6Qb5+oCCHkuIuFEJ2rK0NIyF8S
VSHMkGSHLLOk2KWXOerZo48FGtinn0UaOWCQJZo4YphlmjlmhFVaOCHHGq2c
Mso6bZwzzgYdXJBniy4umWSbbq6ZokiGWwrRTOkrXYPeNSIri9FbyFr3jPmN
/OGMbw75osQnm3ywwjvzvDHNK2O8MMQzPTzRySNpHqjjnhR/WCMk7VGIlf/n
HyZ8Ngc=
         "]], LineBox[CompressedData["
1:eJwl0b9KAlAUB+CbCj1Hz1FE/yiJCJEICQkRCY0wiSiJCIkIkQiRCIkIiRCJ
kIaChoaGhoaGhoaGBoeGhugZ+qThu79zucs55w5l15PFgRBCgftICFE56JiU
P4zGQigzxglpdpjglGV2maJJhj2mOSNLhTjn5NhnlgtWOGCOFnkOmeeSVaok
uGKNGknaFDligQ4ljlnkmg3qpLhhkwZLdNnq1xbQNWvU3MMyLRt2EZMj/bv3
W/lNhy9a9GjySZ0PqrxT4Y0yr5R4Ic8zGZ5I8UiCB+LcMcMv2gvj+tiO/P/P
H6v4NtA=
         "]]}}], GraphicsComplexBox[CompressedData["
1:eJw9WgdYj/37JevNyN57JXtmxi3K3hGSFdlCiCibVPbISiUZEZEiSqelvfce
3/bOXsXf3337ud7r+lznOefc7/t+n+dzf57nPnoa7FhkqFSnTp2n9evU+f/1
iLZS3oWDLthcsqyB7Yhoiq2wVjh8DMCcrAZ7A+qHkhnzJDximCfhofvR8GmD
2c8xw23dnHrv48hc5WNot/EhCNWKOTh6bRQtZp6EhxnzJDwqAmaVTVnmjoyq
TjaeM5JowFC957ZHInB3yVy/hKxYKmWehIca8yQ8jl8ZqnbE8BV2Do7L3u6Q
SmUP1sw5uy4GitNuWipnE+gI8yQ8Spkn4dHJsI3hW+M3qL/Vsn/vbxmkObbN
5IhTcejp3T5k+oRkasc8CY/JzJPweK7+/c6Pw28xd7HDuPJ+OXQ9JHhkk0cJ
WFNlNvtoSSo9YZ6ExzXmSXj0qbej6tY0X7T/eDArKD6XqpYd7DcrMgkOvRRR
b65lUC/mSXhUME/CY+fW3LPjI/2guLj0+J3DeaRdMqSzZXUKspdMX/RJO5uM
mCfhocU8CQ/veJ1BqToBcBk2Us1sYAHZmipUQlqn47xWUmm7Hzn0mnkSHreY
J+HRSCMobF9aIPZFq0TqJhfSR2UbpUZjMjE067TLyIUKqs88CY/3zJPw0HEa
u7nd2iBoGpXuGn68mGbenPlFWy8b0fsmGC14mEcLmCfhMYN5Eh72TR838igK
RtNmQe2aDi2lBVd/7fH3yYFRy8qh23/n0y3mSXjMZ56ER+mervd1jEKR9PiO
V2FaGR1cmVK5NiYXKo8d3lvqFlIR8yQ8hCfhMTrzvNaHT2FwmGW+xu9UBT3o
67aprkKBp1o6L+4/KaIRzJPwuM88CQ/efxGy/6pk/+XJ/iuR/Rch+69K9l+e
7L8SNNJvM1L1/i6NOn//xFD7dkXdo0674nDr0w/UtGPJJDP30yKjvRrpL7f/
+See1A5RUna7IFi33Pqtxi2cZss+jpN9HSL78pDs08ZWdnPGmVp5S3205vok
9dFhg/MYn1YXvKU++nF9kvqYJX0kXvpKsPSFI9In7qxImeMU64ZWC+l9pm0C
5a9yfXl4tKnG33LpSRRvd//typVhqO998/cri5j/7fuB0gfs2U/ix0CLeqHZ
xZe8xY9Y9pP44Sh9ZZD0mXGD3lrmZnngwbkv4y9/SiadHLP9Lr/MNC72mXmp
z8w0OoJm99LvRmFq1e9j79XjKVf6Rrn0kdHsJ/Fj0sOVenVx1Vv8OMx+Ej9y
pC9VSJ+KqrkT1K3cE+MjnpyYMSedcof1vb1t3RGNbX9/0Exqt3N80KC9sTja
y7DhwPxE6iF9Z4r0oXD2k/ixMPRVWa+r173Fj7bsJ/Gju/S1qdLnNkSeqqf/
3QvRyoZRtXez6Mb7Jr+OTT+m8fc//1IObatT+Xrr9Xj4LgmzXH8phVZL37oh
fcyA/SR+GJa2NNfaestb/NjKfhI/VklfvCl9svb21sk3GgJuvVXOpNbm0EK3
D6tuDDyhcelvAQUFXLjz5JFXIupYDm1mNzmd7KTvVUsf/M5+Ej9Mm2xT2aBp
5y1++LOfxI/b0lffS5+dNebhpDJlP5j5lwxzd1aQ8u5UuDY/Jfspnzr1XHKn
JCsZ5H3lQnJlJmVJ35wmfXQG+0n8mNYuLzrA2kH2Sz46sp/EjwzpyzOkT9vY
d8q0vOCP6WvfJZ5bkk9+I317BH200DD6e/8KaNfz/66qKaUBX2ssT8/L+V/f
vS19+DL7SfyIUb1wPeHLHW/xYwf7Sfw4J33dXvq8otHZg2rtA9Gyzp0Dm+sW
kumn+0czki01Mv5uoCIK1vQ+vbFvBlZfdJ19714uDZG+/Un6eDb7SfzQGzNx
bcHau97iRxD7SfwYLOfCFzknBu/83TH49jtk2Jl11/rTL4d7nFV88LLWmPX3
BpZQt7gdZvdnZOH3AINm/jUKipK+P1vOgQHsJ/Ejf3pp/y8RTt7iR1f2k/gR
KefKXDlnTFN2eRr2Ccb9icsCuy0voeK9e6YqO5zV8PzbP0pp/POWnh/Uc2Af
2CY6Syf/f+fGQjlHTNhP4ofRsmsfGo697y1+iJ/Ej+1yLi2Sc+rd5Hzd+o9D
sCtj5Obv9cvIYfQKp+4nzmuo/t0/5bTBtGz4pem5mLQq+MLPRwXUTM4dMzmH
/NhP4se3TVpe7e8+8BY/DNlP4kdTOdfM5Zxr4az72XF4GCYcbK6S8KycXH46
KHV2v6Bx5e/+qaSLmu8eD1+uQNZX00UdlIroiZxbD+Uca8Z+Ej+Omb4/rqbi
7C1+XGA/iR8uci46yzm5omXoZU3PcDToVOb2VL+S+Dy7KPuvmryV7fvGbsmD
+cVBbdSXF8t5VSLnVR4tZT+JH3xePZL9Vw0v9pP45TwqkfMoD+jy87KG1W7Z
b7FkJedWfznHuj3+lqk3/6zsp1hYyrk5QM7RIXYhSzYv2qfx9+fuk/i/cyZR
zh1HE9060eYXvYVHPTnHkuVcs+1u096m00Hptyk0Rc6JY3JueFx7drFa54r0
0xQIT8flXGp8Z12qv+KQxq/f//8nnY5In28vfT/Ys3HvVgOueQuPw3KOCI+J
F69H7ltyVCPt737NJkif3i59Oz11vfvIOje9hYePnANGci58Xnh4yLlxx+X9
Ipd+n+Y+Gyh9t+qHj/aSJFt5P8jFL+bpnfT1J602nHfqelJ+vzyaJH2ys/TN
el06Jpu42Mvvl4eJ0oe7SF82jJ9T/aauhcarv/st/399zlj6nrXduFFzNO94
Cw8f6aO7pa92uzJyYWzBadlvhf/rU2HSt9q5FtbouzjKfirEKumD4dIXExd3
cisKtdK4/PcGFdMv6TM9pO/Y4/K77e2dvIVHrfSxntLXrNvWbf3ryRl53kvp
tvSJCdI31GImnzt07J48z6WwlT4kPLSSina3uXROY8ffH7iMJso+3yj7/kVO
he75ivvewkN42iR95fDsjVvaTrigkfX3/lT8b59eln076f3N7g7LHnoLj0zp
A1ekL6Q9TrvZY/BF6ddVZCb77K3su6C6M4qfBThLP67CQdnHPrKvI57sOTpU
6Sk6aXVaMmFHDDXOrkj8b+MdLBnWIWLnvHiaEKdOK3fHQM1ubs5yl0AKZj2J
Hg1YT6KH6GkA62HWz752sYobnh6NtasOiqcNDbUvjTF1wg/dX7GOL5No8df8
WGu9eAQZmdrNXhRCB1hPosca1pPoIXoKZj1afzs+/lJnD0zB6eJ73ZLJf7Dt
vA3WD2Bvnp+c0C2NjLpcWf9GMwnr6J7+xG/h1IL1JHp4sZ5Ej+2sJ0PWwzlk
075oNU8k1dCIFSZp1G3Jx8ZXbz+CllNYZkOLTLLQnPq1WC0VdVrEdhpqF033
WU+iRzvWk+hxivWkxHpMvjHXveloL2wZ//Vgi6hMOmg2KzjA9Qn2Gqbsst2X
Q3c2fLBs3yID83ce2tbCMZY0WE+ixy7Wk+jhwHpawHqkbB7xfuZUH9TRSFYo
/rxPlsfGaH5f8wwh+8P3eAxUkJf1nS7TvmbBftmV2cp74ymB9SR6FLGeRI83
rCcH1mPs7SbXpj70RViam8XbSQq6aVhj36L0OTqf8dkXlZ1HW5Y9XDq+KgeV
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
T8Jjqcyt3ssca67keo6S8+nK3Ex4zJGcUHg8lbnRcJkj2Upu5y053hOZWwmP
W5IDCo8GMrfZKXOcMsnltkpOV1/mRsKjVHI+4aEvc5NnMkcZL7mb5HakJ3Mb
4TFOcrx/uZ6bzC2+yRzDUnI1yeXoucxNhMdpyen+5XbKMjeQOQWlSG4muRv9
J3OLf3OMZMnh/uVyMhfAGPmO7ye5mORqtErmBsJDVXK2f7nbCvluTpbvaBPJ
vQZLDqYn3+3CY4/kaMLDQr5b5TuZ1kmu9UZyrlPy3fzvO9pAcjLh8Vy+G9vK
d6Sl5FbakmM9k+9W4XH6Xw4mudgiyQkGSG5gGzKoNN80HLd5pYWSUwiPm3Ld
TnS/NvCc/t/c/uWAipdX+8dAVqplnoSHh1x/JbpHMidvJXPzbu8Dvo21iYOs
5CxzeuHRVa53F91AmVMvlLn1yVc3x2coJeIUrzRA5uTC44RctxDdUZkTn5e5
caX5LrPDO5JRxSsdkTm18KiQ69WiS5E5bbTMbXW1Zvj0ykjFMl4pWebEwmOJ
XF8uuqEyJ1WRuSkad68TNCMDvrzSEJnTCg8fue4vulMyp+wnc0u12M+amz2y
0J9XOiFzUuGhKtcHiC5D5oQyl6SQ2YWaDS/mIJRXSpc55b+5ZbBcDxPdSJnT
yVyQap7GKpYG56KWVxohc8J/c0Ph6ZfotGVO1lDmZsNbvT3uXKuArKQlczrh
MUyujxDdTplT3Ze5leHeh31+/vke2cAr7ZA5mfBYL9c3is5W5kTTZG50I+Xy
uzlbCnCTV7olcyrhcf3fddEFyZwmX+Y2fL4VyvlWSO9kTiS8nF+Fcn4VQl1J
96Fms1CM5pVGyjpGrtc7X2/Q6cJI1OeV6sraQK6Xnk1ZWrQ6FmW8UomsgrFw
sesNq4h4LOKVFsiqI9ffdDqVPnhcErx4pdeyesv1Xrn6XWPvpaA3r9RT1j5y
3frByNV7WqXjDK9kJetZuf5xe+M77Q9n4jOv9EHWL3J95ahcxZuybKzmlfRl
XSPXDWpXtBo6KBfreKW1sq6X6zZrpr848uccucYrXZVVMMIDRiyOu56HCF4p
TFbBqNOv2+fe0fmoyyv9VuVVSa6PtFK22dugEKN4pRGyqst1S8nxtSXXT+o/
Jjbt0Wv0btKm9y3dODotfy9AeCQwT8LjmXP9lC0jfHDc5Htmi8uJ9IQxCca7
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
      "], {{
        {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkT8rhnEYhX+HT+JbWGSQxWAwGAyUMFD+DZQwvEoYKGGghIESCgkJCQkJ
CQkJCQsLC4vr7hiuzul53vd+7nPunMqGkvqslFIuZEMbnMCyUnpER+EDf4zW
wxz+Au2EPfwlmoEj/DXaDWfyjGZYwt+gfXCFP///xhb+BZ2CH3wxugpN+EO0
FqbxpegGdOBL0HVoxb/Ge0gs/4yMwxfPH9AReMPfo4PwhL9F++FO3v00ZsnP
Yu9zecfIcyxnil235UyReV+eHbPu5dmR7Rpfg+7CML4S3YEBea/Y6V3uMnZ6
xhehK1An9xSZZ+SOD2BS7mAfxvAtyTeYx+eji1Ah54h3a/jy2Bd65V7jfp9y
T9HRt9xffLsFP5t8g1/5f9F1D34huV/R7WZy7xk5U1n0KGu865LvVgiN+GW0
AKrku8Vd2+WssXet3FPsOiTni75G5dzR44ScLy9+J8+OudX4P0HSbI4=
            "]], 
           PolygonBox[CompressedData["
1:eJxNmwf419P7xs97lAYlLbRlRUrIyJYVIpGtZZSVWaIkIiMlSoiKpgZZkVFG
yUhk7xWRPUKSfv7363M/rut/Xd/P9Yyzz/uc+zzPc863Re/zu/bLU0pDi5RK
0VFZSltJMVL0OcnXijaTfI3oQsm3iG4jebTo85KHqFymgleI3iX91dI3Eb1K
dIHSr6ZepV8lerf0l4v+T7/L9Bsv+UrlayQ6RPRp5b9etIXk60SfkfyKaGfJ
L4u+I3mCaFvJd4sukTxYdDPJg0SfkjxWtJXkMaKLJE9WO43V/r2iU6UfIX1L
0RtFn1X6QtGDJC8QfUPyZaINJQ8UfVLyAJVbp19//e6U/jzpa4ueK/qY0i8Q
rSP5fNHHJZ+tfL/pd5Z+46QfIH190f6iTyi9j2hNyWeKPir5YtG6ki8SnS+5
n8r9od95+t1OPtGf9TtDv9sk365824uOE12s/BdJ/5d+F+p3h/Tjpd9B9E7R
F5T+nOghkp8VfVNyb+X7Qb9e+o2V/nTpq4ueJvqI0t8V7Sb5HdEPJL8oerjk
JaJvS+4luoHknqIPM17RjSSfJTpP8mLRTpIXib4leaLa2UzzP0F0ivTdRb/V
71T9xkgeLrqB0q8VnRD9biN6V/S/u2gVyaeKPiT5Y9ETJX8k+pHkFaKnSv5C
9BPJj6me7VXfPNGZ0n8m/cmin4p+rPRVor0kfyP6meSHlW9b5X9I9D7pP5D+
eNH3RT9U+pPSt1H6E6KzpF8pfQ/Rr0Q/Vfoa0XMk/yn6leQlyreb8r8gen/M
aw3RM2J+k/gL9ftX8jcSC/EX65frt4r1rnIdVP5l0Qeke150F8nPic6Jea8m
2jvmn3mpKrlHzM960fMl/yP6dfI621By31hvf4ueJ3mt6ErJD6jerVT//aIz
pP9V+j6iv4iuYH9I307pC0Rnx75uKjos9jfrtp7kS2L9sg82YYyxH1j3DSRf
GuuffbUpOBD7C1xpzjoIfGEfby75itjP4EJjyUMDH9jX20m+LfY3+6C15Dti
P4BL20q+NfCJdVlL8jmxPn8SPUPyj6JfSP5e9DTJ34l+Lvl30bMkrxb9Mnmf
byy5X+z3WZqHLTQfM0WnB45sKXpT4Am4ubXkmwM/wbEtJN8QePaW6DGS3xR9
X/Jc0T0lPyD6quTpqreZ6p8mOk36P5Lx4xfR6sm0fuDKYclz/7tol+Rv8Gfy
fB/EvkymDQJ/jo6y1Hl0fJvH9TtAuidEX2e9ix4o+WnR5cnr6ALJ/4v19FMy
XoFbhyZj32+inePb0xZ96Jr8zQ+M9UAaeTgb1omemLyW/kleT4eAo8m0aawz
8vwZZThXqBOcPljyM5nxel2kk4/xsrbWiB6bvMZoe7X4I5PXJDw6+lVT/K/J
eA/uH5GcznnCuUKZ32KMP4pukIyjh7IvA0/BxSMkvxT4CC70lPx14AP7qC9z
FPsJnDhX8l+BF+BWd8lfBn6xLo6V/Hasj9cZt+Q3RN9LxrFTJH8eeAZOnSD5
w8ArcPs4ye9lxm/W8dl881jPrPszJf8c6591f7rkH2L9g4u9JX8b+DhZdBfJ
U0VfkvyQ6D6SHxFdlozzh0l+ITPeTxLdSfK9oi9KflR0P8mPib4meZrorpJn
iL6cvO73kvxgrP9XRbtIfk303eRz/0jJSzOf/7NFO0i+X3Sp5PtEd5c8S/QV
yctZ57nnjfkCO/4WPSEZQ/6K78t35vtjR+woeWJme4K1g72D3cMaelh079zj
XhZrlTV7UjIGsi7A9/0zr48asVYOSsZ8ztYfxB+YfBaAxewh9g6YTLkacU6Q
Z5z2fV3t/9tE7wXHRDeWfIvoPZLnKN8eueeB8c8U3S33PDD+8crXQPnvFJ0s
/VPSd8y9r9nPy0SPyj3PzO98+pAbB9j/B2S2T7BTDpE8RXTn3OuA73+j6q2h
+m8QnSj9KNGNJI8UnST5HuVrl3sd8P3nie6bex3w/aeLts+9Dvj+YP1a0eOS
Mf+7ZHsCu2LfwDvwu2Nm/Ps+2f7CDjsg2Tb4VnSf5LPw29DtLV5/Fexmj7O3
+8X3Yj9jt/GNDs7cB86dbslYij2KXdol1gprhjTyrI0+U6427WY+f2mbPsAz
BvreI8aDjnxV0Ge2n7Cj9pf8c4yXfKQzTsbLudUpxs4cgPWcYeSlDGnk2S/W
GHZcx+S1hoxen6RyzmPgr8t83jMvzA921d7Jdscl+pW57Q/skovEZ7ntE2wN
5py5xubA7jpJuk8y21+c3etFT0k+w7HrvtOvR9h32PL/49skn4X/Jp+Hh4qv
m0yRSSMPexX7HDudPUvZFrFGakdZ6uiefKZy9vKheyafwfgumWiv5LO4XuDV
UaItGG/m87mTaP1kHl3v5DO7U6SPjDoYG/4Ofg9jpG38C/wM+rBBZns7j/ro
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdoVUEQhs+eq7HFqDF2jT3G2HsX9UEFBUUFBYXYwIAVFKygYAUFKxiw
QgQrJASNvZfEklgSe4k1KvbYYvf7mX3Y++3szN3dmX/2NBw/fdi0MAiCroyy
jC6RIFgP77OYBCtjr4J3XRDcg02w+8P9+EvBLDgATsK/H+5l9CKmCP5lbR9s
gN0d1ocrYSd4C+Y521tn6KxKsDGjD/MM9tW9MvnpC8cRmwk3MboR8wgWsbYZ
1sRuD2vA3ox05q9DyykeexeMYL/y/9UehditYRz2BvjC2Z7dsbfBJ/jbwurY
qfAN/seB+RSj+VvWtsPa2B1hLX+27qCzSrFHBmyE3RM29LVTDVWrFP4/EL4P
rfbvYBrsgf8pLMa/A9bF7gzrRKx2quFtYhNgNPYSmOuspp2xV0sv/IkwBnsF
zMd/JzBtpbG0vOcsd9VAtagKN6oX4AP42FnuqoFqUS1id9Mdn4VWc9VeGnxy
dueRjETWjsFFrI2C34itDL/CZviGMz/KvDz8CAfDucQeCcynGM3nsTYCfiEm
Bn4OrTfUI+qF8fj7SQfWo6RRaL2nHnwZWs1UO9Xwj7OeXO1rpFoUsLYGxmK3
hFUilrtq8DC0NfkUU+isJm2wZ8LL+GsHaqwgmAJ2478EO2IvhzfxN4HlsRfB
bPwFsCn2IHjQ31l3Vw5T8WfpHTFaEnMOprKWondETE3lENreOkN75TjTVhpL
64p6B4yFzK8T2wBGYc9RvYm9Btthz4dX8cerR7FnwQP482ASdjI87TWTdtJw
Jf5Tge2tM7TXMWe5KUflWs7nphyVyzRn2n70Wn+Ai2EH/DfgGWe9qx5WL1fQ
O2Hs1HsM7U3pbemNfSf2OWyOPRqe9D2h3lCPLMV/Ak5mtCLmAtzqTBtpJK3+
hXa27pDPvBEsi71A+Tq70wRGC9bOwHWsTYS/ia0Of4XmU8xZ5rGwBI6Ba539
ZzajLTFXYIaz2ksDaVEaDoEJ8BCchX8oLGaPaL2h0HyKOey/Cfo26Bsx09l/
kr1G0mIVa2PhT2Li4I/QelM9ql7c40xbaSytIxF7m3qjx/2ZOlt3WOjszeru
yiGX9bowxJ4B053lpNqqxtm+JqqNarTFWc2lnTSUViXOvr36ButbXE/fGcZ0
5hd9T6u31eNpxOYEpq00lpbLnNW2xNf6e2hvQ2/kvM9ZuasGG529Ge2tM7TX
Dmd3Vw7Kxfne1xtQr2c50149oF4oA/8Dwf7UVA==
            
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0U8rhFEUB+Dr5YPwLYx6myZJSDKSmKQZSUNMaCIUoQjlbxGKUIQSZWFh
YWFhYWFhYWFhoXwMz5vFc8853Vv3/ro1hVJ2tCKEUOQ2CiHpY0us3pHmgWYe
yfJED88UeGGIV8Z5Y5p3FvhglU+2+eKAb0754Ypa96bUXGUIW97yS5252nyj
pux3VemZ4JpOLhnjgg7OKXFGOyeMcEwbRwxzSCv7FNmjhV0G2aGJTQbYoJF1
+lmjgRXyLFPPEn0skmGeXuZIM0uOGWKm6GaScnJGzoy89/JHyR/IX47+/+cP
10w16Q==
         "]], LineBox[CompressedData["
1:eJwl0c9Hw2EcB/Cn1T9S/8Ym63eSyWSSmUymTb4lWYpG0SgajUaxUWw0SkQd
OnTo0KFDhw4dOnToEP0VvabDy8fn+eH5vD2D+bV01BdCKHIXC6FfTVoY6/VM
8ECKRzI8keOZAi9EvFLmjQrvVPmgxicNvmjxTYcfboh7N65mDVE3yy8J/ZD+
Vk3YXxhwlk2uydBlgyvm6bBOmzSXRFwwR4tVmqQ4p8QZszRY4ZQZ6hQ4YZoa
yxwzyRF5DhmnyhIHjLJPjj2SVMiyyzA7LLJNuXdHzil57+XXhhH5t2L///MH
rBc2zg==
         "]]}}], GraphicsComplexBox[CompressedData["
1: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
lwgzdFoGlvWCsN5VvK+GUmOTNV6jdpppTwa5OQ8NDaO6+oP7GDTwpBPCXA8M
nWsLM/Rff2/h4tfTnxF09MfAQ5sMLmo7Vc73qZ4dSV5Vixrm1vShjsLsDYbO
z4UZOvmC5X00hj7vrjLapvpVrd/g5jFRP2No45v7385W9aMXwrwZDJ3XCzN0
2gJ2KT7f8bSsbFSVwHAr7XLjSbm29ROodfiq5P4VAmiZMLcFQ+c/hBk6tQNL
vU2mlUNDDU0CbbTlZ7n/eFg/mcJd23olfQ+kcsIcCYbOIcIMnaLB4k+lUKty
j33OOV3Thr6LPtzUNoWeB76Z5vlfMIHZsxR7CLOK9wbL75tGsc+t2t02/1dr
e+ptzX1d0qixR4C3+dZQshHmpmDo3EiYoVMzsPTH12S6/9AR9+03tOs7Vr2c
6ZpOGx/c6rfyYxitE+ZNYOi8XpihkzFY6n0mjTX4Jzty/i3tUJ9WrScYZJD/
v4duDdoQQUOE+RUYOvsJM3QKBEt9z6JyFaePzR9mr625eKCDU1Amtb64pEmt
N5FUQ5jbgqFzK2GGTu3AUs9z6In3APvy7e5ok79P69NwbjbtPDbkZPqqaEoS
ZhMwdN4uzNBpN1jqdx5tOPRH9cbVHLWOl1Y/M8nIofCdzX4+yoqhu8IcCYbO
ocIMnaLBUq/z6XzrA30vbrmn3dXn4Ki09XnUae3XdccN48hEmLuAoXMHYYZO
3cDy/fGGCvd/XnbN6L62fLO2frMuh1CI+YE3qW5W3Mig8YyBa4Mp6s6mvd3K
3eW01I9f6jUJpX7cecHDw/f4xvBqQUfLRZDPhka9Wxba8p29IZaFPmG0v53V
9+l6Try15Z3h/r9+x+DTta6+N3vAE1a+DXdbGU1tL68rnFjuOg/lI1n/No+i
JkX7B5g2ceGq85ee3PMympYt/BTd3fYhvz0TFZsfGkf7PHwdTOre4ohv1HOu
cSw9eLFiS1B7V7a80iSqT6t4+tE9rt4ax8d84dHT5BYDkyglq7mRg74DGw34
vKNmYAKNvTTBuXpfN+4ZE9oyd1sSmZd1n2qv1XKLN1Pe35ySQkNqGreN6+/I
PwdGpaaaJlO6Uc+3Y4Y/4yXVRvQJXpFCXUPtTmf5MW8oN+KTR8U0CrqSUXig
7X1+Get0+OngVBpsUe3C8Jvu3PV2y9jbddNoSYhBhukqD/au1/9L7ON02t2t
9qSrd53YbNupzhdz0uhYxV19Urs+56LR33YddE+ne38+OtDj3XNu1KHTt/f/
ZFA3z0F3HvRz5gUNV4ZsMH9NUf8Uhu1x8WSvzKjWC1dn0HebDq2Dt3rxKk3z
n9VbZVHiTKNq/u4u3OHRCOMJw36d/8jFG1povPnkoQcvBjTMotFVr3qs+enN
TyfVKqcfmU0nc8yMUsc84ncz/mjSviCL1gyOqPnsuQ/Pbnv6n3pe2WS2QW/h
74d8udaSChXpWC4N2uXu+yXUlZ99+MblLueQ2/VRjvPGvOBWXitrF67NpZTY
PT/sq/uxofHnyrMH51N+rby2teY94SPnopcmjMij32o8mfBfkB/nLx756GWT
fOo6/P3Vsede8sOjOVXXvyugK/82OND+tRtP7elcxfVtPk3b0jnv0kx/fli2
1bx/fQtoq73hwOxGAfzXOftR49yDqVX5v87697Rk++uWY5duCiWqF61vYmvN
Px6fnWDSPpze3Cx/0KyTLU95dWCyeXwEWWq6pdk7X2O75C3THM9E0cTgOUM9
B/3Ln96vnPnCIIa+LTlkFetznUdXnv9XSlEs3f58//vbSTf5SuMp8746xNOc
4wlzq8Tc4oIuBgvqLEqkKi2qPGm52J6trZv0MK+aTK5OvRv2z3XgsR3PO9mm
J5PRyIXGkzbd5fcP9Ho7PkuhBrHHw5d9d2TLQUdc3C6mUvrDuY3I8x6P9C3b
78WGNHLbs/7Fy8P3+e3kHa7h49PJbOzhLTPHO/Gl2A9/pui/ppV1LfRTaz5g
g6Vr3PLLZNDwRKeIfyIecH5+puZrbAY1ufniwJdLzmy+ZdGzSi6Z9G59Yq+D
812YysZRndNZ5DfwQ2rN1g8569h0jxZG2WRdsarp1cyHbFo3cFjn4Tm0LajF
0PYOj3iQ5Siv/s1yaeqlPoUP1rlyRjuPESM+51L7JeOsqM9jPnN/gO+UkDwq
22XRRP8vj3nAQOfR8+3zKeaT8feZz55wqleXlysPFtA99xMOqfvc+PjEG+O2
LHhDh4/Zzl0zSstG8P/2if9Hyu+bLX4fKT9Q+ZmI50OIh87iF+7XIJ/nIF/F
74K/qPQZ8BOV/1cg/h8pf1DtB2bxCw9rEM9vEa84D/6h8vsOit9Hyg9U64FZ
/MHjGsTzEcQr3ge/sAL8vabi75Hy/9R6YBY/8JQG8dwC8Yobwh+cAD/vgfh5
pPw+tR6Yxf87q0E8P0K8Ykf4gcq/ayv+HSl/T60HZvH7zmkQz+0Rr7g1/L9U
+HXrxa8j5eep9cAs/t55DeJ5E+IVr4Xf5wB/7qn4c6T8O7UemMXPu6BBPLsj
XvET+Htb4MdVET+OlF+n1gOz+HcXNYjn6ohXXAl+3lD4bzPEfyPlz6n1wCx+
3WUN4nk24hVPgX9XHX6btfhtpPw4tR6YxZ+7qkE82yFesQX8ukj4a3nir5Hy
39R6YBY/zlKDeC5EvOJs+HPKT+svfhopv02tB2bx36w1iGcN4hX3hh9nBP9M
6kcAKX9NrQdm8dtsNIhH/Qggxbvgv+2G/9ZY/DcCc/NSXA/+XB34c9fEnyMw
Xy/FNvDvbsC/GyD+HYF5UCnuB39vAPy9YPH3CMxhpTgA/l8Q/L8V4v8RmFeV
4qXwB53gD/60KPYHCczlLUvyfxYl/cNx4h8SmCeW4jHwF0fBX7wg/iKB+XIp
Pl/Kf0wX/5HAnFmKU+BPxsOf7Cb+JIG5ZynuDP/yX/iX28W/JDCblGJj+Jvr
4W/6iL9JYH5Zij3hf2rgf9YR/5PA3KAU14A/WhH+6N/ijxKYF5Xiv+Cfqu/3
RfL9Tq2r1W19ZWYoRXfoFxJ7+zGp73l1/g/R38FjewdymdtGL8e2dkH9C2bx
T/dp4J9ybfFPCevzbPgDWJ8jZH0+KOtROVmP9xt/Sah5LoIe3KoQvbLnM1Lf
/2p/+KksfuohDfxUXid+KiGfHSWf01MSLx4KiibfukZrv8/zIPX9r9aDf8ri
nx7TwD/lV+KfEvLZS/LZYILXtG/V4sk5PGiDt7Unqe//kv09jsUvPamBX8od
xS8l5PN9yed/XW/pbRidRLZmfY1PpnuT+v5X68EfZfFHz2jgj/IR8UcJ+Wwl
+Vze1Dd947AUOjPdYtuM9i9Iff+XKfFPCosfaqqBH8rvxQ8l5PMJyWfnUQOe
301OpV11K5g0W/2S1Pe/Wgn+J4v/aaaB/8m24n8S8nm75PPS7w5W2bvSaVX4
yj2vHQNIff+r9eB3svid5hr4nTxF/E5CPi+XfK73oIVJm2YZ9JdZyP477wOx
Tmapep3B4m9e1MDf5DLibxLyeYbks88K0zkL3DKpTcernk+uBJP6/lfrwc9k
8TMva+BnsqP4mYR8/kPy2bh5xf6Xf9WHJscmeVs+DSH1/a/Wg3/J4l9e1cC/
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
Fl3dr2IX3K/qLv2EWqKfVFl/c0+1d1nU1CnVq+3mEFL3rVbJfSvCfSy+jH4E
nTdARz43Rz7W5+ayPiu9sejqPhcvwX0u9CtqhH71RL/J/JFncqhObXOfKhdC
Sd3vaiz3u3T9bBz6HXT+AzryuR7yVT+sL+uz0muJru6PcW3cH0M/pJroh6vj
Tw7c2zWPqm0Y8yLfNYzUfTI/uU+m65df0U+hcwh05PPvyFf99ndZn5X+m+jq
vhp74L7acOm3VAn9trFpmUbagHwqG/rNLyQ2nNT9NWO5v0a438Y30a+h827o
yOfyyMf6XF7WZ6X/CCnW1f04/gf34zSul21PO/hT+qxpbw9/YNLfV67PrFfB
vOfZwCHuyzxpsOicKjpDp32ic8ebjy4u8wrjmiGvDmvCfAhMtYW5V+Dqb5vd
Itk6bUGQK72kHsJkK8z9P/yx8KBTDHf79LZ+H4dX1E+Yegjz4MZRnma34nlh
hWGOs08EE5jAPHLIiXZ21kl88/dqYebDQglMYNZ/YO0dMy6FC+uHfwovCiMw
gbnDyB1bFvmmcv+WFo3rOEYQmMDcNWZGh+xh6bynw7LBUwyjCEz7hLn76u5x
6569Zt+e3RafbhJDYPIT5j4/q54s+jOTa2uKDr4KiaXewgTm/qavB+9xyeLZ
IzxuVTsST2CaI8yD2roXVu6Rw1YTj70aMziRBgqTjTB+v1zOKP59kghMWcJs
kDipktW1QBrgsqHpvnseBGbFI8H9hXXxGnD7egkZiaNDyde3wtIfTb0JzH6l
2FtYFw+duw40HVtAETQz1tx++9EXBObZpRi6Ln4OuPeiUXe/942m9Lz27z99
9CcwZ5Ri6NwT8VlgzeFvtX7vGkfGP58M2Lg4iMC8tRRvEuYBiN8OHnrn/uam
bROp/FF9jy3LQwjMioeDywrr4iuC7Ywe5NU7lUxjTd+kuzQLIzCPB18HQ9fF
TwDf/HbS0qJKKplecf3tQ1g4gdmsFEPXxZuDHU6vmNz2YBrF2e3t3PNYJIE5
AXwXDF0XnwR2bDW83J0yr6nN3bGT1w2JJjDrl+JWwrp46HzPpZlz750ZtPJR
nU13P8UQmBU7gVcI6+JXg11GFxlqP2fSA/f4C3kOcQRmF/Aj8H1hXTx01saF
NjDYmE1f/f5167gkgcD8rRQXCfMTxP8Aa9fc8fMvyKEhYWuSVjRKIjAPK8WD
hXXxBmBVL1U9Rb3F8/r/9XYX6qmqx1mot6qe6qG+dka91StZX8kS9VXVW8uS
9ZW6oL6qetulZH2l+aivQ1Bv55esr3S9ZH3l6yXrKxWgvrZHvc1Dfe2EetoX
9RXMvVFfu6Oe7kJ9BfNO1NeeqKfeqK9g9ixZX6km6quqt3ol6yvNLFlfeXrJ
+koWqK+q3lqUrK/oj0noh7noh0k8ZNzm6Q3avyLz7qeqLolwp2HCbCbMN/zf
/N7keAi1Gd5yatJQLwJzK2G++9Zufcd94eQ8w+nS3Lu+BGYnYXZuMCfiz21R
NHyFQUpUY38C81Bhdh1U488x62IpeHtk++mHAwnMYH6+xOvq7OUJ9GBk7/5Z
X4IJzPeFOd1LU6Z3t2T6Oun7XP17oQT+9V5ezJw1q4GT26/vkyF/+exeuiyc
coQZzDk5b5cM10+jo4tPX7NtGkl5wnxYmAtMAur526RT6KrZvsmhUVQozMHC
/K7mDd+pzTKo0eY/cpsfjaEPwtxAmD9f27st9mImLdqVo/c3xRGYFwjz177z
Oi2um03XDz/oeeVjPIHZTvjXc943Ift0Dr05s3NmjH0igTlfmO3615t3rkYw
Jfw5q6vN8eeE35Mv4ve0FZ2VjniOE9b9/ohnxFMS9NvzX7JtpV/vneOzNzcr
8tb9/vo4D9B5DXTFK4V15wfxuvXWQb93YHdrp+8R9G3+jqeXlvrpzs9DnCfo
rHQn8FdhvoPz54rzptb7Ad3ldu/DHh+i6dj63yvWDwkgJ5w/A5xH6HwC+iPw
EWFGPI3AeVXrnYL+NDg7Jzg3jqo/n6Tv1zxYd37DcZ6hsx50BiNed/4jcd7V
eohnr0+WE5NTE2mmf8OxlSNCdOdfPQ/QWek+4OnC7I7nxwXPy3OsNxv6Ur2O
MZ/zkulKeMo/I46H6Z4f9TxBZwvoihGve/6+4XlT61lBN7KpcHz3ilRKTbh9
dv/QCMLzyMPwPELndOiKEa97fhHPy7FeBvQ1vZM0ldPTqHPmRhePz5GE55nV
8wydu0JX3FFY9/wfx/O+Gushntf7Pi44teA1bSjUxPy8E02oB6zqwVrReRN0
xDPidfUjHPUC8WQMfdMcM+v6cRmk/VLx+6ClsYR6wqqeQOdn0BU/EdbVnyao
Nxuwnjv0rflrplrOzKIK5YNa7mwcTx9Rf5agHkFnpSsuJ8yIJ0PUK2OsVwn6
jj1jKuiHZtP46hcNngQnUBHq103UM+g8EbriscKMeLqNeqfWmwx9V502D+9M
yCWzeotWFB1K0tW/t6iH0Fnpis8I6+rne9TLnVjvIvT/AxqyIj8=
      "], {{
        {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFm3ccl1P7x8+5vyeEkGSUSlJGgyJRISVJdmZkj+z9ePB47JEySmVmhZTI
3jsjGZGRUp6KJDIqUTJ+n3efy+v3x3md66zrnHOdc655382PPn2/06qU0s+1
lIryj1S4V/CHyn/LKZ0qeD01nKK8qeraK/9OaSulNVX+r/rcrXSR0lsaf6bq
G6n/Gcqbqf061Y9VGqz0rtpvVD5O6Qal91Q+Uf3WUf8Bypuo/8mqH868Sq+q
va3q5ym1UVpD7UeRq/+RyhurfC7jVD5H+UYqD9C4m5ROUnpF439Q3TNqW6D8
L9XNV/6kyt8q/1PlhcqfV/ln5X+rPFP5QyrPUP67ytOUP6jy58qXqXyi0tDs
ecB/lvJblM5Uel3lP9Vvgvr/obxSOk5wfa3vWOUbqjxX6THBXyv/Q2NmK39E
5VnKl6u8RPlLKv/CoSh9qnS/yp8oX6r205VGKJ2m9Jq6nKJ8WDbdoNcy9XtV
/Zcqz0rXqv5BpYFKk9TeUW0/KG2jtJbad1C+WKmr0tqVx70m+PcYf5vSpSr/
Rn12/esqL4929vmGyn/Ffmdpjsui/b+C79CYn5Rfp3Redr831f539E+C31aq
lGqV84nAUd5W6fLo/7rGF8GTlFbivlbO31VaOcrfCOWVUb5CcFb+Vs3zgO+n
WNN3yrdQuj3ga5T+JXj7mt/Cdpyb+vdUvkxpF+6pyleoz31KlytN1JidVf+r
UjelBtBK9fcqXaL0djJu5vt39hy9uRtKuyk1VP8DlNfR/dhf+foq7wstVN6H
d6dyf+WrqXwY70rlPaGF0h5K66p8iPJV1H6w8g1UvlrzPKB0ldI7mu8u1hz0
fEt1zZV/yVsBr9ouVN2dShcovZl8l79Sfmnynf4q6r5UvmHyu31YaUi83y+j
nXfwH8FfK90quKNSC8E3x1jazoj6W+O9XBr04Qw6Z58H67gLXLEe6mk/R+nq
wM0clymdLXir7Dl4Dxcm86F7lC4OfsSdG6l0vtIbyXjAx1lPUHmSaHCPaDFA
+REq/6U0ROVOSncIvrtmngYvO1v51cEf4ZOPZPMfxoNnocq3wWOS18pc26rt
p8DHe+NcRnMX4ny4J6OULov7wrv8seZx9IdvPqR0ffBP7t39SlfG/eNdj1Ea
FO8b2rCGc7NpND/K1LeI87o56MZ51tM8k5VW501VHndb0Bv61Ff9FNbCm1L7
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
Ahc2JbYkOOH96HjodsiA/wMXUPRn
            "]], PolygonBox[CompressedData["
1:eJwtkyssxmEUxt8jmEAxwcZsTKEQbKYoZhMoBJspBHP3ud8+fPhc5jZMMMEE
E0wwwQRzvxMkSZIkSZL8np0vnD3nOef8/+f65jb31HYnhRCykRTkEJnF8Awu
WghH4CC8DqyHj6J3ob8jyUgBvBtsw3cJ7iLT2B7BGWx7YD+8EqyBx9C30f+Q
UqQXvgVO4nsA55EJbLfgELZFsAdeAJbB4+jH6OnmNak21bgEfwGj8Bj4hWQh
XfAo2If/Jvi3+odil7GdKA+8AWyEz6Gfomea2+RTzCr8NbhPMdLXsJ2Bw/Am
sAm+r77hT4qDH4AD8Gqw1tynmGTzmWg2mlHc/Jtx+Bj4iWQgnfAhzQD/dWI3
2lGq+T/1b+VYMN9ZLDED9dqvfKAWnAeWwFc0a/gdOApfAyPwYrAcPgCOwa80
O/PcqkG1FJr7FPOBpCEd8IhiLPFN8BvRLbSb+xSj2Hzz3tSjeomY70Y70q6K
zHevG/gOXrNqVw+D5jcxDz8Hc8xnrtlrB+vwt0Rv6vEn+M3odnRDI+Y96/Z0
g7q1KWw7ug14OVgFn0LfRP8NPhPNRjMax3cf3KcY6VHz29UN65YrzGtTjapl
A36h3PBWsMX8beiNBPOcyq0aps3fzD8SgXGc
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0T8oBFAAx/F3MthsNkVsFikDA5KI4QYiCcPRKQNlMCBJ8i9JQrqEJCFd
SmE4gxtQJAOLhUFKycBiko8Mn/d9v/H18mP9jX2REMIw+Rkh/N1n9NClQLPs
BT2xizTbXtaUXaw5dkLP7VLNtTf0wi7XQntbr+1KLbL39M6u0RI7qQ92vZbZ
R/poR7XKPtUnu0nr7DN9sVs1aqf1ze7QZvtSP+yYtts3+mX3aJd9rZ92XLvt
xcwQfhggyQLf9HHAPJ/0ss8c78TZZZZXYuwwzTOdbDPJI21sMcE9LWwyzi2N
rDPGFVHWGCVNAwlGSFHLKkMcU80KgxxSwRJ5eGqYciQj///8C0PeQ88=
         "]], 
        LineBox[CompressedData["
1:eJwl0s8rH3AYB/DPl68/xNK2JGlpaa2spihqQlltNWFsCEVRWtKSkCRpaUla
0lrSF4WD7YADyo8DDjjgYDvg4EeZg73G4dX789RzeT99EkvrCmojIYR2kuJC
iJdN0RBiZDJJIjO8ZJYk5snmJw9ZIJdFHrPMK1ZIZp1CNkhhi2K2SWWXN+yR
xgHvOOQJx5Txm3ROqOSUp5xTzQUZXFPHX55xSwMhIYTn8r3nmr6Xyn+UFeZ1
eWWukpXmfnsR+41ygj5uqGecXi6p4Qc9nPGB73Tzh3LG6OSIEkbpYJ+3fKOd
HV4zwmc2KWKYNlbJZ4hWlsjjK5/4RQ6DtDBHFl9oZooXDPAgeneO0KPvtN6P
5P8TdclY5P4//AM9fEta
         "]], LineBox[CompressedData["
1:eJwt0TsoBWAAhuH/uE4sMiiFdAgJSW7ppFAGyq1IBqeEARkUmUwmk8lkMpkU
KSIWFgYMGDBgwIABA8ojhqe3b/svefGJzvFICGGWooQQUnQmKYR1Gtkgny2a
2SbKHq3sU8gBbRxSxBEdHFPCKT2cUcoFfVxSxjUD3FDBHYPcU8kjQzxRxQuj
vFLNO2N8UMsXk3xTT0JyCFOaqA064p7T7ruruR5gVId1R3M0rnHd1Czt1wFd
0wzt1l5d1TRt0y5d0VRt0XZd1ojGtFWX9JMamuxFfaOCmL2gzxRTZ8/rA/lU
2XN6Szblkb9/uyKTEntKz0mnwJ7Qk98zEbXH///5B7TdOtY=
         "]]}}]}, {
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"R", " ", "+", " ", "G"}], " ", "<", " ", "1"}], 
       Scaled[{0.35, 0.7598076211353315}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"G", " ", "+", " ", "B"}], " ", "<", " ", "1"}], 
       Scaled[{0.65, 0.7598076211353315}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"R", " ", "+", " ", "B"}], " ", "<", " ", "1"}], 
       Scaled[{0.7924783736545471, 0.5667562801868943}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"]}},
   Frame->True,
   Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
   PlotRange->{{-1, 1}, {-1, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{
      GraphicsComplex[CompressedData["
1:eJxdWgVQllu0BayLgYXdhdjd6Dawu7AbbLHBwlYETFQsRMVEEBVBUdCFNNLd
3Y1doM/H3h9v5jl35syatdb2+v/f2ef79zodVm+dY6CmoqLiWF1F5X/XiGKL
jNufvWhqSo3dXtUD6Ph4tczz+x1oQ/7CGtb9QymSeUxhHmbMQ3gc1Pgc0Ha4
P/nrhu0fvCqEFn02cKwx9TlNclozrdrHCDrMPPyYx1LmITx69Fn83PpwEN2d
P/19VEo4lXlNKRy70JmSSltauU6KoZ7Mw5Z5fGYewqPo4cppZ9aEUfopJ12N
M1FkeqmP9mGDV7StV0TqltvxVMw80piHBfMQHmOHao4OOhlB7d2b+U8cEUtt
DTQN3u54Q9U3mXXr9COJxjGPdsyjI/MQHtf8/QbUeRxFK0oPTD2SH08ug37e
+XXoLU2fd3tYUdc0us48ljMPN+YhPMoW7u86JTiGbDpmhLy5kkRdq20tvTHB
g5p93p/iG5lOH5nHTebRjXkIjwn5vVuZlcVRyvyJc76MT6Udm9LPDA9+TxkX
Fhy7cyiTJjGPJOZhxDyEx829GRr+jRPpnG5MQdNfafQucm7P+Lle5NB3gPaB
Htl0i3mcZR6ezEN4fFG3Uqs1JJl6p5xyGDA7g2rr+H4wTvAm41CNYL3YHPrG
PHoxDw3mITymXp/8bfziVAoxHmE461Em6d0buqHpKl8aY1iwvd+xPJrOPIKZ
x2LmITxmX/6zy/NdGhk2LOmz5W8W2da1r+WS60d16/k2rdungOYwjy3M4wHz
EB4HlsWVrApLp3r2tz+a6eVQya42D+YaBlCM/R23nIRCMmEedZnHJ+YhPB51
cVqvmpFBT3TnvnjwJJeGJ5/T/fTlA92eYrLy/clismMeDsyDmIfw4P2XKfsv
X/ZfkOy/Utl/mbL/8mX/Bcn+K4Wyb8NlH3c7SDGpTX3JvOGmH+VOgVX70kT2
aeumue1CTj2lQ41PPdQeH061lmoO0HqwXUel8k8YGSWnf5ljuFsn8eWWf/9F
0jTZ92HSB7pzfZhxfQTIvj4g+7wD14fUR21zm2nD9pq7S300X2s35F2j8+5S
H1E2D94uW/aBqrlf//vKNKyqD3SXvnBvSdy0e+FO1Gg2fUy2jqKs5U9fHhq8
V6fSnhhD0eyHGvshfmhL33jIfogfPUyrBaTmWbqLH0dR737i3RAaW/r36MdB
kVV9pFD6ik7Pt2bpKS708Oy34Re/xNLctAN7HP4c0LnQebJl58kJdIz9ED8y
pM8USN8ZzX6IH6MeLVusisvu4kezbcN9e+4Op8MdDWr2yIqu6kNjpC9FlN/x
bVvkSsODnhyfNC2R0vt2ubl5zWGdzZUfYDKJH4fYjw7Sp0ZL34phP8SP2QGv
CjtevuoufmxRKXm96WokYf4HM33LuKo+dlX62sbgk9WW/nSjUHWDkIq7KXTt
Y50/Ryce1an837f8t+/Yj3fsx0rpc1ek7xmyH+KHQUFDE91NN9zFD+/zd548
doumv6f61LMZnVjVB0ulL6rabBp9rSbIqZPG6fiKNJrt9Gn5tR7HdSwrC2SQ
D/vxh/24LX2yWPpmLfZD/NhbZ7PG2jE27uJHqw7z7+SnxNIo90vnY0uSq/ro
eOmr04c8GlWo/p4OeOb3dbbLIPWd8Xha/6TslyxqzX6MZD9Spc/qSt+dxX6I
HxOaZoZ6WdyW/ZCFHc//u6ytlkD4Xm52akZaVR+2lr589VbLZLPznjRxlU/0
2flZ9H6AR3vfz6Y6hpXfXzbtZD/esR/ixw3p29bsh/gRpnX+atS3O+7iR8AY
91PruiTR8gtPp96/n17Vxz9LX8+qdWa/djNvaqhyZ98G1Rza++XBkaRYM52k
yg2USx/YD/Gjj/T5j9L389gP8WPxkJGrslfddRc/2kdsPfBgUgr96b66nmd5
RtU5MFnOhb7b/rbwu+lDSTYH2un+66/9XM5kfHKz0JlS+QXmUwf2o4L9CJVz
YpKcGwPZD/Eja2JBt29B99zFjxHPG7p+GpRGNt6aoSlzs6rOkVlyrhyI2+5q
0NmPHoxc6N12UT7l7d41Tv32GR3Xyv5RQDrsx032Q/yYKefOYfZD/DBceOVT
zaEP3MWPdXsL+1lOTKeRy/3O/36cXXUO7ZdzyX90ll51e3/anjRgw8/qhXR7
8JJ77Y6f09Gq3D9FtJ79ED805JwSP4LYD/Hjx3pdt2Z3H7qLH5ZjfOz7Lcqg
5O975zRXy606xx7KuaZpp/fVtt8HGrG/vkbUsyJy+H1brZXzeZ1LlfunhC6y
H0nsh6Occw/k3GvBfogfR/d+PKatYecufrxVv9UlfGMmHbjQU3PQoryqczBc
zsUVDQMujnENpBotC50cl5bIeXVB9l8ZvWM/9rMf0+ScDJNzU5/9EL+cR49l
/5VBOSe15dxE698Xdcx3yv4KJws557rKudfW/kfy4plnZP+Eo7qcW8o51tvG
f/6GOcY6lR9v52gSHpFyTtka6amEmlxwF145N+iwnEPW7ayaWbXcL/01jsbJ
uXJIzhmXK88ulM29JP0zDsq50VTOkdp31sR7ZhzU+fP3f/8k0hE5F5rIOeHn
WrtTo+5X3IWH0vc3yzkw8sLVYOP5R3QSKvdnKnlIX98kfT4xXt95gMp1d+Gh
9G0v6eNfZx/qfXbYMXl/SCcVM+7LntKnS3+9Gz8/xlrO/3Qofbel9OEnjdae
u9fmhHx+mUTSV1tIn63WukWskcMt+fwyofTN7dJHDSKnlb1RNdV5Vbm/spS+
iq3SJy1shg2cNuaOu/BYIX1P6YNtLw2YHZ59SvZXDq2UvuYnfa7p05zypQ62
sn9yoPStttLHoue1dMoNMNe5WPkF5dFf6UttpE/dwkWfLc3uuQuv9A0aLn3I
oolq4z9PTsvzXaD0JQyTPqMdNvrswaP35fktUPY9rZU+ohuTu1PT8qzO1soP
uJBGSV8wkD7xIq1Y71zxA3fhkSL7XukDh6au29hkxHmdlMrvp5hSZV9fkH0+
6uP1drcXPnIXHsq+dZd9nGCfcL19rwvSn0vJRPalm+xTX9VJec+87KT/lkJ3
cb1Fy5oHknlwh47ra76nsCe7jvRRc6SWui3nj9gaRgZbew1wtrOmFY31T5sE
hdJ41sOM9YhmPUQPQ9ZD9DjU9VbFPA0ncjwSblPmG0lHGUMwmv44NtyylQuN
xam8+21jqQVjCMYT//XGodquFFNO/ZcYJdBzxhAM3WvTnesOdqONw7/vbxCS
TJMYQzCSNvT/OHncO1LRic3I+Pe+lMEYgjH8Zp0r4x550IcEJ9O3ozJoJGMI
xskaBwdl9Paky3vP9rxakElmjCEYEVvKIg+7eNGK5hvDd1hlUzRjCEbbmNU7
2un4UPdX442mj82lDowhGBtHRTd45+lLX+Z3aKVdkkeGjCEYLx9MfLp0sj/h
SznUrhfQG8YQDNX6b6b/Dg0gs4tx+snji6gmYwjGNOOeRdf0Amluf2d114/F
NJsxBGNExCBatjOMutpMT1vk4E0D0HPFS9NnlJnx9WeTVhFUP7U4+r91d2h+
3+ZB22ZEkg7rocV6DGY9RI8mrIfoMe97VrjF4kjyNtxrM3WOP30419D686UX
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
oSdzR2UO2faj14+hVv+3+mlu2Fqx9D1lpadcPRkaRwtljih6tGMdRI8A1iOT
9VDmgsqc8OSr68OT1KLphKwuUaE7fG57ke5077nldZJITeZ8z2TuZ8o6iB6v
WI9xrMdCmdspc7xSk+0HDm2NpRJZ714abHQmy4fuu9pp7JiUSotkDlcqc7ky
1kH0uM963GM9nspcTZmzLdSd9K5jUjzpyXph3s2987X9qZqlX9bOsen0TOZk
fWRutoh1ED0ush6iR02ZeylzMI/a7VR8JyURZD2kWd2kzeYP5DxxuKdjWgbV
kjmWocy1PFkH0eMI6/GC9VgmcyllTtUt/OuYDS4ppC3rlqiNh7OfBpF+hcOt
/INZtFzmTE9k7tSddRA9trIeooezzI2UOVLA1JwxNf/9zvSXdcml8GNPPodQ
kxftTDq3ySEXmQN9k7nQB9ZB9FjOemiyHnVkrqPMeSocwzMW+KVTuaydu1t7
vbkRRr7rLRevcMulujKnsZK5zR/WQfTQYj18WI9VMneROQn1a/T2mF1FRtXa
ynymj83bcDJqW2Po9UX5tEbmKDK3QX/WQfRow3rsZj2WylxEmZOs3f2o8+9/
v1cMZG1UoOZ3NDWCukYZN4n+XkDLZM4RLXOPdayD6KHJemixHqdkbqHMMa7H
XfSZtjGbrsmqPuWl/1rVKIo1K/hU36qIRI/dMpe4wTqIHnVYjxjWw0nmCsqc
IXjEobU2t3MoSNa/dhs+TOn0b1/TsrApA0vohcwJGsvcIIR1ED1UH1fqcYL1
4Hq+Us+X5krupORQ7PcVvy/mSW7UVXIklXWc80RK7qPKGBGS0zhIjqLkKo6S
ewhGT8kplNyil+QKMyVnOCo5gJILHJO5/RmZ48fLnF2ZuyfIXDxY5uR9ZY6t
zLX7ydy5rsyhTWVOrMyNT8lcVzCUOayvzGVTZW7qI3PUQTLnVOaeg2UuaSBz
ygkyR1TmihNl7ldd5oDbZU6nzO12yFztnszZbsocTJmL2cjcSlfmWH4yZ1Lm
Tv4yF8qQOdFgNb1HY+oF0CBZh/AKwah+rlrPUznBVE3WGrxCMArPxC3IXRFO
BbIKhmDMmff0mnlQJM2WdS6vEAy3licTew2LoTeyuvMKweiUvrRN+P046ihr
Z14hGKcfDlixq1EiWch6hlcIxtctte80O5RMn2X9xisEY8XA9Iw3ham0TNaV
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
Mr2QLjVZtf7HyVQSjPOM8T8z7DUg
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[1, 0, 0], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwlkk8rhFEUh+8Zn8S3sGXDwkKysLAYEhb+hQUlLEYJi1HCYpSwGCWkIQ1p
SEMa0pCGNKQhsWHDhvKcfoun3zPve+855713ylt66rsjIYQKKIMrGIN9C+GA
bIRR/IacgFO8gTyEmCmbYBzPkFGYwmvJNAya0vcM4XVBdUdMfbxuFj8nB2AN
fyZX4cvU3+tO4p1B65J4Imjdp6n/McTxM7IXVvCOoN/LeIy8hRye87lgE4+T
D1A05QI84tPkPRRMOQt3phkvIWU6jwLkTfue4N2US/Bh2leEEp4PmuPIVGMY
dkxzeb8L0zNflzHV9vmuTTX8m19Ms/s9pfFs0Lksms6gFWbwbbIKmvFXch3+
8Mqgd1E8Sb5BJKK1u17LdH5+Rhume/D9v6b3fq9dpu8rwTeeImug3XT/JzBn
eu89fkx9tvw/Rq/qoD1tpn170Gea3b8nYXrm/5V+Uz2/y3n8H+e3ba4=
             "]], 
            Polygon[CompressedData["
1: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
Dh44No+zgk5Fl3Jm/g8UMZwE
             "]], 
            Polygon[CompressedData["
1:eJwtlXtojmEYxt/necOY83lmmJkZZhg2ZvyBPyiKoqgpx5oyh6IcayvH2sqx
KMeinM1oDjmsjTWsYW2sObShiSwimojf5d4fX7/vva/ne7/3ue7rud/Yxavm
ZPsgCNL4RPDZwyc1DIJaWO2CYDf8wIJE+BnuhTXOdK3T+miYBJvQF8Kd6Hfh
UOqZsCPsBsvQF8Bc9Nswkfp82AF2gaXoF2EAG8Ek6hfgQJgOQ3gW/uL372EG
12dgLByv38HlYD96CRzO9TLYGfaCFdx3McxHL4bDqC+CnWAP+BB9FlyNXgQH
U58J28FIeAt9DlyPfgMmUJ8NI2EHeAf9NPyO/hZOpH4KDoCp8A/6PLgZ/RYc
Qn0ubA87wWL0GXAF+jUYT306bAvbwuvoG+EV9Ao4ivoG2APGwpfo2fA4ehkc
QX0l7AqjYZW3fj5Er4Zjqe+CUaH1V33eAkdzXQmLWLce1lLvD19726/2rf2v
c/a8ei49321v+9W+tf9v6EfhT+op8Le3/Wrf2v8mZ37LV/l7z5vf8l3+r0Kf
Bq9SbwNvwqlwEHohXII+BbYJ/7c+KPSWJ+VK+cpx1i/1Rf0pgSdgOnq98ox+
WP2iPgo2e8uTcqV8NaOfVN6oj4V/veVRuVQ+/zrrt/qq/nrqB3SWYB2sQ8+H
n9CHwS/wEByP/grWOztPOjc6P9/gNjgGvUrPi74VvqEeB99565f6pv6Vo+fC
BurxsBEegRPQ3+ga/SD8Sj0Z/vCWJ+VK+cpCnwwvU2+lfsMcmIL+VP10ljfl
Svmq97Z+IfUCGMe6SbB1aL/XfbTfJ+jP4TjqebBPaPuXD+rnUmf9Ux/Vz4jQ
+qs+L2o5lzqfec7mheaC5kO5t341OPNPPsrPmND6pz4qbx+c7V8+yI9+oeVP
OVSez6M/giOpr4PdQ8u3ci4/7zjbv3yQH71C81c+y8+Xzvqb1tLvvqH5K5/V
r+vOzo/Okc5Tz9D6pz4qT03O8qccKo/9Q8uXcrYCHka/D5OoZ8EuMEq+evNT
vsrfStZth++pJ8CPcC08Tb0cJrNuDewGY2CNt2vVpZ9y9n+6r+5f7c0P+SJ/
zjmbJ5obmh8vvM0bzR3NnwJn/6f76v513uaN5o7mzzFn81hzV/P3mbd5rLms
+bzP2ftC7wW9Hx57e1/ovaH3xw5n81JzUfPxgbf9ljo7HzonOi+9Q9u/fMhq
8U3+HXI27zXXNd8rveVVuVV+M9EzYCuu+RpcQv8HsznfAg==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0UsrxFEYB+Bj8EHmY1DTNCTJSG5pGpJbmlwmMUlIQhLSZCQhCcltwcLC
wsLCwsLCwsLCwkLJl/D8m8XT75zezfs7Jz6Qb5+oCCHkuIuFEJ2rK0NIyF8S
VSHMkGSHLLOk2KWXOerZo48FGtinn0UaOWCQJZo4YphlmjlmhFVaOCHHGq2c
Mso6bZwzzgYdXJBniy4umWSbbq6ZokiGWwrRTOkrXYPeNSIri9FbyFr3jPmN
/OGMbw75osQnm3ywwjvzvDHNK2O8MMQzPTzRySNpHqjjnhR/WCMk7VGIlf/n
HyZ8Ngc=
           "]], 
          Line[CompressedData["
1:eJwl0b9KAlAUB+CbCj1Hz1FE/yiJCJEICQkRCY0wiSiJCIkIkQiRCIkIiRCJ
kIaChoaGhoaGhoaGBoeGhugZ+qThu79zucs55w5l15PFgRBCgftICFE56JiU
P4zGQigzxglpdpjglGV2maJJhj2mOSNLhTjn5NhnlgtWOGCOFnkOmeeSVaok
uGKNGknaFDligQ4ljlnkmg3qpLhhkwZLdNnq1xbQNWvU3MMyLRt2EZMj/bv3
W/lNhy9a9GjySZ0PqrxT4Y0yr5R4Ic8zGZ5I8UiCB+LcMcMv2gvj+tiO/P/P
H6v4NtA=
           "]]}}}], 
      GraphicsComplex[CompressedData["
1:eJw9WgdYj/37JevNyN57JXtmxi3K3hGSFdlCiCibVPbISiUZEZEiSqelvfce
3/bOXsXf3337ud7r+lznOefc7/t+n+dzf57nPnoa7FhkqFSnTp2n9evU+f/1
iLZS3oWDLthcsqyB7Yhoiq2wVjh8DMCcrAZ7A+qHkhnzJDximCfhofvR8GmD
2c8xw23dnHrv48hc5WNot/EhCNWKOTh6bRQtZp6EhxnzJDwqAmaVTVnmjoyq
TjaeM5JowFC957ZHInB3yVy/hKxYKmWehIca8yQ8jl8ZqnbE8BV2Do7L3u6Q
SmUP1sw5uy4GitNuWipnE+gI8yQ8Spkn4dHJsI3hW+M3qL/Vsn/vbxmkObbN
5IhTcejp3T5k+oRkasc8CY/JzJPweK7+/c6Pw28xd7HDuPJ+OXQ9JHhkk0cJ
WFNlNvtoSSo9YZ6ExzXmSXj0qbej6tY0X7T/eDArKD6XqpYd7DcrMgkOvRRR
b65lUC/mSXhUME/CY+fW3LPjI/2guLj0+J3DeaRdMqSzZXUKspdMX/RJO5uM
mCfhocU8CQ/veJ1BqToBcBk2Us1sYAHZmipUQlqn47xWUmm7Hzn0mnkSHreY
J+HRSCMobF9aIPZFq0TqJhfSR2UbpUZjMjE067TLyIUKqs88CY/3zJPw0HEa
u7nd2iBoGpXuGn68mGbenPlFWy8b0fsmGC14mEcLmCfhMYN5Eh72TR838igK
RtNmQe2aDi2lBVd/7fH3yYFRy8qh23/n0y3mSXjMZ56ER+mervd1jEKR9PiO
V2FaGR1cmVK5NiYXKo8d3lvqFlIR8yQ8hCfhMTrzvNaHT2FwmGW+xu9UBT3o
67aprkKBp1o6L+4/KaIRzJPwuM88CQ/efxGy/6pk/+XJ/iuR/Rch+69K9l+e
7L8SNNJvM1L1/i6NOn//xFD7dkXdo0674nDr0w/UtGPJJDP30yKjvRrpL7f/
+See1A5RUna7IFi33Pqtxi2cZss+jpN9HSL78pDs08ZWdnPGmVp5S3205vok
9dFhg/MYn1YXvKU++nF9kvqYJX0kXvpKsPSFI9In7qxImeMU64ZWC+l9pm0C
5a9yfXl4tKnG33LpSRRvd//typVhqO998/cri5j/7fuB0gfs2U/ix0CLeqHZ
xZe8xY9Y9pP44Sh9ZZD0mXGD3lrmZnngwbkv4y9/SiadHLP9Lr/MNC72mXmp
z8w0OoJm99LvRmFq1e9j79XjKVf6Rrn0kdHsJ/Fj0sOVenVx1Vv8OMx+Ej9y
pC9VSJ+KqrkT1K3cE+MjnpyYMSedcof1vb1t3RGNbX9/0Exqt3N80KC9sTja
y7DhwPxE6iF9Z4r0oXD2k/ixMPRVWa+r173Fj7bsJ/Gju/S1qdLnNkSeqqf/
3QvRyoZRtXez6Mb7Jr+OTT+m8fc//1IObatT+Xrr9Xj4LgmzXH8phVZL37oh
fcyA/SR+GJa2NNfaestb/NjKfhI/VklfvCl9svb21sk3GgJuvVXOpNbm0EK3
D6tuDDyhcelvAQUFXLjz5JFXIupYDm1mNzmd7KTvVUsf/M5+Ej9Mm2xT2aBp
5y1++LOfxI/b0lffS5+dNebhpDJlP5j5lwxzd1aQ8u5UuDY/Jfspnzr1XHKn
JCsZ5H3lQnJlJmVJ35wmfXQG+0n8mNYuLzrA2kH2Sz46sp/EjwzpyzOkT9vY
d8q0vOCP6WvfJZ5bkk9+I317BH200DD6e/8KaNfz/66qKaUBX2ssT8/L+V/f
vS19+DL7SfyIUb1wPeHLHW/xYwf7Sfw4J33dXvq8otHZg2rtA9Gyzp0Dm+sW
kumn+0czki01Mv5uoCIK1vQ+vbFvBlZfdJ19714uDZG+/Un6eDb7SfzQGzNx
bcHau97iRxD7SfwYLOfCFzknBu/83TH49jtk2Jl11/rTL4d7nFV88LLWmPX3
BpZQt7gdZvdnZOH3AINm/jUKipK+P1vOgQHsJ/Ejf3pp/y8RTt7iR1f2k/gR
KefKXDlnTFN2eRr2Ccb9icsCuy0voeK9e6YqO5zV8PzbP0pp/POWnh/Uc2Af
2CY6Syf/f+fGQjlHTNhP4ofRsmsfGo697y1+iJ/Ej+1yLi2Sc+rd5Hzd+o9D
sCtj5Obv9cvIYfQKp+4nzmuo/t0/5bTBtGz4pem5mLQq+MLPRwXUTM4dMzmH
/NhP4se3TVpe7e8+8BY/DNlP4kdTOdfM5Zxr4az72XF4GCYcbK6S8KycXH46
KHV2v6Bx5e/+qaSLmu8eD1+uQNZX00UdlIroiZxbD+Uca8Z+Ej+Omb4/rqbi
7C1+XGA/iR8uci46yzm5omXoZU3PcDToVOb2VL+S+Dy7KPuvmryV7fvGbsmD
+cVBbdSXF8t5VSLnVR4tZT+JH3xePZL9Vw0v9pP45TwqkfMoD+jy87KG1W7Z
b7FkJedWfznHuj3+lqk3/6zsp1hYyrk5QM7RIXYhSzYv2qfx9+fuk/i/cyZR
zh1HE9060eYXvYVHPTnHkuVcs+1u096m00Hptyk0Rc6JY3JueFx7drFa54r0
0xQIT8flXGp8Z12qv+KQxq/f//8nnY5In28vfT/Ys3HvVgOueQuPw3KOCI+J
F69H7ltyVCPt737NJkif3i59Oz11vfvIOje9hYePnANGci58Xnh4yLlxx+X9
Ipd+n+Y+Gyh9t+qHj/aSJFt5P8jFL+bpnfT1J602nHfqelJ+vzyaJH2ys/TN
el06Jpu42Mvvl4eJ0oe7SF82jJ9T/aauhcarv/st/399zlj6nrXduFFzNO94
Cw8f6aO7pa92uzJyYWzBadlvhf/rU2HSt9q5FtbouzjKfirEKumD4dIXExd3
cisKtdK4/PcGFdMv6TM9pO/Y4/K77e2dvIVHrfSxntLXrNvWbf3ryRl53kvp
tvSJCdI31GImnzt07J48z6WwlT4kPLSSina3uXROY8ffH7iMJso+3yj7/kVO
he75ivvewkN42iR95fDsjVvaTrigkfX3/lT8b59eln076f3N7g7LHnoLj0zp
A1ekL6Q9TrvZY/BF6ddVZCb77K3su6C6M4qfBThLP67CQdnHPrKvI57sOTpU
6Sk6aXVaMmFHDDXOrkj8b+MdLBnWIWLnvHiaEKdOK3fHQM1ubs5yl0AKZj2J
Hg1YT6KH6GkA62HWz752sYobnh6NtasOiqcNDbUvjTF1wg/dX7GOL5No8df8
WGu9eAQZmdrNXhRCB1hPosca1pPoIXoKZj1afzs+/lJnD0zB6eJ73ZLJf7Dt
vA3WD2Bvnp+c0C2NjLpcWf9GMwnr6J7+xG/h1IL1JHp4sZ5Ej+2sJ0PWwzlk
075oNU8k1dCIFSZp1G3Jx8ZXbz+CllNYZkOLTLLQnPq1WC0VdVrEdhpqF033
WU+iRzvWk+hxivWkxHpMvjHXveloL2wZ//Vgi6hMOmg2KzjA9Qn2Gqbsst2X
Q3c2fLBs3yID83ce2tbCMZY0WE+ixy7Wk+jhwHpawHqkbB7xfuZUH9TRSFYo
/rxPlsfGaH5f8wwh+8P3eAxUkJf1nS7TvmbBftmV2cp74ymB9SR6FLGeRI83
rCcH1mPs7SbXpj70RViam8XbSQq6aVhj36L0OTqf8dkXlZ1HW5Y9XDq+KgeV
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
T8Jjqcyt3ssca67keo6S8+nK3Ex4zJGcUHg8lbnRcJkj2Upu5y053hOZWwmP
W5IDCo8GMrfZKXOcMsnltkpOV1/mRsKjVHI+4aEvc5NnMkcZL7mb5HakJ3Mb
4TFOcrx/uZ6bzC2+yRzDUnI1yeXoucxNhMdpyen+5XbKMjeQOQWlSG4muRv9
J3OLf3OMZMnh/uVyMhfAGPmO7ye5mORqtErmBsJDVXK2f7nbCvluTpbvaBPJ
vQZLDqYn3+3CY4/kaMLDQr5b5TuZ1kmu9UZyrlPy3fzvO9pAcjLh8Vy+G9vK
d6Sl5FbakmM9k+9W4XH6Xw4mudgiyQkGSG5gGzKoNN80HLd5pYWSUwiPm3Ld
TnS/NvCc/t/c/uWAipdX+8dAVqplnoSHh1x/JbpHMidvJXPzbu8Dvo21iYOs
5CxzeuHRVa53F91AmVMvlLn1yVc3x2coJeIUrzRA5uTC44RctxDdUZkTn5e5
caX5LrPDO5JRxSsdkTm18KiQ69WiS5E5bbTMbXW1Zvj0ykjFMl4pWebEwmOJ
XF8uuqEyJ1WRuSkad68TNCMDvrzSEJnTCg8fue4vulMyp+wnc0u12M+amz2y
0J9XOiFzUuGhKtcHiC5D5oQyl6SQ2YWaDS/mIJRXSpc55b+5ZbBcDxPdSJnT
yVyQap7GKpYG56KWVxohc8J/c0Ph6ZfotGVO1lDmZsNbvT3uXKuArKQlczrh
MUyujxDdTplT3Ze5leHeh31+/vke2cAr7ZA5mfBYL9c3is5W5kTTZG50I+Xy
uzlbCnCTV7olcyrhcf3fddEFyZwmX+Y2fL4VyvlWSO9kTiS8nF+Fcn4VQl1J
96Fms1CM5pVGyjpGrtc7X2/Q6cJI1OeV6sraQK6Xnk1ZWrQ6FmW8UomsgrFw
sesNq4h4LOKVFsiqI9ffdDqVPnhcErx4pdeyesv1Xrn6XWPvpaA3r9RT1j5y
3frByNV7WqXjDK9kJetZuf5xe+M77Q9n4jOv9EHWL3J95ahcxZuybKzmlfRl
XSPXDWpXtBo6KBfreKW1sq6X6zZrpr848uccucYrXZVVMMIDRiyOu56HCF4p
TFbBqNOv2+fe0fmoyyv9VuVVSa6PtFK22dugEKN4pRGyqst1S8nxtSXXT+o/
Jjbt0Wv0btKm9y3dODotfy9AeCQwT8LjmXP9lC0jfHDc5Htmi8uJ9IQxCca7
Npt31Or7IT836/qp6BQKYEyC4ZYQbfzOIQBacwN1appk0DPGJBgOV0abnM1/
h3uezirGM7LJjjEJxtnFt02XqIWg3qXg/N1TcsmaMQnGwTb1zbtuC4P79PH+
T3MUtJ8xCcbmhC1HClwjsL7Wxb7kUD5tYEyCoXsl9viTj1Fo+6K7eZ+uhaTD
mASj1wDbgDe3YhC06ZLeaq8i6sGYBKOj1fx3dm9jYdKtwdiby0uoPWMSjBal
SsHHsuPQL2Ff28SvpaTCmASj4ayXIRvqJiDZsvRDc5tyasCYBMv7a6K8v1bK
+2iivI9WIkVy9tWSu3ewm4fLmm8x+VveiF5romi95omFt7v6ouqalaOJVwyV
bo6JbLXxFfYsuaO9xjOGkuXvAYgf7dhPU9gPA/aT+FHEfhI/9khOHiK5uffI
tQE7b/rBZ+TdgRnT4qiN6iR1rfYBOBft5a4ZF0/+JbcTHCu9EO97qk7Sp3gy
lhxf/HjDfgL70Zr9JH74sp/Ej1aScysk997aofOD9lcCob81YeKDlYkU0Phb
h7IWQRjYqCKoacmfc87dY3vHCb4YNWib1+zhydRCcnjxYwv7aSX74cd+GsR+
RLKfxI+nklP/lNy6c22Clc/ZYPxwbLDAeE8KGVc9r7nYOBShk7qlJv9OJa89
XXblHvLH5WsLTfy2p5GL5OjiR0f200/2Yxf7KYz9eM1+Ej9UJWduK7lzeO45
I0OLMFxPG20w0TqdeiVszRlbPwIbTeaXObbLJOdRx/c4+wfis9KY4WMeZVJf
ycHFj1D20w32owf7aRP78YD9JH7s/ZcTS25sFjRjUdOjkRjbatOe/xyzKN6z
b2B2bRTqLfX99bJdDl37VLJvV8NgDByjYqK7O4f2SI4tfhxgP41jP2LYT+LH
FfaT+BEoOW9fyX1tltS9tXxiDMqc5gRszsgh/6gqnYCfMYj7kGLRxTGXTrgv
ODhuVijSy4/oXGypoADJocWPq+yncvbDl/0Uz34cYz+JH60lp3WT3LZyelbT
wW9i4TXZcE70RgV18ot4Z7M/Do7n3rc4NjiPjPe8OlT3XDjOOH4cFvHn3G0p
ObL4UcF+8mY/OrCfxI8d7CfxY53krJMld50+3utQnTHxsMowTxz1MY92v3Ae
s+VzPIwHNL5Z5JlPa0d1OxYaG4lJyzaoNJpXQGslBxY/tNlP1uzHLvbTbvZj
FftJ/HguOWmE5Kb2g65Xx79IgN5+m1U3DxVQ2L1TzhONE6EZ1Kv3XK1C6nfA
3z+kcQwqmqWWaZYXkqvkuOKHHftpBfsRyn4SP/qyn8SP3xWccy6T3PNLt70G
D4YlQa2Na9Fv5SLqdX1d55ZVSWhhMMHFLbqIuqbtDXQZFIvbAbNDzayKqZb9
JH58Zj/1Zz96sp9ash+d2U/ix3zJKQslt5zfclHCgSfJ+O4avNPwajEdtJp8
Nn9rCnJqddQ7rCihNuP7B12YF4d5pj73X6mV0lzJUcWPeeynH+yHKftJ/GjN
fhI/7CVn3CO548N6Q6fNG5CKkNk538N6lFKCWdffr4r/fP/e2OZjXlhKTW9m
BO/ZGY86Q4ef+BBURrclBxU/7rOfQtmPOPbTc/ajMftJ/DCRnPC35Ia/Pzfx
7PkgDdeKvh0b5lJGA3b82GltmI5D6ien5+0qp7o/zocuu5QA1/y7awcbVtBe
yTHFj1r203X2Q439dJj9+P39r5/Ej4/KXSOGaL/EmM/RT07GRdN7xiQYkZal
cT4Rb1BjGHnRs288hTEmwXig7Jk6bzGgH+s2Z4hBEjkxJsHwDZyys6rCD94a
1xs52aUSGJNgPDnhvPvV8EB0fmju3zE9gx4zJsGw1Wqx7/DeIMDyuU9wkxy6
yZgEw7L+vgPTX4dgJ/WxVXqUSxaMSTD2BWaaN68NQ4/PNqYTZ+TRXsYkGIYn
tI4mT45E7CPlpfsL88mAMQnGIq3HJ+xPROPYGrNRL04U0nzGJBg9lJQDR+bH
YES7qpaVvYqpG2MSjPYG3u/aN4xDXvjaKjW/EmrLmARDxX9H8M9+8bh8NCFi
3eoyasqYBKNer96h2TMTMGXM9Ed2tX/uP2MSjGeS68ZJzvvLmXPdMsl5c0KP
R3857Yk5z/TczS1iyVVyZNGjlvUkemSxnkSPuZLbSg5MtpLbSg5Mb2YuTDrV
4i1cOk/e8TEggeZITvwvN74lOfG/3NiT9SR6lEkue1ty2rGSy6pJThu2/rxR
kwhfNLHoO2BznRQqlRxY9BgjObDo/7xH/dWT6HFKcld3yWETJXfVlBz2VZ8v
u+KbB2Dbh8YFWRrpdEJyXtEjXnJe0cOD9SR6tJJcNUpy1nGSq66QnNUpX3/v
LZ13iFhZbb/YNItaSo4reoyVHFf0cGQ9iR4GkpuWSI56WnLTvZKjXnQK2L/u
WjCu5W8ZXJCWQ2skpxU9LCSnFT3Os55Ej+eSi9aTnDRZclHJWenw+gFmA9ND
Mf1mZuMepgpylRxW9EiSHPZfLmvGehI96kju2VxyUFXJPZdIDrq9z8XDH7tF
4Nv8BcV67fPp1xvOWUWPvpKzih5bWE+ix3zJNW0l5zT5l2tKzqmf//WYl0EU
nBsEvLvqUUBzJUcVPfZKjvovV13OehI9bCW3VJMcM1Byyx2SY/ZZNDRAUycG
y73U78boFNEtyUlFD3/JSUWPXqwn0aNUcknJOam15JI1klN2dlME9t0bC+Vd
D480+VBMJZKD/stFW0oOKnp0ZD2JHhMkd5wqOaSB5I6WkkO2amUTpHwtDm9U
O6+adqGUxkvOKXqskZxT9GjBehI9rCRXjJGc0U1yxfaSMyobzwyp8IzHtoyz
E44OKSdLyTFFj2eSY4oejVhPosc2yQ31JUc8LLmho+SIv2NrQmPTEtDpUp2O
3hEVtFVyStHjkOSUokct60n0UD2mpL40MgZHfCZM9t0QQILpGGMMePjq+obA
eLSIjbTQiA8iwdSKMUZGbavZ65UEh7zV0Z4URsMZkyNjjP3Uc81Jt1QM/fK+
nbpLJI1hTMMZY1Kn5IArzhlYU3+K67IzMSSYBGPa5DP9nByy8bBZk3ibKXEk
mARD9YXDu9TZuahul/Al4Vs8CSbB6D/t4L61wQqM7XG7U2vXRBJMgjEkdUn/
kin5ONJ/w6SFhskkmI4xxrBtw9J3+hQgeMRQg/OdU0kwhTKG+u/GZ7+NK0Ir
jW8nI2PTaBRjEoyxlwomHfEoxjJtP+cmpzNIMOkxxsS+vtWNhv95D5tnFTlz
UhZNYEx3GEPD86bj+T/vMYVLdd5bfMomwVTMGFpZ8xva343CeA/jLsee+ZFg
0mAMtbaZhVkz4hAaXH/9ry7vSDAJxpAJl2ZVUiKWpdk8PmAZQoJJjzFGrZ3+
tHZ0CgrL1T5++RxOIxhTMWNoWNS0bDYkHft/vxm/2yCaxjOmA4yh+eT53i59
s1DPUtVv38ZYEkwNGMNp84vytudyMOdSVb5H13gSTHMZ42HNWbvbygpcueX5
36c/fVYw2TCGy/lNC/qezEOm09FBI6ySSDBlM4Zrr6lKT+oUQPXprAU7J6eQ
YBKMZx5d3UeZFWLLq9Z7nn5JJcG0jTE8Znwz9P5aBA/fjGvlLukkmATDOz2u
vdbuEtSE3vMasC6T3jCmX4zhbfQkNLyyFFPijbI3dcwmwaTFWO5vuNxfyP0N
l/sLTJ69d3F7tUhcH3au8bpEX3Ic21b/cvMYZI5bOuSOtT8JT8JDeMpmHg/C
q5p1to6F6tQei7I1A+nRqjA4NoyH0ZySvV2/vSPhSXgITzuZx9P3TrsGHEvA
yyVuN1Y8DaZnJw73dqtNRM2qg29vrA+lJ8yTJ/MQnn4xD7f2eonjTJOhtUkr
N7lTOHk8GmXh9ykFZ3Y1a9AuNoKEJ23mITydYx6eE5uPm7kzDQkHktQWW0TR
25iS0piy9D/vjfNVQ7vFkPCUxDyEJ+Hhvy7QdtnGTLyYNmps8fcYCvxiNy9H
kQXd8A6zGiXGki/z5ME8/JmnZcwjP1CjzqihOfgxv3aF6rM4Wq8yIPVreQ5u
J+Ru17aOJ+GphnkIT/bMo3hpezevP+/hU5YHHV6/IYE236lvfXiTAvmZjy4e
10wk4Ul4bGSeCplHaen7dVNV82BpcP6uY5ckMhqVrdEoPw9DinZ7+H1NIuHJ
mnlsY56ER6V5RNvwO/mI27osOCcumXYEv648t7oAe6o1Un8/SSHhKYF5CE8m
zONDiwfBi7r+OVf39izrZplKe/SuOLRLL4TP9wa1E9enkfDUmXkYM0++zOPz
3aOmadeLsO5QqcpKSqf9FUaL7HSLUb9edA+zThkkPBkyDxPmqSHz+DZaf6BB
mxI8tHgx4tbnDDp4ZGZ91bgSzGt6XetNTCYJT4+Yh/C0gPk/+3J0Zsn5Ury/
YKab+jiLDrXu8/LJ3DJcabt207dT2SQ8fWQeZszTdebxf4QPO1Q=
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[0, 0, 1], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwtkT8rhnEYhX+HT+JbWGSQxWAwGAyUMFD+DZQwvEoYKGGghIESCgkJCQkJ
CQkJCQsLC4vr7hiuzul53vd+7nPunMqGkvqslFIuZEMbnMCyUnpER+EDf4zW
wxz+Au2EPfwlmoEj/DXaDWfyjGZYwt+gfXCFP///xhb+BZ2CH3wxugpN+EO0
FqbxpegGdOBL0HVoxb/Ge0gs/4yMwxfPH9AReMPfo4PwhL9F++FO3v00ZsnP
Yu9zecfIcyxnil235UyReV+eHbPu5dmR7Rpfg+7CML4S3YEBea/Y6V3uMnZ6
xhehK1An9xSZZ+SOD2BS7mAfxvAtyTeYx+eji1Ah54h3a/jy2Bd65V7jfp9y
T9HRt9xffLsFP5t8g1/5f9F1D34huV/R7WZy7xk5U1n0KGu865LvVgiN+GW0
AKrku8Vd2+WssXet3FPsOiTni75G5dzR44ScLy9+J8+OudX4P0HSbI4=
             "]], 
            Polygon[CompressedData["
1:eJxNmwf419P7xs97lAYlLbRlRUrIyJYVIpGtZZSVWaIkIiMlSoiKpgZZkVFG
yUhk7xWRPUKSfv7363M/rut/Xd/P9Yyzz/uc+zzPc863Re/zu/bLU0pDi5RK
0VFZSltJMVL0OcnXijaTfI3oQsm3iG4jebTo85KHqFymgleI3iX91dI3Eb1K
dIHSr6ZepV8lerf0l4v+T7/L9Bsv+UrlayQ6RPRp5b9etIXk60SfkfyKaGfJ
L4u+I3mCaFvJd4sukTxYdDPJg0SfkjxWtJXkMaKLJE9WO43V/r2iU6UfIX1L
0RtFn1X6QtGDJC8QfUPyZaINJQ8UfVLyAJVbp19//e6U/jzpa4ueK/qY0i8Q
rSP5fNHHJZ+tfL/pd5Z+46QfIH190f6iTyi9j2hNyWeKPir5YtG6ki8SnS+5
n8r9od95+t1OPtGf9TtDv9sk365824uOE12s/BdJ/5d+F+p3h/Tjpd9B9E7R
F5T+nOghkp8VfVNyb+X7Qb9e+o2V/nTpq4ueJvqI0t8V7Sb5HdEPJL8oerjk
JaJvS+4luoHknqIPM17RjSSfJTpP8mLRTpIXib4leaLa2UzzP0F0ivTdRb/V
71T9xkgeLrqB0q8VnRD9biN6V/S/u2gVyaeKPiT5Y9ETJX8k+pHkFaKnSv5C
9BPJj6me7VXfPNGZ0n8m/cmin4p+rPRVor0kfyP6meSHlW9b5X9I9D7pP5D+
eNH3RT9U+pPSt1H6E6KzpF8pfQ/Rr0Q/Vfoa0XMk/yn6leQlyreb8r8gen/M
aw3RM2J+k/gL9ftX8jcSC/EX65frt4r1rnIdVP5l0Qeke150F8nPic6Jea8m
2jvmn3mpKrlHzM960fMl/yP6dfI621By31hvf4ueJ3mt6ErJD6jerVT//aIz
pP9V+j6iv4iuYH9I307pC0Rnx75uKjos9jfrtp7kS2L9sg82YYyxH1j3DSRf
GuuffbUpOBD7C1xpzjoIfGEfby75itjP4EJjyUMDH9jX20m+LfY3+6C15Dti
P4BL20q+NfCJdVlL8jmxPn8SPUPyj6JfSP5e9DTJ34l+Lvl30bMkrxb9Mnmf
byy5X+z3WZqHLTQfM0WnB45sKXpT4Am4ubXkmwM/wbEtJN8QePaW6DGS3xR9
X/Jc0T0lPyD6quTpqreZ6p8mOk36P5Lx4xfR6sm0fuDKYclz/7tol+Rv8Gfy
fB/EvkymDQJ/jo6y1Hl0fJvH9TtAuidEX2e9ix4o+WnR5cnr6ALJ/4v19FMy
XoFbhyZj32+inePb0xZ96Jr8zQ+M9UAaeTgb1omemLyW/kleT4eAo8m0aawz
8vwZZThXqBOcPljyM5nxel2kk4/xsrbWiB6bvMZoe7X4I5PXJDw6+lVT/K/J
eA/uH5GcznnCuUKZ32KMP4pukIyjh7IvA0/BxSMkvxT4CC70lPx14AP7qC9z
FPsJnDhX8l+BF+BWd8lfBn6xLo6V/Hasj9cZt+Q3RN9LxrFTJH8eeAZOnSD5
w8ArcPs4ye9lxm/W8dl881jPrPszJf8c6591f7rkH2L9g4u9JX8b+DhZdBfJ
U0VfkvyQ6D6SHxFdlozzh0l+ITPeTxLdSfK9oi9KflR0P8mPib4meZrorpJn
iL6cvO73kvxgrP9XRbtIfk303eRz/0jJSzOf/7NFO0i+X3Sp5PtEd5c8S/QV
yctZ57nnjfkCO/4WPSEZQ/6K78t35vtjR+woeWJme4K1g72D3cMaelh079zj
XhZrlTV7UjIGsi7A9/0zr48asVYOSsZ8ztYfxB+YfBaAxewh9g6YTLkacU6Q
Z5z2fV3t/9tE7wXHRDeWfIvoPZLnKN8eueeB8c8U3S33PDD+8crXQPnvFJ0s
/VPSd8y9r9nPy0SPyj3PzO98+pAbB9j/B2S2T7BTDpE8RXTn3OuA73+j6q2h
+m8QnSj9KNGNJI8UnST5HuVrl3sd8P3nie6bex3w/aeLts+9Dvj+YP1a0eOS
Mf+7ZHsCu2LfwDvwu2Nm/Ps+2f7CDjsg2Tb4VnSf5LPw29DtLV5/Fexmj7O3
+8X3Yj9jt/GNDs7cB86dbslYij2KXdol1gprhjTyrI0+U6427WY+f2mbPsAz
BvreI8aDjnxV0Ge2n7Cj9pf8c4yXfKQzTsbLudUpxs4cgPWcYeSlDGnk2S/W
GHZcx+S1hoxen6RyzmPgr8t83jMvzA921d7Jdscl+pW57Q/skovEZ7ntE2wN
5py5xubA7jpJuk8y21+c3etFT0k+w7HrvtOvR9h32PL/49skn4X/Jp+Hh4qv
m0yRSSMPexX7HDudPUvZFrFGakdZ6uiefKZy9vKheyafwfgumWiv5LO4XuDV
UaItGG/m87mTaP1kHl3v5DO7U6SPjDoYG/4Ofg9jpG38C/wM+rBBZns7j/ro
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
             "]], 
            Polygon[CompressedData["
1:eJwtlFdoVUEQhs+eq7HFqDF2jT3G2HsX9UEFBUUFBYXYwIAVFKygYAUFKxiw
QgQrJASNvZfEklgSe4k1KvbYYvf7mX3Y++3szN3dmX/2NBw/fdi0MAiCroyy
jC6RIFgP77OYBCtjr4J3XRDcg02w+8P9+EvBLDgATsK/H+5l9CKmCP5lbR9s
gN0d1ocrYSd4C+Y521tn6KxKsDGjD/MM9tW9MvnpC8cRmwk3MboR8wgWsbYZ
1sRuD2vA3ox05q9DyykeexeMYL/y/9UehditYRz2BvjC2Z7dsbfBJ/jbwurY
qfAN/seB+RSj+VvWtsPa2B1hLX+27qCzSrFHBmyE3RM29LVTDVWrFP4/EL4P
rfbvYBrsgf8pLMa/A9bF7gzrRKx2quFtYhNgNPYSmOuspp2xV0sv/IkwBnsF
zMd/JzBtpbG0vOcsd9VAtagKN6oX4AP42FnuqoFqUS1id9Mdn4VWc9VeGnxy
dueRjETWjsFFrI2C34itDL/CZviGMz/KvDz8CAfDucQeCcynGM3nsTYCfiEm
Bn4OrTfUI+qF8fj7SQfWo6RRaL2nHnwZWs1UO9Xwj7OeXO1rpFoUsLYGxmK3
hFUilrtq8DC0NfkUU+isJm2wZ8LL+GsHaqwgmAJ2478EO2IvhzfxN4HlsRfB
bPwFsCn2IHjQ31l3Vw5T8WfpHTFaEnMOprKWondETE3lENreOkN75TjTVhpL
64p6B4yFzK8T2wBGYc9RvYm9Btthz4dX8cerR7FnwQP482ASdjI87TWTdtJw
Jf5Tge2tM7TXMWe5KUflWs7nphyVyzRn2n70Wn+Ai2EH/DfgGWe9qx5WL1fQ
O2Hs1HsM7U3pbemNfSf2OWyOPRqe9D2h3lCPLMV/Ak5mtCLmAtzqTBtpJK3+
hXa27pDPvBEsi71A+Tq70wRGC9bOwHWsTYS/ia0Of4XmU8xZ5rGwBI6Ba539
ZzajLTFXYIaz2ksDaVEaDoEJ8BCchX8oLGaPaL2h0HyKOey/Cfo26Bsx09l/
kr1G0mIVa2PhT2Li4I/QelM9ql7c40xbaSytIxF7m3qjx/2ZOlt3WOjszeru
yiGX9bowxJ4B053lpNqqxtm+JqqNarTFWc2lnTSUViXOvr36ButbXE/fGcZ0
5hd9T6u31eNpxOYEpq00lpbLnNW2xNf6e2hvQ2/kvM9ZuasGG529Ge2tM7TX
Dmd3Vw7Kxfne1xtQr2c50149oF4oA/8Dwf7UVA==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0U8rhFEUB+Dr5YPwLYx6myZJSDKSmKQZSUNMaCIUoQjlbxGKUIQSZWFh
YWFhYWFhYWFhoXwMz5vFc8853Vv3/ro1hVJ2tCKEUOQ2CiHpY0us3pHmgWYe
yfJED88UeGGIV8Z5Y5p3FvhglU+2+eKAb0754Ypa96bUXGUIW97yS5252nyj
pux3VemZ4JpOLhnjgg7OKXFGOyeMcEwbRwxzSCv7FNmjhV0G2aGJTQbYoJF1
+lmjgRXyLFPPEn0skmGeXuZIM0uOGWKm6GaScnJGzoy89/JHyR/IX47+/+cP
10w16Q==
           "]], 
          Line[CompressedData["
1:eJwl0c9Hw2EcB/Cn1T9S/8Ym63eSyWSSmUymTb4lWYpG0SgajUaxUWw0SkQd
OnTo0KFDhw4dOnToEP0VvabDy8fn+eH5vD2D+bV01BdCKHIXC6FfTVoY6/VM
8ECKRzI8keOZAi9EvFLmjQrvVPmgxicNvmjxTYcfboh7N65mDVE3yy8J/ZD+
Vk3YXxhwlk2uydBlgyvm6bBOmzSXRFwwR4tVmqQ4p8QZszRY4ZQZ6hQ4YZoa
yxwzyRF5DhmnyhIHjLJPjj2SVMiyyzA7LLJNuXdHzil57+XXhhH5t2L///MH
rBc2zg==
           "]]}}}], 
      GraphicsComplex[CompressedData["
1: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
lwgzdFoGlvWCsN5VvK+GUmOTNV6jdpppTwa5OQ8NDaO6+oP7GDTwpBPCXA8M
nWsLM/Rff2/h4tfTnxF09MfAQ5sMLmo7Vc73qZ4dSV5Vixrm1vShjsLsDYbO
z4UZOvmC5X00hj7vrjLapvpVrd/g5jFRP2No45v7385W9aMXwrwZDJ3XCzN0
2gJ2KT7f8bSsbFSVwHAr7XLjSbm29ROodfiq5P4VAmiZMLcFQ+c/hBk6tQNL
vU2mlUNDDU0CbbTlZ7n/eFg/mcJd23olfQ+kcsIcCYbOIcIMnaLB4k+lUKty
j33OOV3Thr6LPtzUNoWeB76Z5vlfMIHZsxR7CLOK9wbL75tGsc+t2t02/1dr
e+ptzX1d0qixR4C3+dZQshHmpmDo3EiYoVMzsPTH12S6/9AR9+03tOs7Vr2c
6ZpOGx/c6rfyYxitE+ZNYOi8XpihkzFY6n0mjTX4Jzty/i3tUJ9WrScYZJD/
v4duDdoQQUOE+RUYOvsJM3QKBEt9z6JyFaePzR9mr625eKCDU1Amtb64pEmt
N5FUQ5jbgqFzK2GGTu3AUs9z6In3APvy7e5ok79P69NwbjbtPDbkZPqqaEoS
ZhMwdN4uzNBpN1jqdx5tOPRH9cbVHLWOl1Y/M8nIofCdzX4+yoqhu8IcCYbO
ocIMnaLBUq/z6XzrA30vbrmn3dXn4Ki09XnUae3XdccN48hEmLuAoXMHYYZO
3cDy/fGGCvd/XnbN6L62fLO2frMuh1CI+YE3qW5W3Mig8YyBa4Mp6s6mvd3K
3eW01I9f6jUJpX7cecHDw/f4xvBqQUfLRZDPhka9Wxba8p29IZaFPmG0v53V
9+l6Try15Z3h/r9+x+DTta6+N3vAE1a+DXdbGU1tL68rnFjuOg/lI1n/No+i
JkX7B5g2ceGq85ee3PMympYt/BTd3fYhvz0TFZsfGkf7PHwdTOre4ohv1HOu
cSw9eLFiS1B7V7a80iSqT6t4+tE9rt4ax8d84dHT5BYDkyglq7mRg74DGw34
vKNmYAKNvTTBuXpfN+4ZE9oyd1sSmZd1n2qv1XKLN1Pe35ySQkNqGreN6+/I
PwdGpaaaJlO6Uc+3Y4Y/4yXVRvQJXpFCXUPtTmf5MW8oN+KTR8U0CrqSUXig
7X1+Get0+OngVBpsUe3C8Jvu3PV2y9jbddNoSYhBhukqD/au1/9L7ON02t2t
9qSrd53YbNupzhdz0uhYxV19Urs+56LR33YddE+ne38+OtDj3XNu1KHTt/f/
ZFA3z0F3HvRz5gUNV4ZsMH9NUf8Uhu1x8WSvzKjWC1dn0HebDq2Dt3rxKk3z
n9VbZVHiTKNq/u4u3OHRCOMJw36d/8jFG1povPnkoQcvBjTMotFVr3qs+enN
TyfVKqcfmU0nc8yMUsc84ncz/mjSviCL1gyOqPnsuQ/Pbnv6n3pe2WS2QW/h
74d8udaSChXpWC4N2uXu+yXUlZ99+MblLueQ2/VRjvPGvOBWXitrF67NpZTY
PT/sq/uxofHnyrMH51N+rby2teY94SPnopcmjMij32o8mfBfkB/nLx756GWT
fOo6/P3Vsede8sOjOVXXvyugK/82OND+tRtP7elcxfVtPk3b0jnv0kx/fli2
1bx/fQtoq73hwOxGAfzXOftR49yDqVX5v87697Rk++uWY5duCiWqF61vYmvN
Px6fnWDSPpze3Cx/0KyTLU95dWCyeXwEWWq6pdk7X2O75C3THM9E0cTgOUM9
B/3Ln96vnPnCIIa+LTlkFetznUdXnv9XSlEs3f58//vbSTf5SuMp8746xNOc
4wlzq8Tc4oIuBgvqLEqkKi2qPGm52J6trZv0MK+aTK5OvRv2z3XgsR3PO9mm
J5PRyIXGkzbd5fcP9Ho7PkuhBrHHw5d9d2TLQUdc3C6mUvrDuY3I8x6P9C3b
78WGNHLbs/7Fy8P3+e3kHa7h49PJbOzhLTPHO/Gl2A9/pui/ppV1LfRTaz5g
g6Vr3PLLZNDwRKeIfyIecH5+puZrbAY1ufniwJdLzmy+ZdGzSi6Z9G59Yq+D
812YysZRndNZ5DfwQ2rN1g8569h0jxZG2WRdsarp1cyHbFo3cFjn4Tm0LajF
0PYOj3iQ5Siv/s1yaeqlPoUP1rlyRjuPESM+51L7JeOsqM9jPnN/gO+UkDwq
22XRRP8vj3nAQOfR8+3zKeaT8feZz55wqleXlysPFtA99xMOqfvc+PjEG+O2
LHhDh4/Zzl0zSstG8P/2if9Hyu+bLX4fKT9Q+ZmI50OIh87iF+7XIJ/nIF/F
74K/qPQZ8BOV/1cg/h8pf1DtB2bxCw9rEM9vEa84D/6h8vsOit9Hyg9U64FZ
/MHjGsTzEcQr3ge/sAL8vabi75Hy/9R6YBY/8JQG8dwC8Yobwh+cAD/vgfh5
pPw+tR6Yxf87q0E8P0K8Ykf4gcq/ayv+HSl/T60HZvH7zmkQz+0Rr7g1/L9U
+HXrxa8j5eep9cAs/t55DeJ5E+IVr4Xf5wB/7qn4c6T8O7UemMXPu6BBPLsj
XvET+Htb4MdVET+OlF+n1gOz+HcXNYjn6ohXXAl+3lD4bzPEfyPlz6n1wCx+
3WUN4nk24hVPgX9XHX6btfhtpPw4tR6YxZ+7qkE82yFesQX8ukj4a3nir5Hy
39R6YBY/zlKDeC5EvOJs+HPKT+svfhopv02tB2bx36w1iGcN4hX3hh9nBP9M
6kcAKX9NrQdm8dtsNIhH/Qggxbvgv+2G/9ZY/DcCc/NSXA/+XB34c9fEnyMw
Xy/FNvDvbsC/GyD+HYF5UCnuB39vAPy9YPH3CMxhpTgA/l8Q/L8V4v8RmFeV
4qXwB53gD/60KPYHCczlLUvyfxYl/cNx4h8SmCeW4jHwF0fBX7wg/iKB+XIp
Pl/Kf0wX/5HAnFmKU+BPxsOf7Cb+JIG5ZynuDP/yX/iX28W/JDCblGJj+Jvr
4W/6iL9JYH5Zij3hf2rgf9YR/5PA3KAU14A/WhH+6N/ijxKYF5Xiv+Cfqu/3
RfL9Tq2r1W19ZWYoRXfoFxJ7+zGp73l1/g/R38FjewdymdtGL8e2dkH9C2bx
T/dp4J9ybfFPCevzbPgDWJ8jZH0+KOtROVmP9xt/Sah5LoIe3KoQvbLnM1Lf
/2p/+KksfuohDfxUXid+KiGfHSWf01MSLx4KiibfukZrv8/zIPX9r9aDf8ri
nx7TwD/lV+KfEvLZS/LZYILXtG/V4sk5PGiDt7Unqe//kv09jsUvPamBX8od
xS8l5PN9yed/XW/pbRidRLZmfY1PpnuT+v5X68EfZfFHz2jgj/IR8UcJ+Wwl
+Vze1Dd947AUOjPdYtuM9i9Iff+XKfFPCosfaqqBH8rvxQ8l5PMJyWfnUQOe
301OpV11K5g0W/2S1Pe/Wgn+J4v/aaaB/8m24n8S8nm75PPS7w5W2bvSaVX4
yj2vHQNIff+r9eB3svid5hr4nTxF/E5CPi+XfK73oIVJm2YZ9JdZyP477wOx
Tmapep3B4m9e1MDf5DLibxLyeYbks88K0zkL3DKpTcernk+uBJP6/lfrwc9k
8TMva+BnsqP4mYR8/kPy2bh5xf6Xf9WHJscmeVs+DSH1/a/Wg3/J4l9e1cC/
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
Fl3dr2IX3K/qLv2EWqKfVFl/c0+1d1nU1CnVq+3mEFL3rVbJfSvCfSy+jH4E
nTdARz43Rz7W5+ayPiu9sejqPhcvwX0u9CtqhH71RL/J/JFncqhObXOfKhdC
Sd3vaiz3u3T9bBz6HXT+AzryuR7yVT+sL+uz0muJru6PcW3cH0M/pJroh6vj
Tw7c2zWPqm0Y8yLfNYzUfTI/uU+m65df0U+hcwh05PPvyFf99ndZn5X+m+jq
vhp74L7acOm3VAn9trFpmUbagHwqG/rNLyQ2nNT9NWO5v0a438Y30a+h827o
yOfyyMf6XF7WZ6X/CCnW1f04/gf34zSul21PO/hT+qxpbw9/YNLfV67PrFfB
vOfZwCHuyzxpsOicKjpDp32ic8ebjy4u8wrjmiGvDmvCfAhMtYW5V+Dqb5vd
Itk6bUGQK72kHsJkK8z9P/yx8KBTDHf79LZ+H4dX1E+Yegjz4MZRnma34nlh
hWGOs08EE5jAPHLIiXZ21kl88/dqYebDQglMYNZ/YO0dMy6FC+uHfwovCiMw
gbnDyB1bFvmmcv+WFo3rOEYQmMDcNWZGh+xh6bynw7LBUwyjCEz7hLn76u5x
6569Zt+e3RafbhJDYPIT5j4/q54s+jOTa2uKDr4KiaXewgTm/qavB+9xyeLZ
IzxuVTsST2CaI8yD2roXVu6Rw1YTj70aMziRBgqTjTB+v1zOKP59kghMWcJs
kDipktW1QBrgsqHpvnseBGbFI8H9hXXxGnD7egkZiaNDyde3wtIfTb0JzH6l
2FtYFw+duw40HVtAETQz1tx++9EXBObZpRi6Ln4OuPeiUXe/942m9Lz27z99
9CcwZ5Ri6NwT8VlgzeFvtX7vGkfGP58M2Lg4iMC8tRRvEuYBiN8OHnrn/uam
bROp/FF9jy3LQwjMioeDywrr4iuC7Ywe5NU7lUxjTd+kuzQLIzCPB18HQ9fF
TwDf/HbS0qJKKplecf3tQ1g4gdmsFEPXxZuDHU6vmNz2YBrF2e3t3PNYJIE5
AXwXDF0XnwR2bDW83J0yr6nN3bGT1w2JJjDrl+JWwrp46HzPpZlz750ZtPJR
nU13P8UQmBU7gVcI6+JXg11GFxlqP2fSA/f4C3kOcQRmF/Aj8H1hXTx01saF
NjDYmE1f/f5167gkgcD8rRQXCfMTxP8Aa9fc8fMvyKEhYWuSVjRKIjAPK8WD
hXXxBmBVL1U9Rb3F8/r/9XYX6qmqx1mot6qe6qG+dka91StZX8kS9VXVW8uS
9ZW6oL6qetulZH2l+aivQ1Bv55esr3S9ZH3l6yXrKxWgvrZHvc1Dfe2EetoX
9RXMvVFfu6Oe7kJ9BfNO1NeeqKfeqK9g9ixZX6km6quqt3ol6yvNLFlfeXrJ
+koWqK+q3lqUrK/oj0noh7noh0k8ZNzm6Q3avyLz7qeqLolwp2HCbCbMN/zf
/N7keAi1Gd5yatJQLwJzK2G++9Zufcd94eQ8w+nS3Lu+BGYnYXZuMCfiz21R
NHyFQUpUY38C81Bhdh1U488x62IpeHtk++mHAwnMYH6+xOvq7OUJ9GBk7/5Z
X4IJzPeFOd1LU6Z3t2T6Oun7XP17oQT+9V5ezJw1q4GT26/vkyF/+exeuiyc
coQZzDk5b5cM10+jo4tPX7NtGkl5wnxYmAtMAur526RT6KrZvsmhUVQozMHC
/K7mDd+pzTKo0eY/cpsfjaEPwtxAmD9f27st9mImLdqVo/c3xRGYFwjz177z
Oi2um03XDz/oeeVjPIHZTvjXc943Ift0Dr05s3NmjH0igTlfmO3615t3rkYw
Jfw5q6vN8eeE35Mv4ve0FZ2VjniOE9b9/ohnxFMS9NvzX7JtpV/vneOzNzcr
8tb9/vo4D9B5DXTFK4V15wfxuvXWQb93YHdrp+8R9G3+jqeXlvrpzs9DnCfo
rHQn8FdhvoPz54rzptb7Ad3ldu/DHh+i6dj63yvWDwkgJ5w/A5xH6HwC+iPw
EWFGPI3AeVXrnYL+NDg7Jzg3jqo/n6Tv1zxYd37DcZ6hsx50BiNed/4jcd7V
eohnr0+WE5NTE2mmf8OxlSNCdOdfPQ/QWek+4OnC7I7nxwXPy3OsNxv6Ur2O
MZ/zkulKeMo/I46H6Z4f9TxBZwvoihGve/6+4XlT61lBN7KpcHz3ilRKTbh9
dv/QCMLzyMPwPELndOiKEa97fhHPy7FeBvQ1vZM0ldPTqHPmRhePz5GE55nV
8wydu0JX3FFY9/wfx/O+Gushntf7Pi44teA1bSjUxPy8E02oB6zqwVrReRN0
xDPidfUjHPUC8WQMfdMcM+v6cRmk/VLx+6ClsYR6wqqeQOdn0BU/EdbVnyao
Nxuwnjv0rflrplrOzKIK5YNa7mwcTx9Rf5agHkFnpSsuJ8yIJ0PUK2OsVwn6
jj1jKuiHZtP46hcNngQnUBHq103UM+g8EbriscKMeLqNeqfWmwx9V502D+9M
yCWzeotWFB1K0tW/t6iH0Fnpis8I6+rne9TLnVjvIvT/AxqyIj8=
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[0, 1, 0], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJxFm3ccl1P7x8+5vyeEkGSUSlJGgyJRISVJdmZkj+z9ePB47JEySmVmhZTI
3jsjGZGRUp6KJDIqUTJ+n3efy+v3x3md66zrnHOdc655382PPn2/06qU0s+1
lIryj1S4V/CHyn/LKZ0qeD01nKK8qeraK/9OaSulNVX+r/rcrXSR0lsaf6bq
G6n/Gcqbqf061Y9VGqz0rtpvVD5O6Qal91Q+Uf3WUf8Bypuo/8mqH868Sq+q
va3q5ym1UVpD7UeRq/+RyhurfC7jVD5H+UYqD9C4m5ROUnpF439Q3TNqW6D8
L9XNV/6kyt8q/1PlhcqfV/ln5X+rPFP5QyrPUP67ytOUP6jy58qXqXyi0tDs
ecB/lvJblM5Uel3lP9Vvgvr/obxSOk5wfa3vWOUbqjxX6THBXyv/Q2NmK39E
5VnKl6u8RPlLKv/CoSh9qnS/yp8oX6r205VGKJ2m9Jq6nKJ8WDbdoNcy9XtV
/Zcqz0rXqv5BpYFKk9TeUW0/KG2jtJbad1C+WKmr0tqVx70m+PcYf5vSpSr/
Rn12/esqL4929vmGyn/Ffmdpjsui/b+C79CYn5Rfp3Redr831f539E+C31aq
lGqV84nAUd5W6fLo/7rGF8GTlFbivlbO31VaOcrfCOWVUb5CcFb+Vs3zgO+n
WNN3yrdQuj3ga5T+JXj7mt/Cdpyb+vdUvkxpF+6pyleoz31KlytN1JidVf+r
UjelBtBK9fcqXaL0djJu5vt39hy9uRtKuyk1VP8DlNfR/dhf+foq7wstVN6H
d6dyf+WrqXwY70rlPaGF0h5K66p8iPJV1H6w8g1UvlrzPKB0ldI7mu8u1hz0
fEt1zZV/yVsBr9ouVN2dShcovZl8l79Sfmnynf4q6r5UvmHyu31YaUi83y+j
nXfwH8FfK90quKNSC8E3x1jazoj6W+O9XBr04Qw6Z58H67gLXLEe6mk/R+nq
wM0clymdLXir7Dl4Dxcm86F7lC4OfsSdG6l0vtIbyXjAx1lPUHmSaHCPaDFA
+REq/6U0ROVOSncIvrtmngYvO1v51cEf4ZOPZPMfxoNnocq3wWOS18pc26rt
p8DHe+NcRnMX4ny4J6OULov7wrv8seZx9IdvPqR0ffBP7t39SlfG/eNdj1Ea
FO8b2rCGc7NpND/K1LeI87o56MZ51tM8k5VW501VHndb0Bv61Ff9FNbCm1L7
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
Ahc2JbYkOOH96HjodsiA/wMXUPRn
             "]], 
            Polygon[CompressedData["
1:eJwtkyssxmEUxt8jmEAxwcZsTKEQbKYoZhMoBJspBHP3ud8+fPhc5jZMMMEE
E0wwwQRzvxMkSZIkSZL8np0vnD3nOef8/+f65jb31HYnhRCykRTkEJnF8Awu
WghH4CC8DqyHj6J3ob8jyUgBvBtsw3cJ7iLT2B7BGWx7YD+8EqyBx9C30f+Q
UqQXvgVO4nsA55EJbLfgELZFsAdeAJbB4+jH6OnmNak21bgEfwGj8Bj4hWQh
XfAo2If/Jvi3+odil7GdKA+8AWyEz6Gfomea2+RTzCr8NbhPMdLXsJ2Bw/Am
sAm+r77hT4qDH4AD8Gqw1tynmGTzmWg2mlHc/Jtx+Bj4iWQgnfAhzQD/dWI3
2lGq+T/1b+VYMN9ZLDED9dqvfKAWnAeWwFc0a/gdOApfAyPwYrAcPgCOwa80
O/PcqkG1FJr7FPOBpCEd8IhiLPFN8BvRLbSb+xSj2Hzz3tSjeomY70Y70q6K
zHevG/gOXrNqVw+D5jcxDz8Hc8xnrtlrB+vwt0Rv6vEn+M3odnRDI+Y96/Z0
g7q1KWw7ug14OVgFn0LfRP8NPhPNRjMax3cf3KcY6VHz29UN65YrzGtTjapl
A36h3PBWsMX8beiNBPOcyq0aps3fzD8SgXGc
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0T8oBFAAx/F3MthsNkVsFikDA5KI4QYiCcPRKQNlMCBJ8i9JQrqEJCFd
SmE4gxtQJAOLhUFKycBiko8Mn/d9v/H18mP9jX2REMIw+Rkh/N1n9NClQLPs
BT2xizTbXtaUXaw5dkLP7VLNtTf0wi7XQntbr+1KLbL39M6u0RI7qQ92vZbZ
R/poR7XKPtUnu0nr7DN9sVs1aqf1ze7QZvtSP+yYtts3+mX3aJd9rZ92XLvt
xcwQfhggyQLf9HHAPJ/0ss8c78TZZZZXYuwwzTOdbDPJI21sMcE9LWwyzi2N
rDPGFVHWGCVNAwlGSFHLKkMcU80KgxxSwRJ5eGqYciQj///8C0PeQ88=
           "]], 
          Line[CompressedData["
1:eJwl0s8rH3AYB/DPl68/xNK2JGlpaa2spihqQlltNWFsCEVRWtKSkCRpaUla
0lrSF4WD7YADyo8DDjjgYDvg4EeZg73G4dX789RzeT99EkvrCmojIYR2kuJC
iJdN0RBiZDJJIjO8ZJYk5snmJw9ZIJdFHrPMK1ZIZp1CNkhhi2K2SWWXN+yR
xgHvOOQJx5Txm3ROqOSUp5xTzQUZXFPHX55xSwMhIYTn8r3nmr6Xyn+UFeZ1
eWWukpXmfnsR+41ygj5uqGecXi6p4Qc9nPGB73Tzh3LG6OSIEkbpYJ+3fKOd
HV4zwmc2KWKYNlbJZ4hWlsjjK5/4RQ6DtDBHFl9oZooXDPAgeneO0KPvtN6P
5P8TdclY5P4//AM9fEta
           "]], 
          Line[CompressedData["
1:eJwt0TsoBWAAhuH/uE4sMiiFdAgJSW7ppFAGyq1IBqeEARkUmUwmk8lkMpkU
KSIWFgYMGDBgwIABA8ojhqe3b/svefGJzvFICGGWooQQUnQmKYR1Gtkgny2a
2SbKHq3sU8gBbRxSxBEdHFPCKT2cUcoFfVxSxjUD3FDBHYPcU8kjQzxRxQuj
vFLNO2N8UMsXk3xTT0JyCFOaqA064p7T7ruruR5gVId1R3M0rnHd1Czt1wFd
0wzt1l5d1TRt0y5d0VRt0XZd1ojGtFWX9JMamuxFfaOCmL2gzxRTZ8/rA/lU
2XN6Szblkb9/uyKTEntKz0mnwJ7Qk98zEbXH///5B7TdOtY=
           "]]}}}]}, {
     Frame -> True, 
      Method -> {"TransparentPolygonMesh" -> True, "AxesInFront" -> True}, 
      PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {Automatic, Automatic}}], {
     Placed[
     "R + B < 1", {0.7924783736545471, 0.5667562801868943}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.5979298228788*^9, 3.5979298822391853`*^9, {3.597929926290399*^9, 
   3.597929957601404*^9}, 3.5979300079521627`*^9, {3.597930040719385*^9, 
   3.597930122225048*^9}, 3.597941532014031*^9, 3.5979416205365667`*^9, 
   3.5979430205191097`*^9, {3.597943584918853*^9, 3.597943609314157*^9}, 
   3.5979436744151087`*^9, 3.5979449521724586`*^9, 
   3.597944987107996*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JLd9QEXjUZYhVPw/QwwQ2FqjHIzPx7l79KDH6g3bFuMmumwKxpX+pUv/pIsX
79OdO0+5T5P2ndeLAmKNTln/vHSJ7l+8SE/v3HEY7xPUvvN65leAGa7ILRs1
i/X2TdjoFnQYcFD26RWtcTY2UnBwKPXpE0mvv/4PuTwnp4wGDRpGd+/+EqT7
19j4Ghd1zvOnl1++TgMGxNPo0dNo/PiZ1KtXOJ0+/W5nvcjJk9eopGSnznlP
9lk6fPg8RUbGUmBgMIWFRVBiYqY4MLYKYTc59afrL79M8QMG0LTRo2nm+PEU
3qsXvXv6dLAeudcaG7mIs5tWgJzXNSSEevfoQVHh4dQ5KIhmJybSd2+LNkLO
ctdOnqSdJSWmcn50/vBhio2MpODAQIoIC6PMxETHdJAhm4ekRLmaqgd8/vwi
zdpFOf/Eib9R//4xdOPGD0ZjgcrKw1wkUJ939eo31KVLdzp69JLzlaravBUr
ttD+/X9psd7585/JZB0//qY44Ml5SUlztXzekL9Qkoy+gN9cvUrdu3ShS0eP
OozuXVtWrKC/7HeO7mi8tvdwZSWXDdITXJ6bS2ca5F6e/v3OO7QkNZV2FBcb
RT47f14m6s3jx7mhwNykJLpx+rT8lQQS5MUeoj3DcJqHgW25MflxgpqaHlJU
1GA6cuSCw9iCtO+0Z8+rlJGRJ1pM7XnVGfoAbZf0R5lJYUzsbqqrj9HEibOo
qKhOb+/iqwl8QqWl+6i+/pS26/8pVClDAfRHba8X018+iJZ7pWOa/7MmTqS6
oiLu3njhyBF6dc8eyssQLbq0byhF4m/3mjVUlpPj7KjoS09u3aJ9paV0qr6e
frp9O7SjstSeMUc95SgmZrjc4YWHR4m9O+foypUv6cKFL6i4eIdo63Xhi0A9
/vn5myk3t9zIUSeRNG39Q4f+yvaNZlnHjl2hwsJasUU51PLkS5u1I5cIt56n
TiJx2qp/PXSIV/XXY/mlFpQvLlwQG4smVftmTld2cjJtW7WKFmk7olHx8fTh
uXNGmq8cO0a1hYViy3KgXE0DubIY8lphyNVwkJQppqTs3fsneuONz7X6/yJF
REQ7jOMI2q2VljZQerrzaUCoaRvZuvUolZUdoOvXH3VWir0PNWh1OCddPuHk
l1S722Np243Y29F27f8h0dH0482bQabN4ejWrXSgrIweXb/euf0hRltKH7ex
bHmUuHnzR+3oHkJvvfUv4yhx6lRTq3CeOfN37ZgUJs9yjKOE2C2dO/eh/GWU
vXz5ARUU1LSY5218/37mDIVpxz1xNmQcJcR+SaubLY4STadOWR4lfrl7V54G
aGdWRnAfXL5MNQUF8lcwCPhUEHDFEeP7goBP0gN+8OA57fRspLZDyqLs7GJK
S1uqVdrn++iL9+37M40YMZmyslZQcnK2DLR2mtRbr7Znz35Ay5dXUXT0EBHH
XiCExtnQn/fto8kjRtCKrCy5iYtwamdDYfpi7avc2pPHjaOVc+ZQRV4enair
66PXzA/OnqWq5ctlhdUig4Ki+HIAtEUbTyrFrlQcBkWVMhqHCVfF1qxVIwfy
0zhxFvu2h01NsqoY76AW6sXmqOUa5lNRegSQvh9I2g9Q4fagGgBK8XUX/QCq
wR5Uf4BC9w/2AZTi+0K8Re0FKMW3oEQC1F6Aeg6gFF8jMwCg0C2ptqDkkigA
2AMAe9yFzdPdf28BuwEgCtizCFY0QKHbhx2AGghQuwBqF0BF24PaCVCKr8ga
BFA7AWoHQCm++CsGoNzeaXZBKb7OLBag6u1BxQEUeqKwHaAU3wcXD1B1AFUH
UHFqqMEAhR7T1AKU4rv7hgDUNoDaBlCKbyT0FlUDUIrvWUwAqBqAqgYoxRdV
DgUot0/0XFCKr99Eg6JtBagtAKX4UtHhAIWe3FYB1HAPKLlkBABUeQmQvnh6
rfhIAECPvisBwNM7ZF0WoUHjNgPUZoBSfDPuaIDaBFDyJcMt+j54CRgDAG6b
Kbj4oogaC1DlAFUGUIqvfEYD3aFGKBsBapwaSnavsW7l4gIYrwYw9xoyfEHt
eUoBaoIaCg2Stx6g1gOU4rvMJwMUare1DqAU39A+BaDWAtQa3oYS1QCJAICa
wJUAXxRRaJC/EoAqBqipaijZS9DoxNQKsBoApqkB0Oh9RQBVyHmZ4QEgl8xg
3cjYKqA7ictaHF/QkHwFAFAAAMlqgUkBqJUA1dzENlUNkMohQmaXAw8UAS0G
HtA9WAZQ+exBuhqgufc/MpsHPFAEtBj8QfcgF6ByASpDDTUboKxb2GepAbI4
WMjss8ADRcBcBrjtISGXzlMzO5/NWvf2WKBmtsUQVHq8rXuzLFQDLGTd1r11
FquZXcxmPfVGalHCe8CzDJgLAM29rZaqmc1hs1nAbHMfslw1s3kgjRkA0Nxb
Lt8DQC7JZ7XI2Cw2tsy5nvVBY7nT7AzZO6eVsRQ2tlLN9QLWmALMzhBTOWuV
mtlCVjsDmE1itavVzBaz2iRgNpHVlqiZXcNqE4HZyax2nZrZ9ax2MjA7kc2W
qpndwGonALPjOAgb1cyWs9mxwKzsqyxbdlWomd0sprLgSGB2OKutUjO7ldUO
A2aHsNpqNbPbWO1gYDaO1dapma1ntbHA7EBWu0PNbDaYJ2+h+AtjA3SUXKqj
5LDx/s5seGdPx4foP0zNAuTn8ePHsFENMjWWpfUF0sJYGrqqtZBm9Lu6d+8e
BQcHU1NTk0NhhE3DGmoJjeahluO/xnr+HD2HHBdJLhRh7AqCaTQEMeaJUrIB
KeoV9Ft55O16LVqmdJYNJ80fj+OW/oclOkSfJ3YRYr7IXVc97/pv+SvUZd7v
zY82pdfHnF6H1TCxPvo6Du18tfnUycoKanErfyz1VBa0AEUFY2NjW0FRy0Rz
WfPeKyHB+QTBzWCnsliO7vQz/wd2o/1n\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.597928787943981*^9, 3.5979288391689863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", "B"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigReduce", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.5979532943506317`*^9, 3.59795331914289*^9}, {
   3.597977208727274*^9, 3.5979772442866077`*^9}, 3.597977292629096*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"B", "+", "G", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"B", "-", 
         RowBox[{"2", " ", "G"}], "+", "R"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", 
        RowBox[{"2", " ", "G"}], "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.597953327094034*^9, 3.59797721404704*^9, 
  3.5979772463641157`*^9, 3.59797729393542*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"B", "+", "G", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SqrtBox["6"]}], " ", "B", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["6"], " ", "G", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{
       SqrtBox["6"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "B", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       SqrtBox["6"], " ", "B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["6"], " ", "G", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       SqrtBox["6"], " ", "R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.597953327094034*^9, 3.59797721404704*^9, 
  3.5979772463641157`*^9, 3.597977293937827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", 
     RowBox[{"1", "-", "R"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", 
     RowBox[{"1", "-", "G"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", 
     RowBox[{"1", "-", "R"}], ",", "B"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.597977358087915*^9, 3.59797735959902*^9}, {
  3.597977532959146*^9, 3.597977578951858*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "G"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "G"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"6", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "G"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977580143454*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", "G"}], "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "G", "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "G", "+", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"3", " ", "G"}], "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977580862673*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "B"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "B", "+", 
         RowBox[{"3", " ", "R"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "B", "+", 
        RowBox[{"3", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977581559083*^9}]
}, Open  ]],

Cell["\<\
Apply the limits in Lxy to RGB. We have upper and lower limits on the values \
for Lxy. To Convert to RGB without stepping outside the cube.\
\>", "Text",
 CellChangeTimes->{{3.597978717013007*^9, 3.5979787283678427`*^9}, {
  3.597978880840163*^9, 3.5979789741689577`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iYAB", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inYAB", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"nYAB", "[", "\[Theta]", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5979776649740143`*^9, 3.597977706839246*^9}, {
  3.598044567500454*^9, 3.598044577172422*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBPixel", "[", 
   RowBox[{"L_", ",", "x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", "  ", 
  
  RowBox[{"TrigFactor", "[", 
   RowBox[{
    RowBox[{"inYAB", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"L", ",", "x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597977743328272*^9, 3.597977779495315*^9}, {
   3.597977820751849*^9, 3.597977822810915*^9}, 3.5980445979157867`*^9, {
   3.5980451760369873`*^9, 3.598045178756207*^9}, {3.598045353472871*^9, 
   3.59804538203181*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "RGBPixel", " ", "]"}]], "Input",
 CellChangeTimes->{{3.597979432748526*^9, 3.5979794336527042`*^9}, {
  3.598045397726201*^9, 3.5980454042782288`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigFactor", "[", 
    RowBox[{"TrigExpand", "[", 
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "]"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597977841595653*^9, 3.597977852481071*^9}, 
   3.597977903715324*^9, {3.598045208540156*^9, 3.598045273797907*^9}, {
   3.5980454293127413`*^9, 3.5980454374686127`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "L"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "-", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "L"}], "+", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
         ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "L"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "+", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597977853614829*^9, 3.5979779048504143`*^9, {3.598045200911866*^9, 
   3.598045234839072*^9}, 3.5980452787389174`*^9, {3.598045415821414*^9, 
   3.598045442870038*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "a", ",", 
            RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "a", ",", "maxB", ",", "\[Theta]"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"maxL", "<", "L", "<", 
             RowBox[{"1", "-", "maxL"}]}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}]}]}], 
          "  ", "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", 
            RowBox[{"-", "maxA"}], ",", "b", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "maxA", ",", "b", ",", "\[Theta]"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"maxL", "<", "L", "<", 
             RowBox[{"1", "-", "maxL"}]}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxB"}], "<", " ", "b", " ", "<", "maxB"}]}]}], 
          "  ", "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"maxL", ",", "a", ",", "b", ",", "\[Theta]"}], "]"}], ",", 
          
          RowBox[{"RGBPixel", "[", 
           RowBox[{
            RowBox[{"1", "-", "maxL"}], ",", "a", ",", "b", ",", "\[Theta]"}],
            "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxB"}], "<", " ", "b", " ", "<", "maxB"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxL", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxA", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxB", ",", "0", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.5979797718828173`*^9, {3.597979854170542*^9, 3.5979798629953623`*^9}, {
   3.598014804846116*^9, 3.598014824996009*^9}, {3.598015032571602*^9, 
   3.598015165900592*^9}, {3.598015380461362*^9, 3.59801544385277*^9}, {
   3.598015495760293*^9, 3.5980155168634567`*^9}, {3.598015638055956*^9, 
   3.59801566588317*^9}, {3.598015732382619*^9, 3.59801584624897*^9}, {
   3.598015878639686*^9, 3.5980159314447193`*^9}, {3.598015972914336*^9, 
   3.598016002282483*^9}, {3.598016272899495*^9, 3.598016290911916*^9}, {
   3.598016339208589*^9, 3.5980163914849052`*^9}, {3.598045474146287*^9, 
   3.5980455112236834`*^9}, {3.598046479847352*^9, 3.5980464893572187`*^9}, {
   3.5980468792846107`*^9, 3.59804693674479*^9}, {3.5980469799923697`*^9, 
   3.598046982551423*^9}, {3.59804704591216*^9, 3.5980470649288692`*^9}, {
   3.598047116516983*^9, 3.598047129110168*^9}, {3.598047162516781*^9, 
   3.5980471711163063`*^9}, 3.598047239242176*^9, {3.598047324465704*^9, 
   3.5980474766165047`*^9}, {3.598047950053569*^9, 3.598047952556129*^9}, {
   3.5980488806721573`*^9, 3.598048887088621*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`maxA$$ = 0.249, $CellContext`maxB$$ = 
    0.255, $CellContext`maxL$$ = 0.498, $CellContext`\[Theta]$$ = 
    2.5761059759436304`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}, {
      Hold[$CellContext`maxL$$], 0, 1}, {
      Hold[$CellContext`maxA$$], 0, 0.5}, {
      Hold[$CellContext`maxB$$], 0, 0.5}}, Typeset`size$$ = {
    360., {193., 198.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$184312$$ = 
    0, $CellContext`maxL$184313$$ = 0, $CellContext`maxA$184314$$ = 
    0, $CellContext`maxB$184315$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`maxA$$ = 0, $CellContext`maxB$$ = 
        0, $CellContext`maxL$$ = 0, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$184312$$, 0], 
        Hold[$CellContext`maxL$$, $CellContext`maxL$184313$$, 0], 
        Hold[$CellContext`maxA$$, $CellContext`maxA$184314$$, 0], 
        Hold[$CellContext`maxB$$, $CellContext`maxB$184315$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`L, $CellContext`a, \
-$CellContext`maxB$$, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[$CellContext`L, $CellContext`a, \
$CellContext`maxB$$, $CellContext`\[Theta]$$]}, {$CellContext`L, 0, 
           1}, {$CellContext`a, -0.5, 0.5}, RegionFunction -> 
          
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[$CellContext`maxL$$ < $CellContext`L$ < 
             1 - $CellContext`maxL$$, -$CellContext`maxA$$ < $CellContext`a$ < \
$CellContext`maxA$$]], Mesh -> None, BoundaryStyle -> Red, PlotRange -> 1, 
          Axes -> None], 
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`L, -$CellContext`maxA$$, \
$CellContext`b, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[$CellContext`L, $CellContext`maxA$$, \
$CellContext`b, $CellContext`\[Theta]$$]}, {$CellContext`L, 0, 
           1}, {$CellContext`b, -0.5, 0.5}, RegionFunction -> 
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[$CellContext`maxL$$ < $CellContext`L$ < 
             1 - $CellContext`maxL$$, -$CellContext`maxB$$ < $CellContext`b$ < \
$CellContext`maxB$$]], Mesh -> None, BoundaryStyle -> Red, PlotRange -> 1, 
          Axes -> None], 
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`maxL$$, $CellContext`a, \
$CellContext`b, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[
           1 - $CellContext`maxL$$, $CellContext`a, $CellContext`b, \
$CellContext`\[Theta]$$]}, {$CellContext`a, -0.5, 0.5}, {$CellContext`b, -0.5,
            0.5}, RegionFunction -> 
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[-$CellContext`maxA$$ < $CellContext`a$ < $CellContext`maxA$$, \
-$CellContext`maxB$$ < $CellContext`b$ < $CellContext`maxB$$]], Mesh -> None, 
          BoundaryStyle -> Red, PlotRange -> 1, Axes -> None]}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 
         Pi}, {$CellContext`maxL$$, 0, 1}, {$CellContext`maxA$$, 0, 
         0.5}, {$CellContext`maxB$$, 0, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {279., 284.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.5980151673462353`*^9, 3.598015393242544*^9, 3.5980155184864483`*^9, 
   3.598015666723971*^9, 3.598015848694175*^9, {3.598015904441922*^9, 
   3.598015914298191*^9}, 3.598016004878749*^9, 3.598016293026824*^9, 
   3.5980163402815933`*^9, 3.59804748421358*^9, 3.598047963182966*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricPlot3D", "::", "invregion"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(FE`maxL$$594 < L$ < \\(\\(1 - \
FE`maxL$$594\\)\\)\\)\\) && \\(\\(\\(\\(-FE`maxB$$594\\)\\) < b$ < \
FE`maxB$$594\\)\\)\\)\[NoBreak] must be a Boolean function. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ParametricPlot3D\\\", \
ButtonNote -> \\\"ParametricPlot3D::invregion\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.598047977022829*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricPlot3D", "::", "invregion"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(FE`maxL$$594 < L$ < \\(\\(1 - \
FE`maxL$$594\\)\\)\\)\\) && \\(\\(\\(\\(-FE`maxB$$594\\)\\) < b$ < \
FE`maxB$$594\\)\\)\\)\[NoBreak] must be a Boolean function. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ParametricPlot3D\\\", \
ButtonNote -> \\\"ParametricPlot3D::invregion\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.598047978652194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBPixel", "[", 
  RowBox[{"minL", ",", "maxA", ",", 
   RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598091175487315*^9, 3.598091198901683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.23041034586707043`", ",", 
   RowBox[{"-", "0.7531125207157321`"}], ",", "1.7227021748486624`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598091186844366*^9, 3.5980912000960617`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minL", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxA", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxB", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "a", ",", 
       RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "a", ",", "maxB", ",", "\[Theta]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], "}"}],
       ",", 
      RowBox[{
       RowBox[{"minL", "<", "L", "<", 
        RowBox[{"1", "-", "minL"}]}], " ", "&&", 
       RowBox[{
        RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}]}]}], "  ", 
     "]"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.598048065998188*^9, 3.598048122090226*^9}, {
  3.598048200160014*^9, 3.5980482310366077`*^9}, {3.5980488449476433`*^9, 
  3.59804886272202*^9}, {3.598091063480205*^9, 3.5980910847977257`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
qSypPnAAfumrPjPlxGH+jo+r9qoRsJ2XxytE50kofcePXYly4/AssuxG3Yc5
WF5vb8xXSUJJB5WNFQbGYMFRPQjH5qMXcWlijcxBKNIqfuvM5nDRzF0y6x8R
MK8kJWk3x0GIf23zLEJnDfbp7U/lsSZgUbTMd76RgxAjeEDy5m62HyjdKZGy
Z3tD9J4tsj5D0IMXi9S+sQrrhQQTuN4TMOfLKbHiBkPQ734F5/diFf4eaHsz
HUjADi0R6ioPsTnrry2X2v4REN3mQrnK9uNN6c+vFeCHUUgfDavpJsHrybnt
gVpUeLj6TkiqgM3j4l+eqrH538rRjfK3joDZEnZI1CgMg8itMx42lSvgvMHv
fkMWAQs8/zGoxXIYhGbWC8tFr8B3etHLyXwC5rfIw/v4DAn0u1jBAv3LcKn5
rn09iYDd+PEm6r4wCS4ZKNB1163AtsmDV3/2ELBTX3c0utgOIn9v6dmmPUOQ
FiLpPdxGhV1XYm7aqg4irzc/9lm0D4KE9ddvwmNUuGXkvsXNbwRSWF7u3I1L
kHbgX07odiJmZEbYvmORBEEnJR3kzyxDflXniTAOIuaR+Ojl3n0jEFAxxrOw
YxmYGdsupvMSMWdDyrpGnlEoy2zz7zNbgsjgMoV3CkRMf73rp4qeEajazz8u
7L8ElolPd7ofIGJxQU6pp8/2oy6Lsu+N6n2gvrF5o+MDGtxguTfKzfShap82
cXJ8L2T365+IfUYDw8xrvDVaYyDeaGLfzPYd1oS0t8ldIqb5a0zIie0ZRGG8
5UrJInA/O0IwMyRit/E3/T2mRwH3pXy19PMinHJ02vbAjIhZpLXipRrG4MSr
rIfJXQswdn77spE/ETt50yRUJGYM1IiU7iH8IqRa9Y6c9CJiVV3xvyJRN0or
UXm0crwD2p77RSwK0sFf40f3i5vdKGLoPEU4sh3OmeCq5aTpoM6rwbVj4wSE
JivfiGJ7lnriY03xfCKmyFe/pdR/HNxm+y5XYQtgcPpltUQce51Ntb3rM8fB
xS2WGiSyAK8OVPWrpBIxPe4/yw/eT0DazZC7LkYsOLLBpXRnCxE7UABv7tpM
QGZ3/b/v3ixgSBz7zlFHxMjS3UVMhQ7kI/VTV+ZIE9gS5GWfZdMhKZg0MtTR
jhw1ytHp0Ebob/lxNa+cDvK3ZAhOTZPA7Sd0+Q7b7wKt2jaObuDApGwzeYXY
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
fRz+BuKDU/k=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwlk0doVFEUhs89GSUzGtSZYG8jsREbaqyJXYwF48xSdyZLy0qXuhQRERGR
ICIiIiIhSBAJIu409oaIiEgIEkRCLFiIJX7HH+aDb97533nn3Xtfcff+8j43
s2WQgTX8WQs38T0wAh8JbfhcyOOjYInpWsIdruAT4E8y+53kl+Eb/h0u4Vl4
gffDRfwwDOC/krJ5eIZ/hPP4XthI7w0uvwDD8JxrlqvwnGxfUu0g/MR/JPWK
Z2bIVkCNacZt+FZXNmaoxLOuXpGZhE+Ga/hqWI+vgwOmNXlI7244HWsV70xt
PCw1XXtM7T204mV4gL+DU6bMPfwNnMCnQxX3Dnf5SRiKD4GJpsx9sm+TavNg
AbX5rt5nYRpedM1yBj6T/QT87Ch8Rb5ADj8Gs8nOgs2mGe9Se5VUK0AX/hqO
m2Z4hPck9Y57BvG/SdnIbIlecAi/BdV4wTXr/3eOswK78HOwCW90ZWNNa/E5
cB0vQR2+GJrxG/HOsdew05SpibWCDrwR6vGVrrPaCcvxFS6PHk+YtTdprWKG
hdQWuXpHz3H4WNdet8NTsh+SZm2BVdQaXB5nciY+wzVrzDAVn+KaJc7MdrwJ
bpvWpITvgCOma6PxMa5nxTd0h2e9TNqr2KN/3iJlqA==
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmHncj2UWxn/PeYUINSNRRqjGTGZKMpMYhWLG1GSkRdOKLGVPlJSliKRM
GTUtRFlG9q3Z933f12yRNXntRKnr+pzv7zPvH9fn3Pd57vXs99Osz7Drh0ap
VHqzKJUqRMeIrhG+JJwrfFr4lNBUuJD+CKGxcIHQTDhLaChMF54UzhY+yZhP
MKYl8z8jzKBv+nXhc0Ib+m6fJzwlNIc+zbyW9N1uwdpNOF+TKuc9l/MOEz7O
OaYJTwhnMM/8+qzZjL2awDtTaCTUE05nPfMacNc6Ql3u07TK/IbMa1pl7NOc
+Ty+12Xd5sjK/JHI8iJ40+FbFs8gm0ac37KdKDwqHJG+vib6iHCrcLiU38x/
Q3Qd39weJ/QQTurbY6IflvJuU5DJEfhew7yp8GsIk4WaYEoV3uPw3tac8aJb
RffQfhc6gXZ30VnCV4Uv0u4KfQ6+7/qscAX954ucN1P4BvM6MO4KMBPeu9zd
+5+BrE6HTkNuvVjzFvaeyZpnI/dG6Lm2cBrrXor8vyC0pu9vIVQIQ4RaRdqT
5xV8q8P3ashpMjKvC+8U4X31DwgHkduWUspwp7BR2CQcF/YJ+4Vd8DYL7whv
MWc3PPfrsXZ17l8dfU1FdzXZ3+ueKOUZ32MfzzPP5+qidnvufbXQjr7vdqyU
c+6hXbCP530gDEIOtdjbvJN8810PCZOKtLcjfDPPtmd7GY9N9RXdILpd2FHK
9kbOvR/ZXVJkLHAMuLhIP3LsaQVtgd783bGhbZF+5rGXQ1txt0sYexXf2oFW
fHsW27NfPiBcJnQUOtH22p2hl2Mr3vNC7joJG2gDz7FnFOfx/AFCZSllav+e
iF1b1pXYQb8i5VGJDHZgL4exiT3Icjf9fVXk1wDbtW3WRz+22XIMtawOYme7
ke9O+o7Tjs+OvV2xiw7cx7ZtHdq3vlmkfzneOPY4PvUUbhduE9YWmV/GVtFB
W2Tcjv5o5PJ54XXhPuEc2ouLzD8LhaHCqcISeNb9UvqOqd8ShgsfY57zQWN0
2Z79WnOX9uirA/2yDZVt6mL01IL5rdDtpVXsqzXfrNs2fHsKPTve38+5Posd
dWDcg9jTlezRFnuYwfeWVWyrE/daxH0ug9cRnuORY9FyYRlynCPMLtJ23O4v
bJO+5osOLuzApdINwh3o6UbhTvovC3cL6xn/WpH+bWr/t5/PFV4p0n5fFe4V
jpaS5z1tq+bPY47HDxT2in+T6F3sd7PQm/4LtB2zVyEf33GlsIL+SmRnO7FN
uXbpJqxmzhjswXI/n3mjkJnlMxpd+I4vFRlvZkPtMwu4q/3E9rYA+V5fpC3f
ioxHojfb7lXo6XnO3p0z9WTeLdytF2t7zbINL+Wctnfb+gjW9rcLuMdSeJb/
fHTXj3P7zP3RcZk3B12/xD3Xl/5/T/Pvht+XdZchk1G0L4Iuh28bs/3Zp4bR
t70Nhz8MvfmOfejb985BdouYOwJ+Y2SwEDmMZq9RjFmCTBYjk/I6C9DLUOYO
Yc8X2bcvOnXOGIysBiEX26Vtz/5/NTozvU74SpH+7xjXhW/mXVtkjOjC2Fno
tivzrM+bGWtqu364yDjXg3ndGfvlIv3NNnFNkf52A3vcRH8maztGrGUt1+QP
FWnXbndivtezz9nH7F/zaB8lR9tWStx7Lncv+3BRZY7zzgDG2WcHMt68zpzP
+63mHI5X67ijbds+aR8r57J5nKEjZ+wGbwB7OW+4PjhJTnf94drkb3qQ3BOp
9/+K3htpe5tFB0X6+z9E/xOZl34hOiDSrn4vOjDSTqaL/iHSn34s+vPIWvCP
on+NrM13iA6OvMte0SGRsv2haP9Im3xDtF+kDF8W7R3pO+NEX4r0oZp6PO2O
rCePip6ItMVpor8M/EO0b6T8t4huj6xrV3iNSFntEn03siZ+U3RTZN2xT/RQ
ZH59J3Kcxzwt+vfI2DBJdGWkLTxj2UT600yvERkrLb8xyNByfRDZzohcy+tY
Hg8hkxe8Z2Q+Hyb6SGROn+WzR9rB+EhZWA4ee4Txz4lWRtrur0R/F/m28bn+
x9keF/12pI8+Kro40u583rc481TRH0X6uvfcyb6rRNdF1tdzRF+NrB9fE10U
WUO55rSNuT79jng/iKyF/eh9ONI3T5Xu9ke+OTZEyt0y/03kuX3mCo35deRb
IdT+SeQ748+R9mRbqib+nyLfbqeo/c/Ieumk6PzIWm5B5Pl8tu9Fnsnn+Wmk
jdo+J4jOjozlhyPP2oMYsBZ/W0PbtroKn7wSH1xFuzzOfjc3UkYT8F2PH4P/
+n3o9cfRfoRvXqcj/XX4+FjaHv92pB3bhj8UXRJZz6+J1I318m/R6hVZM29U
u0ZFvtu2RfqM/eUvkfKyrH4WKWvL+beRMrU8vcb6yHW8xtbIdQ5E+ob9wray
Ehl8P1JP1tFatYuKfPsssx9XZN3aR+1XIt8a/v7dyDH+vjpyzL8iY43jzFLR
1yPr+HmRerVOF0be33evpbnHIvP8e5GxwHHguOj7kbnpRdEPInPx85F+Yt16
7eWsfzByLa/j3OD4eQ3y74Yu/D44TM3v2Om3n9+Xt/G9J7pz27WKY9vYSJux
zpxjLEO/C/1WrME+5TeNY7Tfe84RjinOE46BzmHOgeWcZupcdTt7+rzOg+W8
6v8ern+bcQev3Rkb68h9/D46yTvGcc351bZhvbqWsm/2Ym/vWc6117FnN87u
N47/v/ifzVns6b5jh2sE5wjXK/4H5NrjTMY2gef63rW/c4brj/MZZ55rsPpV
xtZmvnl3cG/n7lrwvM9pnMnjHNec+45S917LHW5ELu5X8t47xtvtOH3/x2iE
nupwtwbouyH9eoxx3/nGtZfz4J3sUd6zM7pxfHE9tJe35An2c64bGanrA/wP
OME5/L/ANjElMnY7bjvfjo7c68nInOf9n4rMwZZl+X+Ez7idu1XyP+AD9nAO
HxWpI+fe+yPzr8/kusB7O3+OiDxzgQ4sb+fk4ZF52WdyfeO5riMeiNRjoI/a
rFWHfjXk6P5jkXnIupoYGYstp8mR+dV+4Fx9X6QefW7fzf53qMp/jici85bt
zv+WmqObLfhr+f/NO7y1XTc5djkv+/+Hx2ylPnctu42xh3nf70J21s9d6NY+
sQNd7uPtfoD+buZ5Tm/G2p/2ROY/+5fjlGtox5yNzPd6m5nvPV2Xr+Ccm+B5
3AbGWrcfAeZnkyM=
         "]], Polygon3DBox[CompressedData["
1:eJwl00tQjXEYx/H3faZFlixZNbVkWWPFspZlx7IxxjSmjtNxugghuqjkVnQZ
atyakCEZuQzSRAxdJmRyG5FBGrcTWdT3md/iO/P5957znv+tlNyCdfkWBMFq
SqJzDM5SAu8Jg2AMj1IajlEnPk/feb6Z8QgeppW4nm7hm7QUV9E4fk4NoT7z
BD+mFThKd/BtWoLzaQA/oGU4Qjdwn+ldyTSEH1EqrqVB/NDk5dSP75tcQ0/x
M9Pc/Dt38T3TM5/jBzxFR/EaOo3PmNY+wxpjuJK2hJpjHB8wzc3X0IZb6SOf
3cR4G642rcXX0IKbaZLnGxmfxKeoHE/xtwjeZXrm7/iCv1Ij40zaineb3u17
HsV7TXs/x7gMN1EZ4xzagU/QTryBSvERKsZrqQjXmfbez3Q7PkalOItK8CGK
4wwqxPsoDwf0G/+i9fi47xH+Rtmh5jzrd8P0Lp/TZdxtmqu/4xK+SAuMKxi/
whO0KtRvXsFXaX+oz1zHvabf9jPowhdM3/U7eg33mO6Gf+c/nqdc3Ex/8T+T
fc4v8QtKD3Unf+CfprX4Gj7jadNe+Z588rM1nYXfkUn8mg6Hesdb/MZ0d/xv
HbjddHf8jBP4j+ls/Eze43emvfUzKcYHTf9bvgeL/LGEZA==
         
         "]]}]}, {}, {}, {}, {}, {}}, {
     {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJwl0ndXjmEAx/H7qZ56QpGdESkjI6uo7BHZiqxIxwvgJRhFL4moZBMKGdlJ
mSEl2XzUH59zf8/vnPv64zpX6oFDRQdDQRDUUsf/3hYVBJ3iM3e5x2VO0kU3
93nAFar4w1+aechVThN2ViyP9GOucYZBtgSe6KfUU80w23Ce6edcp4YxtrG0
6BfcoJZU2yRa9UtucpZptgzadDsN1DHbNodX+jWNnGOBbSFv9FtucZ4ltqW8
0++5zQVW2/Lp0B+4w0U22DbyUX+iiUscdq9HOMoxyqngOCeopMh/WylkE1vY
TBnrWM8aCljLflayimWsYDmlLGIxOeSRyz6yyGYu85nHXmaRyXRmMoMSpjCV
NCaTzh4mMJFxpDCe3YwmmRGMYiS7SGIoiQxhMDsZwEDiiCfCDqKJISCKEMX8
cpe/+c5PfrDd3uv7jS98pYdTxDsiQhyxhIkhuv/ovjf/D6R/Wmg=
       "]]}, 
     {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJwt0mlTT2EAxuFTofItfCUvLam/rKUFyb5kCZGtKIWiRJFsZS0iS1nKGtrL
ni0he1czvbjmd+aeM8/MeeZMCCVPTAoLgqCWAg9t+jc8CPZSwEpWkUIchexj
NWtIZTpHOEoGa5lPPCeoYh3rWcAMqqlhA5ksZCaXqWUjm0hjFtdpYDNZLGI2
TdxhC1tJZw4PeEg221jMXJ7xnO3sYAkJdNHNTnaxlERe84YcclnGPD7yid3s
YTlJfOM7eeSzgmQmudvJTGEqMUwjljhC/PHeL37zg58MMT4iCL7qIJ8Z4AvR
9n79wFve844o+0t9RQ999BJp79BOXtBOG+PsT7WVRzzhMWPtzdrCXe5zjzH2
29rIDW5xkwh7vV6jjqtcIdx+US9xjgucJ8x+Rs9yktOcIrAf10rKOUYF/zlM
GYcopYR/FHOQ/RRxgNDItzuulx666aKTDtpH//lhoqR9xw==
       "]]}}},
   VertexNormals->CompressedData["
1:eJzVW21M1lUUf1DQFAJLwWDEDBYfIl9iIEYlGQIhLyotM7NkWFSKqdOUMd+z
eERD3FhDdBCCxsqaPaaLBUpKolPmaGA2FYFQexFCHclLSt7D59/dfs/uX2x7
Pv12dv7nnnve7jnneSJtaco7Q2w228ihNtu9n+12pOeJM+FXolyqgtzGNH0X
VeBwxG6vv3YU4Xu84n5S+NulR7wU7tU2NU6HJ7etr1F47ZbX/RSe7X3aKfzd
a8mCz0js8lf4jbx2wcNaDggeXVs1VuH+heWCZ+fW1Sq8YnxK++h7+NSG1TE6
/JmFwwT3H9N+W+GH3FzlvE0RUaKHDb3ZQxT/CRF5TuGmzov4P5YaIfIXzZ7d
peRPzGmJ0eFLtt4V/LnFh/9UeMPcV43iSM6+pqpTCu+50Pazos/K8pvujF1Z
jXu3bhM5VxRtaFRytnU9P13nFyy91f6C9I/uC/FB9Kb0bPfIFLy1OfBhhe99
z1+LI383hSM52Tj5oOEovpm6RxRXTfkLos/Y86h8d21QrJzrYnqfNv7MOvya
4C/6RrooPLNnnVM46y8s/dlNHoLX7dop54o/3K/NUyw+WPdVXferfNfvha+u
K3xh+NIYHc7m8cHyL2SHLL6oIlj4V19oHKr4t64sGdS44bM6QfDLI1rE/lMK
sp3Cq9MKxP43l7v7Krz+l4q4+4GXfXrjmMK3zNk+UeEfZv72sjN2ZcoOra4r
TMlvtZwsPcrXqE5GeWpfS4Cctym0+B/1XZeTN52Kqxe73xf8r8+Lbyq893qV
ti5i86/V9EgPxvST/Ip897hjrHw3LGZynC6v2YO2yT0G73SI/+5fdSxOF08Q
fxRXWb2x9QCqN0ZNvSTf3bj+6HCF2yY0aumRnbP1v9V5gZUnxT7xpMKPlPv9
rvS86FKoti6yOp6YqtPQfbH6RPIjO5l80D5QJ8wpuqvoPdfNF3xL6l7hM7kq
tEHhk74P0eohMb1R8N3n7L2KftzGYK2cNWHLBLdNud6v6Gt+WKK1Z9bvfHIX
CH3QsWWein7evvFO0aPvorhtqq5m+0h9XfXiF8/mr7ys6DfZq7X9EMR/Upaf
8E89s8ZV0VeO/lJbl6L4ifij+MzWIez7EdXDvWlnhU/KW2seUnhNR5PWHlgc
+fWRvGqpJ0f5hoQq/PItt3iFb80JPK5w1/xbTyvc/U611JlH29pF/vldkT0S
96K9tX7UvMAmeP2uZtHnvBWVWnpTuF9Ti5z3R9dAb/VdR8AncTqc9UercbbP
g841WPaGcPR+QTiywx6Pq3JfWYmu8r62f5Y+UHeBPtu/OXmCl/Q3uCu88yl3
p3BT9mbKDk31863uQ6K4wfZLWXuz+l2MzmXqXmo+bhZ9Fq7PHCl56pv996Ue
zmi5Jvp8ZO0EqfM9v60zGh8Grf8D5EHxxGr7MYWjcyH7ZHFWHlNzt5l1i+Vc
H9WfkjiwYfiTTp3rQZtfIH+3+l6sxlHcRv71oOHIDtn4/3+5r82VXXJf04qW
D1P3ldh5XCs/qifZOGDK/ksr3hT+OTtibwn/rSe09+I9ZZXQJxzovqHwgORD
Wv0g/iwfVG8jOdl4juIkrKPIeQcbh5H8GRH1Us9fzd0XpPD4EbHad2XJjt2i
z4jO9r8V/sXMQtEnehew+yps3wzdL9s3Q+8dlt7q+MDGQzYPsnxMyWPqHlE8
RHtKqD+J+LBxmO3XsfTsO459z2aFD8xropfNkLh6x2uYU/EQyY/yPssf0aM4
yfL/YFyV2GHpOR+xw5f6irV1FPvOQnbO2gm7f2hqbydqYpLgY0IWC16SHzmQ
70Bfl91bMCU/ui/Eh51X0vMCco5p6n7ZvMPusyG9ofmmKXtm586m5visv8B6
jJwvI79DOLsfxc7Bkb+jOIbyJtI/u+/K2hXig+RHc2eEs/3eSVfekHlrR6r/
ecUnafkCmd+huT+iR99F+y2sfyF9st9l940RztafSP9obs7uIbB1HbsXgfbe
2f0HNr6x+yFs/wHRs3Ky9RW7f8Lqk60PWT2zfsTWD6bkZPdeUF5D9RKrB/Z+
WftE/Ry2/4DkRPEfyY/yOxs/WfnZ/QF2L5qNq6Zwtg5B+1TsXp+pfTakf+SP
SE42frJ9HtYfWT7InlGeRXxQnGf7pch+0HsW6RnJg/pFqB+Sk5Ak/FdGuj+u
6M87OrT9ZNSHQfTNh/4QvOzruYEKzz8dpu1Lm+rXmZrPmtqX6A7qFf6Vrvnd
in9emUesDjc1F2Pfa+w+DOKD6Nn3OOozsOc1Nd9n52IIR/c+y2Oa+KN3iEP8
8eDs29o8jvyRpUfysHMlFmf77aydoPiM9sTQ3iaalyF7M8Uf4Sg/svEQ5Rck
P/vuQ/KzcQPJw74LkF+we7mID7uHyc4fUf3D+h0rD6rrWPlN7XWw71D2vGgP
Ae0bWD0nRTjKR2jP0NT8mt2XRnKivMPqzdT+LZKH3X9j5+msH5mqJ03ZJ4qf
aB5h9T4kskN2jxq9y9h7R+9r9p2L7ATtP7B1C5s3Tf3fmeWDzmXqu/8BYlNK
AQ==
    "]],
  AutomaticImageSize->True,
  Axes->None,
  ImageSize->{444.65966533470583`, 474.59790713591946`},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{2.899404107470813, 1.1451785640846017`, 1.3160630220253555`},
  ViewVertical->{0.091899602664914, 0.6038081385488975, 
   0.7918144952273521}]], "Output",
 CellChangeTimes->{{3.5980484517528257`*^9, 3.5980484601713257`*^9}, 
   3.598048866814258*^9, 3.598091088823497*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Chromatic", " ", "Bins"}]], "Input",
 CellChangeTimes->{{3.598406243498595*^9, 3.598406247508294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    SqrtBox["6"], " ", 
    RowBox[{"YAB", "[", "0", "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.598270210680551*^9, 3.598270216034176*^9}, {
  3.5984045756904287`*^9, 3.598404604104712*^9}, {3.598404703437853*^9, 
  3.598404704120267*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox["2"], 
      SqrtBox["2"], 
      SqrtBox["2"]},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", 
       SqrtBox["3"]}], "0", 
      SqrtBox["3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.598270216472679*^9, 3.598271036527464*^9, 
  3.598404632338641*^9, 3.598404794619372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToMatlab", "[", 
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SqrtBox["3"], "0", "0"},
      {"0", 
       SqrtBox["6"], "0"},
      {"0", "0", 
       SqrtBox["2"]}
     }], "\[NoBreak]", ")"}], ".", 
   RowBox[{"YAB", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59840490457244*^9, 3.598405046458891*^9}}],

Cell[BoxData["\<\"[1,1,1;(-1),2,(-1);(-1),0,1];\\n\"\>"], "Output",
 CellChangeTimes->{3.5984050109125147`*^9, 3.598405050514153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"YABAxisRanges", "[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598406375183096*^9, 3.598406379063979*^9}, 
   3.5984064544321747`*^9, {3.598406509357975*^9, 3.598406513956102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox["3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     SqrtBox[
      FractionBox["2", "3"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.598406455889097*^9, 3.598406516309086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"2", " ", 
   SqrtBox[
    FractionBox["2", "3"]]}], "]"}]], "Input",
 CellChangeTimes->{{3.598430265961665*^9, 3.5984302781670017`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SqrtBox[
   FractionBox["2", "3"]]}]], "Output",
 CellChangeTimes->{3.59843027984555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"256", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     SqrtBox["2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598408978591464*^9, 3.5984090332021933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"418.04624943499573`", ",", "362.03867196751236`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598409001429489*^9, 3.598409034077816*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"256", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "/", 
   RowBox[{"N", "[", 
    RowBox[{"256", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["2", "3"]]}], ",", 
       SqrtBox["2"]}], "}"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.598429572098235*^9, 3.598429585501897*^9}, {
  3.5984296220867033`*^9, 3.598429641484288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.449489742783178`", ",", "1.414213562373095`"}], "}"}]], "Output",\

 CellChangeTimes->{3.598429643551237*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 D rotation Matrix", "Subtitle",
 CellChangeTimes->{{3.5954073303425417`*^9, 3.595407356913694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix2D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], " ", ")"}]}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.5986437535191727`*^9, 3.59864378335888*^9}, {
   3.5986451303419228`*^9, 3.5986451365932803`*^9}, {3.59864518711117*^9, 
   3.598645198160802*^9}, {3.598645264648605*^9, 3.5986452697118945`*^9}, 
   3.600343654868698*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RotationMatrix2DScale", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], " ", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotationMatrix2D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.600342920258679*^9, 3.600343651565379*^9, {3.600344314209228*^9, 
   3.600344330491984*^9}, {3.600354623198207*^9, 3.60035462358183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.5986437411664667`*^9, 3.5986437425835476`*^9}, {
  3.598643792143382*^9, 3.598643848902629*^9}, {3.5986454240877237`*^9, 
  3.598645424214731*^9}, {3.6003427816717*^9, 3.6003428253940363`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5986437434855995`*^9, 3.5986438567310762`*^9, 
  3.5986454248507676`*^9, 3.600342785684965*^9, 3.600342825918029*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"minMax2D", " ", "=", " ", 
   RowBox[{
    RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5986445409262104`*^9, 3.5986446091511126`*^9}, {
  3.5986447833430758`*^9, 3.5986448052793303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["minMax2D"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.598644643763092*^9, 3.5986452087274065`*^9, 
  3.598645316644579*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"minMax2D", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986446984432197`*^9, 3.598644809435568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{
   RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", "RGBCube"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5986408397825165`*^9, 3.5986408800968227`*^9}, {
  3.5986409680308523`*^9, 3.598640974670232*^9}, {3.5986411305271463`*^9, 
  3.5986411342983623`*^9}}],

Cell["\<\
{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, Cos[\[Theta]], Cos[\[Theta]], Cos[\[Theta]] \
+ Sin[\[Theta]], Sin[\[Theta]], Sin[\[Theta]], Cos[\[Theta]] + Sin[\[Theta]]}, 
 {0, 0, -Sin[\[Theta]], -Sin[\[Theta]], Cos[\[Theta]] - Sin[\[Theta]], Cos[\
\[Theta]], Cos[\[Theta]], Cos[\[Theta]] - Sin[\[Theta]]}}\
\>", "Output",
 CellChangeTimes->{3.598640746793198*^9, 3.5986408493910666`*^9, 
  3.5986408821929426`*^9, 3.5986409278245525`*^9, 3.5986409751612597`*^9, 
  3.5986411352524166`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigFactor", "[", 
  RowBox[{"Union", "[", 
   RowBox[{"minMax2D", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigFactor", "[", 
  RowBox[{"Union", "[", 
   RowBox[{"minMax2D", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5986411449839735`*^9, 3.5986411817190742`*^9}, {
  3.598643893601185*^9, 3.598643905351857*^9}, {3.5986440481600256`*^9, 
  3.598644079814836*^9}, {3.598644634919586*^9, 3.5986446634402175`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986411497802477`*^9, 3.5986411821020966`*^9, 
  3.5986439109941797`*^9, 3.598644080597881*^9, 3.5986446641352572`*^9, 
  3.5986448155039153`*^9, 3.598645220461077*^9, 3.598645298297529*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986411497802477`*^9, 3.5986411821020966`*^9, 
  3.5986439109941797`*^9, 3.598644080597881*^9, 3.5986446641352572`*^9, 
  3.5986448155039153`*^9, 3.598645220461077*^9, 3.5986452983245306`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"TrigFactor", "[", 
    RowBox[{"Union", "[", 
     RowBox[{"minMax2D", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598641017189664*^9, 3.5986410239340496`*^9}, {
   3.5986410661424637`*^9, 3.598641113399167*^9}, 3.598641161150898*^9, {
   3.598644002551417*^9, 3.598644004903551*^9}, {3.5986443492472467`*^9, 
   3.598644355014577*^9}, 3.5986448839958324`*^9, 3.598645235976965*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], 
     LineBox[{{-3.1415925253615216`, -1.0000000000000002`}, \
{-3.1261762269324227`, -0.9999999999999999}, {-3.110759928503324, -1.}, \
{-3.0799273316451266`, -1.}, {-3.0182621379287315`, -1.}, \
{-2.8845578654095836`, -1.0000000000000002`}, {-2.759713948540342, -1.}, \
{-2.637318973742252, -1.}, {-2.5045501138578046`, -1.}, \
{-2.3806416096232637`, -1.}, {-2.246359220302365, -1.}, {-2.114525773052618, \
-0.9999999999999998}, {-1.9915526814527773`, -0.9999999999999999}, \
{-1.858205704766579, -0.9999999999999998}, {-1.733719083730287, \
-0.9999999999999999}, {-1.6116814047651467`, -0.9999999999999999}, \
{-1.5727998935382574`, -0.9999999999999998}}], 
     LineBox[{{-1.4792698407136486`, -1.}, {-1.355718632312057, \
-0.9999999999999998}, {-1.2217935388241077`, -1.}, {-1.09031738740731, \
-0.9999999999999999}, {-1.0290094895238644`, -1.}, {-0.9677015916404187, \
-1.0000000000000002`}, {-0.9012067512137942, -0.9999999999999998}, \
{-0.8347119107871697, -1.}, {-0.7105825855838271, -1.}, {-0.5760793752941268, \
-0.9999999999999999}, {-0.4440251070755782, -1.}, {-0.3208311945069359, \
-0.9999999999999998}, {-0.18726339685193602`, -0.9999999999999999}, \
{-0.06255595484684248, -1.}, {-0.002003566743360822, -0.9999999999999998}}], 
     LineBox[{{0.05970254508709937, -0.9999999999999999}, {
      0.1923349301073989, -1.}, {0.3161069594777921, -0.9999999999999998}, {
      0.45025287393454294`, -1.}, {0.5819498463201421, -0.9999999999999998}, {
      0.7047864630558349, -1.}, {0.8379969648778853, -0.9999999999999999}, {
      0.9623471110500293, -1.}, {1.0842483151510218`, -1.}, {
      1.216523404338372, -1.}, {1.3399381378758155`, -0.9999999999999999}, {
      1.4737267564996168`, -0.9999999999999998}, {1.5687927600515357`, -1.}}],
      LineBox[{{1.5986550194735119`, -0.9999999999999999}, {
      1.7211343403762551`, -0.9999999999999999}, {
      1.8539875463653561`, -0.9999999999999999}, {
      1.9779803967045506`, -0.9999999999999999}, {2.112347132130103, -1.}, {
      2.2442649254845035`, -1.}, {2.3673223631889977`, -1.}, {
      2.5007536859798494`, -0.9999999999999998}, {2.6253246531207948`, -1.}, {
      2.7474466781905886`, -0.9999999999999998}, {2.87994258834674, -1.}, {
      3.003578142852985, -0.9999999999999999}, {
      3.072585334107253, -1.0000000000000002`}, {3.1415925253615216`, -1.}}], 
     LineBox[CompressedData["
1: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
qnrMnE9ZEnBsiYxnP/J//hc3hE5m
      "]], LineBox[CompressedData["
1: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
uWmZ0omD6Cmri2Hz/9//BatJ1cU=
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
Qnma2yUo/DDW1cj5f/8L2ICbjg==
      "]], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{-3.1415925253615216`, 
      1.0000000000000002`}, {-3.1261762269324227`, 
      0.9999999999999999}, {-3.110759928503324, 1.}, {-3.0799273316451266`, 
      1.}, {-3.0182621379287315`, 1.}, {-2.8845578654095836`, 
      1.0000000000000002`}, {-2.759713948540342, 1.}, {-2.637318973742252, 
      1.}, {-2.5045501138578046`, 1.}, {-2.3806416096232637`, 
      1.}, {-2.246359220302365, 1.}, {-2.114525773052618, 
      0.9999999999999998}, {-1.9915526814527773`, 
      0.9999999999999999}, {-1.858205704766579, 
      0.9999999999999998}, {-1.733719083730287, 
      0.9999999999999999}, {-1.6116814047651467`, 
      0.9999999999999999}, {-1.5727998935382574`, 0.9999999999999998}}], 
     LineBox[{{-1.4792698407136486`, 1.}, {-1.355718632312057, 
      0.9999999999999998}, {-1.2217935388241077`, 1.}, {-1.09031738740731, 
      0.9999999999999999}, {-1.0290094895238644`, 1.}, {-0.9677015916404187, 
      1.0000000000000002`}, {-0.9012067512137942, 
      0.9999999999999998}, {-0.8347119107871697, 1.}, {-0.7105825855838271, 
      1.}, {-0.5760793752941268, 0.9999999999999999}, {-0.4440251070755782, 
      1.}, {-0.3208311945069359, 0.9999999999999998}, {-0.18726339685193602`, 
      0.9999999999999999}, {-0.06255595484684248, 1.}, {-0.002003566743360822,
       0.9999999999999998}}], 
     LineBox[{{0.05970254508709937, 0.9999999999999999}, {0.1923349301073989, 
      1.}, {0.3161069594777921, 0.9999999999999998}, {0.45025287393454294`, 
      1.}, {0.5819498463201421, 0.9999999999999998}, {0.7047864630558349, 
      1.}, {0.8379969648778853, 0.9999999999999999}, {0.9623471110500293, 
      1.}, {1.0842483151510218`, 1.}, {1.216523404338372, 1.}, {
      1.3399381378758155`, 0.9999999999999999}, {1.4737267564996168`, 
      0.9999999999999998}, {1.5687927600515357`, 1.}}], 
     LineBox[{{1.5986550194735119`, 0.9999999999999999}, {1.7211343403762551`,
       0.9999999999999999}, {1.8539875463653561`, 0.9999999999999999}, {
      1.9779803967045506`, 0.9999999999999999}, {2.112347132130103, 1.}, {
      2.2442649254845035`, 1.}, {2.3673223631889977`, 1.}, {
      2.5007536859798494`, 0.9999999999999998}, {2.6253246531207948`, 1.}, {
      2.7474466781905886`, 0.9999999999999998}, {2.87994258834674, 1.}, {
      3.003578142852985, 0.9999999999999999}, {3.072585334107253, 
      1.0000000000000002`}, {3.1415925253615216`, 1.}}]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.0000000000000002`, 
     1.0000000000000002`}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.0000000000000002`, 1.0000000000000002`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5986411863163376`*^9, 3.59864400541158*^9, 3.598644356063637*^9, 
   3.5986448858199368`*^9, 3.5986452382420945`*^9, {3.598645302349761*^9, 
   3.5986453275222006`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SqrtBox["2"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598645025657935*^9, 3.59864505615368*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
FMHPs7EZgdz/938BWdMixA==
      "]], LineBox[CompressedData["
1:eJxl13k0VesbB3CpVJImU0WaSGaiQaSilKi4jVKJUiFuoWQqZcpQooxxM2ao
NLmEfFNCaZBrypzpnMPBPs7Z26Fufu/9+/fHXnt91tprr3fv5/s8+93L7d2s
T4uKiIh0keO/s/2msw6+suOw3/bZ30ecQvHQHFp07jjm9tQtGVpAwcn6iNy8
30J8Fvp8eruSwttpkzmxtBCT7o6tyuoUFhdmbFIYEiLtaL9dsB6FD0uo46pt
QpRc3la5fjsFlb7gTNNiIe5mjRU5OFK4Fqe+vuaZEFGn5m1Kd6XQvKuu2ipH
iLoB2eUdlyiEPFHgHo8XQsazaO6OEAr9l1/qXrkkRIU+d13HQwoZ4t14rCtE
0I7PTzTYFJZrG7XI5I2h9/aeuI2nebCw5sRqpo+hOf++0XEXHrw87v2xI2kM
RRuD0/zdefhSNPTJM3wMeYbrUp8H8OC9NQX1zmNINry9lZXMQ731ZEa0+hhW
WiEyoIGHYM9yN8knDOa88Qh13TqKgeLt08We0chctn/t19l85N0p/OieTcNk
cG7ToQV8uJxdE/XjLxqTBflTWuX4GJKes+T1LRrGy1f21irxQf1Zr+3hQsP/
ADvH25gPRtnBtns1jeK6uykVF/gQjbn2oixFAN6E02OlOj7enRv1Uo8V4Gvc
hcc/m/gI3HJqc2KkANO8M37WtPMxfdjsg6evANGmvT5HOXzM3DW3U91GgBFl
33Z9EQEkJ5PFk6QFaEnkFzaqC7DEueTk5Qg+Er/JFb0OECCxunrHnEA+fisF
BrwNFmCxcqNaug8fmYPxyeXhxD8o+osTH0t3bqx+ck8AuUPKYcq7yHPXiJWb
5gggZXLnecN0PqLCby08/lUAiSVnpupdHUVlqZOSkSyNCC8P9odLo7h+w6jg
5hIasxsDPp9wHYVlWYxrrSIN8Tv348KPjcJQev4RCxUaM2fUqfVsGoWNbxz3
3w00pvMN90cLefg3xnGO2REavz8uyKQu8ND5WjX03D0aVvHKBbJOPJT+G9JR
Ek8j47TB+832PDxNHxGddZ+GuYh9X4Q1D4fUnz+PSaMRq/9Mac1aHhTDZeKd
8mloPNibdVJAgWUu8VWhmsa18w5/h3Ip2G8MyJGvoVFncLkyv5dCiUb3dpkv
NLwaUvr/radw/l5E+fg/NCrEh5UTCyjozP/wNKCThq1nxMM6kmN1d72GuzSN
/G0PCsf/y3mAhY+xkIbovJdVy85QODzDs7l3gkZ2bivL9RDpkzGXAkURBoJO
VZXZGygINC+xD4gzkLkXbRUyOoLoJPG8dwoM3I0l9p8bG0b8iH7Wgy0MTE0Q
5NA/jL9V7ZQ/bSPXm10sPNYwjHLFviM8UwZFe5oXW78YhumRmGaVXQx+Hcv4
YeA2jGltvJUWVgwCfQ3dJFhD+DW4yMPBjsGBayMPxBqH4Cv2u3eNPQPlwLQ6
kfdDWJZgKzLgwKA6fOY6Om0I61/d1jt0hvRFUv2v9uND4Oy3C+o7zyD2lUtY
fiMX5c4rHL5dYXDmtWJpznsuxM6qmur6MNhQXjeU/pKLW85x1RG+DFqqN1jF
R3MRuXhxseZVBkubp8kF7OHCm39FXzmQwUhr4S4fIy5KnA+s3h/E4E2nk4+n
Ohex/YWvfIIZ2LNqO86Jc3Fv+fuywlAGD5n7mdaVgxBzsNjaE8HAa2Jvk0XB
IDbN+EuzI5KB+W/RWWYZg2hdKFlcd4sBd/o5l03XB1HoqJmbHcXg9Sz5FP0L
gzB/ZiMZdofBrTlfv2rZDUL+fMLc09EMtKX1167aPIiG5YfZM+4ymLKIfWqp
xiDM7p7EV+I6+aRYOflBaDtH6d65x8Bj1ZQJiYkByCkEcUXiSD3Wfn5DFwyA
88o4JyaB3E82cueCrAFIbkrKWprIIHvColYzdgDT6RvzM4jjyz91nrk0AJtu
b62UJAbzMiPOBDoOwN1ld/eC+wxCQy1GHhwcQH+bhuh14st7P/3+vm4A+ZtK
Q/cmMxjWjQhmlAfw219/5DGxo4yF5ELZAaRaH30rlsKgY3x2rNaMAZTWyora
EB9sr1GwGONgv/vBJw+Jv7wJzzzL4sBOalrVCPGOjN0aQU0cvBmStND9i0FZ
yOyC1CoOLBIcjdyI1znXGJYVctAw71diFvGTPeEVLQ85UHpSfqqZWFl3t8VY
HAcz1fISpz1gkCI9u35hKAe7Ux8bqhHLjH88qu3FQXkYzC2Ib7WF9Vic5cCk
vLniDLHYG3Pnc4c5KPAfzfUj9k8X5wft5GDGsRn/RhLTwR+90zZwoHNwYUk8
sYtTmChUODCqWNiXTNxraR7WKsfBtpMzfP6zrY74AuFMDk6ZDfvGEddLfUyQ
GmejkfowEE5sIby5XIfDRsv65Apv4orWXTmW39nAQRfxU8SGmKXj9IGNDpZh
qRnxy7QPRcGv2Ejpk25RIlYPvrklPYcN19xJh9/k+TPO7apGAhsV1FSbb8Ty
lrP2td1kY8k/GqUpxHe1PzQJr7AxXHMzzJFYQurmCWknNooLlN6rEAeO7WTp
2LAx9nGeSx+ph3tZNeNkwIbLVrlJS+KB1FD/EFU2bMaODI6TetsH7RTLWMyG
7HV90wfE1hbV0u0TLJzsWGjYRvLyUSs0eXyAhZqpZq0XiLct3Kkk08rCs0wP
1hRi3ZYqvb0lLOSs0jKbT/KX+zqk1DmPhan7xxKjSD5XpJqZhiaxcCBD21ac
eP7Zqj/KfVjYfM539VA8yefukNZ2ZxYSNRp0DhKLaJk5TBxlweW5Wu4r0g8U
XXlxrSEL+4rO97nFMjj7PXhirzoLMUG52W9J/3SV7rjuIs9CQl5Iy1zi2huV
dzJ/9YN+UR+WEMMgf37lU9nX/fjzfPcKJ9K/1sfnm3fl9cPmZCvX7zYDJte2
JzuxH1cT52uFk343NOVLG3j1Q/TLPoVoMh+qLy3zsV3bD37mlhwrMj+c3zlL
Ka3oRwvf0EgnhIHkvMLHQ/P6URTavluczJv9OZZd/sN94LDtW7JvkPW1em9P
zelDcePuyjh/BjdUKjvOxfehzEt1o4kfybvnfC/dkD5Ia0euYZP55yKZnfvu
VB+C4i4GLiXzUbilYW6/Yh9EvmprGrmT95el1aIa24u8byYvtjmSPI16u/MD
e3FvaoJO8CkGh40rJUrdewG3JL13ZD6nNNsaW1r1Qkz05cc1Jxiozg7LcJPo
hcgx3vacQ6Sef/a6vrzeg+qKR4ILZgz6SrVm+l3oQXCP4qTldlKfWT6p2+16
UJi+K26lCen3tPn1jUY9sP1i6l6ymYFNw+aN48JumD9oG0zWJ3kzSJi62a0b
Z+a899RcQfJ6d0nbwePd2KQ/EZ2vSNY7nPzSzbIbamt4N1TJ94pJSzudqtaN
a4uYnjlyZB7PflQ1jf0DN+nLT8PmkP5tKwuvsfsBvYL25cfGaIT69y48Yt2F
Px/qCJwqyfex2ZF7YWsXzrfFzFB5R+ODLqciTLsLySI3Z3aC7B9YQ56lkl3I
smtuNHhFY/Ffw/nGsZ24sXMZcvJoKG2V2vA5pAOxD4Punr5NwyDoxE62UxtS
qau2ttbkfkK/zOO72/DOWGN1yh4ah13uizaotaFL1/p9izkNzz++l5ZzW9E7
7dFVUxMaT5f/oZPk2orzCYFiLWtprC7bsXjPxRZ8lpqrLSlFQ2pMg/viSjPa
vFd8Sa0VIN3JYpeqTTPME9b3GX8SQLfDKeuBQTN+R7qMNFcJsO/9Q7vIn03o
rff78bNMgPCY5Q2Ofk1Qd7hiM/2xAKLa0mWLAhrxt9/ze6tDyb7u7K/bV0Pr
IbqmU/GZgQD1T3Tm7XGsR8JUKsNEX4BigWOUvGk9Wk9Yna7VEiDw2reoV5P/
wGH/lpTmVWQ/F591h3/pHxTpVMpnSApgWrUv5szpOny2vPlM5Qcf8UqZsXu3
1WJLsngRP4CPGxVJBsbCKjwO8HQZfT4K9peNMaeLqrD9qsPk3Uej2PO9aTDc
qwqxdW+5ulmjWDy8MLlZWImEeTrtdgmjeCobMXlh/D3CEiK3BpF9YbuTb0XG
xDtIfJG7zjMfheuK4vtSE0BSzEcXhw4eNq5nLE96A+czmy57NPEwzUJ38vFE
GXLOHF8QUMtDkmfuSbOfr7FX7f2viLc8VFcnKnv/KsGh5NwmtyweVrj5PO38
XQh7telaDud5aCwxrMid+hTiSRf7JYQU5K/Yd4xK5OOnp+xwEUUhwnu3XtSC
J/BQjGPbcSg4+yl0fVR4hKO7NV9ntFBQvVG+foteNpJklWV+lVLIuTWLpXry
AT49ey49eI2C7rK+K1GfU/CO06V46AqFBSsLlWqa72M299JGXKDwTeWo35aR
eER+W5p2w57CPr10dTX5O3DcetG33YTCCdeBpzV7bsHeiqunakhhqcetmVtP
h8El3G22O/mfSr7aWKgWfR1TevmLxldRKBKnl26z8oNXcPaBdQoU1ssYfVH3
98TQkc9/u0mT9ZuI/9Q86AwZt83GmXMo1L7UezHT7hCWvm2mGqf/v/8HHvUl
+A==
      "]], LineBox[CompressedData["
1:eJxl13k4Fe3/B3BKWr4SJUoLqexSSkR8SpIkKhRKJEsJrSoRUQlR9i1bEi04
PCTpyUciKkRZSkQnjnOObc4y4+jR02+ev39/zDXX65o/Zu573u/7nlnlfvqA
5wwxMTEWffx3zrq0k7Mv8zi4lZWqfphL4L5S5waT+2dBbbryeqosge35C+Xt
LgRCDVs4x20pgY+tPTdWPLgGK/mxFWtWEci1eP3NNPYG/BNScGNIncBTxoHa
9m4xYH54NPqwIYFdGT4+E2vioFTe+5XMNgKp1LSaiqUJcG3dtFTdLgINEoRe
MDMFLoUpTi85RGBVRNFz+64syHfoZ6UGEOiqbfHbPr4Exkx0zZaOEbg1reAO
lcsAWfckD2mSQKnwmTLWjqVw5KzK63+nCeSMHb8/5l0GhVHvldqleJjXsKZ+
/a1yqHgqrb9Vm4dyAQVznzc8h55Vv9o1fHg4zbF/f2xVLfRLCsrsmDz8Yeno
4J/dBDkZCrf83vDRdCj4WEtfE6y8ab645B0fM8Lu+2mveAe6epFzuB/5eKCa
e5N77x3IbDZcYt/Lxzqtq5Ve6e+Bx68qI4R8zJPOU3BNagYTfXaw1VoB6nHJ
UbWdbZDieUHnYrgA3QznnO/2aIOvkQUhypECvBOhOBVxow3EVbZLvo0VIFcF
ZrHetIFhtlr5jHQB5h2OXJFv1g6RQjMXM4YAF7Uo2ihv+wQhpr11X3sEKGQA
Y4lxBwQ2mye6rhNis5bxwjMuHbBks69bz0YhPijcHNAY2gFqucFHbLcI8UCO
jvHF+g6YNJX9pmYuxLI7yxo/7+2E0TUBbxOchOjvN/n9jlsXNBFz/9hcF+Kw
JkN6VsQXOGhzOvXgJyHWFDw5e+TRF1jYveqQXLcQU1QKOsrff4F/d9XIN38T
ooViVob7gq+g+GRXnMaQEPPn3latTfsKNm1iuzInhejG9jINetoDvZd+3HNd
RmLPw5X+vLZeiFVOn+VwlMRKyaIDj/i9oJlt9MzEncRE7y0GrnJ9sDGoOkDZ
i0RrDXuxlkN9AI2Sazv8SKwpikp49L0P/mjMURIGk3i/XFjpOvoddINbUxdn
kBgiF35PXrofrk7FdGdnkegcsOBai24/VJ5hKKjcJ3GhgeZu4/P94NxonCz/
iMQb1a7f5H/1g139XZ/nz0iscBv6w7o+AEU7You6P5KoIqt9ri5pAJZ6G4aJ
fSYx7vW5wayHAzBueGnX6i4S/VTE3tk3DkD41c0PD/aSqDqomFA37weofGuM
vcAmMc1735rs+B/QaazsFPOHxCD/l5YOOUxgmNW6qWpQaAakhzSDCV1yfvXu
WhTOk9ENa6xhgp4RryVdh8K0srwXW74zYbW+S9vkBgorhVGaK1f8hPP2y2+c
N6KQf8VRajjjJxydbbT5pBWF1XsS1HOf/IR//WdV21pTGLa82dyp+idUGT/7
tt6GQpkauPrh609Y9RefYu6ncJ242jhjySDoF4Rfk3Si0OcW+fFyyiAYNqqH
WXlRqOeoO7qhYBBk8nIZPd4UTqmfnDPybBBS7h8M8DxJYeT73m0unYOwe7V4
g48vhQXz68u2yw3BwKj+qU3nKPT//rvl1+oh0LgZtDv9PIX6DANu+cYhyPLS
+Ft0gcL6fU9VVO2GoIE45VJ4icIfiQmJ8xKG4OVgSsSbYAofeTQz3twfglQ3
5T/TVyk8oy/ZHFw2BE5z4+ZuCKXw365AiYm2IWiqmvoUGUbhcsVjAZ8XsCDw
p+r6yZsUDnIz4mOUWPBpbM76WbcofPqyo3inLgvejOfh/EgKjVwsWc9tWCDz
WCxWOppCx1zdQ5mxLMh2efG1NZZC4ezvxx5ns+BiMbm+/g6FcadjfCsZLHBn
ZSuX36XwnSknrK2dBeLRmk1X4yn0KkiN6WOyYM7f0aFOCRTOkLZI5QpYwPG0
a12XSN+vL69IQn4Y1Mp1NrxNorDLfP9zWbVh0C/6YB6ZTOG5oj+vVxoOQ04T
d3xHCv28QUe6DZ2HYdGKr7Mepf43PvkZftnD8HLO4i2rMyisCquXusIYBqae
zT9ltO055xRu1Q5DkEn8AaN7FMZWfdS+zxyG8Il7aJBJoaZyiEGJYBgkHizr
LKL99pa22UsJNmy0XRy6LIuez4NRhzpV2eBX+evuEO2MGgN3pgEbEhcWU9uy
KdysyvKdsGRD0WMvXjLtT7FJl6ad2LD88IJrg7T9SbPwuafYIPM1Lk87h86z
Cy9GPpgNYY+6HP1pF9TnpK6OZcO2Va15j2mbadvkrc9mg8jP69p32v2J00Um
DDasj4njSeVSGPzPk+dWtWxwsAZqE+0lx53qDrWzoXq/952DtCvez27xYLIh
a+GfF2dp79Or7D4rYIPal38vR9AeTfdghkhw4GyN24ck2pHii8ZuL+ZARIVy
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
/j9IXt8B
      "]], LineBox[CompressedData["
1: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
L/y0GAw+/g8bffeX
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
A60WbAE=
      "]], LineBox[CompressedData["
1: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

      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.414213444225312, 
     1.414213444225312}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.414213444225312, 1.414213444225312}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5986450593648634`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986412884891815`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"square", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"squareShift", "[", "\[Theta]_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.600344083412917*^9, 3.6003440955285482`*^9}, {
   3.60034417060178*^9, 3.6003442069835787`*^9}, {3.600346171687635*^9, 
   3.6003463080391197`*^9}, 3.6003463726154947`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyCube", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix2DScale", "[", "\[Theta]", "]"}], 
      RowBox[{
       RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], ".", "square"}]}], 
     " ", "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}]}],
     " ", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596032403095932*^9, 3.5960324253912687`*^9}, {
   3.596032460461591*^9, 3.596032462451202*^9}, {3.59734294706007*^9, 
   3.597342949132189*^9}, {3.6003435296766787`*^9, 3.600343604426983*^9}, {
   3.6003439742808123`*^9, 3.6003440029027157`*^9}, {3.600344053928721*^9, 
   3.600344059640087*^9}, 3.600344194683984*^9, {3.60034609735738*^9, 
   3.600346098401417*^9}, {3.600346315800701*^9, 3.600346321220726*^9}, {
   3.600346387165134*^9, 3.600346389427198*^9}, {3.6003522180066423`*^9, 
   3.600352241126309*^9}, {3.6003544960416803`*^9, 3.600354497577633*^9}, {
   3.600354589559607*^9, 3.6003545985110703`*^9}, {3.600354913217334*^9, 
   3.600354917368333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"xyCube", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "]"}], 
              "]"}], "]"}]}], "]"}]}]}], "]"}], ",", "Black", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], " ", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}, 
   3.59734299916105*^9, {3.5973430308648634`*^9, 3.597343042741543*^9}, {
   3.5973431225271063`*^9, 3.59734313867903*^9}, 3.5973431790783405`*^9, {
   3.5973432425659723`*^9, 3.597343244014055*^9}, {3.597343658742776*^9, 
   3.597343671238491*^9}, {3.6003439223507853`*^9, 3.600343948218164*^9}, {
   3.6003442534600973`*^9, 3.60034426719639*^9}, {3.600346410540168*^9, 
   3.600346412684066*^9}, {3.600346534425886*^9, 3.600346537712839*^9}, {
   3.600354644267932*^9, 3.600354647259665*^9}, {3.6003546784861937`*^9, 
   3.600354734877804*^9}, {3.6003548451462193`*^9, 3.600354848311805*^9}, {
   3.6003549851265497`*^9, 3.600354997685006*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.2136283004441062, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], Rational[-1, 2] Pi, Rational[1, 2] Pi}}, 
    Typeset`size$$ = {360., {178., 182.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$28745$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]$$ = Rational[-1, 2] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$28745$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Blue, 
         Polygon[
          $CellContext`xyCube[$CellContext`\[Theta]$$], VertexColors -> 
          MapThread[RGBColor, 
            Transpose[
             Part[
              Transpose[$CellContext`RGBCube], {2, 3, 4, 5}]]]], Black, 
         Rectangle[{0, 0}, {1, 1}]}, PlotRange -> {{-0.5, 1.5}, {-0.5, 1.5}}],
       "Specifications" :> {{$CellContext`\[Theta]$$, Rational[-1, 2] Pi, 
         Rational[1, 2] Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {222., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.600343935184498*^9, 3.6003439497245207`*^9}, 
   3.600344006790689*^9, 3.600344268979837*^9, 3.600346414309067*^9, 
   3.6003465389105377`*^9, {3.600354629743751*^9, 3.6003546477167883`*^9}, 
   3.600354702984207*^9, 3.600354736496788*^9, 3.600354849450473*^9, 
   3.6003549983709173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YABAxisRanges", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.600344630955681*^9, 3.600344636201605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox["3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox["3", "2"]], "2"]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["6"]}]]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox[
        FractionBox["3", "2"]], "2"], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["6"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.600344636682317*^9}]
}, Open  ]],

Cell[BoxData["RotationMatrix2DScale"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nYABPolygon", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.600343463221168*^9, 3.600343471099443*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.600343463821347*^9, 3.6003434720298347`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBCube", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.600343579412168*^9, 3.600343584757565*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.600343586225819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xyCube", "[", 
  RowBox[{"Pi", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.600343617130801*^9, 3.600343630176508*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.600343618883486*^9, 3.600343631870562*^9}, 
   3.6003436635926847`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1143, 726},
WindowMargins->{{2, Automatic}, {Automatic, 5}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 107, 1, 51, "Subtitle"],
Cell[689, 25, 150, 3, 28, "Input",
 InitializationCell->True],
Cell[842, 30, 131, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[998, 36, 275, 6, 46, "Input"],
Cell[1276, 44, 4435, 144, 131, "Output"]
}, Open  ]],
Cell[5726, 191, 2984, 87, 80, "Input",
 InitializationCell->True],
Cell[8713, 280, 968, 26, 46, "Input",
 InitializationCell->True],
Cell[9684, 308, 1128, 33, 63, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10837, 345, 104, 2, 28, "Input"],
Cell[10944, 349, 9109, 288, 118, "Output"]
}, Open  ]],
Cell[20068, 640, 91, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[20184, 645, 69, 1, 28, "Input"],
Cell[20256, 648, 734, 19, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21027, 672, 153, 3, 28, "Input"],
Cell[21183, 677, 158, 4, 28, "Output"]
}, Open  ]],
Cell[21356, 684, 6855, 163, 199, "Input",
 InitializationCell->True],
Cell[28214, 849, 7876, 190, 233, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[36115, 1043, 218, 4, 28, "Input"],
Cell[36336, 1049, 8096, 267, 372, "Output"]
}, Open  ]],
Cell[44447, 1319, 108, 3, 28, "Input"],
Cell[44558, 1324, 10927, 257, 369, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55522, 1586, 104, 1, 51, "Subtitle"],
Cell[55629, 1589, 2535, 66, 80, "Input",
 InitializationCell->True],
Cell[58167, 1657, 200, 4, 30, "Text"],
Cell[58370, 1663, 1672, 45, 63, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[60067, 1712, 2090, 42, 46, "Input"],
Cell[CellGroupData[{
Cell[62182, 1758, 8516, 238, 245, "Print"],
Cell[70701, 1998, 65217, 1691, 118, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135967, 3695, 273, 6, 28, "Input"],
Cell[136243, 3703, 683, 19, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136963, 3727, 227, 5, 28, "Input"],
Cell[137193, 3734, 302, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137532, 3748, 424, 8, 63, "Input"],
Cell[137959, 3758, 1902, 63, 129, "Output"],
Cell[139864, 3823, 1902, 63, 147, "Output"],
Cell[141769, 3888, 1902, 63, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143708, 3956, 95, 2, 28, "Input"],
Cell[143806, 3960, 415, 8, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144258, 3973, 297, 6, 46, "Input"],
Cell[144558, 3981, 413, 8, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145008, 3994, 207, 4, 28, "Input"],
Cell[145218, 4000, 1543, 55, 58, "Output"]
}, Open  ]],
Cell[146776, 4058, 419, 10, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[147220, 4072, 170, 3, 28, "Input"],
Cell[147393, 4077, 3266, 109, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150696, 4191, 2579, 55, 97, "Input"],
Cell[153278, 4248, 2724, 52, 488, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156039, 4305, 634, 15, 28, "Input"],
Cell[156676, 4322, 2994, 97, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159707, 4424, 421, 11, 28, "Input"],
Cell[160131, 4437, 35534, 598, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195702, 5040, 4121, 115, 186, "Input"],
Cell[199826, 5157, 122881, 2057, 223, "Output"]
}, Open  ]],
Cell[322722, 7217, 837, 23, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[323584, 7244, 2552, 62, 103, "Input"],
Cell[326139, 7308, 2612, 53, 500, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328788, 7366, 2869, 82, 137, "Input",
 InitializationCell->True],
Cell[331660, 7450, 2662, 81, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334359, 7536, 168, 3, 28, "Input"],
Cell[334530, 7541, 361, 5, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334928, 7551, 3327, 78, 114, "Input"],
Cell[338258, 7631, 2156, 67, 140, "Output"],
Cell[340417, 7700, 3459, 112, 142, "Output"],
Cell[343879, 7814, 9333, 275, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353249, 8094, 382, 10, 28, "Input"],
Cell[353634, 8106, 1681, 34, 154, "Output"]
}, Open  ]],
Cell[355330, 8143, 398, 10, 28, "Input",
 InitializationCell->True],
Cell[355731, 8155, 886, 23, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[356642, 8182, 2710, 62, 63, "Input"],
Cell[359355, 8246, 2359, 50, 466, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361763, 8302, 127, 1, 51, "Subtitle"],
Cell[361893, 8305, 614, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[362532, 8318, 5103, 132, 123, "Input"],
Cell[367638, 8452, 53795, 927, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421470, 9384, 1029, 26, 28, "Input"],
Cell[422502, 9412, 2105, 44, 238, "Output"]
}, Open  ]],
Cell[424622, 9459, 99, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[424746, 9465, 302, 7, 28, "Input"],
Cell[425051, 9474, 750, 23, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425838, 9502, 852, 20, 28, "Input"],
Cell[426693, 9524, 2699, 81, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429429, 9610, 1613, 41, 80, "Input"],
Cell[431045, 9653, 2091, 57, 79, "Output"],
Cell[433139, 9712, 1931, 53, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435107, 9770, 442, 11, 28, "Input"],
Cell[435552, 9783, 1685, 35, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437274, 9823, 2287, 57, 80, "Input"],
Cell[439564, 9882, 20566, 555, 229, "Output"],
Cell[460133, 10439, 15041, 405, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475211, 10849, 382, 8, 46, "Input"],
Cell[475596, 10859, 18088, 528, 523, "Output"],
Cell[493687, 11389, 16131, 457, 523, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509855, 11851, 601, 15, 46, "Input"],
Cell[510459, 11868, 11337, 336, 555, "Output"],
Cell[521799, 12206, 11079, 323, 555, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532915, 12534, 253, 6, 28, "Input"],
Cell[533171, 12542, 149, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533357, 12550, 1605, 37, 80, "Input"],
Cell[534965, 12589, 19585, 549, 1165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554587, 13143, 162, 3, 28, "Input"],
Cell[554752, 13148, 1845, 55, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556634, 13208, 186, 3, 28, "Input"],
Cell[556823, 13213, 4693, 146, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561553, 13364, 360, 7, 46, "Input"],
Cell[561916, 13373, 4335, 135, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566288, 13513, 491, 11, 28, "Input"],
Cell[566782, 13526, 12052, 371, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578871, 13902, 183, 3, 28, "Input"],
Cell[579057, 13907, 113, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579207, 13913, 13116, 382, 277, "Input"],
Cell[592326, 14297, 48243, 812, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640606, 15114, 1371, 41, 86, "Input"],
Cell[641980, 15157, 48242, 811, 239, "Output"]
}, Open  ]],
Cell[690237, 15971, 1343, 44, 57, "Input"],
Cell[CellGroupData[{
Cell[691605, 16019, 870, 21, 46, "Input"],
Cell[692478, 16042, 393, 11, 237, "Output"]
}, Open  ]],
Cell[692886, 16056, 312, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[693223, 16068, 1066, 29, 46, "Input"],
Cell[694292, 16099, 2229, 49, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696558, 16153, 116, 2, 28, "Input"],
Cell[696677, 16157, 72, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696786, 16163, 2038, 50, 63, "Input"],
Cell[698827, 16215, 3143, 57, 3068, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702007, 16277, 167, 4, 28, "Input"],
Cell[702177, 16283, 108, 3, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702322, 16291, 144, 3, 28, "Input"],
Cell[702469, 16296, 86, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702592, 16303, 198, 4, 28, "Input"],
Cell[702793, 16309, 1216, 45, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[704046, 16359, 1466, 50, 90, "Input"],
Cell[705515, 16411, 54007, 901, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[759559, 17317, 518, 14, 74, "Input"],
Cell[760080, 17333, 402, 13, 48, "Output"],
Cell[760485, 17348, 1857, 62, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762379, 17415, 253, 5, 28, "Input"],
Cell[762635, 17422, 1857, 62, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764529, 17489, 2336, 70, 158, "Input"],
Cell[766868, 17561, 1604, 53, 80, "Output"],
Cell[768475, 17616, 233, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768745, 17626, 2326, 71, 129, "Input"],
Cell[771074, 17699, 2194, 42, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773305, 17746, 1653, 46, 79, "Input"],
Cell[774961, 17794, 5292, 147, 91, "Output"]
}, Open  ]],
Cell[780268, 17944, 1332, 38, 79, "Input"],
Cell[CellGroupData[{
Cell[781625, 17986, 1384, 42, 80, "Input"],
Cell[783012, 18030, 2648, 50, 260, "Output"]
}, Open  ]],
Cell[785675, 18083, 160, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[785860, 18089, 996, 27, 46, "Input"],
Cell[786859, 18118, 19109, 514, 187, "Output"]
}, Open  ]],
Cell[805983, 18635, 318, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[806326, 18647, 881, 24, 28, "Input"],
Cell[807210, 18673, 5010, 139, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812257, 18817, 6207, 165, 143, "Input"],
Cell[818467, 18984, 7872, 214, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826376, 19203, 2047, 58, 127, "Input"],
Cell[828426, 19263, 2953, 84, 105, "Output"]
}, Open  ]],
Cell[831394, 19350, 1142, 37, 63, "Input"],
Cell[CellGroupData[{
Cell[832561, 19391, 6526, 166, 293, "Input"],
Cell[839090, 19559, 172301, 2899, 365, 162795, 2742, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1011406, 22461, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[1011525, 22466, 395, 9, 46, "Input"],
Cell[1011923, 22477, 1058, 36, 52, "Output"],
Cell[1012984, 22515, 1568, 47, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014589, 22567, 751, 20, 63, "Input"],
Cell[1015343, 22589, 1049, 37, 57, "Output"],
Cell[1016395, 22628, 1111, 38, 57, "Output"],
Cell[1017509, 22668, 1050, 37, 52, "Output"]
}, Open  ]],
Cell[1018574, 22708, 283, 5, 30, "Text"],
Cell[1018860, 22715, 444, 10, 46, "Input"],
Cell[1019307, 22727, 553, 13, 28, "Input"],
Cell[1019863, 22742, 189, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[1020077, 22749, 467, 10, 28, "Input"],
Cell[1020547, 22761, 6304, 170, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1026888, 22936, 6194, 149, 182, "Input"],
Cell[1033085, 23087, 4715, 88, 580, "Output"],
Cell[1037803, 23177, 588, 12, 24, "Message"],
Cell[1038394, 23191, 588, 12, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039019, 23208, 205, 4, 28, "Input"],
Cell[1039227, 23214, 228, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039492, 23224, 1868, 50, 131, "Input"],
Cell[1041363, 23276, 36671, 614, 490, "Output"]
}, Open  ]],
Cell[1078049, 23893, 126, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[1078200, 23899, 337, 9, 58, "Input"],
Cell[1078540, 23910, 875, 28, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1079452, 23943, 365, 12, 81, "Input"],
Cell[1079820, 23957, 133, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1079990, 23963, 241, 4, 28, "Input"],
Cell[1080234, 23969, 515, 20, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1080786, 23994, 188, 5, 57, "Input"],
Cell[1080977, 24001, 125, 4, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081139, 24010, 279, 9, 57, "Input"],
Cell[1081421, 24021, 178, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081636, 24030, 511, 16, 76, "Input"],
Cell[1082150, 24048, 151, 4, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082350, 24058, 107, 1, 51, "Subtitle"],
Cell[1082460, 24061, 1009, 28, 46, "Input"],
Cell[1083472, 24091, 969, 28, 63, "Input"],
Cell[CellGroupData[{
Cell[1084466, 24123, 369, 7, 28, "Input"],
Cell[1084838, 24132, 2926, 86, 74, "Output"]
}, Open  ]],
Cell[1087779, 24221, 580, 16, 28, "Input"],
Cell[CellGroupData[{
Cell[1088384, 24241, 34, 0, 28, "Input"],
Cell[1088421, 24243, 5822, 180, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094280, 24428, 117, 3, 28, "Input"],
Cell[1094400, 24433, 609, 17, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095046, 24455, 318, 7, 28, "Input"],
Cell[1095367, 24464, 488, 8, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095892, 24477, 533, 11, 46, "Input"],
Cell[1096428, 24490, 2353, 73, 77, "Output"],
Cell[1098784, 24565, 2355, 73, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101176, 24643, 601, 13, 28, "Input"],
Cell[1101780, 24658, 24034, 402, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125851, 25065, 791, 25, 45, "Input"],
Cell[1126645, 25092, 37479, 631, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164161, 25728, 75, 1, 28, "Input"],
Cell[1164239, 25731, 486, 14, 28, "Output"]
}, Open  ]],
Cell[1164740, 25748, 1588, 46, 46, "Input"],
Cell[1166331, 25796, 1323, 28, 46, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1167679, 25828, 2748, 59, 46, "Input"],
Cell[1170430, 25889, 2224, 44, 500, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172691, 25938, 132, 2, 28, "Input"],
Cell[1172826, 25942, 747, 30, 78, "Output"]
}, Open  ]],
Cell[1173588, 25975, 47, 0, 28, "Input"],
Cell[CellGroupData[{
Cell[1173660, 25979, 130, 2, 28, "Input"],
Cell[1173793, 25983, 825, 30, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174655, 26018, 134, 2, 46, "Input"],
Cell[1174792, 26022, 485, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175314, 26042, 149, 3, 28, "Input"],
Cell[1175466, 26047, 347, 10, 28, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
