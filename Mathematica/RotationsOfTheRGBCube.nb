(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1834522,      37026]
NotebookOptionsPosition[   1818477,      36514]
NotebookOutlinePosition[   1818833,      36530]
CellTagsIndexPosition[   1818790,      36527]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The RGB Cube corners.", "Subtitle",
 CellChangeTimes->{{3.596031466553658*^9, 3.596031489449979*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ToMatlab`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5982701510309753`*^9, 3.5982701642642107`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.598099845581697*^9, 3.598099849188382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"TrigFactor", "[", 
    RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.5981038847377663`*^9, {3.598259839351358*^9, 3.5982598505757017`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["2", 
       SqrtBox["3"]], 
      SqrtBox["3"]},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "3"}]]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "6"}]]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"5", "/", "6"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "/", "6"}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       SqrtBox["6"]], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5981038863317966`*^9, 3.598259851375906*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cubeCorners", "[", "minMax_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"minMax", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598104076120545*^9, 3.5981043202884827`*^9}, 
   3.598109768098722*^9, 3.59826004305897*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YABCube", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"cubeCorners", "[", 
    RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"faces", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.598260760658156*^9, 3.598260806851488*^9}, {
  3.600343003419705*^9, 3.600343008039996*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RGBAxisRanges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RGBCube", " ", "=", " ", 
   RowBox[{"cubeCorners", "[", "RGBAxisRanges", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"faces", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.600343066116569*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SqrtBox["3"], 
      SqrtBox["3"], "0", "0", "0", 
      SqrtBox["3"], 
      SqrtBox["3"]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
         SqrtBox["2"]]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["6"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5982608094277077`*^9, 3.5986409102905493`*^9, 
  3.600343086980898*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.600343046383244*^9, 3.60034305735287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "RGBCube", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "1", "0", "0", "0", "1", "1"},
     {"0", "0", "1", "1", "1", "0", "0", "1"},
     {"0", "0", "0", "0", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.598640916500905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Max", ",", "faces"}], "]"}]], "Input",
 CellChangeTimes->{{3.5982609733385687`*^9, 3.598260991513816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8", ",", "7", ",", "8", ",", "8", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.598260992555751*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBCube3D", "[", "corners_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RGBCube", ",", "faces", ",", "ranges"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ranges", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", "corners"}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"Max", ",", "corners"}], "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], ",", 
       
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5907813365213704`*^9, 3.590781353176323*^9}, 
   3.596035624531362*^9, {3.596035672692958*^9, 3.596035678300202*^9}, {
   3.596035750201765*^9, 3.5960357820732727`*^9}, {3.5971359116909885`*^9, 
   3.597135995537106*^9}, {3.5971360336701593`*^9, 3.5971360569311924`*^9}, {
   3.5971361125852704`*^9, 3.597136114355273*^9}, {3.5971362181934185`*^9, 
   3.597136256185472*^9}, {3.597136307339544*^9, 3.597136337921587*^9}, {
   3.597136535776864*^9, 3.5971365800709267`*^9}, {3.597136784409214*^9, 
   3.5971368079612465`*^9}, {3.598099387329082*^9, 3.598099397896762*^9}, {
   3.5980994350873957`*^9, 3.598099554534875*^9}, 3.598099596242014*^9, {
   3.5981009882763042`*^9, 3.598100990882945*^9}, {3.598101059990138*^9, 
   3.5981011923287582`*^9}, 3.598102000742701*^9, 3.59810204260655*^9, {
   3.5981038703931913`*^9, 3.598103881595449*^9}, 3.598104341994803*^9, {
   3.598259992037691*^9, 3.59826002069662*^9}, {3.598260834608832*^9, 
   3.598260839330237*^9}, {3.598260869782176*^9, 3.5982608855420103`*^9}, 
   3.598260935288631*^9, {3.5982610352219467`*^9, 3.59826107956835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABCube3D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"corners", ",", "RGBCube", ",", "faces", ",", "ranges"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"corners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ";", 
     RowBox[{"RGBCube", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",",
           "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",",
           "1"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"faces", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ranges", " ", "=", " ", 
      RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"corners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"ranges", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], ",", 
       
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5907813365213704`*^9, 3.590781353176323*^9}, 
   3.596035624531362*^9, {3.596035672692958*^9, 3.596035678300202*^9}, {
   3.596035750201765*^9, 3.5960357820732727`*^9}, {3.5971359116909885`*^9, 
   3.597135995537106*^9}, {3.5971360336701593`*^9, 3.5971360569311924`*^9}, {
   3.5971361125852704`*^9, 3.597136114355273*^9}, {3.5971362181934185`*^9, 
   3.597136256185472*^9}, {3.597136307339544*^9, 3.597136337921587*^9}, {
   3.597136535776864*^9, 3.5971365800709267`*^9}, {3.597136784409214*^9, 
   3.5971368079612465`*^9}, {3.598099387329082*^9, 3.598099397896762*^9}, {
   3.5980994350873957`*^9, 3.598099554534875*^9}, 3.598099596242014*^9, {
   3.5981009882763042`*^9, 3.598100990882945*^9}, {3.598101059990138*^9, 
   3.5981011923287582`*^9}, 3.598102000742701*^9, 3.59810204260655*^9, {
   3.5981038703931913`*^9, 3.598103881595449*^9}, 3.598104341994803*^9, {
   3.598259992037691*^9, 3.59826002069662*^9}, {3.598260834608832*^9, 
   3.598260839330237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"cubeCorners", "[", " ", 
   RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.59827007227629*^9, 3.598270080076824*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", "1", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          FractionBox["\[Pi]", "3"]}], "]"}], "]"}], 
       SqrtBox["6"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5981068311498413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", " ", 
  "YABCubeCorners"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABCube3D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "RGBinYABcorners", ",", "RGBCubeCorners", ",", "YABCubeCorners", ",", 
      "YABinRGBCubeCorners", ",", "faces", ",", "ranges"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RGBinYABcorners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RGBCubeCorners", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]}], ";", 
     RowBox[{"YABCubeCorners", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", " ", 
        RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"YABinRGBCubeCorners", " ", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cubeCorners", "[", " ", 
        RowBox[{
         RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", " ", 
         RowBox[{"cubeCorners", "[", " ", 
          RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "]"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"faces", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "7", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "8", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ranges", " ", "=", " ", 
      RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", "0.9", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"RGBinYABcorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"RGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"YABCubeCorners", "[", 
            RowBox[{"[", 
             RowBox[{"faces", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"YABinRGBCubeCorners", "[", 
                RowBox[{"[", 
                 RowBox[{"faces", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.598105953448339*^9, {3.598105988521916*^9, 3.598105989261528*^9}, 
   3.598106034293277*^9, {3.598106156725143*^9, 3.59810623616577*^9}, {
   3.59810631744058*^9, 3.5981063447137938`*^9}, {3.598106500681981*^9, 
   3.598106553413378*^9}, {3.5981065865035543`*^9, 3.59810659540003*^9}, {
   3.598106675121546*^9, 3.5981066986506653`*^9}, 3.59810673141173*^9, {
   3.598106765793044*^9, 3.598106784275941*^9}, {3.5981068654982347`*^9, 
   3.598106893621772*^9}, {3.5981074853719797`*^9, 3.598107572894574*^9}, {
   3.598107614230008*^9, 3.5981076609034348`*^9}, {3.5981076985167837`*^9, 
   3.598107702671874*^9}, 3.598107799318324*^9, 3.5981079699746237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotation Matrices", "Subtitle",
 CellChangeTimes->{{3.59230779646035*^9, 3.5923078213303347`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixX", "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixY", "[", "\[Beta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Beta]", "]"}], ",", " ", "0", ",", " ", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Beta]", "]"}], ",", " ", "0", ",", " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrixZ", "[", "\[Gamma]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "\[Gamma]", "]"}], ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", " ", "\[Gamma]"}], "}"}], ",", 
     
     RowBox[{"Evaluate", "[", 
      RowBox[{"TrigFactor", "[", 
       RowBox[{
        RowBox[{"RotationMatrixX", "[", "\[Alpha]", "]"}], ".", 
        RowBox[{"RotationMatrixZ", "[", "\[Gamma]", "]"}], ".", 
        RowBox[{"RotationMatrixY", "[", "\[Beta]", "]"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"R", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", " ", "\[Gamma]"}], "]"}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5905831076862884`*^9, 3.5905831501507173`*^9}, {
  3.590583197255411*^9, 3.5905832177995863`*^9}, {3.5905988272233944`*^9, 
  3.5905988623024006`*^9}, {3.5905989029957285`*^9, 3.590598921010759*^9}, {
  3.590598968920499*^9, 3.590599032309125*^9}, {3.590689773258251*^9, 
  3.590689776538439*^9}, {3.590696395243007*^9, 3.5906964188513575`*^9}, {
  3.607416594325135*^9, 3.607416653109812*^9}, {3.607416747257659*^9, 
  3.607416753687982*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], 
      RowBox[{"Sin", "[", "\[Gamma]", "]"}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}]}], 
         "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "-", "\[Beta]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "-", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "-", "\[Gamma]"}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "-", "\[Beta]", "+", "\[Gamma]"}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]", "+", "\[Gamma]"}], "]"}]}], 
        ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6074166538076677`*^9, 3.6074167546705837`*^9}]
}, Open  ]],

Cell["\<\
Solution for the Yab cube. Luminocity axis is in the X value.\
\>", "Text",
 CellChangeTimes->{{3.596031163530446*^9, 3.596031186593289*^9}, {
  3.596031335752564*^9, 3.596031370656706*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"YAB", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"TrigFactor", "[", 
       RowBox[{
        RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", 
        RowBox[{"RotationMatrixZ", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "]"}], ".", 
        RowBox[{"RotationMatrixY", "[", 
         RowBox[{
          RowBox[{"-", "Pi"}], "/", "4"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iYAB", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"TrigFactor", "[", 
       RowBox[{
        RowBox[{"RotationMatrixY", "[", 
         RowBox[{"Pi", "/", "4"}], "]"}], ".", 
        RowBox[{"RotationMatrixZ", "[", 
         RowBox[{"-", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "]"}], ".", 
        RowBox[{"RotationMatrixX", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YABCube", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"TrigFactor", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigToExp", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], "]"}], 
        "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5981444941990137`*^9, 3.598144530214554*^9}, {
   3.598258137417379*^9, 3.598258243772018*^9}, {3.598258339360806*^9, 
   3.598258342636393*^9}, {3.598258544745542*^9, 3.5982585483449707`*^9}, {
   3.6074164411041718`*^9, 3.607416459196617*^9}, 3.607418896156534*^9, {
   3.6074189568482656`*^9, 3.6074190773321257`*^9}, 3.60741951671765*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", "RGBCube", "]"}]}], ",", "\"\<=\>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"TrigFactor", ",", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigFactor", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}],
         "]"}]}], "]"}], ",", "1"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"iYAB", "[", "\[Theta]", "]"}], "]"}], ".", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"YABCube", "[", "\[Theta]", "]"}], "]"}]}], ",", "\"\<=\>\"", 
   ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"TrigFactor", ",", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigFactor", "[", 
         RowBox[{
          RowBox[{"iYAB", "[", "\[Theta]", "]"}], ".", " ", 
          RowBox[{"YABCube", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}], "]"}], 
     ",", "1"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596031389628778*^9, 3.596031398491406*^9}, {
   3.596031810629077*^9, 3.596031882107218*^9}, {3.5973413196459875`*^9, 
   3.5973413235732117`*^9}, {3.5982596858886547`*^9, 3.598259692780513*^9}, {
   3.5982611313576813`*^9, 3.5982611711710033`*^9}, {3.606116117906073*^9, 
   3.6061161276026278`*^9}, {3.606116178667548*^9, 3.60611618568995*^9}, {
   3.6061166608111258`*^9, 3.606116663050254*^9}, {3.6061169512347364`*^9, 
   3.606116965682563*^9}, {3.6061170335954475`*^9, 3.6061170379946995`*^9}, {
   3.6061170879635572`*^9, 3.6061170925868216`*^9}, 3.6061171741874886`*^9, {
   3.6074170012582407`*^9, 3.6074170105624247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1", "1", "0", "0", "0", "1", "1"},
        {"0", "0", "1", "1", "1", "0", "0", "1"},
        {"0", "0", "0", "0", "1", "1", "1", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        FractionBox["1", 
         SqrtBox["3"]], 
        FractionBox["2", 
         SqrtBox["3"]], 
        SqrtBox["3"]},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
       {"0", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$, 1]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {-
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]]}, {-
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]]}}], 
    MatrixForm[{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, 1, 1, 1, 0, 0, 1}, {0, 0, 0, 
     0, 1, 1, 1, 1}}]], "=", 
   MatrixForm[{{
     0, 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^Rational[-1, 2], 2 
      3^Rational[-1, 2], 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^
      Rational[1, 2]}, {
     0, -Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], -
      Rational[2, 3]^Rational[1, 2] 
      Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], -
      Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 0}, {
     0, -Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], -
      Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], -
      Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] 
      Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], 
      Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 0}}, 1]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.596031883014731*^9, 3.5962156989828453`*^9, 3.5962170412168503`*^9, 
   3.5967656249304237`*^9, 3.5971350868418283`*^9, 3.5973158513472843`*^9, 
   3.598099812502405*^9, 3.59814455154566*^9, {3.59826114412899*^9, 
   3.598261172187111*^9}, 3.6061161288156967`*^9, 3.6061161875480566`*^9, 
   3.606116543460413*^9, 3.6061165809045553`*^9, 3.6061166644503336`*^9, 
   3.606116966924634*^9, 3.606117042221941*^9, 3.6061170934868727`*^9, 
   3.6061171752135477`*^9, 3.6074164676790648`*^9, 3.6074170133592873`*^9, 
   3.60741902680997*^9, {3.607419059341173*^9, 3.6074190801041317`*^9}, 
   3.607419526424658*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["2", 
          SqrtBox["3"]], 
         SqrtBox["3"]},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "1", "0", "0", "0", "1", "1"},
       {"0", "0", "1", "1", "1", "0", "0", "1"},
       {"0", "0", "0", "0", "1", "1", "1", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$, 1]]]}],
  SequenceForm[
   Dot[
    MatrixForm[{{
      3^Rational[-1, 2], -Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]]}, {
      3^Rational[-1, 2], Rational[2, 3]^Rational[1, 2] 
       Cos[$CellContext`\[Theta]], -Rational[2, 3]^Rational[1, 2] 
       Sin[$CellContext`\[Theta]]}, {
      3^Rational[-1, 2], -Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]]}}], 
    MatrixForm[{{
      0, 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^Rational[-1, 2], 2 
       3^Rational[-1, 2], 3^Rational[-1, 2], 2 3^Rational[-1, 2], 3^
       Rational[1, 2]}, {
      0, -Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] 
       Sin[Rational[1, 6] Pi - $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] Cos[$CellContext`\[Theta]], 0}, {
      0, -Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], -
       Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi + $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] 
       Cos[Rational[1, 6] Pi - $CellContext`\[Theta]], 
       Rational[2, 3]^Rational[1, 2] Sin[$CellContext`\[Theta]], 0}}]], "=", 
   MatrixForm[{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, 1, 1, 1, 0, 0, 1}, {0, 0, 0, 
    0, 1, 1, 1, 1}}, 1]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.596031883014731*^9, 3.5962156989828453`*^9, 3.5962170412168503`*^9, 
   3.5967656249304237`*^9, 3.5971350868418283`*^9, 3.5973158513472843`*^9, 
   3.598099812502405*^9, 3.59814455154566*^9, {3.59826114412899*^9, 
   3.598261172187111*^9}, 3.6061161288156967`*^9, 3.6061161875480566`*^9, 
   3.606116543460413*^9, 3.6061165809045553`*^9, 3.6061166644503336`*^9, 
   3.606116966924634*^9, 3.606117042221941*^9, 3.6061170934868727`*^9, 
   3.6061171752135477`*^9, 3.6074164676790648`*^9, 3.6074170133592873`*^9, 
   3.60741902680997*^9, {3.607419059341173*^9, 3.6074190801041317`*^9}, 
   3.607419526479027*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
The inverse of a rotation is equal to the transpose of the rotation matrix\
\>", "Text",
 CellChangeTimes->{{3.6074188342950363`*^9, 3.607418872127886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigFactor", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"TrigToExp", "[", 
     RowBox[{"Inverse", "[", 
      RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}], "]"}], "]"}], " ", 
  "\[Equal]", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.607418776829247*^9, 3.607418783825664*^9}, {
  3.607418817550663*^9, 3.607418829135412*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.607418785674728*^9, 3.607418818923623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"YABCube3D", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
        RowBox[{
         RowBox[{"ranges", " ", "=", " ", 
          RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}]}], ";", 
         RowBox[{"Cuboid", "[", 
          RowBox[{"0.9", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"ranges", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
          "]"}]}]}], "}"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5971351701789455`*^9, 3.5971351830109634`*^9}, {
   3.597135218103012*^9, 3.5971352652450795`*^9}, {3.597135599457549*^9, 
   3.597135670504649*^9}, {3.5971366018829575`*^9, 3.5971366425860147`*^9}, {
   3.597136690520082*^9, 3.5971366931400857`*^9}, {3.5971376149943886`*^9, 
   3.59713763742642*^9}, {3.597137669999466*^9, 3.5971377266935453`*^9}, 
   3.5971378028786526`*^9, 3.597137855253726*^9, {3.597137901956792*^9, 
   3.5971379100378027`*^9}, {3.597137942899849*^9, 3.597137959951873*^9}, {
   3.597138006744939*^9, 3.597138020645958*^9}, {3.5971382386032643`*^9, 
   3.597138296827346*^9}, {3.597138480810604*^9, 3.59713852007366*^9}, 
   3.597139351088835*^9, {3.597139405402911*^9, 3.597139405962912*^9}, 
   3.597139452155977*^9, 3.598100818545738*^9, {3.598100902996138*^9, 
   3.598101005129779*^9}, {3.598102537424057*^9, 3.5981026541415167`*^9}, {
   3.598102716886051*^9, 3.59810274122301*^9}, {3.598102827959939*^9, 
   3.59810295048919*^9}, {3.598103002701921*^9, 3.59810305034873*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 1.9038051480754146`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    321., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$19784$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$19784$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`YABCube3D[$CellContext`\[Theta]$$], 
        Graphics3D[{
          Opacity[
          0.5], $CellContext`ranges = \
$CellContext`YABAxisRanges[$CellContext`\[Theta]$$]; Cuboid[0.9 {{
               Part[$CellContext`ranges, 1, 1], 
               Part[$CellContext`ranges, 2, 1], 
               Part[$CellContext`ranges, 3, 1]}, {
               Part[$CellContext`ranges, 1, 2], 
               Part[$CellContext`ranges, 2, 2], 
               Part[$CellContext`ranges, 3, 2]}}]}]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{366., {223., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.597137857453729*^9, 3.5971379112878046`*^9, 3.597137963171878*^9, 
   3.5971380217959595`*^9, 3.5971382548242874`*^9, 3.5971382980673475`*^9, 
   3.597138484310609*^9, 3.597138521333661*^9, 3.5971393551998405`*^9, 
   3.597139407442914*^9, 3.5971394537459793`*^9, 3.597341281472804*^9, 
   3.5973413427783103`*^9, 3.597787458427895*^9, 3.598099791610578*^9, 
   3.598099861061969*^9, 3.598100821277104*^9, {3.598100962786167*^9, 
   3.59810100613698*^9}, {3.5981025709963903`*^9, 3.598102656010915*^9}, 
   3.598102877111755*^9, 3.598102915714476*^9, {3.5981030111000834`*^9, 
   3.598103051351694*^9}, 3.5981077218411007`*^9, 3.598107807689767*^9, 
   3.598107982907465*^9, 3.598109800403185*^9, 3.6003431382981586`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"YABCube", "[", "\[Theta]", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"YABCube", "[", "\[Theta]", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}]}],
     "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5962155669430733`*^9, 3.5962156433415728`*^9}, {
  3.59621588083167*^9, 3.596215900269607*^9}, {3.6061217023784866`*^9, 
  3.606121752162334*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
0fMMOa90wf/pCqKX
         "]]}, 
       {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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

         "]]}, 
       {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
vVYI
         "]]}, 
       {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1nk8lN0XAPDnmbHMqJRC9sTbqoWKl9C5vNoooUXI0qRIsrUQSlEoZStr
icgaLfYooyIqSZFlrKWYZ9IQ8pNl5nf7az7fz8w8z733nHvOWcrytDpKIwhi
DkkQfz/pbInGfm3vLSs8HeC5Koe9jKrSV7m5B4b2WrXEynDYU4/XO3fEOoKC
KtF8TILD/i7tOlka6wnZkUYLJMY72Jxtl19mxgZBpbhbimFdB/uzY+yKlNgo
EOEtum1zsoNt5S7PSYxNhSLLdv7x8nZ2zOihovjYR+AZdPTuQtM2tn6tqYTx
qWporHlRV6PUwvbyNz9c5FUPWbwMdGXBR/bJ8qORNPUmuEOsFpcWa2C3cHcy
s1ktkL+3T/Xsjlr2tfUTRKlNO+SWdfY7Nz1ne2vUx1VndoHJ1kyxmspH7Kkj
Jx52e/TBRr5K6OOWi2zW8wMW0ce+AqtTUTsvMBOO/Gqprg7/BhO2i02j0srh
umaZZ1boAKyKWBXYXPUSaNVl/17250Ks+MmJqal6kFpt1tibyAMOc75RccYH
2JFqnDESOwSVG8ruQPcnWDzcsC2ojA/Jd5c5rpdpheS6CpJ+fARYNeVxJ5d1
gIGykVDV+Rdkh7Atmgc7QaNvwbfzp0ch2f6dVVRdDxTkLHQt8RmDLU9urTnz
oA8Ce+ybNULHgelyKYY//QW8DXTN7t76Ddm5kYPMDf0wlWrC+hE9AS46Zock
0Tdo8kp28k3/H/iGnXCMNv8OetvVBN33JiF/V83VDdoD8GarXg668wdeH1ni
2EkOQuaTJL2vD6YgXF7swNTrQZBRX+PmkDsNg/7n+hqPcSE6NuJAbsE0eNez
/PYc54IE7Yfx+JNpuC7wNW88wQXiS67itYppCN/vUfzaiwtDd1e8L3k3DUeU
Iljp+NxqFNQ15/GnYWx0dIloJBdOL1SYqNwwAwkn46mzRVz4RDKC5Z/NgPV+
vdO0P1zgFyQ5WFTPQG3dp2zxaS4wbTX0w2pmwOG/l0vmzHIBFZqPjzfMgPFx
6a65JAUPWXHHmrpn4GthRvA0g4KIV2pmYcIZIIJqXa/IUWByxVD6t/EspGcu
yzPVocBJ68OIxvZZcAm6vkxOl4KAbqf3LLNZaO2c+6Vfj4JC7cuhTXtnoSab
s/isIQWqA28nHzjPgsly7UtXTCiY2XawmxU6C7fz01ZYWFFQwjiV1fRmFvjV
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
eS0HtPRzzaaXMpEO9TTtuSoH/g/c0fFo
         "]]}, 
       {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1: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
iA==
         "]]}, 
       {Hue[0.3224758424985268, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277243, 0.8164965809277243}}, {{
         0, 3.141592653589793}, {-0.8164965809277243, 0.8164965809277243}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
XEntNEFbdQqMearijK6246//93/g/wDrCpHg
         "]]}, 
       {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
Mw==
         "]]}, 
       {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
1H9qtqgkgrG7fWyycgj8/2y+iZU=
         "]]}, 
       {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1:eJwd2Hk8Vdv7B3CzQ7lliIhEsya3QQl9TipluMaihIyRKUPRQKUk4srUpAyV
IZVKiqLBVKThKpIh0TGdfZIynrPPOfit7++v/Xq/9t7rtdaz13qe57W13A/a
eomJiIiIi4qI/P/1lezH7nXBm9waYsrfqvlvWki9NJibaoX7Z2wcmmtNwX+4
yrM1ZR+KPHi7M2r3oFfJh1eSchAMEc05J2oPoM0kuio35ST4R+OjPGqP4su+
lMUZKReQ7OtiplMbB1t/1bYrKVkof3hN2uXNVSQPOxVfSnmATHXHAP3qAhi8
NpM1Dq3A8jwTG9n6MgQds3QrDqqDylSs7OUv1Qh46pUoNr8B30s9XQsU6tHE
NpXJd2/C2dzr3nbODTi/alykZE8LLFIXO3Z7NyJ4Wd3Fitxv0BCvSZXIbAbf
w+9+R2AX1lXr6L+72wr3F/bWSftZUF3qJO3s9w0eQ00VFbE9GDDcvFJreycS
dEsP5sX0IbLULkid6oJYRen66GNsTAtkOAtVWJDXMf/YeYWD1b8DpRT+6caO
LONbf1IGsMVqUove0wOV3+9NTpYOItvX1one34v02jJR8QN/wF+w6vhyhz4Y
amyemuc5hIjju1/9mdePZV0zeyIPDUO3+3RVOqsflv3zqsKODKNaeomGQW8/
ggZ1sw9GDMNOv26ytb8fj4XWTm7Rw7AN22mv+KsfhqrJTVvThhFgq257iNsP
C1v519MeD2Pn5ye7f09jw79GPu/qyDCmlxrE1a1ho/C2gs+TkBGcNh2amDzB
RvSXV5vFw0fw5oSvZFAUG05iAXNsjo9AbT/HpPMMG7JOtR8HzoygTtws/Gks
G/tnRKxbcHEEvmU3YnelsDEvrFcstXQER2ZSJhtz2Ujb8jQjSDiC6SHmYoVv
2Yj47ty4LGYU9v9UeK6UozC63SjD6/wosgQFe+bPoOBfpO6dlTiK8GjVC8ry
FPZGt/MVLo/iu2CyjKtEYaPOHm1+/iiadNUVc9Up0Id3Bte9HcWHynd5d5dR
CJMzn+ElN4Zm3feh3jsoDIbptGbKj6FS4LBhgRmF/V0yt1pmjaFD3EK/05yC
fXGdnsXcMSRZD/22sqKwbo+Jy5pVY1jh8XW5uj2ZX87mQlGbMegsKazf50Eh
2HCDeWbaGFwff32bEkFBJDDt5IUrY5D9KtknjKSQmPWn+NT1Mdg+kw7zOknh
jliBukfOGD6ZrBr6+zQFVp3q4OLHYzh24b7N03MUdu4SJBU1juHu4te3j6VQ
0At82VyjMI7mG5Nzv+RRqMlSm1aiPA7x53/9K3ebgu2nMOSrjcOtzdN/awGF
wLWrbsdpj6Pn5eUThXcp5POzjlquHsfsIrnf/g8pzD4Xpd5iM45N0/T+ZD+j
wM/a6v4zaRytp6x53+opbOIapfx9cRyLnreH0u8oRFmurwq/Oo4WNe3ZSh8o
MCaWakvcJO+XXGjb8h+FWY4zWOrF4+D/rNz6byMFXaU2N8sv4xgTJGTUtlMI
9WtMTmsdx6z7WdfefKNQUvW+sq1jHF9TN1ZWd1AwCn6l5d03jhOtFaefdlIw
+5jz4yR3HPfqNDriuyl4xR50K1LlwrpO0NnKoXC70yeZq8FFa4mHZflPCgN6
7pVG2lzsyTbuTh+gENK7U6tehwvpxwtP7RykcMp44w+WARc+wfXRRUMU0oUS
bkouXMxvNL2nwKPQEJTuGn6T3N/+a2awOAc6STMFh/K48O91MZguwcGZBzEX
Q+5wocSPqs0l1hsMqQ94xMWUX4lEkyQHGX7maz2ruMi2b5TXYHDgu18obcPi
wkRS5qDbdA5qzobctOzjYp2B9UMWsUYu29CCw0XZ0ue27nIcNHQ3BW8f5qLv
HKvM6S8O1rsVthuJ8SBhm6yyaSYHEk4uD3S0eVipMV34SJEDl+NNpksW8ZCS
MNdCTYmD0nSznoU6PEi+ZglPEvu26qlqreZhhbP3KZNZHHyyn3FGxZgHgVfJ
XxXKZH1hZzVmmfAQkXPXQ02Fg+iLglIFMx5kerRVQ4k3NPUPyNnyYBUQlas5
m4NMmwp7CXce/ony3eKlygEvSG9IdD8PjIG2a4+IbZPuxU8d4EEombNzkljy
vysV/GAeeuNW9CepceBvEawzFMXDX2bZF27O4eCNX3/N4FkexoYcOCxizXjn
fQNxPKgEbsvVUufg81vTtP5kHviujwzSifW3a0923OBBwzyAE67Bwdpb9bG1
uTw8ZhrsuEO8cipEsaiAh/gdVsrtxNql1Uuii3j4zjcS3zCXA3VF/+KAJzxM
V1HU9iRWPqi0yeEZDx1L5hclEk9b7GWnU8nDMxWOZiex1Bm574qvebi38PqU
hCYHIp1PfCbqeFCKP2m1lHj0ktSJhgYexF5/QgDx4PB9RlkTD4Vxhl0JxGxL
h9RbLTwoxjT8uUPcIXX7dlgXiadcgDuLuMXdeo1rDw+x20OqBcSfX/JemLJ5
2Dw7PU1xHgfv1W7sWDPAw5BC95elxG/CTBvV/5B4sczPbSKu+DzkLDXKQ5p5
420b4rKV6ezfXB4mFx/Z6EH8+LxxaKuAB1M/fcNQ4gd9nImqKR7C5ynfjyK+
Y5wae0+cRpCvXFIicU6mgeIlaRpS0XNZV4kz+d0ZJ6fRGH61I+cW8RX7hCUH
ZtBoi41vvkuc8mhtsa0iDVO3viOPiBP+6jAyVKHxuHt3fClxjO/ZuoVzaByr
YsmVE0e9WWE3Q5MGq/aMyAviCO3mDp42DbVmA4//OezECR/WIhqb+mX1nhMH
tS0aeadDk3gNHXlG7Kv3X+STlTT0QgaXPSH2TAlnZK2m8dZB3OoBscugZmqs
Ho3XKrqsfOLdZnUaIRtp/Df/cG8msV1e0O29m2iESTbuTiO2FFNds82Yhq6L
mWEs8Q6XyhcrTWi49rdfOEZsXHZgx2wzGpYhsXZ+xIbKCo2iljSWsa3PORLr
hZQ5/7ShoWimt2wHse5Hd3bTLhqMIn2sJV4YUzyR70yj+EBWqTTxPNbe2GQ3
GrSnhPpv8r3VNkkoHveiEfg04U8T8V/jO5dYBtAQr5LjXCNm2E48Wh9MY7RL
ZkYksdj9XCOtwzTKl+rmOBFzvcZtRyNouMmLa6oQD1dmdnScomHTUiwxTPbv
gMZ2n9poGhtULzu+I+76cjkyPYHG5L5J+6PEb7fp32ZepxGVcSmlipyXI7Un
Vp7MpuG77cCjBOIlpjWPX+TQiDz9QbCTOMbCqnJjIY3r8Y7Tush53Grn1bb2
JY171UKNLnJ+R5vuuIZW0VBX+XT+GvEt+z99RW9obBTs0dpFLOZ4fGTlfyRe
Phnvqkg+qHBNnr60i8aq4shZsSRfBLGaU7x7aHidiW1YS6zpqa6ax6ZRsjD0
SSfJPye88xfOH6IxMjYlXEVsGPhik4YYH3su5Z8pI/ms9DgVJL+Aj/Q+1cPh
JD/un1jJtVrCh2HDhk9SxMonD0UmLufDoSPPIU2Bg0Onp+KmrePDvzypu0Ce
9Glxs25JmvCRv+Ys7+UMDu5f2vyF9uZj5487c5Onkf01+9zeDf58fOipny9O
LJf+/kdYEB9lB+rtQmVJfstwGBw5wod+atJaSxmSX3MCpAfj+ND+5sT/JcVB
btFVfdZdPo5ujcz+Ikr2s2CvTssDPhKW+LWsI9bdNnfOx2I+dFf4HEkT4eB5
y03hs3I+tqH0j8UUhcapu6+S3/Hx7EJN9R0hBVHLl9s2/+QjdNEboSqXgjOH
ZZOtI8Dz1c2MWlIftdfmGl9aSUw9dhilKLAjvdckrBZgImXGzHnEh+QHlI5s
FCCsw/9FSD+F+A1jX63MBLAq1J8u2UPhWYy0y9QBAb6+EonpIPV61vzlvi4F
AhyuOW3pQup/Ukq8fUGhAOULmweM31OQFftpPFokgEVF3YOFpF8Q+VEw53yZ
AO3dHbd660h9zlz84ck7Mv7qGdutakj/ojZfV25QAHbMhoS3ZWQ+Cmrj5auF
sC0XFDqS/uZ31FGW1Hoh1LipshK5FHyHWj7aGAixIj0z8e4tCq4Nl/P7twgR
6h0oN5ZNwSJx1h7FXUK41Zawg69RmC8r/9w3XAhZN6vlikkUPosyTqs+F+Lv
1PIbo+Gk/yu86mJdIUTt9t5w3zAKMo7LDM7VCFGS8yXu+yEKzEeWo6PvhfCw
P+JWGUzhvvvF/Q0dQiT4f2QF+5F4VWubn5sSIvWTr8kJFwpbzxopjRlPIO3Q
RudtWyg8YYTmNbydwA89/cRUaQp9EVG/Xn6YgJb0ZtdySdJ/DV1YW/hpAnGq
dx78EKcQ0XqvKq51AqJHFGqXipDx7vR9N6Ym0L7XvT2fx8Znc0eVJ4xJ9K2N
LN5LsfEncXPs1e2TKPngMHyT9M/LZ830dX89iYd7fCNKzrLxO3FcaU3zFI6p
ctMXfO/H/HPnVh30FWFmuHN/YGk/WI7tbcb9IkxdWTnde2592NHbSD8JFGXa
6bpkzQzuxZEQLx/lX6LMFR9MvdjHemBZcs1MOUyMmZJt0hO/pxuDQt8I8XEx
5jInw0br9Szc+Br1ODBUnOlzaUvXHJkf4PsYuR4ViDPLfnQUlzh3QmMieW/w
MQmmkd6XTNfSb+jbHl/PkJBkLuIcTjr+tBXVi95jbrwk0/+GUVLOnWb4MvIk
tGSkmMW3FD+dKGtEafYCo+pkKWbVzfJlBw834KOB4WtbeWmmzGhow8/CevB8
r9m5JkozL93wrM4Iq0GdddYuOWUGc0zizd8RW8vhrm+Yn5/GYJoahSmZNt7D
gV8fxr5dYjAfije8WOp6D0E39m1VuMpg+vgXGTF+3cVJmTM/IjIYzBvftXpe
St3F9da3c2zzGExLC7dKxY0FaD7qkCQsZTAl/FT9PLJzYVYWctSmncH83cHv
evD1OmwCJepiOhjMMy5TLYyha9itfUn5eSeDeVhJ/OE+2WvwPv+seFEPg8mK
37lZ2ugqoh1FBgUDDGavOjpw8yJe8v91z5tkMB2Oo/R9SwJe39csaheRYU69
uStqPi0e792LpmaKyzDF/a4Y1hrFob2+6fpxaRnm3GPpM8tungUvfc5X65ky
TLu5rxTVWiMwZVm4MEaBPJ/U7DZhdBRS4jhUriTDNJmXVv395mEo+bnLL1KV
Yb7//aBEv9UfczRH9+2dI8McP6hoOHrTC9qNZ+8nacgwg8Z+6Dm2OkHnnMrE
a00Zpmfhp7OprRb426DAXKAlw2xr2vv8f/8H/g8UXhBg
         "]]}, 
       {Hue[0.3224758424985268, 0.6, 0.6], LineBox[CompressedData["
1:eJxFz30s1AEYB/Bzd3Fnazt2zuyGEG3Y1Fqr253IhFjiWm9Upx/qnLo7L6tI
s0qnUTqXzGuXmsMaZeJK0i27hcksF3FEQirvoeNw1Zbn+W7Pvvv893ydCAk/
lkwikQ7+vX9NeWPZ+XVXwl7S/7h+b+Y63Dvks+GVZ14xfQoBeIwpNDQoJOD+
gIy35Yp08EeBYlup4i6Yf96uv0ChBOfOn6zLVzwFc7XBln5JGrA0NfRMnbQV
fOFFbA7ZpQusmzhAryB04CyvJVLDiU/gBI/W+5ryAfw/Or5mUDwMJl4fDZOf
HQFHz+k0mluj4Nvb1RKVbBxM1qh3Z6ROgK3cQzqHCn6Ag5R+j2cVk2DbmY6A
dPU0uOhdoxklbhbMs99n2hIzB/YYZoxeTZ4HV1daC+sTf4HTPp/q9pAt4D7e
npAHeYu4T+lP/JQvgbukRVGXHv0GcwKd1wfLDOC2/ZxK35JlcHltIWfkyQrY
xsVTdLrKCP5gRrtu17QKrqclqbra1sCeNgwRoV0Hz+QsMXf2mMAumZleEhHJ
d8MjEfp+v2/ooLHu5XqxGfhyYqyQNYUObSgOZl0kg6dXRWmUJXRZ77Xn4iQK
eEXoHZViRNuv5UYmpFLB44HZ7TTqJnCLW4ePQzZaRFNRnejmYPXDrd4tuehO
Lk/Lt7IAG0TFh6Ny0K1hyiObWTQwweFVVOSh46beLw7ko6VlAn/rQnQ6/caX
tFJ0SV8bm69C96Qck6+q0cGNiSnhenS4mNoqG0Qfd85nNQ2hz2W9rHMbRWdE
kKaNk+jmlTuEah2trXGs1ZPo4A6i1sSgoPXtupIrFmhDEbs3jIE2hVa7yqzR
5hSf5FdMNDOesHKzQ7MdFwSRbLRz980auT3aPdN2TeuI3sGtCjE6of8AVY0a
Fg==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.596215667361885*^9, 3.5962157077457438`*^9, 
  3.596215850412229*^9, 3.5962159178277273`*^9, 3.6061179918212547`*^9, 
  3.6061183642855587`*^9, 3.60611851170099*^9, 3.606121752758368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", " ", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["2"]], "+", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "-", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
            SqrtBox["2"]], "-", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", " ", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}], " ", ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"\[Theta]", " ", "-", 
                RowBox[{"Pi", "/", "6"}]}], ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", " ", 
      
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["2"]], "+", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}]}], 
            SqrtBox["2"]], "-", 
           FractionBox[
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}], "]"}], 
            SqrtBox["6"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}], " ", ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.596033824295966*^9, 3.596033855775996*^9}, {
   3.596033890132307*^9, 3.5960338910263968`*^9}, {3.596033927941462*^9, 
   3.596033966538685*^9}, {3.5973159652758007`*^9, 3.597315982707797*^9}, {
   3.59732259554603*^9, 3.597322621525516*^9}, {3.6061219113344383`*^9, 
   3.606121911853468*^9}, {3.60612194353828*^9, 3.606121974761066*^9}, {
   3.6061220532185535`*^9, 3.6061220536765795`*^9}, {3.606122084338333*^9, 
   3.606122120622409*^9}, {3.6061221630008326`*^9, 3.6061221701592417`*^9}, {
   3.606122380678283*^9, 3.6061224125771074`*^9}, {3.6061226143236465`*^9, 
   3.6061226175188293`*^9}, 3.606122876226627*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
4kb2//t/JVfKdw==
          "]], LineBox[CompressedData["
1:eJxl13k8VN8bB3AZISpLKqRCSSH1VQnf6lOilKJsLXaVyt6mhUqRKIRskSSR
JQlZStm/odImRSpLmpk7lrnDyFD4HX///pjXvN6vOXPvOc957nOfo+LibXFI
WEhIaIR8Jr/Lg+q0zBs7YLnZoOhSOhOLdcyHlzd3wGhb+5miTCZC2z9XTf/e
AakL976zcpiwMmDavOolvvIi1KSAiWcsT5Usfgc+xRS89y1iYmHsUM/Vvx2I
NBMqTStlgsMVuWQ8vRP8xZ2uI+VMXEpflFOp2Qluvd3GmNdMPJJ2nih268R1
k/SSq91MyJWzG2KPd0JscEtfCouJs+4+MSfPdaIxWK+ymMOE0cuLy3SudYKh
vmN9B81Em98dy9ysTtxbMhGhOsaEOKvtQRq7E6PJyw4fnM2CywubXZGuXRjb
n5XWZsSCTrG8rIJ3FxospNVFTVgQzvvalHq6C3s1I4RXmLJw767DnsKQLqSc
Z1f67WahK9DV4XN2FyL1P1lNcSDX2+7rocTtwr2Wdw+e+xJ/iQ3JPP0TvY5v
jw9ksHCA96myMqQbwQU1tWbCbIStLPHOCCZx+SmRFZLIxiudL8xTEUxsGNdx
zr3NhviaYXvjOCbU30y59/4OG0H6a3d0k33o1ZZ5IZvGhp9hyVLV/5iQLHO3
vpLDhptVSWcyg4WdteMDi56zsfVMiWVsAAuJRblTt3xjQ7iyZG3QOTZ+q2YN
zpGnkD1DNmPsMhuR5g8PMxQpWNh6yJ2+zkaN7VSF/nkU0n4r846SedRcX7Gq
fCEFo+XXss3L2ci6nLlpmzqF4ES7+fOEKdR6FmdJ6FKQODWFURBKYbW8dJW+
BYWCattjmtEUKISk9FlS2C9d3H4/kYLixS0lKdYUcnLcnsfnUChJnhc9vpfC
jq6mU+cbKci9buNlOFKIMM9gm8hwoL+0FPc8KMhomL5tT+Dgq0K0qeEVCkyx
FJn6uxzsqz75Li2YwrNfA1aPMznYVWdTywihcDA1sS2glAO+eI1QxTUKpfIc
tkoLB5/y2FWqkRQcxEIZB+f2wPupomUKmdfD7pd67NgePPond5HHIwqXqhX9
3yf3QFoiPyUpj4LNXa+K0vQerP2+6lrDYwpCdnO2hBb1YMo7j2zlQgqWTYcs
NZp74PE8d/bzEgqjVSJeHnK9cFR5ffVBJQWTFMM0OroXSxvOuOz6QOFq/fvv
l5N68e1tW5nLRwoveQ7ys+/3wos5ZnCiiYKxkV+4flEv5hr8kx3RTMGQKjx9
+Usvujz1t+e1Uli3Sm2HnFIfMuIOB8R3UvCzKwzOWNwH57XftMK6SDyubKrS
W94HJTnW2IWfFPRb7HXtN/RBfOjsDMdfFHTPxylnOPXhwuCTDnGKwso6saG1
6X3IaeGbMGgK3nTsile5fQg52qf7lfiRwmI3u+I+8P1OmeTxKCz32NgeUNeH
Y6rDzZaDFDRkzjY0UH2Ib1O6FfybwmJbTrKtdj/Yh4wLo/9SOBB0pqVPtx/2
gTZNpmMU7uWKzgpAP3TiZOcwximoCC0Kub+rH91L9jA8JigsSLc93ne8H60b
sv3UhTmYy32z5WJJP4olclqMxDhIiKpwpir6MTF9Yvt3YvnVBf6W9f3YLHWD
PiFOfDa+QL21H9tD9ZuTpnGgyHBZ8H60H88v32Z8luQgMd1K34DBxfrmwplO
0zmYZ7LV6r4kFx7mJTvYxErhWtfOKHFhomXvPDiDgwVzh4eUN3DBS1rcOyjF
wZ2nlPT1LVzcdbod7i3NwUK7b5pDZlxIeJY6U8TKqVXODY5cks9lqV9IHqtq
hjUeu8QFK0Ey4M4sDpZAJb26lgtNefm85jkcZHTOqtRq5CJtp/rp1XPJ70Gi
bXHNXDQLXI5FEas39Ei7M7lYo7Dlr7E8BzHLbMunidCQtJNyv6VA8vrcp9cb
xGlw9JtrKGK5NztbT0ynEZIcb6anyEGs10b+dzkaXXZ/R94RxxWqaRSo0YgI
LXpAzePgs0jKWtYyGjqBb29oKnEwx0beWEmbxhyp51nuxPECCadgXRoThowT
TOKWbUGeZQY0EjytVFXmk3gnjZ2jN9C4veIoYz9xwno6dv9WGrd+NO5/SdwS
cTTthimNlp1zPoxMju/oelxrTkNi36yzmgs4uHW5+bX2XhruD+Y7hBJ/bTJr
PWBHI9ZjcVIRsaJaPTPBicbDDx+ndRAn1j2bwjhKY127ov+KhRzQHY/Pcj1o
XLa/L2VBvHU0g9fmQ+PJKYbMCWK+1s3OJ2doXEoysH9MvH1L6L5UfxquIzMz
3xCnOl78EB5AozEq34lFbBbtXuUaQqNWyXaevDIH93Oc9S3DaCxUcZyvTfyn
dk8+ImlEBWqGGxJb/Ni5TCuGxtlpFW7WxJnDm1PlE2gcjJQvdiUelzZQmHqb
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
obT/9/8A/qnu5Q==
          "]], LineBox[CompressedData["
1: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
97n/m8eF/wPb4KWz
          "]], LineBox[CompressedData["
1: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
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
k8NrdA==
          "]], LineBox[CompressedData["
1:eJwV13k8lNsbAPD3nRllS1chWxE3KSUKRXgf0maNFluWROSnLC0kqShLSukm
qZSQLSQSRY5KixBRRKWiZuadNGS7DWbmd+4f85nP9zPvzJxznnOe5zkL/UJd
AhgEQTBI/MLvh2Njg/p1BFSOipTajTw2CuvVGW1eKqCOXB6MaS1go2CTtmNV
+gJqkcysU1PFbOR/MVLy5koBZdViaqBbxkbefI1/kkwElNY665Nb77HR1vyw
Qk9LAeXq87d8fjUbOTJUVq23FlD6VJZT6yM22uT95LH+BgHVutlg5ehjNjJX
mtNJOgqohabf+80a2WhRQqWwwEtA2cSt+/WwnY2a1psWwnUB9WK3hs9HkoOi
XsbqH88WUP6BTyO0JThId3Pj/cd5Aipw4UPOXkkOSrB3emJWKqBiu6vGfstx
kM3WgF6jegElTjx+ia/GQQ2+abJLvgooYZ9DTaYxB1UfpcPk/56kRIw7oqpA
Drp9L9O0/84klaQyY8fkCw5S1F4W7F00RXGij3x9s4eLLlxM2VFUOkWFv/KL
ctrLRdKMn9Zj96aos6JIxzf/4yLiW5HamUdTVNL2/fdfhHHR4I3FrVXNU9Ru
9RS/nGgualTVNpjFn6JGR0Y0JFK56OAc1YnaldNUxr7L9OFKLuogJeNU6qYp
1+2mBxkCLuKXZnpvaZimnr/sKJg5xUVSHnprExunKe91TzVkhFwEFY5jYy3T
lPVehU+yJI3K/NL3tH+epvorcuOmJGmU8kzLLlE8TRHHnwedVqaRzWkLhXFr
IZVze1GxrQmNfA3bhvU2CqnA42cXKa+h0dHPvq1+dkKq66PstwFTGlUYn0po
3yqkGgt65x22oJEm+/WfO/5CykbH+ORpGxpNb3D77JcgpK6VZC/e4kKjKskD
+e1NQorfcG7onxAasWNO/qpvxf8nOzw9az+NlH+fNyp9K6TOVweeTAilUUxP
ydPkHiGVttN8KCICj6+Y3WdNCynz/aydplE06rDzmFclKaK6h4r2xMTTaDjV
Kilzo4g6mDpd1HuFRlrMLW2JdiJq8kxbqPZVGm2L9FY67CSi8p/JFQdfo1GN
z9E8F1cR5UfGHx3LotFxg6oGmUARdfu8xoXxHBrJdegKjiWIKPcQ79DSEhot
U/wr2O+5iBKPJ5warafR3Lu1JbebRFSl5gJjrQYaTW4KHOK2iih//RZ5pyc0
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
          "]], LineBox[CompressedData["
1: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
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277243, 0.8164965809277243}}, {{
         0, 3.141592653589793}, {-0.8164965809277243, 0.8164965809277243}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
O2XO+X//DxawyXY=
          "]], LineBox[CompressedData["
1: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
YoNI1v/7fx687Zo=
          "]], LineBox[CompressedData["
1:eJxl13s4lFsXAPD3nRnllo5CbkU6OUoJSQhrkW6u0cWlSA6RI6SSJJXKJaV0
Qiol5BYlkoqk0oUU3YhKombmnQq5nQYz8+3+/v6a5/c8+3ln7732XmvtmX5h
bgEsiqLYNEX9/o2MjQ3q1hVCjpqMxoU8LoR36A4+myuEPenfY54XcCHYtHlf
pYEQdOUmHR4r5oL/qd3SF42FYNNkbqh3lQs+vVr/JpoKQWep7cE117mwJj+8
cIO1EDw2/amYX8UFZ5bawmW2QpgPWS7P73Bhpc/9uwbLhdC0ytB48C4XLFWm
vKadhaBt/qXbop4Ls+MrRAXeQrCLW/rjdgsXGpaZF+J5ITz6W2vTe5oHUU9i
DfZnC8E/8EHELCke6K2qv3E3TwiBM2/ztkrzIN7R5b5FqRBi2yqHfirwwG5N
QIdJrRAkCftP92rwoM43VX5OlxBEnU63MhfxoGovE6745yiIWVfElYE8uHw9
07z7yigkqE1YP/qYB8qz5gX7FI0BL3pP14stfDh5Knl9UekYhD/1i3LZygdZ
1jfboetjcEy82/nFP3ygPhdpHL0zBgnrQm88DufD9wt/Pa98NgZ+msl+OdF8
qFefZTipdwwGBwa0pFL4sHOK+ki18Tikb0tnIiv48IqWjlOrGQf3deY7WUI+
9JZm+qyuG4fHT14VTBzjg4yX/pKE+nHwXvpAS07EByx3HhpqGgfbrUof5GkG
rvqlbWn5OA7d5blxY9IMJD/UcUiQjAO1/1HQEVUG7I5YKQ3biiDn8uxie1MG
fI2a+/VXiCBw/7HZqmYM7P3o+9zPQQSt7+U/95gzUL7ocHzLGhHUF3RMi7Ri
QJvb+OuKvwiW6i46eMSOgfHlHh/94kVwriT7r9VuDFRK78hvaRDBj7rjff+G
MMCNOfij9jn5P/n+8UmhDKj+PGFS+lIEJ6sCD8aHMRDTXvIgqV0EqRst+yIi
yPyKuZ22jAgsQzkbzaMYeOXgNa1SWgxtfUVbYg4x0J9ik5i5Qgw7U8aLOs4w
oMNe3ZzgIAbh0eawWWcZWLvbRyXSRQz5DxWKg88xcGvT3jw3dzH40Yf2DmUx
sN+wsk4uUAx5J7RODucwoPBKT7gvXgweIT5hpSUMzFP+I9jvkRgkw/GHB2sZ
mHqtuuRygxhuaM9YpFPHwOjKwD7+czEEGDQputxn4GlM7c6wVjEYF05zyX3I
gP+XkP0xPDE4rp7RtugpA1kVDafTZSRwZiMjy37JwGGnXW3tkyRg8sxkh9Ir
BkJ42urTp0hgEdt1wp+vGbDQiLqYqy6B3LdXS6zeMtAap1tcpi+BnD3f//Nq
J/N1O3Sv0UkCtY8xyuozA8PfDFgKbhLYGP/usFE3Ax+OdNi5rpfA1KWa1bN6
GCi+bdTY5iMBzz/+zmN9ZWD5zK43X8IkIN2iFFTMZyC231IgTpWAslHp5Ut9
DPSljCgtbJWAkt214wbjDHzvn/FgfocEpj00CXtPLHBbEabXKQH1SMvKeBED
X1TONEznSqDGqDD0nZiBjgvmsdIjEgjLe5EWRAvAz712sFeWQrv5Z0qWTBDA
5kQ3++/yFOr7H3z5gtj3NjebUaAwC1y8fCcKwFtjsvOXKRRKj+/MiJUWgMen
TYXt6hS+eDRQWyArAKdA2rt+LoWR2t7VJQoCcDyTVnF/HoVqi0+q604WgH3D
HNl7BhRyumZ9zCJeqe9WdduYQvXNLscS/xCAbV+O4jULChdQvan2UwRgo704
qMSSwqjWDXJVxOj6rLbImsLoJz95M6cKwKpi8J88Wwqp3L2NA8Rmu+0eZ9pT
6Ld7rclBZQEsLnynmeFIoWahy+MuYtP2kB2nnSlc0onV1ioCWLgkTfuEG4Ub
F/U+HyY2kHyNPuxFYYH2u7TVqgKYZxj98uBGCldt4FrnEutvVtDb70Mhm6m1
HyLWe2j6do8fhVqy1UdT1QQwKyFhQVgwhSqunlduqQsgotUk1i+EjJ94QkFE
XDe7u2ldKIWJjxO/gIYAfOotgy0jKPyedotfR3yWHsiTiaYwQibbtUxTAMzq
i4Pje8l+jCbb84nNsh1t+/dReOn+jJszpgug1brgU+tBCvlj+l/jiafEbFTP
S6Lw3IaTOXYzSDyfyWzNSKZw6Vlvw3DiMvWqqqPHKXT0v2N4ltj5tuK67akU
FlWqJjHEWdL3cv3/pTDniPJnBS0BfHcPGXBPI+cj4swVY+KjI49PWGdSWGKq
d2YXcfuynZ1G50h8lYzunCbWS5s5f3YWiY/aLedy4t1fXuxVvUhh5eHqdS+I
Hy+MaZS7RKHzFfNmPrHyoTlqkhwK/xk1rKa1BeD/qjVwII/CNyMX1dSIWduN
pNoLKWw88Gn+UmLXus41TcUUyqSU9qwjzp58LOdeCYXjK3rlAon7fMx/ll+l
MKUoOz+S2JrUwPwyCl0ePaw4THxc9G9KZjmFoY/WL0wl/uBo8/HYDQprv3nM
Pk+sf75X/8BNCstSG5IuE0d/Oxe94xaFXnqFvqXEDRarGrbcoXCH2VBRBbHq
0ZFpXjUUuvmVBtwiDmzP3eJUS+GA9+t/q4lv6rlWYh2J72iAyV1iqSgx2+QB
hQe0A1b89tonV9z+qqcw+XlL0+/xuSqel9Qfk/mrFtX//t5AwIT+SU/Jfi/o
NbhBbFNZYU03knh5ZMtdJT7J2Xx86BmF3/rveeUTf1qj8IH3nMI925w0s4gN
cqvnvm+mUOS1avUp4n0DQXtevKSwzvvGyBHiJhuVp/dfk/UanZgcRayR+lCl
8i1Zb3HH2SDi4K7wgMI2CvvKM864E99eMOPGuXYKrZyfSC8jlt7/jHXiPYVV
6cHfDIndX0S5xn0k+1MbhxrE+dN1s3d9olBnsqI0h3g45HVv0GcKpwtUbL+R
+NvVHLDa2EOh59O03hbibq/3HbY8CtP5nIsZxPJW7gW+DIWM3pkfv8/bIq3X
O2K/USi8oxPkRpzY0yh/p4/CR9y/PksRlz9a3t72k+Sr9wWfPpDz/KHgweXh
QQqD382RLSdeEHLH2ugXhSHS2LOe2MPZVM5llML75ztSdYnjDMvbQsYpdB07
FDL0+34NFYUXUjQW2SjmHyWO2ZeZoyVD4+PlB+ZeIvcxf5NymJUcjXhu1NyP
uNkmdcmGSTQG++XumkmsMyHpTboijQuST20/S+7305SoCQrqNLpjaEwkyQcD
4UOv9DVpnAjdP/SINdaEX1w1g0aHxJLkdpJPQqcFmR3RId9b6+W4iFg52z14
fC6NH8Jru1unkfMd99pUfT6NHTEJVdHEQf4ubLMFNEp1tN7SJK7RW3F+x0Ia
u3/p2Gwg+c3vuukLwRIaSyYabX2gJICrD5SN2x1pnFSROt1cUQDv8lLFI840
hjzRrL1H8jGdMOmZkiuNbQ/yk+2I1zpI+a9eR2OWfEfpSpK/x14PpT3xpjHC
r2rykkkkn399LawMpfGA5JDrU1If9umn7L0WTuPNA0GCJcTl21eKCiNobCxY
+aOU1BMNcQ11PpLGQ2dnGB0n9aZXJX9iXCyNOr5q5WYcAZxeGaXsnEJj5bj3
paUSBhpSjDNWnKTxzASbzixSz8RvvqvanKJx+c3KIyOk3gVu3qxpkk5jDy9G
KZfUQ4to+1nqF2gMnZlvzAgZ6LqiacQtpfGj58voOUMMKA+0ln+6RuOgWVNA
8CAD9mapJu3XSTy2T6wpGmCgol7KrKmSxphf24pn/WQg/mOvdfldGqO17E9y
ekk/Mvm+Y+xzGh3jpJKjeQxERQQEqfygsVPtWcZi0g8kOvQGWvTRaGCZmWP0
joGMP3cH+vyk8ZhDxes5bQzcbE3ckj9M1telUqRE+olBixJ/UzGN2uqVOm9a
GAhlD/qun8zCgfx4v9EnDPx9+oBnuhELY31NL3+5wUDENhnPOwtZ+Ed7cXZu
BQNxy095dC5iYaCNzCPfcgayf+W661qwsG5PV+Lbawx0bnyy7qYtC9OnJkoK
ixnwmK3g1rqGhSub8+/+d5EB55vn7FUiWUjZ+uovSmIgaNBPohzFwvV9Fwte
JTBwyHDuDeVoFtZGdCSHxpP+rfjWdOVYFkqxMo9dIv2fzsW3/VPjWTiZur59
aB8DIwmTMxTTWRjXs6zTifSPFzwP9cjfZGH3EQ632ZOB3vHgGPYIC8t6KX2V
Pxnw9HCYI/yPhbe/WXq46zBQX6Hf2itk4Z6czewMbQYyg78v6BCxsL+v5bXi
dNKPvtvWUybFxqkSK99hZQbOVYTb+yizUT16HeycyMDK4EjV2yZszCpze+/K
8OFS28EboTvYmLjn+fipQj5wHxl+StnFxvhY/UPL8/kw78YnmWu72VjsIO34
K5cPN09aberby0ZFua+X11/kk3eRUCb8MBs/pN+PFafx4Vd1+KbtaWwML5wp
GI3jg3P2JtmdVWy00K1rLdjAh9EgK989Y2yce7+Z934iH+yr5+IuERvNclmT
Vkvx4dwkVe3tEjYOZMndesDig2X5wKcgNgebijE7V8SD2LGCTR5yHDR8e+nu
mkEesFOmbFqswcG2Od0u2zp5IF/B8x624OBI819D8RU82Cj11uqnJQcp6apZ
TWU8KHV/MP2HNQfX9jh3Tr7KA+fx8x+/2HKw64Pd8KlCHpxc5ub9xp6DZ52k
riVk8UDpXc3GCi8OXn0m3q2fwIPpotQN26M5qORUlebtyYOV3U63M2I4eNpK
Xsl0PQ92PpGZVhtLfL6vW34NDxpTD76SPcTBsiMOOyodeRCpu31VXjIHj/U/
9B8AHrS4rF7cdp6DVbExtRq6PBgzkU8TXeCgDNd3c7sOD3TVnw7MusTBDU5J
HmlaPIj5AlfDL3PQpybDTlqNB3P2LJgte5WD262d1DvkeBCXozDV6h4HNX+d
/Dn/JxdKExrD/77PQd2RZcMtP7jwLiT+RdJDDrpvneoaIeCCwWJxUusTDr4X
9yuW9XDh/bMfVHgLB2/Vp9yb1sqFCdeLfNJfcbBxR+fR0ldcME4PqKl5w0G+
q2WZTTMXEn0/7pZp5+BAtZZswFMumAw39eZ85qDWm930GfJ+3tSR6NjQw0HV
irl52uR9ffSeXXHfVw6aqDE5BRVcqMyjpFX4HNSxGBTNK+NCV1JNgKWAgx8D
kyrLSrggFxb10O872f8p3xuMi7hgutZkZlIvGd+wYUnFZS74mffHXuvnoJSZ
mqxxzv/7f68tqg4=
          "]], LineBox[CompressedData["
1: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
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
s8dqKQ==
          "]], LineBox[CompressedData["
1:eJxl13k8lNsbAPD3nRllS1chWxE3VykhCeF9SJss0WLJlkvkCqmQpKIsKdEN
qUTIFiUSRY5KCymiiEqiZuadCtlug5n5nf7+/TWf7+dzPu+cc55znuc5i31C
nPwYBEEwSYL4/RseExMwoMWn8pQkVK4WsFFor9bYi2V86nDG9+iXRWwUaNR2
tFqXT2lJzTk5XcpGvucjxHMM+JRlq4me9k028hxS+zfRiE9prLM6se02G20r
DC3eZcGnXLz+lC2sYSN7htKq9VZ8agWV7fDyPhtt8nz4QHcDn2rdrGcw9oCN
zBTmdZL2fErd5MuAaRMbLYmvEhR58Cnr2HU/7rWzUfN6k2K4wqee/K3m9Z7k
oMhnMbrHcvmUr/+jME0xDtLe3HTnQQGf8l98j7NXnIPibR0empbzqZju6vGf
Mhxkvc2v17CBT4kSjl0YUuGgRu806aX9fErQZ1ebtZqDao7QobJ/TlFCxg1h
tT8HXb+dZTJwY4pKUJq1c+opB8lrLg/0LJmmOFGH+1/t4aLU88k7S8qnqdDn
PpEOe7lIkvHNavz2NHVGGGH/6h8uIj6XqJy+P00l7Ai+8zSUi75f/etl9Ytp
ykc12ScvioualDX15gxNU2Ojo2piKVx0cJ7yZJ3BDJWxL4MOr+KiDlI8Vql+
hnLeYXKQweeiofIsz62NM9TTZx1Fs6e5SMJNZ21C0wzlse6RmpSAi6DSfny8
dYay2iv3QZqk0U2f9D3tH2eogcr82GlxGiU/1tiSIJqhiGNPAk4p0sj6lLnc
hJWAyru+pNTGiEbe+m0jOhsFlP+xM0sUjWl05KP3S58tAqrrvfTnQRMaVa4+
Gd++TUA1FfUuCDenkTq75dcNXwG1Tmv1iVPWNJrZ4PLRJ15AXS7L/WurE42q
xQ8UtjcLqB+NZ4f/DaIRO/rEj4aX+P+kR2bmBNNI8ec5w/LXAiq1xv9EfAiN
onvKHiX1CKg0d7PhsDA8v1J2nxUtoMyCWe4mkTTq2OK2oFpcSHUPl+yJjqPR
SIplYtZGIXUwZaak9yKNNJhb2xK2CCn+6bYQzUs02h7hqRDuIKQKH8uUBl6m
Ua3XkQInZyHlQ8YdGc+m0TG96kYpfyFVcE4tdSKPRjId2vyj8ULKJcgzpLyM
Rsvl/wj0eSKkRBPxJ8caaDT/Vl3Z9WYhdUd90WqNRhpNbfIf5r4UUn66rbIO
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
          "]], LineBox[CompressedData["
1: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
MeRgl+aiXyoEWy3LdR4z4uB78+mhlYL/B+9xnAE=
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277244, 0.8164965809277244}}, {{
         0, 3.141592653589793}, {-0.8164965809277244, 0.8164965809277244}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
nM5s5Py//wckL8p2
          "]], LineBox[CompressedData["
1:eJxl13k8lN37B3CPEUVlSUVUaFFIpRK+1aeUUoqsLXaVyq5FCz0pshRCtkgq
kTUhSyn7EyptKFJZ0szcY5l7GBkKv+Pv3x/zmtf7NWfu+5zrXOe6r1vZydPs
mLCQkNAo+Ux9lwfWaZg0dsJ8u17RlTQmlmqZjKxq6YTB7o7zRRlMhHZ8rpr5
vRNS/z74zspmwkKPafW6j/jay1DDAiaes9yVM/mdaI4p+OBTxMTi2OHe4L+d
iDIWKk0tZYLDFbliMLML/KVdzqPlTFxJW5Jdqd4Fut5ma8wbJh5LOU4Wu3Th
hmFaSXAPE7Ll7IbYU12YMbSzP4XFxAVXr5gzF7vQGKRTWcxhYseryyu1rndB
RHXv5k6aiXbfu+a5mV14sHwyQmWciems9kep7C6MJa88fnQuC04vrfZHOndj
/HBmavsOFrSK5WTkPbvRYCalKmrIgnDe16b757pxUD1CeLURCw/u2R0oDOnG
vUvsSl9TFroDnO0+Z3UjUrfZ4h87cr09Pm6K3G48aH3/6IUP8ZfYkIxzP9Fn
/+7UYDoLR3jNlZUhPQguqKk1FmYjbE2JZ3oQictP8cyQRDZea31hno1gYsuE
lmPuHTambxixNYhjYsXbfx58uMtGoO7GvT1kH/o1pV/KpLLhq1+yQuU/JmaW
uVpey2bDxaKkK5nBwr7aicElL9jYdb7EPNafhaSi3Gk7v7EhXFmyMfAiG79V
MofmyVHImiWTPn6VjUiTnOOMBRTMrN1kz91go8Z6mvyAAoXU30q8k2QeNTdW
rytfTGHHqutZJuVsZF3N2LZblUJQos1CBWEKte7FmeLaFMTP/sMoCKWwXk6q
SteMQkG1tbd6NAUKISn95hQOSxV3PEykoHB5Z0mKJYXsbJcX8dkUSpIVoicO
Utjb3XT2UiOFuW/aeen2FCJM0tmG0hzorijFAzcK0mpG7zoSOPgqH22kf40C
UyxFuv4eB4eqz7xPDaLw/NegxZMMDkzrrGoZIRSO3k9s9y/lgD+9RqjiOoVS
OQ5buZWD5jx2lUokBTuxUMbR+b3wfLbAPIXMK6fnlQ47theP1+YucXtM4Ur1
Ar8Pyb2QFs9PScqjYHXPo6I0rRcbv6+73vCEgpDNvJ2hRb0Qfu+WpVRIwbzp
mLlaSy/cXuTOfVFCYaxKxMNNtg/2ym+CH1VSMEzRT6Wj+7Ci4bzT/o8Ugus/
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
K5T6//1/Gpfu2Q==
          "]], LineBox[CompressedData["
1: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
qsnOz/x//w9Gy6lB
          "]], LineBox[CompressedData["
1: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
uEHX/tdyZtt5+W7DpgLaWE0Ir2D+Hye7YK8=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
r6JraA==
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
ATbq2v9azmw7L99t2FQAG6sJ4RXM/wPYEJwv
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965809277243, 0.8164965809277243}}, {{
         0, 3.141592653589793}, {-0.8164965809277243, 0.8164965809277243}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]},
    {
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1:eJwV13s4VNsbB/DJJQoJIaJESio55TiSfIfucoiKlJyICJVLoULp4lKOSrrQ
SZ1cklJHQuiC5JLuJHKUppqZPTmacZnZe2bwW78/9rOfz7OftZ69373Wu953
ZsBezyAFFos1TK7/3yvmvGRbNQnx18jtG0EFXKg7PX1g2CoEtVVN72IRFzu2
VFmrvBbCZChzTtMtLib/WWDS2yHEiks+i83ucRE2kMDK5AqxtTSM//wxF/Vq
++ISBUKYulWHiuq4mGoeKgztF8Ky7VaG3jMuGr29epeLhZg8Ul7t28qFySOr
2mFlEYocTXI7P3DRnvL5sI+5CA1O20IyhFw4GDuNmQSKEH9o8xOhCQ9rfNuj
AkJE2Bk2K23eLB42Xg7m5oWLEOfz/m7gHB7CDDJezt4vQvhLufa7BTzk6HZf
np8swsTe8ZbZ9jzQGvvt7IpEaL18OqRzAw/3R4si3ftESPn5JtvgBA/zeid/
S9g3AOuvR+tzODy48UzqY+IG8FTFwnjpdx4i+q2v7Y0fwIYlzaNdPDJevt7X
//gAPGM2eun8x4ODwdn2FVkD2O1p5LlPwoOrp9YztfsD2PiufPNPNT7CG7QK
swcHoF65NK15MR8lRdoh5VGDOLpWNDKayMfx90+cFGMH0ZgYqhyRxIevwu5p
HocGYbhTsOrzMT4m+ja96js2iGZFl9gHqXzs1Iz/ddb5QYRW/526KZMPk5jv
CucqBxE3mVplX8BH1vIHVyLkg1CPWqdQ0sJH/KdtbfOSh+D1e22glQaFodXL
rgSdHMJV2U0fM00K4aVGwVczhhB73OC0nhaFrce7pdoXh/BJNlotmULB3tLH
VHpjCO3WRjoFRhSY/Rsjm1uG8LKutfDWPAoxGus0gzSG0WH9Ijp4DYX+GMuu
XK1h1Mm87Wa5UNjZOyGvU3cYPYquSz6vo+BV1mzrOn0YZ9aLfrq7U/jVZ5Xf
4oXDWLDjw3wjL/J++U4l4zyGYWlR8vyPHRQiHezW5WYNY/v9Dy2Z8RRYe7IO
n740jIkflLnyBAoZV4VlR/4ahmeVSkzQYQrFCjeNduQP4+2qhaJfjlLgNBv0
z7k/jIOn73g8SKGwcZPsTGnbMG7NeVZ0MJOC7Z7HHQ3aYnT8PTr9fSGFhquG
ahV6Yig+nPSnRhEFz7cxuGEohv/HwPAVNynssVlYlGYqxrfHFxNLblG4Ib16
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
          "]], LineBox[CompressedData["
1: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
kh5+dYMYE7Z5KT652Y/rh2kPmUMSTOgeWrzk7kcKfR9ZsSRnDhPScge9i/so
5NtTYqW3gAnRs535lXh/P51XH2exjAm0M88D/HC9EGP3Rfn4ViY8pA7nXsT1
xIh1Q3b8NiaQNrdldtdQyNYie3XZdiZ43/S8r15NIWmTI2ZTO5kwWqxk+6SC
Qjc1xt3C9jPh9frDGb24Psn4Q+TfPMaEJw5a7k9wvVOWuti4NpYJRc9CJDWu
UWjxjNmpp/8xIfQcjd6RgL+/7+DjmgQmpLNHHUPjKeS+IFOv8gYT6lNObeuK
pdCCeI2VJXeYIHH/1NLjVygUfElTKauQCeV68+t2n6OQ6VFtkci3TEjW1tUe
86BQi6FRve0cFhx2H5Dz1qdQxCO/yU1zWRC83qDqmS6FNuvlrzKUZoHT3jvc
uToUerJy0S1VORY0ryXSCrVw/afCDvihzIIvIyNKPUsodJ3VviRRmwVmDgdk
eQsodKDt8JWubSzgNs8UfJgWoAnPpB3OUSxolxGtsq0RoOiT6ayQGBac095u
L1clQOoRORUpcSxwde/X7ysXoJ3ZFao9iSworjpd7VIqQA/5PWM7b7PA+Zbk
1K5cAfJyXRhvVcCCPWf22H27KUAf96W067eyYKrwccpLXwFqtLm9U0KGDa2F
kvKHVAU43xtlZcWzYU0tbDoWxEceg6/GPySyYSD4WP4Gfz7yvuNkJnWDDT7b
pq1lTvBRCCe0PziFDYqbVq4u9eKj5K4X8raZbAg0L4n+6MRHHUG7Y6bK2MBf
ad7HxecXy/LjQdt72CCzVSU8QpKPth8lGsN62aC9jLdGXYKP7BclylRy2RDh
Ka7+hMNHbhGPi9Q/syF4T1j1EJ2PLuyhDU1+Y8PMjUC+/jgPVf+56pL5lw3o
jJjdiS4eqs9TKuyhceCrqRln7B0PNbsUzkgyOGAkO1fEp5WHeprak0+xOHDt
6YXHbi95aOKmfKeNJAfoVkY7oYqHZqxz1cKkOEA131N/+JiHmAzkWzGPA9W+
rUaLSnlo3mGXOepyHOjdcGLtND4vyiv9cNorz4E9z/0U3fF5clHbxbwYBQ4o
qm2xfJvFQ5qXZKfrlTjAcjGqXJvBQ6sMs60mVThwO/WK761UHvo/bDO8Yg==

          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
mqJ96QSa941p+w8SwKMXtDrTB//v/wFGzD9m
          "]], LineBox[CompressedData["
1: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
fLDvCu6X57+rz29DNLoSOu0pKGSi/wFzxkR/
          "]], LineBox[CompressedData["
1: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
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
nhn/3/8Hz9nXfQ==
          "]], LineBox[CompressedData["
1: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
ajdlcdF6/VzzGQUOpKX/7XsrnYv+D5avte4=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
ibZ8H3QreSCFAk/M4P/h/wPJ6jPx
          "]], LineBox[CompressedData["
1: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
DA==
          "]], LineBox[CompressedData["
1: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
NZvucNF6/VyLaQUOZGT+7Xczk4v+D3aTK30=
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k4VdsbB3BDoShDEopoQkik65bhW4YGDUpdKUMZK6lwDRlLuaW4hSLK
VDlSQmY/RRIllxIyH845OGfvozhKEQ2/1R/72c/nWXvt9e6193rftdVdT9t6
iAgJCX0mx++z6LO5bwbX+5qlZ8b6p2dysZKuNla9boO0AanCjntcTD/Wc+9O
OAylkx9i593nYlj+2FRZwmn4bRVeFpTHRc+WqFpGwlkIn5n3dEMlF+8PJ2ik
JVzDv/tto8LauLD1VupJTsiA1Qtp6clZPMR/cixOSihA1fyyzFI3Hozrreea
/10D/fgXocEqFGTas98aXa/BK9PVF2eWUhjiiCTqFtdAuu2SdNgyCleFnixV
+lyDwgXR6Wc0KHCMtdcL/J7jQpHlg8P6FKKLJI+k+9WCEWFsM2xJoSOjqXTa
tw535oe8afai4BOy26XYpwGM/fH+kkUUrE+Z5EjENWBMK9RTvYTCctfVY04F
DQj382GuLyP9t4uFS4w24Gvbj4OHKimYKlUnO514jQfzda7E11KYW6HbIu7Z
iNIK19yKVgqML1JwdGjCUuVtyvQ4hQh6+p/CkCYs4F3yffuZgj2TahK71YSJ
nSLWJV8oSNXXHSrsaoJenUFE8DcKfjfCAsXsmpF65ZBgXIjGpnUf8h7veQMF
zVbOLWkaJys8roosb0HbvrOmTdo01mzfqyZs2ALrb/+m3NelIeg2Kfpl2YIH
4Wp6kXo0/GcWdHz3bIF+4Q4xvXU0QsxqVSYftiDmwWKXgI00Ltap5o0YvMN7
Z7lHj7bRyGzp/K/dvBWGmYH/q3Oj4erywqltXysENU/Fj3rQWP4pf+ydeyss
zyTHiB+lkb3g4oK3F1uRvPf2OgsvGnl2hg6vG1uhaZspzPChUdkXx6+ybYNG
Z3qYXDiNdmr7nPuu7aj72axz4waNsRRNqwt+7egIY40PJdKYu0M88vD5dkiy
i1YY3iTPn1c3tehuO4aXWLU1p9DI9QUVzW6Hu+zw3tF0GuenDV95HXmPo1fi
Xwzm0NCTUvtnjXMHTvoyxjOe0LCu+lkz91QHjDMLt1U/peF+ivmdG96BpFFl
yd4qGrdabvlnpHVATvrZO+kaGmKJC91lmB1Y03bc3bOORp+KpMUnh06YZEXE
vWqicUXvq1DZwS5kHPRKONhH5jNouzbXqwv9vkJMeyaN489S/1II68LUZRFr
u34a22wsHgamdyGvWjhmB4uG+Om4fUaDpH14InvpEI2o/NXZFd7dcM1xNzo1
Qt7X1/AWKrwbc/L9M20+0HAzezeteK0b+z37Vut9pGH+JsgmuLAbS6/73aNG
aQiP1k1t+NoNOfqnutUnGhG6h3c8OduDcjP9rVlTNE4FFAWMxPXA2SC4+ug3
Gk5VszMX3+3BaVkNO61pGia7Hk2E1vVgdk8YN3uGxoz3tzSTOb0wUUu4HPOT
xplH1wVVCb245M1unhbl49gEV3n0Xi/8DbdZZc7i44DJRivV0l5Mllv1Wczm
448mVkpEZy+m2O+P/SPGx8SIrgWW9GE7JTEzLsGHr3ZDYg2jDw2FS6Z95vEx
5DF0LrOsDyavX4x/IbbLFPI+96oPXM8KpeD5fGxcuMF8E92HnX0e08HSfIj8
ejD6TIeJx3t6fnjI8uG/4WV3hikTyQe/BPYRc//m1J3dzQQnXFFtrxwfjZTy
bfgwMfLKTmT9Aj4SWmO2PitmIt+4azZPno9Z83IMMuqYKFhk/3P3Qj4Ct9ap
nH3PREzJ3VWlxIeefv9sNslEFhUqFqbAx7Lsk5nVG/txcc9ZkYlFfNxgXY5J
39GPrKOJZ3Yp8iG2ODswwrEfIV83qTKI+df6d5pF9EPRZNPUbiU+ioJtvlU9
78f4UxNurDIfK0pODKW19iNttkNXJ3HS6KW34YP90LvG/qa2mI8QtxqG6ewB
6Ost+C+P+ENaX5yKwgDCQ0tCxomdu6ZCf6wagKv/w4PrlvBhvkvftmrbAESM
zzMKiUsu7TJNOzgAsc0OcqPEq2qPa4Z7DWC9e1C+pgofc43u/jSJJe0dx/yT
idvUFuQ+fTuAeMuXf7iq8rHFQS8plTWA7jW7VOKIKxJ3RIaND2DvqmmDp8S7
Z9dqp89hoUm5cmT+Uj4uLdujPl+OheQDr66uJ65Bv0KEMgta6mNHDhEbhEwL
O2uz8MA0KiGd+MTN6MnmdSx8av0wXkWcVaLw0dSEhcfBnud6iZnvsjh5liz0
LR8znSRWGDPoUtnFQu1g1GpZNT5spJ43//sXC7M+rNyiRRytZfPihxMLCdda
4kD8fAuz4qQnC8WbL8zdTzztdiKfeYqFX4kmxZ7ER2Q/n3kayIKZUn1QIHF9
dYjF7QgWGrIq7kcRr/YWmR9ykQW+o4JFPHGc0pUu+6ssnIxgbk8l/vpS9p5R
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
          "]], LineBox[CompressedData["
1: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
Adf/v/8PJ9bXuQ==
          "]], LineBox[CompressedData["
1:eJwV13lcTN0bAPBp5t5ZWshSSdqU8hZKEtrOI1sLSYqi7VfSIhTtSoiUVOqt
LIlk6U3aV+0okYRSqbRiZu6gVUTb7/hjPvfz/cydc888zznPfY6i83FLVzqN
RvuKP3+vVg1Zlqp1NOiUU1xocJ+L7kra3ln6nAaq31e88fiPi8ZcmSNiL2jw
6NyhdUlZXLS5uNBQqJEG7fceGdbkcNEV4n8xP17RIGF18wgvn4vW3K1Q635D
A8nNPcbry7jIs9/b9b8OGtxKGHpaU8dFgwe6u4x4NFjmq1v8bw8XiRrsz3Ci
aPAy3Uj+az8XrZdvPXn6Kw107jsPw2cuivzUKFo+TIPt+lO1PAEXaXiVG66d
pMHKm6JKyye5KCT0ero8Rwj2ts7kmCzkIYm0/Z7TakLQ5HXS3HkbDxl/af1d
fEwIolH7ruwHPBR4wtVd8rsQtD7vazlhykeRZkNuusNC8PJDyjpyFx9dVQ5w
cxgVgjOTQ+1Ju/mopD3y8IMJIZA5eetzvhUfjes+OqQzKwRRr0mpNgc+OsYY
d9o3nw5pZcG5DSf4yCXxjG3yWjqcPVrkY3edj8xLUkwl/engLf6kXHeAj9zH
neckAunwufaY+cZPfBSuqVYkEUyH3Tx7K+0vfFT2sExW4jQdHracLVGl+Gj5
7baRRRF0iNY79nZqhI9+Xpx/dUEyHazyU5AtjUK3bMM/iZbQoWBVoA5flkJl
yabXRMvo4Lq1rr1QnkKtrQt2iZbT4f366C+hihRim6eViFTToc9OylxsBYVO
GFVFCT+nw4FN84ylV1Fou/ovDXY7HfL8fzz/solCQ9OeIYyfdDjnUbXWwopC
tjZm//z+RYc991U8B6wpVFeo3j70mw6jX5xkffZT6LrnN42uGTqEpPLHow9Q
aOuHo5/ySAYsls5yyHWiUEqht6mDBAMuJgVLZntRyNjTf8ljbQa4xDC8w8Mp
VFi/rz5HhwHM0q62T+cpJKe44cS9jQzQfp5XaBRBofGOX6/i9BnwxI/smIrE
/39bUNjhrQyIcuGUH4yl0A+FEO4iKwb0iUb3vbtGoTsdZ4uOnWSAzmSD7NVH
FOLWa/bF+jHgSPmN333ZFFpV1MfJDWBAgYQFqZpLoZIrBo7DpxhQasd8lJtP
oSaT3xzv8wwYrFyunVVCockKb0efJAZI8xJkzGopZJ7mKOxbygD7rtf5q1so
lBg7b33iYwYIGRY66rdSqDOkyrGoggE9Ux26Ju8pdMhWpvhHDQMCy/8NtG+n
UNDCDke/Fzge3BfzvbsodO+8ebF/JwNSzPRSDQYp9MfdwCloigH9XXEVQSMU
Mq1QA78ZBtSqFbajURxPsSUKPnMMWCI4YkuMUUi/YKzPnUFASNDRpMhxCp2e
ynC0ESFgKPMQN/QnhRixCx03yBBwxnDxoMw0haz65wzXyRLAt5DxeYF9T+u7
nIY8AfsR3e3kDF4PHQ29KkoEJFdsu1g3S6FIhVAHSXUCeoTCr+0VEiDRQp79
hC4BjAHVCWWmANmRbQaj+gRoK/l/L8XO3v9U9rshAc3trJ0mLAEyn77Z89mI
gCXUOz03tgBd2WZp/96UgKBU0S9xwgK0+EOlXeEBAsakmvclzhOgQ2oP9XPt
8HybbXPF5gtQccjVZVkOBOyovn/0AvY+xRMf050JWDHkJOMtLkDXPFXtEjwJ
qEi8qau1UIBkZ+IP+gQTMPlb75yHhAAZD+56fDWEgMGW8OXvsH0bOFLVpwkY
Z1/q15EUoMb4sy3C4QT4mBUVT2P7q/iY3IsmoIBW8cxniQDdEVmd0RhDAPe+
xp5G7KYRPjEaR0B5rvq0grQAKVU41RokEjAsfOfhC+y3uy02dNwk4JFWl7uQ
jABNaYsmzdwiYJnd4IAptsrSF2NKdwhIytgSmIAd8hnleN8n4IL0zLTMMgHK
eDklcjUDx3+P2Vd77JacUo+qTDz/5t6fqdj/BGmsEM4h4J3eM9clsgJk5fD1
nGYejt9ekZeW2Ge2ZPTvKyDAmH7RJBq7XUz+5t0SAqTG2Ok/sc+lz1tkUEPA
4ROv80rkcL4uNnq7PCHA4uaOmQHsD14RzVHPCFgQ+eGwiLwArdkwG9XeQEDA
O614G2zbZeW86Zc4Pzd/7gnBPi/kv02piQAV4rnGLezuV99p3m9x/BinjT5i
M/MzHZJbCBBScA6YxNZKdq2sfE9AzYDxy4UKAmR/SnHpp3YCLJ01N6pjRzr1
BHA68frqlazbjF247XqbRjcBs4V/vPZh96pZr9vXQ8Duw11aHtgc8QXxIX0E
fLqOyyq29kTTUPoAAZclIyWisB27Ine+/ETA1PO9WsnYl2q2Phz+QkBDmaTX
HeziezS2JJ+AQ8vePn2I3R9V6aovIGDVtjCdAmyR44HPnL8RYJup1FCKrWOl
rRg1RIDIYKVvBbbzppHTuSMEQJYpqsKOkXv0sW2MgI+fmlT+uozhrjv9g4C7
MVvU/97/ma90bfkvAvRe5+z8O9785r4J498EaArmRedj6xam7D0+RcA380Pc
TGzXa/vzk2YIqI7MdUjDvhK6aH7lHAHtO0bHE7ErnN94DQqRYOyo9uAiNndH
dCObIIFTf9Av8O/8zJwUVjBJqKFdLHbD7jFf77+ZTYKPkryyNbaNpXCTvTAJ
tMAVTwD7vXWfYrAoCSUeKZfVsC1siwKS55Gw7fy5iL/5emUX9bpAnIQXJz/m
/M3nU5d1QV8XkyCjPHKpBtvQjf2GJUXCyr5swzTsx549ysrSJKS7cBXCsPN8
Lr61kyXhteI77w3Y6n52KkHyJPyyiewVx34QuDYkSZGEM1Z1wXy8HlPDulWb
V5CwcLLNMAF7SXheqECVhMa0/MOHsBMjLrQy1Ugwmi9XpY19KUYjDK0hQftu
ycQbvN6Z8UTbQU0S4pqojhvYZxM71QK1SPB8VsF3wQ5MCW/P0yGh7IJZ8gje
Xz9u2ax6vZGE9TYL1hVhH09ffY7SxeMzI2b9sA9ndqxejvDv3WIUf+D9a1Wq
fuHfHSSY+CZd61qK9385rTvXhIROf8usOGyz6jbNJjMSnoZ//maEbVQf9pGw
IGGXXur0XVwvNFtb1/nbkCCWPWtugevLo/b/ohIOkBCVRev8KSVAql2hfTl2
JPhNkQkp2HIDqtE8JxI2LdWO78P1SnT41KCNBwm/136o24PrW+SYxUa/IySM
lmY3UIsFiPFzRWz8Uezvlb/DsP9Mv9nU6EOCAu3B1weLBIgvrByvF0wCfA1k
9S0QoGcqTUgumgT+EQOVSTEBMo3tM5WMwfmbWScXgv12Ysx6XhzOb83qc7Oi
eD/WSXvNJpCgbmsSOysiQJPObtd6b5AgMTlV+pUjQKtu00dvPSSh92aATTAp
QAVMyenkRyTIFrot/kII0KZj/7DickjIW9Wvb4693cBCNqyABN+h2FYZhgD9
rzvVxLGchOHz1JJ7NAFKltqULt9IAkEtEPWYotCysJ3ZUk0kCC9kJpX/odBd
rmPZ/GacfyOFaGHsvOKI5rl3JDgEjFbfn6TQq73v//R1kqDTsGH7ywkK0a4c
35tGkfC/xJU9dcMU8mQ/IBQ5TOiUR2di8fv4FT0yZosIE3Z7ydXeGMD9w4yH
5GEx/P2Q8sr7/RQaHl29MmsBE+5kf/cu6qWQb3ex2fqlTIid78SrxO/30Jz6
BBN1JsyFPg/ww/3CFasvCid2MaGAOpJ9AfcTo+YNmYm7mUBY3JbcX0MhS5NM
rdI9TPC+4flQpZpCEoZHt05bM2GsSN6ytoJCN1Qn3CIcmNC8+ci9Htyf3PtD
5N44zoQaWw33WtzvlKYpGzyLx+M/DRNXvUoh5bmtp578y4RzZ2n09iT8fHvX
xzVJTEhnj9mFJ1LIfemD9ZXXmVCfemp3ZzyFliaqrim+wwSxh6f+OXGZQiEX
1eQz8plQvn5J3f6zFDI6pikU/Y4JKZramuMeFGrW06+3XMACT/dBaW8dCl0q
85vavogFIZt1q55qU2jH+ty1ehIscDh4p2/ROgrVrll+S0maBa82Eun5Grj/
U2QH/FBgwefRUfnulRS6xnq/MlmTBVtsXaS4Synk0nrkcuduFvQ2zeV9nOGj
Sc+UvU6xLGiRFK6yrOGjuOC7rLArLDijucdGuoqPVC5lVaQmsMDFfUCnt5yP
rDMrlLqTWVBQFVrtXMJHBbzucevbeD63xKf3ZfOR16FliWZ5LLA9fcDq2w0+
6rdPfa/TwoKp/Mepr3z56IXFbWsxSTa8zReXOazEx/VePyMjkQ06z2D78SAe
8vj+euJjMhsGQo7nbvHnIe87jlsXXmeD9+4Zc8mTPBTGCR8ISWXDsu1rtEq8
eOhm50sZywdsCDAujut35KH2oP1XpkvZ8GWNcW8fPr+Ylp8I2tPNhsW7FCMv
ifPQnmPEi4geNmioczeoiPGQzfJkyco+NkR6iqrUcnjI7dLjQpXPbAg+EFE9
ROeh8wdoQ1Pf2DB7PZCnM8FF1X9inB/MssHgtIjVyU4uqs+Rz++mcUBgtJUz
3sZFTc75c+IMDuhJLRLyaeGi7sb3N0+xOJD05Pxjt1dcNHlDpsNCnAM0M31r
qOKiOfPsFRELOcBr+k+l4DEXMRnIt2IxByp9W/SXl3DR4iPOC1SkOdC95eTG
GXxelJH/4XhQhgM2z/3k3PF5cnnrhZwrshyQXbHT9F0GF6ldlJqpl+cA6axf
ufEeF63VyzSbUuRAatpl31tpXPR/jG22Fg==
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
1p9GoHQngVcG9XyQQWGHZ/B5+P+AmDUk
          "]], LineBox[CompressedData["
1:eJxl13k8VOv/APDJEiXJHlEiJUpuua6Qz9Ci5BKJktyICJWlUKG0WOLaW+im
ri2JXHuWepAsaSfrVZpqZs7kasYyc87M4Pd8//79cV7n9X6d13Nez/mc5/k8
n89qn9MufhI0Gk2Ar//dTVM9SoNfcEEJnXMXFDBR3brXdONOLvw1W/bAr4iJ
ltg8f6LZwwXisJzarRImOubRYCLzlgurpzPXdT5iomV/FumM9XNhx+1DW/Sq
mChoMoaWyeTC4cog9stnTNQmdyYqlsMFXcfGQF4rEy3XD+QGTnDBqPdRqtoL
JupwdxvbzufCstnaRs8eJtJ5atwyI82Dh9Y6eYMDTNSX8PniIX0etNscCUjl
MpGVts28ji8PYi4cRFwdFtrt2RfmE8AD/6A1SUZrWMj1jj+zIJgH5w59rPBd
x0JBGqmv157lQfBrsdKHjSyUqzpyZ0M8DxaPLTTMsWAhUv6suXkJD3rupAUM
7mehmrmSUKdxHiT+fJejcY2FjMaWfYs5MwkmXy+35TJYyJGl0xYRNQnPZQy0
Lb+zUMiEyf3T0ZPgurVrboiFx4v3eXpfnQSXCFc35f9YyEojo29H9iScctFy
OSNgIQcXxRdyNZNw4EPtwZ9ybBTcrlicMzUJ8vWWSV1b2Ki8RCmgNmwKruzh
zc7FstHVj8hGMnIKOmMDpUPi2MhT4uQK5wtToHmcs+vzFTZa7Nn5ZvzKFHRL
2kc+SWSj4wrRv665MQVBjX8nHshkI52I7xJZ9VMQtYzYZVHERtnbn9wNEU/B
krC9EuXdbBT96UivUfw0uP3e4mssT6Bpu213/a5Pwz3Rw0N6CgQKrtTyv5c6
DVFXNdLUFAl0+OqIUOnWNHwSzTUKVAhkYXhIV/hgGj6aaCkXaRGIOusa2tU9
Da9be4ofGREoQn6vgp/8DPSbvAr3302giQjDoTzFGWgVuZuvsSfQ8bFFBYOq
MzAq6bD1814CuVV3mTmsnIH0fbyfTk4E+vXQLq8tm2bA+NjABi03PL9Cm/IF
zjNgaFD+8o9jBAq1Mt+blz0D3jUD3ZnRBKKdyr6YdnsG5AakmeIYAqXe41Zf
+msGXBpkIvwuEqhU4qHWscIZeL9rE++XywRidGlMrKuZgfNpj52fJBDI9YAo
vbJ3BsrWvSg5n0kgs1PP+tuV+ND/99zKj8UEar+nKVenxgfJ5qV/ypcQyOV9
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

          "]], LineBox[CompressedData["
1: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
9Xe4aI3BfcspZQ6kZVwITM/gov8DbFErpQ==
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.8164965570601368, 0.8164965570601368}}, {{
         0, 3.141592653589793}, {-0.8164965570601368, 0.8164965570601368}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.596033967999305*^9, 3.5973226245386887`*^9, 
  3.6061185386285305`*^9, 3.606121982058483*^9, 3.6061220945109153`*^9, 
  3.6061221253886814`*^9, 3.6061221744604883`*^9, 3.6061224257738624`*^9, 
  3.6061226230271444`*^9, 3.6061228807208843`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"YABPolygon", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960354271578703`*^9, 3.596035462352043*^9}, {
  3.596035956423437*^9, 3.596035961302988*^9}, {3.596036034792096*^9, 
  3.596036069458777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
       "Blue", ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"YABPolygon", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"MapThread", "[", 
           RowBox[{"RGBColor", ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", ",", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", ",", 
          SqrtBox[
           FractionBox["2", "3"]]}], " ", "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 3.122743097668254, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$19889$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$19889$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Rectangle[
          Apply[Sequence, 
           Transpose[{
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 2], 
             Part[
              $CellContext`YABAxisRanges[$CellContext`\[Theta]$$], 3]}]]], 
         Blue, 
         Polygon[
          $CellContext`YABPolygon[$CellContext`\[Theta]$$], VertexColors -> 
          MapThread[RGBColor, 
            Transpose[
             Part[
              Transpose[$CellContext`RGBCube], {2, 3, 4, 5, 6, 7}]]]]}, 
        PlotRange -> {{-(2/3)^Rational[1, 2], (2/3)^
           Rational[1, 2]}, {-(2/3)^Rational[1, 2], (2/3)^Rational[1, 2]}}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {222., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.596035349166172*^9, 3.5960353862995577`*^9, 
  3.5960354813813*^9, 3.596035526695188*^9, 3.59603587068089*^9, 
  3.596036074818692*^9, 3.5960361066321297`*^9, 3.596036376239118*^9, 
  3.596036474069346*^9, 3.5960365314348516`*^9, 3.596036943221499*^9, 
  3.596037004104776*^9, 3.596038994849193*^9, 3.596039163411475*^9, 
  3.5960392476156397`*^9, 3.597140037569601*^9, 3.597140071563545*^9, 
  3.597341418320631*^9, 3.597787447877696*^9, 3.6003431859122868`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YABAxisRanges", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          FractionBox["2", "3"]]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]", " ", "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}], " ", ",", 
       RowBox[{
        SqrtBox[
         FractionBox["2", "3"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]", " ", "-", 
             RowBox[{"Pi", "/", "6"}]}], ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          FractionBox["2", "3"]]}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}], " ", ",", 
       RowBox[{
        SqrtBox[
         FractionBox["2", "3"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "6"], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"Pi", "/", "3"}]}], "]"}]}], "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YABAxisLengths", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"YABAxisRanges", "[", "\[Theta]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaleVec", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{"1", "/", 
        RowBox[{"YABAxisLengths", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960366725689793`*^9, 3.596036711393558*^9}, {
   3.596036745787457*^9, 3.596036749864942*^9}, {3.596036799148944*^9, 
   3.596036801523638*^9}, {3.5973229879164724`*^9, 3.5973230202603226`*^9}, {
   3.598109630150674*^9, 3.598109650625567*^9}, {3.598272677680348*^9, 
   3.598272683205419*^9}, {3.5982727928092813`*^9, 3.598272793751638*^9}, {
   3.6061289107987843`*^9, 3.6061289271317186`*^9}, 3.607420136553248*^9, {
   3.607422245007639*^9, 3.607422376457522*^9}, {3.607422593794084*^9, 
   3.607422612590988*^9}, {3.607430098595449*^9, 3.607430106272587*^9}, {
   3.607486272538866*^9, 3.6074862744667273`*^9}, {3.607486631783719*^9, 
   3.607486655373447*^9}, {3.6074880177166*^9, 3.6074880183253813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<L[\[Theta]] = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"YABAxisLengths", "[", "\[Theta]", "]"}], "]"}], ",", 
   "\"\< = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"TrigExpand", "[", 
     RowBox[{"YABAxisLengths", "[", "\[Theta]", "]"}], "]"}], "]"}], ",", 
   "\"\< = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"TrigExpand", "[", 
      RowBox[{"YABAxisLengths", "[", "\[Theta]", "]"}], "]"}], "]"}], "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<s[\[Theta]] = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "]"}], ",", "\"\< = \>\"", 
   ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"TrigExpand", "[", 
     RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "]"}], "]"}], ",", 
   "\"\< = \>\"", ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"TrigExpand", "[", 
      RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "]"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.60748616571418*^9, 3.607486194571168*^9}, {
  3.607486226731524*^9, 3.607486242234131*^9}, {3.6074862847373962`*^9, 
  3.6074863053478947`*^9}, {3.607487058677203*^9, 3.607487084202401*^9}, {
  3.60748773384863*^9, 3.607487747224916*^9}, {3.607488024598647*^9, 
  3.6074880298393583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L[\[Theta]] = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         SqrtBox["3"]},
        {
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]},
        {
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         SqrtBox["3"]},
        {
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]},
        {
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         SqrtBox["3"]},
        {
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]},
        {
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["L[\[Theta]] = ", 
   MatrixForm[{
    3^Rational[1, 2], 2 Rational[2, 3]^Rational[1, 2] 
     Cos[Rational[1, 6] Pi - Mod[
       Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 2 
     Rational[2, 3]^Rational[1, 2] 
     Cos[Rational[1, 6] Pi - Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]}],
    " = ", 
   MatrixForm[{3^Rational[1, 2], 2^Rational[1, 2] Cos[
        Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
     Rational[2, 3]^Rational[1, 2] Sin[
        Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
     2^Rational[1, 2] Cos[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
     Rational[2, 3]^Rational[1, 2] Sin[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]}], " = ", 
   MatrixForm[{3^Rational[1, 2], 2^Rational[1, 2] Cos[
        Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
     Rational[2, 3]^Rational[1, 2] Sin[
        Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]], 
     2^Rational[1, 2] Cos[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 
     Rational[2, 3]^Rational[1, 2] Sin[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.607486195562442*^9, 3.6074862428649807`*^9, 3.6074863102226753`*^9, 
   3.607486553475339*^9, {3.607486640110353*^9, 3.607486658298614*^9}, 
   3.607487084788211*^9, 3.607487748007473*^9, 3.6074880352467613`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"s[\[Theta]] = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox[
           FractionBox["3", "2"]], " ", 
          RowBox[{"Sec", "[", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"6", " ", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}]}], ")"}]}], "]"}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox[
           FractionBox["3", "2"]], " ", 
          RowBox[{"Sec", "[", 
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"6", " ", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}]}], ")"}]}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         FractionBox[
          SqrtBox["6"], 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]},
        {
         FractionBox[
          SqrtBox["6"], 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         FractionBox[
          SqrtBox[
           FractionBox["3", "2"]], 
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]]},
        {
         FractionBox[
          SqrtBox[
           FractionBox["3", "2"]], 
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Mod", "[", 
              RowBox[{"\[Theta]", ",", 
               FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["s[\[Theta]] = ", 
   MatrixForm[{
    3^Rational[-1, 2], Rational[1, 2] Rational[3, 2]^Rational[1, 2] 
     Sec[Rational[1, 6] (Pi - 6 
        Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi])], 
     Rational[1, 2] Rational[3, 2]^Rational[1, 2] 
     Sec[Rational[1, 6] (Pi - 6 
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi])]}], " = ", 
   MatrixForm[{3^Rational[-1, 2], 6^Rational[1, 2]/(2 3^Rational[1, 2] Cos[
        Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
     2 Sin[
        Mod[Rational[-1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
     6^Rational[1, 2]/(2 3^Rational[1, 2] Cos[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + 2 Sin[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]])}], " = ", 
   MatrixForm[{
    3^Rational[-1, 2], Rational[3, 2]^Rational[1, 2]/(3^Rational[1, 2] Cos[
        Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]] + 
     Sin[
       Mod[Rational[1, 6] Pi + $CellContext`\[Theta], Rational[1, 3] Pi]]), 
     Rational[3, 2]^Rational[1, 2]/(3^Rational[1, 2] Cos[
        Mod[$CellContext`\[Theta], Rational[1, 3] Pi]] + Sin[
       Mod[$CellContext`\[Theta], Rational[1, 3] Pi]])}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.607486195562442*^9, 3.6074862428649807`*^9, 3.6074863102226753`*^9, 
   3.607486553475339*^9, {3.607486640110353*^9, 3.607486658298614*^9}, 
   3.607487084788211*^9, 3.607487748007473*^9, 3.607488035421116*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scaleMatrix", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{
           RowBox[{"scaleVec", "[", "\[Theta]", "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nYAB", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"TrigReduce", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"TrigExpand", "[", 
         RowBox[{
          RowBox[{"scaleMatrix", "[", "\[Theta]", "]"}], ".", " ", 
          RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", 
          RowBox[{"RotationMatrixZ", "[", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "]"}], ".", 
          RowBox[{"RotationMatrixY", "[", 
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "4"}], "]"}]}], "]"}], "]"}], "]"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inYAB", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Inverse", "[", 
       RowBox[{"nYAB", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"scaleMatrix", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"nYAB", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"TrigExpand", "[", 
     RowBox[{
      RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
    "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.590708435381664*^9, 3.590708466929468*^9}, {
   3.590708499389325*^9, 3.5907085461469994`*^9}, {3.5907750739601727`*^9, 
   3.590775115487548*^9}, 3.590779792326048*^9, {3.5907798611979866`*^9, 
   3.5907798771368985`*^9}, {3.59077992489563*^9, 3.5907799310509825`*^9}, {
   3.5907816205276146`*^9, 3.590781649695283*^9}, {3.5907817008062067`*^9, 
   3.590781701687257*^9}, {3.5908392076228228`*^9, 3.5908392382655754`*^9}, {
   3.590839384798957*^9, 3.590839404101061*^9}, {3.590839496310335*^9, 
   3.5908394976494117`*^9}, {3.590839570386572*^9, 3.5908396206274457`*^9}, {
   3.590841232732928*^9, 3.5908413073780327`*^9}, {3.5908413776431313`*^9, 
   3.5908413816731367`*^9}, {3.5908419093758783`*^9, 3.590841910105879*^9}, {
   3.590841972858967*^9, 3.590841983889982*^9}, {3.590842456543646*^9, 
   3.590842460933652*^9}, {3.596218438567684*^9, 3.596218455613493*^9}, 
   3.597342443431264*^9, {3.5973427194150496`*^9, 3.597342737537086*^9}, {
   3.5973428117983336`*^9, 3.597342863958317*^9}, {3.597343203583742*^9, 
   3.5973432303012705`*^9}, {3.59827029642635*^9, 3.598270299099518*^9}, {
   3.598270345712167*^9, 3.598270352609261*^9}, {3.5982704640091143`*^9, 
   3.598270477222456*^9}, {3.606129344901614*^9, 3.6061293583073807`*^9}, {
   3.6061294962062683`*^9, 3.6061295403117905`*^9}, {3.6061296009732604`*^9, 
   3.606129604940487*^9}, {3.607420623213998*^9, 3.60742062925498*^9}, {
   3.607487950166301*^9, 3.607488008366981*^9}, {3.607488040640327*^9, 
   3.60748807618541*^9}, {3.607494604433875*^9, 3.607494611531866*^9}, {
   3.607494683352625*^9, 3.607494754486541*^9}, 3.6074949346744213`*^9, 
   3.6074949666137753`*^9, {3.6076905448074217`*^9, 3.607690589181671*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"6", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["\[Pi]", "6"]}], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}]}]}], ")"}]}], "]"}]}], "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["3", "2"]], " ", 
       RowBox[{"Sec", "[", 
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"6", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}]}]}], ")"}]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.596216951868449*^9, 3.5962184609957247`*^9, 3.5973229267449737`*^9, 
   3.597342868448574*^9, 3.597343231447336*^9, 3.5974278415053716`*^9, 
   3.597682299491026*^9, 3.5977874350329857`*^9, 3.5978583750887737`*^9, 
   3.598270300130087*^9, 3.598270354644113*^9, 3.5982704782105494`*^9, 
   3.6003432186772423`*^9, 3.6061289465448294`*^9, {3.6061293478207808`*^9, 
   3.606129359269436*^9}, 3.6061295074409103`*^9, 3.6061295422839036`*^9, {
   3.606129584048292*^9, 3.6061296066585855`*^9}, 3.607420455351054*^9, 
   3.607420518753476*^9, 3.6074206303899527`*^9, {3.6074880516017723`*^9, 
   3.607488077171067*^9}, 3.607494612706252*^9, {3.607494688752046*^9, 
   3.607494755891667*^9}, 3.6074949358258343`*^9, 3.607494968393744*^9, 
   3.607690611388636*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "3"], 
      FractionBox["1", "3"], 
      FractionBox["1", "3"]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["3"]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.596216951868449*^9, 3.5962184609957247`*^9, 3.5973229267449737`*^9, 
   3.597342868448574*^9, 3.597343231447336*^9, 3.5974278415053716`*^9, 
   3.597682299491026*^9, 3.5977874350329857`*^9, 3.5978583750887737`*^9, 
   3.598270300130087*^9, 3.598270354644113*^9, 3.5982704782105494`*^9, 
   3.6003432186772423`*^9, 3.6061289465448294`*^9, {3.6061293478207808`*^9, 
   3.606129359269436*^9}, 3.6061295074409103`*^9, 3.6061295422839036`*^9, {
   3.606129584048292*^9, 3.6061296066585855`*^9}, 3.607420455351054*^9, 
   3.607420518753476*^9, 3.6074206303899527`*^9, {3.6074880516017723`*^9, 
   3.607488077171067*^9}, 3.607494612706252*^9, {3.607494688752046*^9, 
   3.607494755891667*^9}, 3.6074949358258343`*^9, 3.607494968393744*^9, 
   3.607690611396531*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], 
      FractionBox["1", "3"], 
      FractionBox["2", "3"], "1"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]]}], "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["3"]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["3"]}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{"\[Theta]", ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.596216951868449*^9, 3.5962184609957247`*^9, 3.5973229267449737`*^9, 
   3.597342868448574*^9, 3.597343231447336*^9, 3.5974278415053716`*^9, 
   3.597682299491026*^9, 3.5977874350329857`*^9, 3.5978583750887737`*^9, 
   3.598270300130087*^9, 3.598270354644113*^9, 3.5982704782105494`*^9, 
   3.6003432186772423`*^9, 3.6061289465448294`*^9, {3.6061293478207808`*^9, 
   3.606129359269436*^9}, 3.6061295074409103`*^9, 3.6061295422839036`*^9, {
   3.606129584048292*^9, 3.6061296066585855`*^9}, 3.607420455351054*^9, 
   3.607420518753476*^9, 3.6074206303899527`*^9, {3.6074880516017723`*^9, 
   3.607488077171067*^9}, 3.607494612706252*^9, {3.607494688752046*^9, 
   3.607494755891667*^9}, 3.6074949358258343`*^9, 3.607494968393744*^9, 
   3.6076906119892*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", " ", "RGBCube"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598270395610587*^9, 3.598270429611389*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 3.009645762139022, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    635., {22.125, 27.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$51932$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$51932$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> MatrixForm[
        FullSimplify[
         Dot[
          $CellContext`nYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube]]],
       "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{680., {67., 72.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.598270400455459*^9, 3.598270430172385*^9}, 
   3.607494800038055*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nYABCube", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], "]"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596032403095932*^9, 3.5960324253912687`*^9}, {
  3.596032460461591*^9, 3.596032462451202*^9}, {3.59734294706007*^9, 
  3.597342949132189*^9}, {3.607494878578537*^9, 3.6074948847739573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nYABPolygon", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "\[Theta]", "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nYABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "7"}], "}"}]}], "]"}], ",", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nYABCube", "[", "\[Theta]", " ", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], "}"}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5960354271578703`*^9, 3.596035462352043*^9}, {
  3.596035956423437*^9, 3.596035961302988*^9}, {3.596036034792096*^9, 
  3.596036069458777*^9}, {3.597342980925007*^9, 3.597342987605389*^9}, {
  3.6074948890783577`*^9, 3.607494897631443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LxyAxisRanges", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"YABAxisRanges", "[", "\[Theta]", " ", "]"}], "]"}]}], ";", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"LxyAxisRanges", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"LxyAxisRanges", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
            ",", "Blue", ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{
              RowBox[{"nYABPolygon", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"VertexColors", "\[Rule]", 
               RowBox[{"MapThread", "[", 
                RowBox[{"RGBColor", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                    "}"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "/", "2"}], ",", 
               RowBox[{"1", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "/", "2"}], " ", ",", 
               RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
        RowBox[{"MatrixForm", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\< \[Theta] = \>\"", ",", "\[Theta]"}], "}"}], "]"}], 
           ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\"\<< L < \>\"", 
              ",", 
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
           " ", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\"\<< x < \>\"", 
              ",", 
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", "\"\<< y < \>\"", 
              ",", 
              RowBox[{"LxyAxisRanges", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "}"}], "]"}]}], "}"}], "}"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}, 
   3.59734299916105*^9, {3.5973430308648634`*^9, 3.597343042741543*^9}, {
   3.5973431225271063`*^9, 3.59734313867903*^9}, 3.5973431790783405`*^9, {
   3.5973432425659723`*^9, 3.597343244014055*^9}, {3.597343658742776*^9, 
   3.597343671238491*^9}, {3.600511808091255*^9, 3.6005118350660543`*^9}, {
   3.600512271379456*^9, 3.600512272134931*^9}, {3.600512425855023*^9, 
   3.6005124423037777`*^9}, {3.6005124971797743`*^9, 3.600512558079797*^9}, {
   3.600512588217733*^9, 3.600512589664681*^9}, {3.6005146019492207`*^9, 
   3.600514649578545*^9}, {3.600514930210682*^9, 3.60051493767354*^9}, {
   3.600515039129661*^9, 3.600515120413546*^9}, {3.600524253886394*^9, 
   3.6005242789164057`*^9}, {3.600524555880281*^9, 3.600524561643714*^9}, {
   3.600524624695304*^9, 3.600524670481163*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 1.338318470429252, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}}, Typeset`size$$ = {
    392., {87.125, 92.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$52342$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$52342$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`LxyAxisRanges = Simplify[
          $CellContext`YABAxisRanges[$CellContext`\[Theta]$$]]; Grid[{{
           Graphics[{Black, 
             Rectangle[
              Apply[Sequence, 
               Transpose[{
                 Part[$CellContext`LxyAxisRanges, 2], 
                 Part[$CellContext`LxyAxisRanges, 3]}]]], Blue, 
             Polygon[
              $CellContext`nYABPolygon[$CellContext`\[Theta]$$], VertexColors -> 
              MapThread[RGBColor, 
                Transpose[
                 Part[
                  Transpose[$CellContext`RGBCube], {2, 3, 4, 5, 6, 7}]]]]}, 
            PlotRange -> {{(-1)/2, 1/2}, {(-1)/2, 1/2}}], 
           MatrixForm[{
             Row[{" \[Theta] = ", $CellContext`\[Theta]$$}], 
             Row[{
               Part[$CellContext`LxyAxisRanges, 1, 1], "< L < ", 
               Part[$CellContext`LxyAxisRanges, 1, 2]}], 
             Row[{
               Part[$CellContext`LxyAxisRanges, 2, 1], "< x < ", 
               Part[$CellContext`LxyAxisRanges, 2, 2]}], 
             Row[{
               Part[$CellContext`LxyAxisRanges, 3, 1], "< y < ", 
               Part[$CellContext`LxyAxisRanges, 3, 2]}]}]}}]), 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Pi}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{437., {132., 137.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.597343014306916*^9, 3.597343058694455*^9, 3.597343140547137*^9, {
   3.597343236330615*^9, 3.597343244678093*^9}, 3.5973436740786533`*^9, {
   3.5974278285666313`*^9, 3.597427844935568*^9}, {3.5977874232248287`*^9, 
   3.597787440203265*^9}, 3.6003432282282743`*^9, 3.600512133279965*^9, 
   3.600512445834338*^9, {3.600512510324584*^9, 3.6005125208227167`*^9}, 
   3.6005125612836533`*^9, {3.600524546508576*^9, 3.600524562545742*^9}, 
   3.600524674133258*^9, 3.607494904219355*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Representation of the rotation", "Subtitle",
 CellChangeTimes->{{3.5973454530504045`*^9, 3.597345477643811*^9}}],

Cell["\<\
We have a source which makes discrete steps of 1/srcRange the question is to \
what degree of precision do we need to represent the transformation given \
that we require a precision of 1/wrkRange. What is required is the smallest \
number which can result from the transformation of a unit cube!\
\>", "Text",
 CellChangeTimes->{{3.5973454946247826`*^9, 3.597345557436375*^9}, {
   3.597345806644629*^9, 3.597345862714836*^9}, {3.5973459020910883`*^9, 
   3.597345907075373*^9}, 3.597345937683124*^9, {3.5973491859789157`*^9, 
   3.5973492457713356`*^9}, {3.597350621074999*^9, 3.5973506825555153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"3", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                 "}"}]}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"2", "/", "3"}]], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", " ", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"2", "/", "3"}]]}], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"\[Theta]", "+", " ", 
                 RowBox[{"Pi", "/", "6"}]}], ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", 
               RowBox[{"{", 
                RowBox[{
                "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                "}"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"YABCube", "[", "\[Theta]", " ", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
                 "}"}]}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"2", "/", "3"}]], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{"2", "/", "3"}]]}], 
           RowBox[{"Abs", "[", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                RowBox[{"Pi", "/", "3"}]}], "]"}], "-", " ", 
              RowBox[{"Pi", "/", "6"}]}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "}"}]}],
    "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.597351221902364*^9, 3.597351261917653*^9}, {
  3.5973516348489833`*^9, 3.5973516436734877`*^9}, {3.597351722841016*^9, 
  3.5973517842085257`*^9}, {3.597351816816391*^9, 3.5973518295521193`*^9}, {
  3.597351878568923*^9, 3.5973518907106175`*^9}, {3.5973519723752885`*^9, 
  3.59735197554947*^9}, {3.597352012907607*^9, 3.5973520595872765`*^9}, {
  3.5973521504114714`*^9, 3.597352165507335*^9}, {3.597352208027767*^9, 
  3.597352215163175*^9}, {3.597352252627318*^9, 3.5973522638269587`*^9}, {
  3.5973523123877363`*^9, 3.597352312874764*^9}, {3.5973523535870924`*^9, 
  3.5973523547151575`*^9}, {3.597352409771306*^9, 3.5973524105463505`*^9}, {
  3.597352470747794*^9, 3.5973524743069973`*^9}, {3.597352519244568*^9, 
  3.597352585107335*^9}, {3.5973583625797873`*^9, 3.597358419764058*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//uo/wGyl+ZG
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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

         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.40807730570469364`, 0.40807730570469364`}}, {{
         0, 3.141592653589793}, {-0.40807730570469364`, 
         0.40807730570469364`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAA78KzuM1cT7/Q3W7yRpsPiXpvjse
k08/v4JRV9bHST/6sC9k2ZJfP+Vi+Fidx1k/5RRo+LaSbz8eAB8bfsdpP9pG
hMKlkn8/GXqLgWPHeT/VX5InnZKPP4BqXkoqx4k/UmwZ2piSnz/GsJsHXsaZ
P5HyXLOWkq8/nRxabTnDqT87xUoKQnPAPy6mRlEKyro/cHpOYbNwyD8X/4gK
l9XDP224ZY4CI9A/37dkYKkSyj/U6EkJp2LUP4WlnGdTXdA/ii/2ALZZ2D9M
kyda42fTP3EryJXApdw/HgPEkwSe1j/kZeSAoLbcPwnBYH5vqtY/VqAAbIDH
3D8uhZrV2LbWPzoVOUJA6dw/eq1xxqbP1j8C/6nuvyzdP3OEjJkvAdc/ktKL
R7+z3T/+iMFE9GPXP7J5T/m9wd4/+eh2r0Mo2D8ktGvkndLeP8kr5IN6NNg/
lu6Hz33j3j8kmompr0DYP3pjwKU9Bd8/VwwY5RRZ2D9CTTFSvUjfPxRehwXL
idg/0yATq7zP3z/ftzMu5erYP0ZbL5ac4N8/9XKOsAD32D+4lUuBfPHfP6Fe
m3YaA9k/TgXCK54J4D85eG7KSBvZPzJ6+gFeK+A/oU9zeZBL2T/6Y2uu3W7g
PzXDKjnLq9k/YBHzeLx24D+Frng0/LbZP8W+ekObfuA/vPySoSvC2T+QGYrY
WI7gP7oFeM6F2Nk/9sYRozeW4D/VnuiMsOPZP1x0mW0WnuA/fFdxutnu2T8n
z6gC1K3gP6DuF2AnBdo/jHwwzbK14D9kbdzWSxDaP8k901MdueA/sscQeCEV
2j8BdDSn
          "]], LineBox[CompressedData["
1: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
AfOgY1I=
          "]], LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAp11P/7PzBECqxxB4IRXaP7gDaDr8
9ARAInSfTt8N2j/k6COYIvcEQFOAmxqyAdo/OrObU2/7BEBw7QsRUunZP+ZH
i8oIBAVAIup1kHu42T9iS2AgJQYFQCiP1lp6rNk/3U41dkEIBUBi7LVbd6DZ
P9RV3yF6DAVAaSBJBGyI2T/CYzN56xQFQOSWMghAWNk/nX/bJ84lBUDIfgKX
k/fYP1S3K4WTRwVAsECBtu402D/DJsw/HosFQGmhPZCkqtY/agimBCEJBkCw
oxPRfrrTP7egJD3DkQZAv6K7K2910D/OOzzFUhEHQAP0c9Drrco/+GqbU2CO
B0CPoWTDnXbEP8hQn1UNFghA6ATGMXxEuz9iOTynp5QIQC49dhRJ06w/ae3N
9dyWCECWA9C9KWCsP3ChX0QSmQhATGyxPQjtqz9/CYPhfJ0IQIXeIeS+Bqs/
nNnJG1KmCEAzTGHBEzqpP9Z5V5D8twhA6GoZa2OgpT9KunJ5UdsIQLjd+uCv
15w/UW4EyIbdCEBLXv/YCPGbP1gilha83whAPxQDsF8Kmz9nirmzJuQIQKuL
VEEHPZk/hFoA7vvsCECuHD/dP6KVP776jWKm/ghA6no/t8zYjD/Frh+x2wAJ
QJLGqwFLC4s/zGKx/xADCUCUapg8xz2JP9vK1Jx7BwlAr3maELqihT/4mhvX
UBAJQHcdvxMa2Xw//06tJYYSCUAnj9Zh/T15PwYDP3S7FAlAah+Uw96idT8U
a2IRJhkJQBTur7Y52Ww/Gx/0X1sbCUA/bhM89KJlPyLTha6QHQlAAvLhNlrZ
XD8qhxf9xR8JQIem0YWT2Uw/MTupS/shCUATPqS6yRpsPpjuGEY=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAA78KzuM1cT7/Q3W7yRpsviXpvjse
k08/v4JRV9bHSb/6sC9k2ZJfP+Vi+Fidx1m/5RRo+LaSbz8eAB8bfsdpv9pG
hMKlkn8/GXqLgWPHeb/VX5InnZKPP4BqXkoqx4m/UmwZ2piSnz/GsJsHXsaZ
v5HyXLOWkq8/nRxabTnDqb87xUoKQnPAPy6mRlEKyrq/cHpOYbNwyD8X/4gK
l9XDv224ZY4CI9A/37dkYKkSyr/U6EkJp2LUP4WlnGdTXdC/ii/2ALZZ2D9M
kyda42fTv3EryJXApdw/HgPEkwSe1r/kZeSAoLbcPwnBYH5vqta/VqAAbIDH
3D8uhZrV2LbWvzoVOUJA6dw/eq1xxqbP1r8C/6nuvyzdP3OEjJkvAde/ktKL
R7+z3T/+iMFE9GPXv7J5T/m9wd4/+eh2r0Mo2L8ktGvkndLeP8kr5IN6NNi/
lu6Hz33j3j8kmompr0DYv3pjwKU9Bd8/VwwY5RRZ2L9CTTFSvUjfPxRehwXL
idi/0yATq7zP3z/ftzMu5erYv0ZbL5ac4N8/9XKOsAD32L+4lUuBfPHfP6Fe
m3YaA9m/TgXCK54J4D85eG7KSBvZvzJ6+gFeK+A/oU9zeZBL2b/6Y2uu3W7g
PzXDKjnLq9m/YBHzeLx24D+Frng0/LbZv8W+ekObfuA/vPySoSvC2b+QGYrY
WI7gP7oFeM6F2Nm/9sYRozeW4D/VnuiMsOPZv1x0mW0WnuA/fFdxutnu2b8n
z6gC1K3gP6DuF2AnBdq/jHwwzbK14D9kbdzWSxDav8k901MdueA/sscQeCEV
2r8Nvken
          "]], LineBox[CompressedData["
1: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
q2ydMeT27GDqbVWCdUMZM87w//0fa46Y0g==
          "]], LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAp11P/7PzBECqxxB4IRXav7gDaDr8
9ARAInSfTt8N2r/k6COYIvcEQFOAmxqyAdq/OrObU2/7BEBw7QsRUunZv+ZH
i8oIBAVAIup1kHu42b9iS2AgJQYFQCiP1lp6rNm/3U41dkEIBUBi7LVbd6DZ
v9RV3yF6DAVAaSBJBGyI2b/CYzN56xQFQOSWMghAWNm/nX/bJ84lBUDIfgKX
k/fYv1S3K4WTRwVAsECBtu402L/DJsw/HosFQGmhPZCkqta/agimBCEJBkCw
oxPRfrrTv7egJD3DkQZAv6K7K2910L/OOzzFUhEHQAP0c9Drrcq/+GqbU2CO
B0CPoWTDnXbEv8hQn1UNFghA6ATGMXxEu79iOTynp5QIQC49dhRJ06y/ae3N
9dyWCECWA9C9KWCsv3ChX0QSmQhATGyxPQjtq79/CYPhfJ0IQIXeIeS+Bqu/
nNnJG1KmCEAzTGHBEzqpv9Z5V5D8twhA6GoZa2Ogpb9KunJ5UdsIQLjd+uCv
15y/UW4EyIbdCEBLXv/YCPGbv1gilha83whAPxQDsF8Km79nirmzJuQIQKuL
VEEHPZm/hFoA7vvsCECuHD/dP6KVv776jWKm/ghA6no/t8zYjL/Frh+x2wAJ
QJLGqwFLC4u/zGKx/xADCUCUapg8xz2Jv9vK1Jx7BwlAr3maELqihb/4mhvX
UBAJQHcdvxMa2Xy//06tJYYSCUAnj9Zh/T15vwYDP3S7FAlAah+Uw96idb8U
a2IRJhkJQBTur7Y52Wy/Gx/0X1sbCUA/bhM89KJlvyLTha6QHQlAAvLhNlrZ
XL8qhxf9xR8JQIem0YWT2Uy/MTupS/shCUATPqS6yRpsvg5lLEY=
          
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.4077437702859919, 0.4077437702859919}}, {{
         0, 3.141592653589793}, {-0.4077437702859919, 0.4077437702859919}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]},
    {
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.40824824512832186`, 0.40824824512832186`}}, {{
         0, 3.141592653589793}, {-0.40824824512832186`, 
         0.40824824512832186`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlGs0lAkAhoVSTh23rC6OpZJEkVLb9S2VSqWiLZUVU2yF0NpCctmUS47L
l5GSW3ZcogiNKY0ZziBtLmUw3wzNN4NCmvkql8x2WfvjPe95znl/PT9eM0aA
i7e6mpqa+1T+bw2edmuffdAWiwAPcE3FMB+q3Why8wBGXF2EhKEYqnKb0yRx
EgtM1Tp8tMUYmHvmC5sIQGHSNl3tURJix5h6FhGJGq1zWZubSHSeJCyyiGRo
DhtkHvMn4eI3X5xB5KDykEhxliNC6if3ynSiDAGR3tn6Tt3Y2OCk7fAHH62C
uiaBsRCBYc5elYHPUTCcv/Wa7iv4c7yT1Be3467acq25M15COLhnViFDiFJX
yvTi7gYk2IyrsY+JUFwt6TvdzkWQ1XMmn9WDHTtZMwQ1Zej37o/KZfdgsvEL
X7y/DEdy1fyimnpQ7WTtrJQ+xAbD9Q5bh3pwOV7wQ0/zIdR/FCt41r1wDXvK
3LKvFMTrG7t4lb3woNZu3thThIrQA5PcujfQblRpflHlYUmVb3/W6zc4f9xy
pDsxD+mK2LYrfW8wpTaTbZKHsFN81ubpUvBv7zwf6JALh/2rXLi7pTC8ufLq
A4MsdJgalDxrkyKuMDRryDYdjids0u9SUqwKKkuKP8wEh7k3OvyjFA0GuzSX
haTBeXq9VfYsCh25/U88eQTswlTTPKwoHC1lT1zLTILqlO/D3vMUVitMrpcL
o+Cp9znk2UUKBSm/18suRKChNmx7ZgQFxhydPM9Nl5EyP0HklkSBFyDOPtYW
jPFGvfx16RQqFkSZCTOC4B582/+nbAqlS5wtMgV+sGgrUhc+oHBudNT+i/Ak
EsNtWyoeU2ANPJV3qlzwyZJzK5VL4fKAZ0HzX7/ArRuMwAYKqVLOk4aBDaiN
abI+0ELhaqrrm7Sbrlhid2BiRSeF9Ij4ZMlaT8RLu+pm91LIEXdUvc/3weEN
b4+8GKHgWKzD1+AF4ek7f7PiUQqbtJJs4seC8TNz7H3sVwpuHleOz7EOwbBS
M3rnbBmS3EsW6t2OQDRrcQnfSoZDwfP8o55cw0Ndrx/sczIcXKQIYO5Jxdza
wWbmBRkcb2kNWBkRCPUNTAsOk8Gr79u2un4COxojLe0SZMiYrI8ejEyD5HK2
64NiGQzpqGcW7FuY+U5SmD8owxqtnM0ei7LB4B45mOIjB0Oy0P5+OAt27Hn6
8wPk6K/hbJs2woJ6mbgj75IcWbtW8I6cKMC9XI+jlXFyvOfSI1/XF0J+1cej
674cZyxs1tpPFIHhdNHPWCmHLdeTcA4qBaObGVd0qQ81QZzY8UePcOqjkM+P
68f4cSOn5FwOEm2rAwquv4XlDcvwjtp6qPOr18WEDYLQ8h9XqZ5Db/neVmnG
MMSzdLZV5bdhd45DPk2MoMau+i56X8NI+dIxslqBO9nmJ20Mu5CRyvMa4inw
rV9efc+sC/PWVIS7PlfgzyJZ3NyVUxx6q8KCVGBfvl3KZ8cuLNBgmLSrFGDu
0DPOCemCidHEmOkWJf6ZTD1TIunCUpix6gVKOEtFIiK3GwUyA751ixIue/VS
O0q7sTRmhiS9c2r/fV2B/pNuWDS/1/V9q4TA4UPfjVfdSLM8UTtLk0bii93M
c+oipFeaL68wp1HnVK4vOiXCnaan0zTO0mAIOEx/cxI0VR6q9KPBfZyWUWRL
Ypeq4KMkkEZ7Sq6RfCOJUeubsqoQGnZUWuxBFxLOhG+dTxyNWC0d44WRJP4u
8VrvmkjDuCnuw54EEv8Kjj5CCo3TCa32l5gkiia2583LoJE3OGdZSwkJ9d+M
o18U0hh6mRzlIyLhdlF/kl1Co6Pl7lhcH4my5JlB+WU0WjqNeooVJGYUfx9M
rqRRnvLr6uZJEu71o57h1TTc6u+r3mqKUSEZFp2poVHh6LdKQ1eMDDe1xnVc
Guwm3RCzqX/+Dxgx+Eo=
          "]], LineBox[CompressedData["
1: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
TIc=
          "]], LineBox[CompressedData["
1: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
y19pbbnoEHkAGler4f8RUshc
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlGs0lAkcxoUop06uq4tjqSRRpNSW9C+VSqWilcqKqWyF0Fq5FTblkuPy
ZqTklh2XKKLGoPEfzqDapDKYd4bmnXHJrZm3kstsl7UfnvOc3znPp9+Hx5QR
6HpGVUVFxXMm/7caar3qswveah7oBVwTEZoNN9gb3zwIY26uAsJAhMpK69Mk
cRIWm6h0+GqJcED/7BSbCITilO3aWuMkipzimlhENNRrns9xaCWx8yRhnkOk
gvqIXvaxABJd/ReJsog8qD4slJ/jCDH9k2d1JlEBgdFncnWdu9G+2VnL8Q8e
vOI3tvKNBBgU4eJTHfQMikYKt13TfoMBnDMpqstew12VVZr6Gi9RMLR3bjFD
AOVulEnonmZMsp5QYR8TQmmNuO/0ay4GWz5j8lg9sHMXS4NfX4H9Z/pj8tk9
MN0yxRMdqED3fBX/mNYeqHG2clFIHuJmg02O24Z7IDKR/0NH/SGq/iiVo1Uv
uEXUMbfuL0fi7Y3dWN0LXtQGB/ueEqwKPzjNbXwHWi1K9SllAS5/7Nef8/Yd
XDhuMdadXICZ8vj2y33vYEZtNtu4ACNO8VgOsyXAu73rQpBjPjoeWOvK3SMB
g5trrj7Qy8EOE72yp+0SSCgOzxm2yUSnE9aZdykJrA2uSEk8wkQOc19s1EcJ
NOvtVl8ZloEus5ssc+dS0JHfX+uNBNpGKGd5WVJwtJw9eS07BZWn/B72XqBg
ndz4eqUgBr11Poc9DaWgKO33JunFK9jcELEj+woFjPkLCry3RGLaoiShRwoF
GCjKPdYeghMtOoUbMymoWhxjKsgKRs+Q2wE/5VJQvtzFPJvvj+btJaqCBxSc
Hx+3mxKcxOQom7aqJxSwBupknUpX/GTBuZXOpSBywLvo+V+/oEc3MIKaKUiX
cGqbBzZjQ1yr1cE2Cq6mu73LuOmGy20PTq7upCDzSmKqeIM3Jkq6Guf1UpAn
6ng8WuiLRzYPur8Yo8CpdAFPDYOx7n2Aaek4BVs0U6wTv4Tgz8wvo/FfKfDw
unx8vlUYjijUY3fNk0KKZ9kSndtXMJa1rIxnKYXDIQsDYmqv4UNtnx/s81I4
tFQeyNybjvoNQ8+ZF6XgdEtzwNKQwHC/oIyQCCn49H3b3thP4M6WaAvbJClk
TTfFDkVnoDgy1+1BqRQM6Jin5uxbOOe9uLhwSArrNfMcvJbmIoPrfijNVwYM
8RK7+1EstGUv1F0UKIP+es72WWMsVK0QdRRckkHO7tXofqII7+V7Ha1OkMEo
lx77uqkYZVd9vbruy+CsufUGu8kSZDiH+hspZGDD9SZcgsuR0c1MKLnUB/XB
nPiJR4/w1EcBj5fQDxPHDZ1T8zmYbFMTWHR9ECxuWER1NDShKq9mY1zEEBCa
ARNK5TPUWbXvlSRrBERzF2x/XNiOe/IcC2liDOpta+5C71s0VLx0iq6Rw51c
s5PWBl2YlY4+wyiHb/2ymnumXbhwfVWU2zM5/FkiTdBfM8Pht6rMSTnsL7RN
++zUhYvVGMavlXJg7tQxygvrQmPDyS8mWxXwz3T62TJxF64AU1YTXwEuEqGQ
yO/GIqkez6pNAa77dNI7yrtxRZyGOLNzZv99Y5FubTeaPx/V9htUAN/xQ9+N
N92YYXGiYa46Dckv9jDPqwoxs9psVZUZDY3OlbrCU0K801o3S+0cDQw+hxlg
RiJNVYYr/GngPsnIKrEhcbey6KM4iIbXafmGMnsSx61uSh+H0WBLZcQfciXR
hfBr9E2gIV5zgdGSaBL/LvPZ5JZMg1Frwoe9SST+yz/6CNJoOJ30yu4Sk8SS
yR0FC7NoKBiav7KtjETV34xiXxTTMPwyNcZXSKJHqO40u4yGjra7XxL6SKxI
nRNcWEFDW6dhT6mcRI3S70Op1TRUpv267vk0iZ5N495RNTR4NN1XDqqLsEo8
IjxbT0OVk/9aNW0RZnmotGzk0sBu1Q4znfnn/wAd3iZZ
          "]], 
         LineBox[CompressedData["
1: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
tp/YPrVkM0GGHB2erDL7//tfhsyDBw==
          "]], LineBox[CompressedData["
1:eJwVUns41Pke/o35DjMu56SYlBCt6Wifra1Yhx3m02WfZu0eKylSGmTOavS4
xDrLkdaKTOIQ2QqriaXaGsus5NZHOcK45OQy85uhCzYquXU31Jn9433ef97L
87zPax8a5Ss2oCgqRI8/2a/tV9+1/6XgW6X9h5olGizl7pWtvEOBdgUVf4Wl
wTmx4YxZOwXq8cfBxfM0bqlReDKUFLgGJTdnT9OYQ0KyXnZS4FMfeSZ5jMb1
pQ3rtHcp+OaiTra3h0bJw2jxJRUFDmkuAYsyGkcCtZqt4xTMNs906YQ0mnr4
VwQ/oeBKt6jjEZ9GF7u+2ORn+vxqGePOpzRmjCpN66cpKJ1gOEmtaNxwuN5z
41sK6txeS+bH1Zh09NxFOw4DSmt5idJ0NVpe8JcsrGOARtiCotsqFP7R964m
kgEJp95a27gM4vdHxOHc5wxYdvbQ3AlBH3pfL/TixhtAmDIrNeDpXZxakCQx
XxtAUPr5JLOyDpSpUn6PjGWC5aTQNjCsBefDPYITdEw40tfWXLykDr0a1sF3
i0wY9hUbrx2+gYVmVqtjPjDBauJ0l/zyDeRXzz0IZxJIKt7RVrf1BibrKkQB
JgR2hjRNNcXVIjN7qcjVmsAusX9niroGTRXjQa/cCXzhf/mZWUk17mcNeMzy
CThdnZEcjqjGa/63bZ57Egi04bd3uFaj90LR8NhWAlJWnlNKbxXmfOEb1O9F
YFnu+ocjjCq0UDfuVwQSyOlK6XjSLkebxdx9MYkE7Nt8lvftvITCkX/U/ZRE
gBFbserXRxUY18ZZfjOZgK93YnhKTAUqc1PuGacSqBfoXvwttxzjeTFflmUS
eBMraArrLcPeb3xcVUUEaljaDQXeMtQ5m55Z/JmA8p9uh/bcv4C8le1za2QE
9p1qkFhGXsCkMYE8+hcCCoON3XbWJeiUsMHRWE7glTTyy+mzhfjjxb8s80AC
T0SKXzbl5+O1E8rog7cInNcMXc9T5KH6cHqPtIXA0FLlvhf3TuN61/fSwTYC
vWv7ZHLzXNR2PqeiewlIePUdn9hmomHV5QMF9wgE99/6fWi/FDcViBsb+/X7
bRtVSgtPYEbw8L84NIFtUYL5+1bH0flV19TFRwQWl02PzvISUaTJ+LpjlEBB
Tfdxt7J4PInbr0z/QeC3PZapx+xjsaaMYnMnCBg1BwoyPKLwobRRzH9KQF4x
/9lf/x6OJlHft4ROEsg7TUfmbwrBz/yc7aVTBPJ/zvrfp4F+GOo2k1w5Q2CS
ynYe5rthlu3VoYE5/T+MqyqNpz3xBjPcfeGlvu+WAbfxzm4cm1hz1uENgdL/
NL+mJ0LQXVG4K0qn92+2ieh+EYWPd2Qq2YQFkiA/LyVJxtCvglc7GrLgk1LX
kuyGH3DY2yV+C5sFFkKr6etxP2L/7gf2iaYsMC46eoY5noa3D25OeGbBglUr
jWTSzlNYfEy7tseRBWMtCU+5XmfQr/bjtLwdLGC/s5rDDBm28LoEtpksKMjI
HCFfV6KEXU7sOYYwEbpnJDWqEWsvfOTRkmsIa3IPVtZzW7Hnc36rr7kRTAV4
CkURnfhWUrgrONsIbJ/Nxo3c7sV2n5LdZlw2RGx5LNhG9ev34VdU5LPhpkPn
9sXZQTz0vPvVUAEbPlrz09zs+0GMlom2Lz3HhsrT9IMxExUe46Q+Sipmg/e5
u3GtjiosojusfcvZcKBp4nDMXhUOJvjnLNSyYTz3eF1sswq96o8k7NSy4Y3O
/cnKLDXujCTt6cNsMDFeVTJwTo0BDgXcxgds4Fk6fpddrsZvT9YpeGNscFb0
HJ1HNR4PpKZ0k2zwNxE/bphT4835rNDy92xI8xLwR/1pbJXbVWkpDrgcLfnh
WBiNXaFVH5YwOXCp+vrAihgatcr+on8bceAac7NceJLGt+etVT5LOCA8K13M
bqTxg/c1x/SlHCjY3HbVuoNGQ6YgrsGCAzHh5uLyARotIkLNeSs44CV4N1kz
RaO13UvRPmu93lxe766j0aEvTZ5jw4GN94uzmow0uO7E8sVWO31/cX+Yp4UG
N35++SudPQecog4ImlZr8P/KUfjc
          "]]}, {}}, {{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      Method->{},
      PlotRange->
       NCache[{{0, Pi}, {-0.4082482451283221, 0.4082482451283221}}, {{
         0, 3.141592653589793}, {-0.4082482451283221, 0.4082482451283221}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.5973526320630207`*^9, 3.597358391754456*^9, 
  3.5973584231032495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"d", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", "srcRange"}], "]"}], 
        "]"}], "-", " ", 
       RowBox[{"N", "[", 
        RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"srcRange", ",", "1", ",", "255", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5973460721728163`*^9, 3.5973461013404846`*^9}, {
  3.597358776423458*^9, 3.5973588033569984`*^9}, {3.597358907724968*^9, 
  3.597358978440013*^9}, {3.5973590414136143`*^9, 3.597359049741091*^9}, {
  3.597359082981992*^9, 3.597359163001569*^9}, {3.597359193702325*^9, 
  3.597359207197097*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`srcRange$$ = 1, $CellContext`\[Theta]$$ = 0,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Pi}, {
      Hold[$CellContext`srcRange$$], 1, 255, 1}}, Typeset`size$$ = {
    519., {20.125, 25.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$637752$$ = 
    0, $CellContext`srcRange$637753$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`srcRange$$ = 1, $CellContext`\[Theta]$$ = 
        0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$637752$$, 0], 
        Hold[$CellContext`srcRange$$, $CellContext`srcRange$637753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[N[
           $CellContext`d[
            $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`srcRange$$]] - N[
          $CellContext`YAB[$CellContext`\[Theta]$$]]], 
        MatrixForm[
         N[
          $CellContext`YAB[$CellContext`\[Theta]$$]]]}, 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 
         Pi}, {$CellContext`srcRange$$, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{564., {79., 84.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5973592087651863`*^9, 3.598099879688583*^9}]
}, Open  ]],

Cell[BoxData["]"], "Input",
 CellChangeTimes->{3.597359173543172*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597782548459406*^9, 3.5977825515414343`*^9}, {
  3.5978679287992573`*^9, 3.597867932875432*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       SqrtBox["3"]},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597346046030321*^9, 3.5977825521061087`*^9, 
  3.5978679339186974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#1", "==", "0"}], ",", 
         RowBox[{
          RowBox[{"-", "Pi"}], " ", "\[LessEqual]", "\[Theta]", " ", 
          "\[LessEqual]", "Pi"}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
    ",", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.59784090462996*^9, 3.597840918653735*^9}, {
   3.597842530167472*^9, 3.5978426171789703`*^9}, {3.597842648058074*^9, 
   3.597842648349503*^9}, {3.59784287916609*^9, 3.5978429000543127`*^9}, 
   3.5978429463428097`*^9, {3.597843016060707*^9, 3.597843044703567*^9}, {
   3.597843077724524*^9, 3.597843083091751*^9}, 3.597843183385046*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", "}"}], 
      RowBox[{"{", "}"}], 
      RowBox[{"{", "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "6"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "6"]}], "}"}]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox["\[Pi]", "3"]}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}], "}"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "3"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}], "}"}]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597842900945286*^9, 3.597843046930542*^9, 
  3.597843084209511*^9, 3.597843184271803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maskPos", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", ">", "0"}], ",", 
          RowBox[{"0", " ", "\[LessEqual]", "\[Theta]", " ", "<", 
           RowBox[{"2", "Pi"}]}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
     ",", 
     RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskNeg", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "<", "0"}], ",", 
          RowBox[{"0", " ", "\[LessEqual]", "\[Theta]", " ", "<", 
           RowBox[{"2", "Pi"}]}]}], "}"}], ",", "\[Theta]"}], "]"}], "&"}], 
     ",", 
     RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"maskPos", "[", "\[Theta]", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"maskNeg", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.597843222068576*^9, 3.597843225426893*^9}, {
  3.597843288882839*^9, 3.597843304098762*^9}, {3.5978434827735786`*^9, 
  3.597843557881648*^9}, {3.5978442241098127`*^9, 3.597844240716446*^9}, {
  3.597844281274*^9, 3.597844304412792*^9}, {3.597858415371831*^9, 
  3.59785842100244*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "6"]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "2"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{
       FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
     {
      RowBox[{
       FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "3"]}], 
      RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
       RowBox[{"2", " ", "\[Pi]"}]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597843554786337*^9, 3.5978435590158377`*^9}, {
   3.597844283685298*^9, 3.597844305437006*^9}, {3.597858402889884*^9, 
   3.597858422634592*^9}, 3.600426870126684*^9, 3.6061155849935923`*^9, 
   3.607415904960878*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"False", "False", "False"},
     {
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox[
         RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{
       FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"]}], 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "6"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
        FractionBox["\[Pi]", "3"]}], "||", 
       RowBox[{
        FractionBox[
         RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]}], 
      RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "3"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597843554786337*^9, 3.5978435590158377`*^9}, {
   3.597844283685298*^9, 3.597844305437006*^9}, {3.597858402889884*^9, 
   3.597858422634592*^9}, 3.600426870126684*^9, 3.6061155849935923`*^9, 
   3.6074159049663563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"maskPos", "[", "\[Theta]", "]"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597843608415818*^9, 3.5978436521528*^9}, {
  3.597889540281514*^9, 3.5978895467835817`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.05026548245743669, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}}, Typeset`size$$ = {
    173., {19.625, 25.375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$117529$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$117529$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[
         MatrixForm[
          $CellContext`maskPos[$CellContext`\[Theta]$$]]]}, 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{246., {65., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5978436299726267`*^9, 3.597843653184766*^9}, 
   3.597889563313673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABpos", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "#2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"#3", ",", "#1"}], "}"}]}], "}"}], ",", "0"}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]YABneg", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "#1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"#3", ",", "#2"}], "}"}]}], "}"}], ",", "0"}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59784371846437*^9, 3.597843726152996*^9}, {
   3.5978437666913023`*^9, 3.597843844167652*^9}, {3.597844004557733*^9, 
   3.597844024755147*^9}, {3.597844134842841*^9, 3.597844148567986*^9}, {
   3.597844180349573*^9, 3.597844182986196*^9}, {3.59784435211915*^9, 
   3.597844438136723*^9}, {3.597844485713447*^9, 3.59784451921074*^9}, {
   3.597844561583799*^9, 3.5978445620455112`*^9}, {3.5978446474678383`*^9, 
   3.597844647948608*^9}, {3.597858482287752*^9, 3.597858632156273*^9}, {
   3.597858685615637*^9, 3.59785874127633*^9}, {3.597858777064166*^9, 
   3.597858812595772*^9}, {3.59785886907635*^9, 3.5978589674323*^9}, 
   3.597859321247953*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox["1", 
              SqrtBox["3"]], 
             RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
             RowBox[{
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "2"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
             RowBox[{
              FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
             RowBox[{
              FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597858813622283*^9, {3.597858916617807*^9, 3.59785893373429*^9}, 
   3.5978589732813463`*^9, 3.59785932234354*^9, {3.600426857445519*^9, 
   3.600426876357332*^9}, 3.6061155856156273`*^9, 3.607415905148456*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "2"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
             RowBox[{
              FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "6"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox["\[Pi]", "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]},
            {
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
               FractionBox[
                RowBox[{"2", " ", "\[Pi]"}], "3"]}], "||", 
              RowBox[{
               FractionBox[
                RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
               RowBox[{"2", " ", "\[Pi]"}]}]}]},
            {
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}], 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
              FractionBox[
               RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597858813622283*^9, {3.597858916617807*^9, 3.59785893373429*^9}, 
   3.5978589732813463`*^9, 3.59785932234354*^9, {3.600426857445519*^9, 
   3.600426876357332*^9}, 3.6061155856156273`*^9, 3.607415905156328*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5978797273913717`*^9, 3.597879733548462*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]], ",", 
             FractionBox["1", 
              SqrtBox["3"]]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597879734936338*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{"\[Pi]", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", "0"}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{"0", "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}]}], 
          "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}], "-", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], ",", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]], "+", 
              FractionBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597879734939929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{
    RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{
    RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597859232935964*^9, 3.597859285347989*^9}, {
  3.597859380831429*^9, 3.597859396840639*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597859287772705*^9, 3.597859327007152*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", "0"}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"0", "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{"\[Pi]", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<",
           "\[Pi]"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox["\[Pi]", "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "6"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "\[LessEqual]", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "-", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "\[LessEqual]", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
          "\[LessEqual]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]]}], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             SqrtBox["2"]], "+", 
            FractionBox[
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             SqrtBox["6"]]}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597859287772705*^9, 3.597859327013344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "[", 
  RowBox[{"[", "All", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5978622133455057`*^9, 3.597862219541812*^9}, {
  3.597862299691298*^9, 3.597862301882668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.5978622203595877`*^9, 3.597862302627359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABExtrema", "[", 
   RowBox[{"\[Theta]_", ",", "form_", ",", "idx_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"PiecewiseExpand", "[", 
     RowBox[{"matrixForm", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"max", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Delta]YABpos", "[", "\[Theta]", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"\[Delta]YABneg", "[", "\[Theta]", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "]"}], "[", 
       RowBox[{"[", "idx", "]"}], "]"}], "]"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"max", "\[Rule]", "Max"}], ",", 
     RowBox[{"matrixForm", "\[Rule]", "form"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "All"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.597859232935964*^9, 3.597859285347989*^9}, {
   3.597859380831429*^9, 3.597859426575728*^9}, 3.5978594682253523`*^9, {
   3.597859529743981*^9, 3.597859538437546*^9}, {3.5978595701659307`*^9, 
   3.597859579501873*^9}, {3.59785984125247*^9, 3.5978598926365128`*^9}, {
   3.597860560197558*^9, 3.5978605962104607`*^9}, {3.597860644263948*^9, 
   3.597860681919763*^9}, {3.597862226179043*^9, 3.597862329777371*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {"0"},
             {"0"},
             {"0"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SqrtBox[
                   FractionBox["2", "3"]]}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                   SqrtBox["2"]]}], "+", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]]}]}], "]"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]", 
         "\[Pi]"}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SqrtBox["3"], " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              FractionBox[
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
               SqrtBox["6"]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]]}]}], "]"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", "<", 
         RowBox[{"2", " ", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["1", "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "-", 
                    RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], ",", 
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}]}], "]"}]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "\[LessEqual]", 
         
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["1", "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "-", 
                    RowBox[{"6", " ", "\[Theta]"}]}], ")"}]}], "]"}]}], ",", 
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}]}], "]"}]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]]}]}], "]"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SqrtBox[
                   FractionBox["2", "3"]]}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                   SqrtBox["2"]]}], "+", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]]}]}], "]"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]], "+", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}], ",", 
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], 
               "]"}]},
             {
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "3"], "<", "\[Theta]", "<", 
         FractionBox["\[Pi]", "2"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  SqrtBox["6"]], "+", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}], ",", 
                RowBox[{
                 SqrtBox[
                  FractionBox["2", "3"]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], 
               "]"}]},
             {
              FractionBox[
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
               SqrtBox["6"]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "6"], "<", "\[Theta]", "\[LessEqual]", 
         FractionBox["\[Pi]", "3"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                   SqrtBox["6"]]}], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  SqrtBox[
                   FractionBox["2", "3"]]}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], 
               "]"}]},
             {
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
             {
              SqrtBox["3"]},
             {
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                   SqrtBox["6"]]}], "-", 
                 FractionBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  SqrtBox["2"]]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  SqrtBox[
                   FractionBox["2", "3"]]}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], 
               "]"}]},
             {
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SqrtBox["3"], " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                SqrtBox["6"]]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           Column], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.597862320163498*^9, 3.5978623302943983`*^9}, 
   3.600426828947691*^9, 3.6004268977546864`*^9, 3.6061155909919353`*^9, 
   3.607415908609042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.597862348633926*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         SqrtBox["3"],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.5978623497859364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.597862365972543*^9, 3.597862366459293*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
          ")"}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
          "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "\[LessEqual]", 
         
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["6"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597862368005928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"\[Theta]", ",", "MatrixForm", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597862438921811*^9, 3.597862439400033*^9}, {
  3.597862900744207*^9, 3.59786290206735*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox["0",
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", 
          RowBox[{"2", " ", "\[Pi]"}]}], "||", 
         RowBox[{"\[Theta]", "<", "0"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
         "\[LessEqual]", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["2"]]}], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", "\[LessEqual]", 
         "\[Pi]"}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
       {
        TagBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            SqrtBox["2"]]}], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
       {
        TagBox[
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           SqrtBox["6"]]}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597862440879546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "1"}], "]"}], ",", 
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "2"}], "]"}], ",", 
    RowBox[{"\[Delta]YABExtrema", "[", 
     RowBox[{"\[Theta]", ",", "StandardForm", ",", "3"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5978630440257063`*^9, 3.59786305574687*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            SqrtBox["3"],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
            ")"}], "||", 
           RowBox[{
            FractionBox[
             RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
            "<", 
            RowBox[{"2", " ", "\[Pi]"}]}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["6"]]}], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          TagBox[
           FormBox["0",
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", 
            RowBox[{"2", " ", "\[Pi]"}]}], "||", 
           RowBox[{"\[Theta]", "<", "0"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               FractionBox["2", "3"]]}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
           "\[LessEqual]", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", 
           "\[LessEqual]", "\[Pi]"}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]], "+", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{
           RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               SqrtBox["2"]]}], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
         {
          TagBox[
           FormBox[
            RowBox[{
             FractionBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              SqrtBox["2"]], "-", 
             FractionBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              SqrtBox["6"]]}],
            StandardForm],
           StandardForm,
           Editable->True], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.5978630202712793`*^9, 3.597863056474147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]YABExtrema", "[", 
  RowBox[{"0.2", ",", "StandardForm", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.597863146887295*^9, 3.597863172770954*^9}}],

Cell[BoxData["0.800221009888911`"], "Output",
 CellChangeTimes->{{3.597863147368678*^9, 3.5978631737024317`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              SqrtBox["3"],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
               RowBox[{
                RowBox[{"6", " ", "\[Theta]"}], "\[LessEqual]", "\[Pi]"}]}], 
              ")"}], "||", 
             RowBox[{
              FractionBox[
               RowBox[{"11", " ", "\[Pi]"}], "6"], "\[LessEqual]", "\[Theta]",
               "<", 
              RowBox[{"2", " ", "\[Pi]"}]}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"11", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["6"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox["\[Pi]", "2"], "\[LessEqual]", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "6"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            TagBox[
             FormBox["0",
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", 
              RowBox[{"2", " ", "\[Pi]"}]}], "||", 
             RowBox[{"\[Theta]", "<", "0"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 FractionBox["2", "3"]]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"4", " ", "\[Pi]"}], "3"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               SqrtBox[
                FractionBox["2", "3"]], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox["\[Pi]", "3"], "\[LessEqual]", "\[Theta]", 
             "\[LessEqual]", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "<", "\[Theta]", 
             "\[LessEqual]", "\[Pi]"}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "+", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{
             RowBox[{"\[Theta]", "\[GreaterEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"3", " ", "\[Theta]"}], "<", "\[Pi]"}]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 SqrtBox["2"]]}], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            RowBox[{"\[Pi]", "<", "\[Theta]", "<", 
             FractionBox[
              RowBox[{"4", " ", "\[Pi]"}], "3"]}]},
           {
            TagBox[
             FormBox[
              RowBox[{
               FractionBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                SqrtBox["2"]], "-", 
               FractionBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                SqrtBox["6"]]}],
              StandardForm],
             StandardForm,
             Editable->True], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597863191772518*^9, 3.597863284166863*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQzbyf69xj00a7VT4RL6q2/bYPypG8NWPSensYf+Kn
mM3TJu2H862PenE5FV+A8wuq/BI3F9yA83N3pPYxKT+A81OLdS2CDiL4V154
ci5PegLnd+l/Y9gW+QLOL9Q+MfXA0jdw/q/k7HV38z6gmYfgJ+0NC5iQ9gnO
T/545cCBji9wfo/B9vxlbd/gfKYD281bqn7A+RK6LiG/FX/C+YJa3ufuz/gF
53vMd1r8YdIfOF/8/Rm3+u3/4PxZx3cxMmcyOKC6D8G3kXX8r5DCCOdrPxB4
UlvCBOevXSGUsbWIGc6vuRd7WbuNBc63v2BxbNlHBL/QxsJ73hRWOP/XfJek
1xPY4PwLBbMSyhexw/mW7kr/7i7kcED1Lyecf9LVcoXDHAR/6caZlo9Wc8H5
oso6WXErueH8S4wcTZJ7eOD8T53+j/yDeOH8rRzFyy6cRPB1RAWyko7ywfnv
+76JGF/jh/OV29v187ME0MIPwX8UdfuW03ME3+Pp5Z9b8wTh/Iqi1Ayxtwi+
37bZXmJlQgj3KhrX19xE8N/9yaph/obgL7zeuCWvWBgRnhm2CZW/EXzZvxOj
C6tE0OIDwX/m3n2Kg0UUzj+sdsZerhvBz+JYxqLIKQbnb1+gYnt4IoK/us6O
9yKnOJx/ztrmaJAggv8ja3ZwQh+CfyJgfiivmAScn2Rps3z5FATfa1dRZeBt
BN/QeqX3b0VJOB8A7xj+MA==
      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwV1Hs0lAkYBvBhZeWyacltRSWXqFRjosgzUSptKt0cM9LWSmrJ6OJEaSsy
3chIiy4otwqNkGHcsiZD1splGveRzMz3NW0ubSW72W//eM9zfue857zn+eed
v/+ob5A6jUZjUfN/flOr3TrMOOeuvlg3vHoeCWuixtUiORAhx7U8Kil/4Tv+
3M07CpNLDAGfcvFHdM0uisTWqpT2TMojhoc+P+WdRZRqcdJlyldNxXpFwguw
iqV9CKWca8fOoBXFgxZlPOVNuc55dNmOzCuQb4vKnU+5xyu2PoeXiGZj+scx
S+qeva796fok/B6yhRRSjl8hicgRJmM6VHL+LGXD1ZnC1tIUNL7qq3WjnLX2
sMbnwt9wSh6eNWFBYukmpy3z89JwLijbNpuycNvXFO/MW2AXXPb1odwVyLO9
w8tAwqOGm4lzqT70pS7DokyoWr34NpQjnZP7IuuzYH5dGlZuTkIDAdZZwvuI
E6X2in4g0exR38QQZMNbQ/2yJ+UkL9uw5tIcqE6M9leakbDwGXs6UZgHxqXh
kzdNSbzZvpvFfZgPnZ2OVV9MSDzaJZw2z3uAmdkJeX6UXQLiNnplPkKFjS1H
zZiE7y+mPam8x9jI5XRqGpLQdUHtzQ18nImmbXUxIDFawZk9JOLDtnEm58D3
JJ5WS8pO1BfDwIFdkKtPwlOU+fWusAQm4zqaQ7okbDZ0bCNWlaI7J6x+UIeE
dtOM+3RBKWJYc+yk2iTaWg5vEJeW4dP4stEyLRIBnU7XxwrLUeWmGW2tQYK5
O/i162IBGm8Pc8fUSSyUpjldfCjA0f3LPcrVSJC9X6VmeRV4nLpd4DhNIHJY
PH9dphAL1h8Qdk4SSBpnl9zk1YKv9Ufw+3cErs1Jd6vTqwOTdSKLriLQXhxn
yfCtw1zFp/BwkgCLZI9Y9NbBjsbr6JATCGPpcMZVz6BiVpetHSRwY80hbpp+
A8TLp0IqWwl0d+848t2uBlTXBXtwWwhYnITPhbQGvI+qrvBpJpBXZGQYukAE
R/sn8SIRgUpLUQbT6Tl23TMq8a8iMKi2oFyxR4yppcFDVvkEFt7VS2ffFsPf
IHAyOofAodWTp1/KxKgNOCJsuUdgPKLNQxjShPiLXUy/OwQ03sS0JkQ3I9Ht
w0FjHgH7570jjIwWNJ/3f7UyioCryFvb41gbNPL3hdHWE9DvzP3TObkN3tFM
u4K1BN68Vk9ZUtKGcdualO3uBBJoQkvTiTbQ9d4lXHIm8NrVgTEa8RI+w/LZ
RYsIcJ/o7Lsb0Y5dfv1zm3UJSDJayr5wOiHkBVTtbFXiUZFd9GhSJ+y5pnku
zUr8Wh3LlBd3wnnBmgNGz5VY1Ov24uVYJ5aH9e2orVbitFGhLJ/TBfWGCnpj
gRJW167p7OFI0Dqk6nt8SYnwKJ+fSsKl4C7i3FG5K+Ed5pavdV2KLVWGLOvV
1P5++/cBj6UYWWHl7cdQQrJJ84zWX1JUJ5g/K3BQYo1pTWrAkW7MsZ9N1zdR
QluwpO3bgz1wuDtrWf17BXL+1gWb1Yf7YmfL3nQFYogvccVRfXD1FAeyUxTw
61e2aKb34c2Qx+SrRAV0RQ3+xdI+dGl7uNXEKhBx4/RJzd390PVssN0QpgCT
rirkbxtAXZFNw2amAma2PR9mhA8gJOZfp2OrFZgwE7uyEgcw6xnXMMVJgVz1
7KYZrQPQnLfXWmyngF47a8R/8yCS91aUvdVXIFQQlKBuJQNdwuhYJJNT/2X7
PDUnGeQ71dZFdMsx2u32ZHqdDFP2Gp6l7XIcnzKQ/HNQBq+RHycWiuRYeXU6
eCpSBqkkKH9HjRyfzN9OTnJlOL6KPRFdLoegUHLlc5oMNWYWkjt8OaLc6+d+
eijDx923fCseyLFE69RRJV+G4AnmC588Of4DO5bbBw==
      "]], 
     LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
mfA/MVWdcA==
      "]], LineBox[CompressedData["
1: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
0O+29288T1+J/1J0zZEHyq21deyC//d/AeH4TF8=
      "]], LineBox[CompressedData["
1:eJxl1nk8lWn7AHBK9nPO/TxFkkwy00IiNbLluviVJqQoUS+FFCNRmakGMWlT
SSlbU6EI7ZYImWNJCpFtbFnScs55TgY5pU157/fv3x/P5/l8/7m367ru+9Lz
DXHdPklOTu4R/f73bxzQ2KbkwcNs+czooesi4E5ng40nD1s0v12qzhXBbFHd
p5t+PIy9K3rrJRSB9TnPf14G8NBQN09H75EI3G2G8mbs4uFKw76vvfUiiEti
dh7/nYfOy8V/r+gSwbi9R6/vMR4uC63VqZGJQEvGlVw4ycPUR7mxG7+IYEla
eFJTHA+bcs0uvZATQ+DH1LU2yXT+zt5zAzwxdGa/qZyRw8OEPRa3kuaJoVA5
NKuplod2wnH5p5vEIIo49K+wgYdVA1+yTm0Vg9a7M0tvN/NQ8iowe+V2MUR0
3ao60cVDdWPtwpzdYlhxQ9Rnx/GQHXfrNTguhhbHzdMLlfl41q7SVLdADCNx
tjEXVvHRzOXao/uKEpgzed2z44583KglXFmhJoEN+7do7lvLx4mawo9VRALF
W8MzXd35qJAQNFikLYEok8IKNX8+jqTs+eixSAL8lvmfDx7jY3HvitgjGySw
UIME+j7iY+2bG8I9lyQw9e6DW9dq+fiJeyvRviKBL7/4D0sa+Fj9UlHj72sS
eBIh/C2knY+R8Sd2Dd6RgN/roKgIMR+HNv76daxCApcLahOSVARoqesRXPpK
AkfW/N7RxRPgbosiHZlYAkHi2dqzWAFK1ZqLfxyUgOXMA2kZ2gIMiA8v3Pte
Au3Rc2/kGgrQvbE+rUSBA77r4fK6NQI8kmtqPqrPwYe3iybxXQWovnJgWck8
DnqOdq9w2SjAPlg89Q9DDm6ULK7r2CLAFR6/e7wy5cBe70Xb6xAB8teDnK8t
B5Ej1tLv8QKMbCADil4cDMeNTVvSLsADTZFLJXEcDI7oVhl1C1CmN/I1OZ4D
qeuqkPl9AqxQeh9im8DBa82U2lkiAboK2f8cusBBd6pFpPKYADObLhsWZnDg
6y6UDakSPFeQZjBYxIFPjKvDoDrBuCvpIWYlHHiXiNI5PsHXLTvcwx5w4DVT
4PyaJXjzjiJvuJwDj/6tOV3aBB3W2cvHPuFgjb+8V7UBwXHX6JTznRw4pSQW
VC4kaF+iUre/mwOH2gWq5YsIftTVSXLr4eAXQ9f7JaYE7bJUx7/1c2A3fJW5
a0nwctSRUXkxB7azlwXcsib48/XGt/kSDtClXnjdhuDzcN0ILykHywtkOzPt
CKbEGXin/cuB+f4VNRccCGb5NRi0yzhYltOpk+xEcF4x27z+AwdmXUGhCc4E
TXuXq9WPcbDEKnH2GVeCjT2tFlmfOVg08SbsyGaCSget9gkmOFhoEtZ8yJPg
JJWBvE1yUjD04c+P2kLQBfIjL8tLYf5Ds3/+8CXo2pxSxyhIQf/4ceOQQILR
FdP1bytLYW/70kjfIDreSpe9QhUpVPz08qlbMF1/xr2ztapS2FJtHWi9l6Db
1nGLBnUp/CU/mqkSRtez+suyk0QK3Lo02Xg4wexnLz//ykjBPN3JbuQgnd99
zon/Y6XQbpPd336IoNe3Tv7rqVJgIzy1M08QfDqvK69bUwo+9Sq/Jp8i6Dys
3xUzXQq52vfvnzxN0NDY5amJlhScSxi3PfEEhR33NIJnSOGycnmG33mCIU1p
OydrS2HQPWjUPZHgUZ/22HPUJ8dqzthcIPhXdppJ6kwpdK38rW/xRYI7Skfz
tXXoeSTqGf10mSDosXLx1PtfN4ZrpdH4PBiYLj9LCjVLIurUrhCseWn/JZBa
4/CCGRNXCSoGzs9upPZrafcfzSQYlhqsu1BXCpP2LJ7SlUPQ/VrzzjZql4q+
9U9vEGwPrbH94QcppAtir5bfIlgpfjawjXp4i8W7/DsE5+b2Ol6ltrkjgqxc
gtpjL6K6qU9/Ox93IZ/u1/PpQfXZUuhxsu2NvUfzTz5hpTm14aUhwz+LCIrD
jDq8qMPeXgwLLSY45fkZ04PUtZara3eU0njeLnBPotY6OTZ9cxk9r7Fz9tep
/bsydqwREuw1WzBRSL091MjctZJgkcHUm2XUUw58n7y0iuDDbyEN//OGxzdd
51UTnHij+6qIOkNz0xXtGoLVMYeqblCPblcc4T0haPnkr50p1LaFBTbydQSv
yIX0RVGfVfA5/b6e4AZlhZk+1P3r+T3iBoJVxj561tSLMh4YPH9GcJ/tmXeE
+uBowB+NzQT50Smn+ul5PLXVfFLZStAiN2Y4m3pm/EPNwn8I3lPYNSuQOvDF
7u05HbS+TTdozKUuMda9d7GLYMN2547nNB7KUfWTzjwnqGG/a9spavfGAy7R
vQS/yB6WLKXOmjU3/fd+gmtV/bs7aHw/BLUOBQwQ7L8c9Og36hVlfy73fEXQ
f/lgmBr1y83Pu+3EBEXW5Svn0vxRX+6e7c0RTM53PpZG8+3nH1pDI98S9E1s
3M9Qx7yqUy8dJvisAoP7af7mP7Lv6nhHUL0oJtSKuie76toHGcEje4IMztJ8
Nw4qtVn8iWDAtNrb+rQePJzN1NZ+IbhuSk6YL62XaJP8jqBxgk7Phj5f0KD1
9f767hw5BvWikoiM1lfEwQtXf1Bh0LVkNHMNrc+srRohy9UYvH06S81VIIVn
tvFW/+ExqB9VNnctXwpzFE+0JTEMWt0yDV9C6/tJ3AFFvjaD/fOLrmUq0fju
ft9iqMOg4/nu+8GK9PzX705brcvgvql9fy6eIoXg6QHmR+cweD9RbH5lEq2X
dPfAcQMGrc9bOS74xoFNdKuZthGDtm6HdEu+chDgt3ayuTGD+bev3bT9wkHZ
/FWXQpcwuDnZ5IP1R3rf55k1Sq0YvBfl7NIzwsGdKg3TLicGZ+esSxC+5KAz
M/77mDODkSXLrLpfcCB/nFc/zYXBWu3DGUN9HGxwnOK3zo3BCeeQUvnnHHxt
fZ/42IvBiFgDprmF3udvWj8XBjNYUW7xZlolBwcN48Lv7mYw1zbL5Y2Qg/w9
v3zL2ctgd8OL/XfLOJj5vUzu0j4Gx+ZwMpNiDoY0s5SiIxmEH8tKJHc4SPjl
gIZzHINN97S+GV7koDbONHnVWQaNjno7pKRw8L1tUMv2HN1vV/3m74kc+Pv4
6CxNYlD9QfLj+2c5sAxz0NdOZXCR3o+v+o9y8OKmzmLRbQY7q5SKp4RwoDHa
nt9/l8EGk8Fj/CD6PpnHL+3KY9ChrFGf+ZWDguop5k8LGZTU/FE3eRsHx3qH
bPL/ZjDa2+hF6kb6PggqnSIbGFy/f0HnLWsODuzdHqD5L4OJE3DViPYDMY5D
/pbDdL2aGzX15DhI/nG//5Z3DD78GuHDG5dAUXvMjqwPDMYN3DjUJJOAzPKW
n9l3BrWPlajK034keLLMe6OARcfV0rXqtF/ZlvDnpqTFLObw8863/SaBvbtU
NpUuYTFl6rENb0IkEG1/zqPvZxZLD5VqDAdKIP1ThvtcSxYVykdT//WWQJ/n
Y7ciOxatWiXvk5wk4PET37V9PYsTmcUfL86RgHPRRQfNfSwWuJ1RCqsVQ4DM
d0LjAIuemzxtSLUYDpsY3NMIYzHL4vXRdKEYim8Uz9KIZDHXIMHpLu3/5qT9
MzL1GIvf+9v6jl4Ww9hxQTKTxOKQXp6zFu0fyaN2RyaFRaG787J1gWIwnJQq
x/zFokGbYFW0nxi8IxYGklQWR1waBto8xFC3e/VyQRaLz1r1jZbaiiF10+FX
6kUsvqyO8+8hdP4khxT1YhYlV0+H3lcVQ2srs0a9lMWq0TPCWAUxKDunF6kJ
WTxtXTt97icR7LX7+4RqDYtrpx6fNK1fBLFRR2xUn7Dop0JMKztFkF3mKFOp
Y3H2Rs3bAS0i6DHr9lRpZPG8kuxUFu3Xx0KvMCpNLGYqfB61LhcBkxdQo9xC
4xPz/GZDsQgWDhmHK7fR8d/+XOyRLwJ7w4/Gyu0sLnmXOaPvpgi8A4SvlTpZ
rHhc0+x17f/7v/IcvHw=
      "]], LineBox[CompressedData["
1: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
nK/K4P/7aJDc
      "]], LineBox[CompressedData["
1:eJwV0nk01WkYB3BDkZCl+L2/e3EtUxlRabP3PJNGu6xZWpS2Ey1yLCVLacGl
UeqYKEUqtJA0WVJKbiPh1O2eNpei3Hvf38RQaURpfvPHe57zOec5z/Oc830t
w3b5blZXU1Nbw7//q5FugGenDoObPuFjr2IFDCaNLF6lx2B9zqiO8VUFhHUI
U/31GYz13XFXfEMBba5uEl9DBue+sm8brlaAuDpmxHMig3lWD74vrFfAornl
Dq7GDIptH9enSxRwb7rVWWuWwSgd50F1qQIqLcfFfbZgMOPFyEglp4BTWjKb
nJkMjrZ1zdQXKmHjs4jMVysZ/LPD0rUgTgkW3hcbWn0YPPww6oNzohLkLZ1D
9/0Y1Djerd6WooRVD302Xw5k0FW3NbjnqBIW1zjO3xfKYO92ufhJkRKmn9Po
N93FoItz4/M/2pQwFH7ab/3vDJrbX/DoEqkgK75IK/kYg/evmMyaMVkFU8RX
budn8/P9goNibVUQUHrbuj2Hwaefwzz756jghrL9U8A5Bm39EpOzl6hg+ybT
k8uuM1hu2GidtVsFb9fmy+ZJGexa7pIeWqeCuB0X0wJkDD7ozqh6ek8FExKv
uUU/Z/BA1pcBN4kK3M/cuVDxmsEnv1gdGW1VQd7rjmi7d/y+5kzt6W9U4B9o
bmz1mUGB30CkuxqFJu9zAXomBJvG+j82dqcQ3thzV4sQrM4PXheOFPSc7GzU
BQRvxq9urPag4CuqGf5iRtD9AKvpsZRCe6/03NvJBBe8dl6qF0ihT6zJVc4l
2JUvn7pnF4Vjo8v9yhwJRqX3Zm6LojA76kRdiTPB71vvVfvHUNgTbJGV705Q
7bh0A9lHQd3GZU7qbwQvqHQU/kcoGEt2JIUEENSS95mfP02h2umm0j+QYGNC
S/6MsxRCrg57rwwmqLO+6uWtAgpnT6RaL1zL37PEff+NixRswgqb7DcTnDZG
cHhdOQW3HzKjn2II5tUWvUu7T6EzSpgwEkvQvyxRXvGAwgHFhp7BPQSNo53S
ZBIKD1v7qrgEguazXb9oNlNYeWbcWtkhgjHajuYWUgphzm7FxScJDuhNdrDu
orCtt3VQnkNwn0/yAuE7CpGFoQuNcgn+VSOK1OmhkKx9sCshn6D9/pdmMhWF
M68eCX0vEQz1c6zU7KdQdHR1eGoJwaSg+pz6AQqXf+2trrtMUPtnJjvyE4Wa
UoNVU8v5PApt2mq/UHi+N/DYtyqClxd8W9H/jUKHPe10qCVoWiro3jZK4X1X
vP3WOr7/up24/QeFT0vONj+9x+cRHjGpWJ0DA0HPmOJHBHPcc8e+0eKAaYv1
kz8m2JqQbs9qc2CeMu68YRtBl7ppW5aN58CemwYJUoLPgiaOO6XLwdLaqL0+
7QQdVkjHSA048Nk5pulIB8HtPRdKWgw5CLLKMal7Q7ClICWk3oiDreKayinv
Ca40cFFmTuJg5/xl6msUBC0Fqfe3GnMQ+1HufVxF8PxHSYmLCQeHQtT6Rj7w
/2m9IL+J4SBjQrabwz983mW3Sg8SDrIbrDO2DBCUO/k2zGM5KLRdZPN0kOBG
UbnJYQEHJZ0vYzWHCGbljPe1EHJwPTtc4jpMMCIl91Ql77vDR8MujRL8N6/A
s8GUA0mZqKJdjUV2ycNr7mYctIRV/DDQYFGxM15UwVtm4uHlOZbFNR25p03N
OWhvlp3Zp8VinFTDaj/v7qQtf1/XZtHla+6Ndt7crCFnhQ6LNdtwxQwRBwOK
9DThBBbNSjsG4nkP5QlfeBuwWFkaUnCX9w+va5OPGLHY13w+aJi3pgZE357E
4u5XRYLpFhzoVT1p6DdhUV/fSxHMe1JEmOEUlsXnRidvJ/IWij6HrhayOOFr
eF4ub6tnh8uOmbGIHs0p13jbpjLfJSIWHd9eia7h7eBaumzEkkV1O93IO7z/
A4MWpGs=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
OuQJ
      "]], LineBox[CompressedData["
1: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
ZtlZN0Dm8cnCnp27axnMr287qr5l/7//CwL9E8E=
      "]], LineBox[CompressedData["
1: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
bIrzcHbN/3//DyFbOWI=
      "]], LineBox[CompressedData["
1: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
F2xyKhDD/wEKwlXY
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
A1hZLIo=
      "]]}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7000000000000001},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5978631991403437`*^9, 3.597863285490423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox["3"], ",", " ", 
     TagBox[
      FormBox[
       RowBox[{"  ", 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "-", 
              RowBox[{"Pi", "/", "6"}]}], ",", 
             RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
           RowBox[{"Pi", "/", "3"}]}], "]"}]}]}],
       StandardForm],
      StandardForm,
      Editable->True], ",", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "3"}]}], "]"}], "+", 
        RowBox[{"Pi", "/", "3"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597863673256822*^9, 3.597863683067122*^9}, {
  3.597863716663989*^9, 3.597863719111368*^9}, {3.5978638167477903`*^9, 
  3.597863895791603*^9}, {3.597864002341485*^9, 3.597864039752674*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQzbyf69xj00a7VT4RL6q2/bYPypG8NWPSensYf+Kn
mM3TJu2H862PenE5FV+A8wuq/BI3F9yA83N3pPYxKT+A81OLdS2CDiL4V154
ci5PegLnd+l/Y9gW+QLOL9Q+MfXA0jdw/q/k7HV38z6gmffBfiWUn7Q3LGBC
2ie4fPLHKwcOdHyB83sMtucva/sG5zMd2G7eUvUDzhfXdQn5rfjTfjWUL6jl
fe7+jF9weY/5Tos/TPqDUP/+jFv99n9w/qzjuxiZMxkcUN2H4NvIOv5XSGGE
87UfCDypLWGC89euEMrYWsQM59fci72s3cYC59tfsDi27COCX2hj4T1vCiuc
/2u+S9LrCWxw/oWCWQnli9jhfEt3pX93F3LA+ZJg/3LC+SddLVc4zEHwl26c
afloNRecL6qskxW3khvOv8TI0SS5hwfO/9Tp/8g/iBfO38pRvOzCSQRfR1Qg
K+koH5z/vu+biPE1fjhfub1dPz9LAC38EPxHUbdvOT1H8D2eXv65NU8Qzq8o
Ss0Qe4vg+22b7SVWJgTnX1Y0rq+5KeQAi993f7JqmL8h5Bdeb9ySVyyMCM8M
24TK3wi+7N+J0YVVImjxgeA/c+8+xcEiCucfVjtjL9eN4GdxLGNR5BSD87cv
ULE9PBHBX1Nnx3uRUxzuvnPWNkeDBMXh8j+yZgcn9CH4JwLmh/KKScD5SZY2
y5dPQfC9dhVVBt5G8A2tV3r/VpSE8wHwyP40
      "]]}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwV1HtUjAkYBvApSWrarS1R2wXpotynURTPKERWurh0mkmWTWKlyaWjwiKM
W5ehtkIXuqEyqTSZbtqGKW2bjDEpTNLMfJ+x3axUVvvtH+95zu+c95z3PP+8
s3YeCAjTptFobGr+z0n1+m29zJMrtefRo2pnkrAj6tytr4Qi4pCe50PKY4KF
v3TyD2DGeaZQQLnsM14Yl8ZgU01qRw7lPtM9Xx7wTyBWMy/lAuVL5hLDUtFp
2CbQPu2nXODIyaaVngMtdvq4D+UG14FFgTkXofSLLZhF+dXahMZ8fhJapjM+
D9pQ95zoTvGNKfgjYiMponxuiSw6X3QFE/tlp05QNl2eI2qrSMWTl931HpRz
V+3V+VLyO44qo3KHrUksWO+ycVZhBk6G5TnkURb5fUv1ybkGTvGFAF/KL0L5
Djf42Ui825SWZEX1YSxw6xXnQNO2VmBPOcb1SndMYy4sk+WRVZYkdBBilyu6
hTPi9C7xjyRaPBubmcI8+OhoX/CinLLWIbKlIh+awwOvH1qQsPYdfDBcUgjm
+d4jaeYk3vtvZfPuFIG+eWHN2AwSd7eIJiwLb2NqXmJhEGW3kDPr1ubcRbW9
A1drOomAX81fpfPvYR2PK9U1JUF3Q32atwDH4mib3ExIDFRzjXvEAjg8mcrd
9QOJB7WyysONZTBx5hQXGJHwEud8yxKVY8aQgW4PnYS993M/YlkFOvMjG98a
kNBvnnyLIazAcfY0R7k+ifbWvd6SikqMDC0aqNQjESJ1SR4sqUKNh26cnQ4J
1tbwd+7zhHhyvZc3qE1ijjzD5ewdIQ7sXOxZpUWC7Pomtyisxr10f+HCCQIx
vZJZq3NEmL1ml0g6SiBliFOexq+HQO/P8P6PBC5Py/RoMGwAi304l6Eh0FF2
xoYZ0AAr1UhUFEmATXL6rLsa4EjjP3+uJBDJNuAOaR5Bw6qtXPWWwNUVe3gZ
Rk2QLB6PeNhGoLMzcN93W5pQ2xDuyWslYH0EvqczmtAfW1vt20KgsNTMdP9s
MRY63T8nFhN4aCPOZrk8xpabZuXBNQTeas2uUm2TYHxBeI9tEYE5WYaZnOsS
BJuEjsblE9izfDT+mUKChpB9otabBIai2z1FEc3gnX3BCrpBQOf98bbEuBYk
e3zaPZ1PwOlxVx8zuxUtp4JfLo0l4C720fc82I7JRTsiaWsIGEkL/nK90g6f
OJZj8SoC799pp84vb8ewQ12q/0oCiTSRjflwOxiGHxPPuxJ45+7MHIh+hk29
SuPSuQR49w12ZEV3YEvQa6sWOgFZdmvlGFeKGn5IzeY2Ne6WOsYNpEjhzDMv
dGtR47faBJayTArX2St2mT1WY26Xx9Nng1IsjuwOrK9VI96sRFHEfYFJTdWM
J8Vq2F6+bLCNK0Nbj6b73nk1omJ9fy6PkoM3l3tDs1INn0iPIr1kOTbWmLLt
llP7O536Q+7J0bfE1ieIqYZsve4xvb/lqE20fFTsrMYK87r0kH2dmOZkzDCa
oYa+cH77lN2v4Jz1/aLGfhXy/6GDw+5GnsTVpitThePE2Jmy2G64e0lCOakq
BL1Wt+pmduN9j+foyyQV6OKm4DJ5N2T6nh51CSpEX40/orv1NeheTQ7ekSqw
GJoSgd8bPCq1b9rAUsHC4dWnyVFvEHH8X5eDy1UYtpC4s5PewOgRzzTVRYUC
7bzmyW1vMGXmdjuJowqGHey+4A1vwd9eXfnBSIX9wrBEbVsFGDLm87kKJfVf
/GdquSjQt1lrdXSnEgOdHvcnVivw1UnHq6JDiUPjJrKvuxXw7vtpeI5YiaWX
JsLHYxR4KQsrCqxTYsTyw+goT4FDyzjDcVVKCEtkF79kKFBnYS27IVAidmWj
1cgdBUa2Xguovq3EfL2jB9QCBfYMs576FirxH1cG2xc=
      "]], 
     LineBox[CompressedData["
1:eJxl1ns0VekbB/DjUi6jRpFQGqmZNCXlEoq+hkpTiWJSuSTSBamI6ogog6KY
LqTJpVwKo6kUJaTSTVckTXUM0jl7b5yz9znOOUj1e+fv3x977fVZa+/nXet9
n/d5nqlBO9eEqPJ4vDvk+e+d29HFq23uxBaZ89NVF4WoZ5NapYJO+EtMFi75
S4iExF0hnLgTzwLcgmZUCuEy3k8p+dYJW8UeM7UaIdQK3Y6Idbvw9XD1/rcN
QiQ3TqnoteoC/fDRp50vhFj2mzYY1y6M/bFBMa9NCC2h/BXl3YXKZ2bZ/e+F
SNd4PvAppgvbf8mMX00LcXJ5rGNnTRfUrq6pfKomQsGr9qevXbrxVFSun2on
QtCm+/6tXt0wo7c4djuJME16WdK8uRtuO0a9sV0sQolest7L5G5MLn/q88RT
hIq1Nr5Pmrqxbv/n4PPbRaj5kMnUrfmIrvtyQ/2zIrymftW6GNSDTjXFjEG5
CJIc8yWHI3vguuDdtB8+i6C9QiNx46EeHIwpWejMo+Bc0Tg48UIPYueKb+3S
plC+G1RqVw8sZ6x6cXQKhUPDNo9CAz9B/c0V1wtLKFjqmP4+J0CIwMvXDddm
UFhe97VBO0II58XvHetPUtgcIRgRxgnhyoX5mJ6hcPbV2T35uUJI98SHtRRQ
GH16wmZdgRAjaflc/1UKH0y+c5X6itD7+850lVYKRy0VvKr1FFR/Lf12UpcG
f++vs4ShFPjxp54l69PYfufcbwYHKBwbY+ofaUhjmYdrWUweBXbmqUZrUxoa
OzO97D5SSFF5cmyjJY2kyz+X3AynMXqr1sQNK2nsUcS9ouJoxAjazr71oBG8
qHnYMIOGd9SPzR5eNFxe7PXYf5VGv4PnavMNNFTEjYMOChoSxfqkxK004i02
rrh9kMEv/Rs6WxNoRERfi+7NZCC48tlQcJiGf92ogkkXGBwrNZF3JNNwdP9r
ILaRQRkVcepZOo3P4UO5jlq9GNyR6ONxhsa+v06ydSd68dzJwV5aQWPbgNBY
XNiLofy9S36/QsPHccGSKTd6oc5507qVNOY/68yJb+/F+4NfuXE3aQz0Wrhi
ch8+aKjLau7S2D3r8emG4j58tMgyvtRKoyekJ6Ggqg96ivPRNW001hbwwhMe
9WGSXsr5B+00FkxwcHGm+3DLN2f7w/c0VL+Viu/M7ofukcjy3R/Jfjk8/Cff
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
AFsDJ9Y=
      "]], LineBox[CompressedData["
1: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
jRfKMnP/n/8HRzWlNQ==
      "]], LineBox[CompressedData["
1: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
rp5d8P/+LxsBRFs=
      "]], LineBox[CompressedData["
1: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
rHYWK5/UNDln/H//FwZDuLc=
      "]], LineBox[CompressedData["
1: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
rHO8KoH/A8uEj0Q=
      "]], LineBox[CompressedData["
1:eJwV0Xk0lXkYB3BDWRKheH+vi2uZyiiVNtnmeSaNkrLL0qI0ZdImoZKlVGRp
SB0TZa/QQtIJpUjdRsLJ7Z42l6Lce3/vlKHSiGLe+eM5z/mc85znec75moXs
9t6irKSktI6v//vUyX4u3ZoM/v4JH7uXymAofnTFGi0GG7PHNPWvyCCkS5Ds
O4XBfd4776Zel0G7g6PIW5fBRS+t20dqZZBaGzXqMpXBXPP735c1yGD5okob
B30G06weN6SIZNA4xzzfgmVwr6bdkLJYBtVm6vs+mzKY/nx0tJqTwRk1iWX2
PAbH23vmTRHIYfPT7ekvPRi82WXmULhPDqaeF5ravBhMehjx3i5ODtLW7uF7
PgyqnOxVbk+Uw5qHXlsu+TPoOLktsO+EHFbU2f58MJjB/h3S1CclcphToDJg
tJtBe7sHz/5sl8Nw2FmfjX8waGJ93rlHqICMmBK1hEwGmy4bzJ87XQEzUi/f
zsvi9/sEBkRbKcCv/LZFZzaD4s8hLgMLFXBd3vnJr4BBK5+4hCxXBez4zei0
2zUGK3UfWGTsUcCb9XmSxWIGe1fZpwTXK2DfzgvH/SQM3u9Nq+loVIB23FXH
yGcMJmZ8GXQUKcDp3J3zVa8Y7PjJPGmsTQG5r7oiZ7/l77Wka8x5rQBffxN9
888MCnwGw52UKDR7FvhpGRBsnuj7WN+JQtiDvrtqhGBtXuCGMKSgtWS2pbIh
wRsxax/UOlPwFtaNfDEm6HSYVXVeSaHzg7jgzXSCS1/ZrdTyp9CfqspVLyLY
kyeduX83hcyxVT4VtgT3pnxI3xZBYUHEqfoyO4LfQxtrfaMo7A80zchzIqh0
UryJHKSgbGm/MPlXgucVmjLfJAr6op3xQX4E1aT9JsVnKdQuuSH39Scoim3N
m5tPIejKiKdHIEHNjTUvbhZSyD+VbLFsPf+Pq9Oh6xcoWIYUNVtvIThrguGx
DZUUHMclej9EEcy9VfL2+D0K3RGC2NFogn4VcdKq+xQOyzb1De0nqB+55LhE
ROFhW38NF0vQZIHDF9UWCh7n1NdLjhKM0rA1MRVTCLFzLC09TXBQa7qNRQ+F
bR/ahqTZBA96JSwVvKUQXhS8TC+H4F91wnDNPgoJGkd6YvMIWh96YSxRUDj3
8pHA+yLBYB/batUBCiUn1oYllxGMD2jIbhikcOmXD7X1lwhq/MhkhX+iUFeu
s2ZmJZ9HkWX7rS8Unh3wz/xWQ/DS0m+rB75R6LKm3Ta3CBqXG/ZuG6PwrifG
OrSen782O7VznMIn1/yWjkaCEWHbp5Uqc6Bj2Deh9BHBbKecia/VOGDao32k
jwm2xaZYsxocmCSqF+u2E7Svn7XVbRIH1twsiBUTfBowVf3MZA5W3oo44NVJ
0Ga1eIJYhwOvXROak7oI7ug7X9aqy0GAebZB/WuCrYWJQQ16HISm1lXPeEfQ
Q8denj6Ng10/uymvkxE0N0y+F6rPQfRHqedJBcHij6IyewMOjgYp9Y++J9i7
0TCvmeEgTTvL0eYfPu+Km+VHCAdZTRZpWwcJSpd4Ny1mOSiyWm7ZMURws7DS
4JghB2XdL6JVhwlmZE/yNhVwcC0rTOQwQnB7Ys6Zat53R06EXBwj+G9uoUuT
EQeiCmFVpxKLrOvDq07GHLSGVI3rqLAo2xUjrOItMXB2d5nI4rqunLNGJhx0
tkjOHVRjcb9YxfwQ7974rX9f02DR/mvO9U7e3PxhO5kmi3XbcPVcIQeDspTj
Am2Wz6drMIb3cK7guacOi9XlQYV3eY+7X52epMdif0txwAhvVRWIvD2NxT0v
SwznmHKgVfOkacCAxSlT3GWBvKdtD9GdwbL4TO/07TjeAuHn4LUCFrW/huXm
8DZ/eqwi05hFdG5JvMrbKpn5LhKyaPvmcmQdbxuHcrdRMxaVZ08Ov8P7PwLV
pIg=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
KeQ1
      "]], LineBox[CompressedData["
1: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
ZtlZN0Dm8cnCnp27axnMr287qr5l/7//CwL9E8E=
      "]], LineBox[CompressedData["
1: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
0dPZNff//T9TwjmT
      "]], LineBox[CompressedData["
1:eJxl1nlcTO0XAPDKUjNz78wV7RF6I0q0SELnlDZtU1my9hJCtGhRtCAqhSEl
xhbayxJKKlLeQhIlS+WlDGbmXiRRlNLvvn///rif+/n+cZfzPOec50zyC/be
qKSgoFDJXv/dd8TFbZZM4eDNXYuvns6XQkj7lO8N0znofunH9d4rUgiwfBpb
asLB/KyWRS6lUthwLFIl04yDRU+2hYorpeDbpZd2wJKDFbIFRu9rpLA4NyR/
lQ0H9T0SnPyfSMFDScvcwY6DvalDeZnPpeDsW3PHxJGDEdeuHWtpl8J8ddUW
RQ8Ochs6FIxkUjBIvDGUt4aD57N1NU4OS6HeYW4+nuFgc/LqV61rZBD1IM5k
93kOvtAqE3I2yMBwUW3JnWwOTn1VaGYeIINEN2GN9WUO7oZg07AdMrBfvLHd
ooqDvgfdJVkiGVSvTSWmdXJQaTAl4/4dGZRF0yFj/uLibOP7z0dpyMF/yOSn
0JCL7hKFzWt15aC+OzxWZMzFNtce05JJcgiPH07mzebipFu/1zsZy8EsWS1r
lCMXo9IMNHRt5XAlw/ZF/yYuRr8aFR67RQ4518RzJUVcRIVyG/VSOQT8XjW9
9SoXNZaJwblcDrMcJug8ucHFQ8s1TMPvyOF268XB8kouHnj68l15nRxahovu
pjZwkXdfz3fwhRwUPaocbD9xMbAh88PqXjmsYSRe56fz0Fs0TpQwk4bJFjl2
GSY8jGG21X43o0Eeu8n8kBlrz6ONqyxpCB/zeVyUNQ+daiRLtBbQcNCq95XQ
hYechyUTXVxoKE9U9h3ewkPfSUP9e9fToKZvHOBbwMOW5MMBDqk0HD12cFnB
ZR6aJn7VNkingav0ye7HNR5+rusLHMqgQeFdgU5KBQ/N1hX/OnGGhs/npjaW
NvBwWMc/JTyPhlpt/VlkFw+L1yf0PKqkAVLidZf38DBU53iwRRUNFf3vVLL6
eMjrnrEvo5qG4tbz76yGeWgcbrPVvo6GMxkT0jZQBH6cYGTs9ISNR1W7r9KM
wNyMWxLZWxq+7t0pGT2HwKfBxbvaO2kI+Nb6xGsegUf2z8msk9CwtulEnmwh
gcff3T2YIKXBTaS2YuxSAoP1698XfaHhwVC4g+8KAq8fmdfs95UGu8DnpgVr
CGwh+E6q32iwckvjgj+BPZEf6lf+oEGfO+Z2QCSBv62d9Y4N0HBuZ0h+aTSB
N13P2pGDNGjST9MV9hDo+voSs2eIBv5DUWDGAQLXZHg98FJgYCCB0LsnJrB+
VEKeeBQDEb1beeQ5Agv2hX5sHc1A94aGnz4XCXR69CebUmFAujCl6UshgY1N
orwtXAaeKarEa90m8NOuhddq+Ax0XRb7elYTyF+4wblawABnpdG8pFoCO3NV
s8soBvC6x48fjwl8UKycf1SVgdW+nU1GzQTOGtsgDB3LQCQ39LLfCwLVU9Qq
3cYxcMXvuH/TGwI97IWvP6kx8Ig/daGyhMD4JQ1HitUZ+FhxS89GSqDmWPno
IA0GdMf+21rUReAiD/P5LZoMWN0NLJX0ELis8E//Li0GlmwdTtX6SWB1WPZO
HW0GDv4z2TVpmH1+2tM7jjoM5AaXTK0aQWKFimJ8M+t7Oo4je5VJhAWblJfq
MvD2watOI4JEC6c37s2sB8K23PGjSPxUgEsdxzOgPvG3WDyOxLhPIeNLWJs+
PrSjSZPEjnRhrvYEBjb/VTzTZhKJul75/c2s9zfZEhEGJNrv//rPZD0GMmNa
5EXTSHz3926PbawrDDfWSWaQuDN6ofgK65fP+y5omZF4bPu0bJp1z54DcZ6W
JJZ0TAweP5EBcob2qiRrEoP9dQYWsTZsK5pTZUOiXwHhEMzaPmHBuF47EucI
GeFh1mtNn3YbOZF4RfGSdjbr6DdrG/1cSRQHuubcYJ2R3FMgFpLYaVf7tZL1
9dn7E5sWk5hgMW7gNusn79TWKy8n8cIv69qbrOnDeWCzmsSNztYeBaxHWs/V
jVhLolan2sl01hOlj34VbSBx/O6WC1Gs5x9b/UKymcSPsl1bl7L2sem6phVI
4kCHWu901qHMbpHndhJ7Zhbb9LPxijLGbE2KIDEsy8e5mnWhXZZT1U4SjTi6
qntY13VZ/NUbS2KDmeCMFevOU/cVjONJVOm1l9Lseg86Ln/jl0iiaGpLdxpr
ze90uTiFxKHs5kpL1uaZ0RlNIhI/uKx0esbun4crGaacxuZD/4E0f9YBP88J
bU6Q2Jweff47u/+JWbOMI06TuETJO2gn6wvCeyqXMkmcb2Qy9JPNn9a8jzVa
+ez6rU327WDz7cfiyHOel0ic677M1Jm1QIETnVRMonZJbV0Bm5+Oy40tem+R
mNI4x8KHzd9SlbDcpnoSm+7WGq9i818as/dLVSOJyrZRa06y9aH57YjF5WYS
l8W52T1l6yem7dK95DYS30i1p01n68u+UPrWjibx6Nk/Ielsfe6Y0Gtg+oXE
6cmrnTNJBvKPjQjU+0biM4OUF1kEA7zoib9//yKx+6Gz6qn/6tt1pUapCh9t
NXx057H9YGT1Zt8sgo/nXYwKxrL9wtIiMieV4mO8d8eXjyMYOKWbbh6kycfs
Wt75SEUG1n1pFE415OPHFY1XhWw/6hbZHhA78XGSSU7ts272vBjh+TTJlY9O
GZ9/OLL9bkmkr/oOIR/lej6SErYf3vo7Otvbh4+j1+n0xTI07J5VWs3bxEfz
W2uIuvdsP3tm2B+byMeYmlzPqS9oQMc5uC2Fj/p6XfvmtNAQWuGQtFLEx4z2
CdG2zTS8vOinNieDj6UVk8vsGmk4G3bGtDuHjysOLQkbqKXBWI0K8KvjY4eZ
dxDcoGHs1cpLOfXs9wYbD5UX0zDgvOmrvJGPDwNGrTW+QsPDmKrw4Jd8nKd+
ZOpgPg0bPmzbHSPjo8XZVqH9Ofb9N+rTMzgClGhtuB6ZRMN+94hXbaQAjb6S
UbH7adgmm6g9XlWACw4rDUfvpcFaJyozS1uAUapWS9ZHs/8bP6Ww2EiAP99Y
W7wOYuP13nf3kbsAg5SOpocsoaH3k4kS31uAr10etyl50fBvQru91zIBTuR+
6zrsTkNhuemjV74C3P5dckjkSIPjpM7nH4IF6Hl//Y25VjTEdc9n/qQKsC1m
XaqVNnt+ifrGmb8UoFmT0qzOVjl87p5wb0a7AFecu7iw9bkcGG+nYMO3AtTP
SzJ71CSHD+on68dLBXjUekru6YdyaD83N06lT4D2hsaKvWVy8POp+t7FpTBK
xAmOPy4H902Ka2qnUzjZoLhK4CYHt5PHb9QYU9gU077IwUkOLvXTuHdNKMx9
4dkSbicHZyPvsnIzCoWl0o81VnKw+3pxzFVrCjsCg4zGGcjBKtL+vtiFQhfl
fS6nBmWgn5Q0MziAwtXhFRWz82QQ+tIizm8bhbzROwLrL7Dzl4Hk8dIgChPW
Pdnrc0YGvrXzA+aHUngvYv9zv1QZnFLsyebsonBktdjRMloGqjGrtbOTKXTX
XJ/Y7C6DdQ2cLScOUhgZYvKN5yyDYu2yspTDFH4r/fwM7WTgUT5m6fZUCk1b
6xROWcogpe/+ERsxhf/ceGLM1ZOB0nbTUW35FN4Oy1d83yUFr+q3ix8XUhi7
pWFfnVwK5wWHLt69RKFk8YG0ixIp2LAzcG4xhYVL89a5vZTC4aE0kfg6heae
vyZrNUnhXzfbN4dKKBwYWRPZWS+FXZ9O7wq7RWHc8Zx3vnfY+dV6Ub1/BYUR
ORX9amVS0Ezp01h5m0L/V3OLHhRLYVNblr97FYU/fl/8GVYohZuGXqVYTaG2
cWSndvb/+38K71qg
      "]], LineBox[CompressedData["
1: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
a7PvFkqhdf7EI+k99Pl92OhSIIX/A7iZQTE=
      "]], LineBox[CompressedData["
1:eJwVlnk4ldsXx2VuUMh59znInFSSkkS6e1WKIocMKVemUJIhIin6RRSVoVIZ
kylkKAqJlJQiN0NFx5Ar55z3dNXNHMlv3z/e530+z7OHtfb6ru/eqm5+ez2E
hYSEHpHvv3+eE3uufFQODo9Cs2U+F1eJHDb6NSYHVq/KeaFFXPyFr35TbVIO
IjyHpgIecLFReaqN34wccHM+H7Os52KuadwbSVEGmDtbeVdxuNjN3EVluTgD
QmQtW93+5uJeS/3grZIMoJQUOsRpLu6061c9tYgB9llPKzdPcPFzd73Qr3IM
mEzvqXaQ5uH0CM6K1uUMEM+4uujgdh62rVx9/qopA4QHy7Iv5vDwu8dCnNJd
DOAHryk9VMjD5nXvdVvMGTDCbVI3LOPhbY0RPaJWDHj/s39raw0P63Z06AU7
MMBSN16joJ2HF30P+9vhCAP6PwipqczxcINmC1aKY4B6iTBb0oaPd1/p301d
ZkDwWKBr5T4+fjc+Yrc4ngEHN4pccfmTj/tesHx+JzEg8/GUbpYHH0+5ed3s
S2HAll0z4ZwQPtbOFP6RUcgAv8zvO/RS+TgZGd5RfsOAtahB+XAvHytGWBSj
FgZYRJa6OgzwcTbXuWpJK8mf7Zq2bYiPyx5Gt861MWBCx3xKdJiPm206p/u7
GeD5RVR36y8+Fkrws7lNM0BodEd7MovG3pJ5oqrzKRi/0t9UxqZxs/CFy9sX
UoAT06rUbGisPXuE8pSioFDmUsBlexp//7FGq0iGAkee8uY9TjQO4jw015en
4GeSo2ywN43PlDQm7VpNgdrqr/N8ImncdzdfwWcNBX+xo+S8o2kMpApX1lLA
DqoYcLlIY+Gbex516FHgui7s7qZ4Gkf/7323kzEFr16cfZeQQuME2yGV43so
uBWi0/V3KY1/WL4quMamIGmdn57PAxrv3VWwvtKagqjMWuNvFTRm/HHM5Jcd
Be0KhfY91TROWTHuFX2QgkoZk2suDTTOmRYtTfGjoLXRO0vyPY3FxrkGtQEU
3AWnS4ofaez5vam+P5CCzXxafmU3jVd+udSucZKCXNVwFe1eGpe8lZsoOUvB
xtC62u4vNK68rbGlIZGCP8q+NLWP0FhjziTs2VWynlaPt90Yid/Jo/rpdRJv
oEpq2ziND8vn6T+5RYH1eZT7aIrG8tdW6DzMokDOsc1W7zfJf8TUpzybguBJ
fedzczQesTpceD+XgiXSquNvhAS4WapAs6SAgnfTO56biQjw6ZhVyvn3KWhy
3d49ISHA/KHdTrnlFCTb7DKQnS/AdiZHU7MfUqA/e0JpxQIB1pl3D92upsBX
Zn3MlkUC3H9qjfStZ6Te+xk1itICbNG9x/JGAwW69HJHURkBrjLwvXS9kQJ1
jUPnhggnjJVIJr0m41PiPK4tFeBtvrrz4toooKJaT+ZQAlzSYoUvdlCQsfKi
hQMSYIXVAWdi3lNgZdKfK8YU4DHe/Z+R3RS8NC/nW7AE2GVnu8E5DgVOk/1t
XMItOSMnzvZSwLkuBqfkBTjXVW/k9AAFs5zCwssKAixbb6MbNkhBgyo3T0pR
gMOVgnxDh8h6yYkrYggLTl+7F8KjQEM6XnuasD2nQnCCpkBm7tlDz2UC/Nzw
vVbQVwo++S9paCG89ua45/FhCr4vPmirrSTAknYbB31/ED2dyxLuIhxUbq96
bJSC+sqjyhrKAjwgE+J8dJyC110DT48QtvS/kX5kkoIFaSODdwk/bq3keP2k
QM/2StwAYc01XSzPGXL+/+Y9WqoiwElxU/sOzVJgPrPWAxP+TTOT3eYomElT
unGI8FEzw06XeQhYt45YRBLuytsv6yyCoIU9/3wqYROxU1ZOYghiayehmHCZ
e8oVRwkEKmG6Z6sIKz5/3LJ/PoLi2rJttYQvqHAWOCxEcNc+5EIN4fHwGTN7
KQR95VHW5YTdehVibJcgCOj/lJ5DuHWzceNeGQRdEWeOxROOrToxs3Mpggch
NY5BhE31S9dtZiAQr5uSsiEs+oDvtRYhgB1bolYTrtdRy1BnIbhzOqluluR/
psixEykg2GIlUvuasJHW9QWLliGY1EqLiCc8kdMKQsoIIv7xFmcTLleVDBlT
QWA1G24tSdg/Y2sxXw1BoRHtUkPqoa0QNtijgSBR6MmGw4TpGxWsNk0EDSsW
vl1MOE/uG7tRC8ETsX9WlpL6uiWuiK5ehSDf54T5LsLKi12fFGsjcC56uq6X
6OOmRKdWsi6C4QNzFiNEX3ZRUs6x6xEUdWmfC/xPb/NMr4dvQPDLNO70N6LH
uOnqeV6bEAT6OT5rI3o1Cxk1cDQi85kyi4wIi45p+7KNEdxIjlBMI3oPH878
ZAAIpHYrx+8h/WDk3S2tvQ1Bqu3tH2mkXya5sqYqJgie94TKcxkk38/nyyXN
EJR5cp96yAmwe8fRS91sBK2JTQflSf+pWOU+f2tN5tto/jQg/drT0jf1zAaB
l667I3sJ0ftLa4/CfQgk6vafPCpF4qs2+CPMGYFiZ4H8fuIHYhsDgvxcEVRV
eEybSJJ+eFBY6O6O4LUpN3sV8Y/N95YhCy9SzzMmdoOixC8yRf5V9CPx8XQN
FxD/EShs0ZQJQJBZ2+D7gvhV/s3gP8UCEZx77Ox/cpbGKkl003Aw0Uf0j663
0zReev6vrLpwBN2vIs10iP9NeafauFxBMME8+a2RT+P4U9kSEQkINC397k1x
aawZW1STnoTgvtVndY0hGtsV1KhzkhGsXQ9bPQZo/IDHGbXLRGA93mOSQPzZ
55DiNfMyBD0Th4cvNtFYJEjDzPsB0auDxnmzl8T/I7V/XahA8GYupn+O+P/r
O8aHXlYhOCnK6XN4SvYb+HPD1mcILgtrylc8pPFnp/TOje0ISlMLlkln0Tjk
WO4Fu04Eyz1s1zlm0HjxmWLjoA8Ifgb0yWam0nhLWm3O/U8I6sdztskkk/0+
9QZpDyI4vmzWOzOWxrb7lBhqYyS/4sjr7sdp3GSVaSdFMaFmZ7N/ojG5f18M
1UkwmZC+yrFW35DGUpu0tYTlmRB1srCvQ5/cb8rV0xPLmMDmfrwzq0NjznB7
5uflTFh4esJMQpXG32LFBeX6TJCdOvF2VITcf43Hwg/YMcG2+d2STY18XLWp
gme7jwk+DhVFzGd8fODetBV7PxPCiioNR5/wccbVGHUTJya4Ra3RTa7gYy23
rKY1HkyYmriRfTWbj43nOmXnnWBCmyQ7/thZPnYzNM7Pv0bGy95RytXn4yPD
b8d7kpmgLx+av0GXj/2znE1kbzFhu59q25NVfBwxP3LgdDoTgp4mSVUq83Fa
92uFvXlM8Hihc8BmPh9/CN2X8KuSSe7//Q3aHB7e/fh4qDWHCR/Hb+z1C+Vh
a1/Rpuhecl7+bo5UIA87qCVTT/qZsGdv1h+PfHjYK7a6XPMLE8SVTdI+O/Nw
1AGhbzP/MEHTZ/HX/h08XDd92S3vNxPeptpdjyXvw8YS5fscIRacPWKpVz+f
h1vc7s9Ji7AgX+xD8zdhHua86UwLk2CBW+Lg2MZxLp5KUfhoJc2CgZ57roHd
XDxnWbw8WpYF9mLPFwe0c7G4CA6qkWPBb6Otr7yauVjuqJuMJosF/q1L3aGW
ixWUx5wdFVjACa7crfaIi9U6zpckLGOBX73HztkSLl4Vg2Yblcn6yMKhjbyf
120uMJ9RZYGNWMq5jNtc/H8UHDSA
      "]]}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7000000000000001},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5978640132649107`*^9, 3.597864040819208*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "1"}], "]"}], ",", 
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "2"}], "]"}], ",", 
      RowBox[{"\[Delta]YABExtrema", "[", 
       RowBox[{"\[Theta]", ",", "StandardForm", ",", "3"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5978629118407917`*^9, 3.597863008018065*^9}, {
  3.597863076101473*^9, 3.597863134346489*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.597862980623207*^9, 3.597863009869273*^9}, {
   3.5978630770496063`*^9, 3.597863114108869*^9}, 3.600426986420031*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "[", 
   RowBox[{"src_", ",", "srcRange_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"IntegerPart", "[", 
    RowBox[{"src", "*", "srcRange"}], "]"}], "/", "srcRange"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5973578771120205`*^9, 3.5973579777017736`*^9}, 
   3.597790954184369*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{
          RowBox[{"YAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], ".", 
        "RGBCube"}], "]"}], "]"}], ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}], "]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"tRange", ",", "1", ",", "765", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.597782502459159*^9, 3.597782510946663*^9}, {
   3.597787395626924*^9, 3.5977874075438423`*^9}, {3.597787492184195*^9, 
   3.5977875441939087`*^9}, 3.597792000205372*^9, {3.597792081409504*^9, 
   3.597792095375978*^9}, {3.59779279928274*^9, 3.597792817576613*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tRange$$ = 
    311, $CellContext`\[Theta]$$ = -0.1537, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {
      Hold[$CellContext`tRange$$], 1, 765, 1}}, Typeset`size$$ = {
    619.30126953125, {80.125, 25.875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$30592$$ = 0, $CellContext`tRange$30593$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`tRange$$ = 
        1, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$30592$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$30593$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        MatrixForm[
         N[
          Dot[
           $CellContext`d[
            $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube]]], 
        MatrixForm[
         N[
          Dot[
           $CellContext`YAB[$CellContext`\[Theta]$$], \
$CellContext`RGBCube]]]}, 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {$CellContext`tRange$$, 1, 765, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{665., {109., 114.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.597787514417426*^9, 3.597787545489477*^9, 
  3.5977920021183558`*^9, 3.597792097271496*^9, 3.597792818563271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cube", "=", 
     RowBox[{"d", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{
           RowBox[{"nYAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], 
         ".", "RGBCube"}], "-", " ", 
        RowBox[{
         RowBox[{"nYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}]}], ",", 
       "dstRange"}], "]"}]}], ";", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"cube", "  ", "dstRange"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Max", "[", "cube", "]"}], " ", "dstRange"}], ",", 
      RowBox[{
       RowBox[{"Min", "[", "cube", "]"}], " ", "dstRange"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tRange", ",", "255"}], "}"}], ",", "1", ",", "1024", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dstRange", ",", "255"}], "}"}], ",", "1", ",", "255", ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5977880864722567`*^9, 3.5977881928886127`*^9}, {
  3.5977882668744717`*^9, 3.597788269762632*^9}, {3.597788333721455*^9, 
  3.597788336819146*^9}, {3.597788440500194*^9, 3.5977885113153887`*^9}, {
  3.59778854137212*^9, 3.5977885513234053`*^9}, {3.597788600498378*^9, 
  3.597788609747533*^9}, {3.597788657874672*^9, 3.597788671052372*^9}, {
  3.597788784830915*^9, 3.597788794780958*^9}, {3.5977914012803*^9, 
  3.5977914046241207`*^9}, {3.597791557163344*^9, 3.597791579185073*^9}, {
  3.597791684645949*^9, 3.597791685233151*^9}, {3.5977917189600277`*^9, 
  3.597791719079159*^9}, {3.5977918491867933`*^9, 3.597791849780739*^9}, {
  3.597792663498433*^9, 3.597792669774373*^9}, {3.597792900684722*^9, 
  3.597792905052825*^9}, {3.597793271678891*^9, 3.597793277166144*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
    857, $CellContext`\[Theta]$$ = -3.141592653589793, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {{
       Hold[$CellContext`tRange$$], 255}, 1, 1024, 1}, {{
       Hold[$CellContext`dstRange$$], 255}, 1, 255, 1}}, Typeset`size$$ = {
    207., {20.125, 25.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$31018$$ = 
    0, $CellContext`tRange$31019$$ = 0, $CellContext`dstRange$31020$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
        255, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$31018$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$31019$$, 0], 
        Hold[$CellContext`dstRange$$, $CellContext`dstRange$31020$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cube = $CellContext`d[Dot[
            $CellContext`d[
             $CellContext`nYAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube] - Dot[
           $CellContext`nYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube], \
$CellContext`dstRange$$]; {
         MatrixForm[$CellContext`cube $CellContext`dstRange$$], 
         Max[$CellContext`cube] $CellContext`dstRange$$, 
         Min[$CellContext`cube] $CellContext`dstRange$$}), 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {{$CellContext`tRange$$, 255}, 1, 1024, 
         1}, {{$CellContext`dstRange$$, 255}, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{282., {93., 98.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.597788109632285*^9, 3.5977881236815777`*^9}, 
   3.597788194895542*^9, 3.597788337559786*^9, 3.597788461294986*^9, {
   3.5977884997007847`*^9, 3.597788513578912*^9}, 3.597788552905973*^9, 
   3.597788613412838*^9, 3.597788672242565*^9, 3.597788800533147*^9, 
   3.597790960066607*^9, 3.5977914091120987`*^9, {3.597791560529758*^9, 
   3.597791580490794*^9}, 3.597791687444585*^9, 3.597791720277866*^9, 
   3.597791798715774*^9, 3.5977918506043797`*^9, 3.5977926715251713`*^9, 
   3.597792906329767*^9, 3.5977932783511257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597880130903573*^9, 3.5978801450394897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   RowBox[{
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox[
      FractionBox["2", "3"]]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["6"]]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      SqrtBox["2"]]}], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5978801456434927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["3"]], ",", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["6"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       SqrtBox["6"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597880152014372*^9, 3.597880196871119*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00Y7WeMJrssrH9kH5UjemjFpvT2MP/FT
zOZpk/bD+dZHvbicii/A+QVVfombC27A+bk7UvuYlB/A+VdeeHIuT3oC53fp
f2PYFvkCzi/UPjH1wNI3cP6v5Ox1d/M+wPlJe8MCJqR9gvOTP145cKDjC5zf
Y7A9f1nbNzif6cB285aqH3C+oJb3ufszfsH5HvOdFn+Y9AfOF39/xq1++z84
f9bxXYzMmQwOML6NrON/hRRGOF/7gcCT2hImOH/tCqGMrUXMcH7NvdjL2m0s
cH6hjYX3vCmscP6v+S5JryewwfkXCmYllC9ih/Mt3ZX+3V3IAeefdLVc4TCH
E85funGm5aPVXHC+qLJOVtxKbjj/EiNHk+QeHjh/K0fxsgsneeF8HVGBrKSj
fHD++75vIsbX+OF85fZ2/fwsATj/UdTtW07PEXyPp5d/bs0ThPMrilIzxN4i
+H7bZnuJlQnB+e/+ZNUwf0PwF15v3JJXLIwIjwzbhMrfCL7s34nRhVUicP4z
9+5THCyicP5htTP2ct0IfhbHMhZFTjE4f/sCFdvDExH8c9Y2R4MExeH8H1mz
gxP6EPwTAfNDecUk4PwkS5vly6cg+F67iioDbyP4htYrvX8rSsL5AHp9aIE=

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwV13k4VN8bAHBr1pi5g1BIexEpJYX3pFJRylJUtqgsqSTJliJJmygpsmdr
UVlKWTpRCm2KrFnCLHe+yG5mbL/7+2uezzPzzD3nXc57rqbraetjIkJCQi+E
hYT+/ymKpb/3rA8zsaqLLK1RDXm3lHy3Wf2uMySKXon+/fkgFrzUPdpy5zSc
ndu2PvGzJ2YqePBe37kIpZMN0Wc+B+JWs4jKrDu34Ydm6z69z9fwb+c7y5Pv
pEJp0NXrRz4lYGtvldYHd17AEFdLZ/OHxzh22KEw/g4GjV1rbF++fos3V5lL
m56tg73f7d2DY2uxT5DlkUKfZnhjFd+8N7Aen3xzLFpkcRdsrO+7lAItuIGz
SyrHtRek/iYlrFPsxNd1x4VeH+TAk5/lcmli3fiMVvW991l9YNst/fC+Wy/u
PdZ7Ke11H/jqvfRb692LD6QJeV/63AeN0wFpn/168SZFQ1NE9oH/M25v15Ve
LDL7eABr98PPkx0d33N68Z1fN3bgwn4oLamIiuf24oLAvfzyigFwvfI2/uMJ
Jha4nXjefmoQiuM15BY6sLALfSSgzH8QWn3/+XxwZeGqd0FbH4YOQnL6Es8j
niwco3K92T56EIK+2jNu+bPw8h+5Ig15g2BZfnzRoxgWtt3EOlDbNwhbHjl/
qf7Aws9pR2Zfew1B2v6nMf+WsrHCO07NPd8hWLMvJ7Vbi40DT/jE+QUNQUGX
E6NOj423fbq4cu116vfB2xcnGrNxW3CKTd7jIRjHauVcWzaWZLflPOIMQbVC
e0pIOBu7lh/YF3N8GGZOPY892MLGa18rEyqnh+HO+TXuEp1sLPKitT79/DAs
lVH2fd7LxhlpTnaFUcNwU+SpJucfG3dfPu7U+GQYVHutS6XmcLCrub/3gn/D
cLc8JUhMj3LTvajc8yNQlLA19VsYB6+tszPXuzQCLb+iVqZGcrBIjYpsSdQI
WDtceet5g4MzSpJvf0kYgZwra5lkHAd3J2fFD5SOgH70i+3xOdT/HX2VqS80
CjMeVmIpXzjYbajh/fuoUeBd03/iIkdil6AYuzcxo8BMd3k5lyCxg+jugRcP
RuFy4JqLRYokPqD4YX5q7ijc/qZ29t8CEu80zPe/UD0KkZs2PFTVIrFO2C3t
TZJjgHSfrNxuRuJV0rs+6NHG4MH8b/uid5F4+V2xQyuVx2CovG7tz90kXpgV
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
Tog=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
5Nw4wgRF7q2Ned8kEavf/fH2E0wIbntec61NEkloKxfnejNh21NGlxkpiehz
+zo1opjw3fKgQrGIFIoze6urWsQETqxpdOoOKbTZLvt9qRALlgnYfomylEL7
Fau2V4uzYK+/s7yfjRSa/1A8VUOwoOxIUJa9gxQSTPAYLlFmQZhOcbW4mxTi
pPhMOa5jgdR39T8hkVKorHNbzJW9LFgrR7i7vpdCdYNPq3zus0Dm5evn2XVS
aJocYik/YMHMTrdR1mcpVNsnJPcmmwUfg6vOezVLodDb184Ov2DB8QGPsGCm
FBrZf3p2spoFaUV1CUmi0shQ1dGzgtIxV6wutLRJSiNvg5LFY0wWeDCXKqvQ
pRFb/FvZimEWGC4KyHikLI1O3Q4qPjfOguaIVU/zNaWRQ+OnjHJBEqTsL+N6
K2l0JV9Xn7echImhdQuk7KWRxPZevfLVJHRcbd9mt18adcF6mYuaJDwtX1/f
4iyNtjlecOzXJcFcrefHgJc0ktoDfK6mJIRyjNn/bkuj0M9Er5ATCaOxk7Ib
mqVRwNfQjaxYSjdxVGu02qXRmBpnNvk2CWz7HV7qXdKoWnjcyzSBhAH5lDoV
hjSyr6IfCk8loT3dIFRkUhplfU3TLH5EgqtD1diIGIHiizI0hktIOBptbzEs
QaDYB5lem8tJcClnZJJSBBr4ftIh8DUJToukrQfoBHr2QkhyFJPg2H0kt02Z
QBa25vwxH0mwcuN3qtUg0Jx9RMqdVhJ2pyQWvV1LIPNy0Xr/dhIs6taI4XUE
mlJdnLSvg4Sdmval5boEMssRm/vbTYLZ6EPaS0MCpYVd4fEzSTBdqnfquTGB
Nj1pHCpkkYDsPlU92UKgX0GqwU5sEkyKxs5kmREoJVbDJeM3Cfr+2z6kWhAo
5/hnjeYxEvRyWxcn7ybQ6jL6tz0TJGxu8/BNsCaQbqeJ+CdKZ24wSlx6y55A
jR1NBjl/SFg3Pxh45SCBhEOM/KTnSVirE/gt/DCBFoj2FhzgY4PmUSn1MGcC
2UFhaBo/G9Tfbf550ZVA9t9S6mmCbFgeFaXt5U6giGqF5XkibDjXvDHU1YOy
t93uXJUoG6pX9jXs86Tu/+hVXJ0YG5xrjd2NzxFo35E5g88SbLjLz8sSDaTu
s2tG7zrBBtI2Y2wuiECPv/T9OU1jg37mbjNOCHW+w7JrW+lsaN7yuLs5nEBO
f1ulBmTYQA8+rJx1jUANq9sK2uXZcPST6OnkGwSyHl3eFq3Ahnzl0tLrNwmk
qW3XoKPIButy2j6f2wSqankl56nEhjQR/Oj4HQJ5fc04Q+kfGHbw4DkkEujq
0eaYeIqvT364tSWVQHcfZ+ikL2JD2/bzXevvEehkBa9QeTHlj0Q1rZVpBAI1
Ot9tiv0HGoMUM6j4vO5V4Fdhw4cNwfXiDwj0oc98xp1iuctrlOYfEkjIXf1x
I8XHvze78bIIFJjuqbpWlQ0LfNYvbMslkEP2tzM/KLar7trT8JRAzb4fTJcs
YUOmdMxD/JxAb5lfeo9RPOpswC18QaBV+Z2WDyne8oIBOfkEUp7sCaP0D9z8
eyc2tZB638MNIZT+gY7dpp0xr6j840/YTukf0Lw/onmphEDMQK0WSk9A4NC9
QN8yAi38dUs3hOI6w111JyuoeOYVOVB6BBSvTyocrKT8NRlvTukVcGt7dNKq
ikCdm9fMF1Ncom5XjKqp50/5hlN6BxYG/BPYWEOgd3+9Pv+f9/73zH51LYHm
B1X7Kf0Dj+QPPFD+QKDa6PAaSk8B74QQR/IjgQw/3j2TQrFpcdEW/noCPeDz
6gqjOE7w6M3xTwTaKyK46CjF3XukOpifCVSjfVTNmOJ1j15r/PpCID/TW1yC
4hDeqYuN3wgkFZFyo5vyR4Op/Me3TQQyyI8efUzxotvv5It/EuiV4FkVd4rd
e7xP5LZQ9a27V24VxeXaqq/utRHo8wnrll9UPETCPi249YtAcuZnj92g2KEx
wC6ik0AzY+/KN1Kco7Iq80I3gWzE3NpbqPhOeDSNnOolUHeax/vzFG+rvGRy
uJ9AbibDgeIU9x381W7GJBDDGG9fReWPhInDYxeSQMmF1pEZVL5tWtLkGzpE
INfERn8axdH99RIVowT6Uo08u6n8LXxv3tbCJZBESbSvEcUdj2uyJ8YIdMXH
QyOOyndtj4ot66cJdEq2Lm85VQ+O1pvFbWYIZLswN9CVqpcIncIWjzkC7f4y
8idVjqqv8SfeuXw0pBaWRIxR9RUckvpwiSgN2Zfzsqyo+sw5IudlIk5DeTdz
xO2l2fDF9LbRIUkaWh5WucpGig3LhK79SKLRkNFz3aANVH1/jA0QklKmoW71
kuwsYSq+3uPfNRfTkOWd9lJPIcr/e7wzdqnSkJ9M16X1C9ngqXBK/+oyGipN
ZOo/WEDVS6aD+5wGDRnfMbJc85eELRFNm5W1aMh0X7hq+SwJp47bCOhr01Bh
XvYz0xkSKtV33PfdQEMHk3UmjKeofl+wuZFtREOvwqztOjgkvKiR023bTUNL
c20TqvpIaM26/W/SmoZCy/WM2ntI4I+S/CRrR0N1ypcfjXSRsNdy4XHbfTQ0
b+1Vwf+LhNmm8cT/nGgoOEaD9u071c8Hm/4Ue9JQNTYYlH1LQohmbNBLbxrK
N82xG6wiodBn59/cczTU/rnH/2UlCYv+VfLd96OhyWXkmE4ZCSPyOcIRoTQE
KyrLWS9ISNgZIGcdS0NfXyn+1bxHQl2sbvKOOBrSuupikZJCwr8fw4qm8dT7
tn06+C+RBLejRxdvTKIhidfJ/5XGkWAYaLFcOZ2G1qmt6O++SkLPs8XrGXk0
1FojXLbQiwQ5XnNh90sa+qwzHCnlQc0n/dsb2wpoyKKycTntNAlFtQv1G4pp
iPXhYr3AMRIiO0e2FL6hoQgXrZ70/dR8kH67O/QzDe3xX9P63JiEgHMnTsn/
pqHEeXioRe0D0ZYjboaj1H3l98ur8ZGQvMLfzZlLQ+9mg49KzrGgpDn6ZM4E
DcX2Pg3/OsaCMcPnxzf/oyHlyHIxfmof8RQYc9kvTUeWu9g2EtS+cizh0oGk
9XSUK1Vw58d5Fpw7K3qgYgMdpchE7h30YkGEebxj1yY6qgivkBt1Z0Hm9COH
VYZ0JIh56b9dWNB1+L99JWZ0ZNTEGk/azQLHlVL2zXvoaD6rbOreMhZYl9yz
kPejo6J9t4QD65hwasx1Xi6Ajg4fOLyFqGXCZR2NV3KBdJRjMHA1s4oJZU/L
VORC6ShfI2H3S2r/W5bxkyMTSUf/un90XU1jwmSUdDItiY5G1AqsFan9Mf3A
5X6JEjrqq4116yCYMDLnHiwwSUe7FiXd32zKgAOOlmv+TNFRVZ8qEWbIgNoi
zeaRP3QkLvtDq2YDA1Ldh7Xb/9LRBT4TT/1V1L7cerY/f6EMqsl8oDMoxoB7
Rd4WznIyyJE/d61p0yDsdPdTLN8og1TPR32SchmEBy3hrzx9ZdCOQ0+Ej7kP
wMwpE5eLszKona9dy02mD1T+3j7kEyiLNHiCziqbuoGx40a9iKAciiuc6y2w
aYN3qxpA9YYcqjp7cueMTBO4i+QIqonKo/j7xy/mD9dBaeYKk3e35dHXAz6V
q3zLoNHI+L09TQHxrTTbjK4E4Gn3e3tcYhXQCnfJ+LzZCvzRNmOfpLwiej8W
sv8m8Qm7Ghg/fpygiDr3Xl6y43ETPv3780RHkiJyzdgiOv+2CXs/OLKNnqqI
rKv9fud3NOEw0cu9wWmKyNflx5UF9B/4flvdIvscRWTGHRY/HPwDN190iJsr
VUSLv/O79dr8xBYV5y7a/VJEFhMW9L/cZmznKfgxslMRiUm65Q2It2DHZUny
ld2KqKne3ez9yhbsdr28aNWAItp/I8PQ50ALvnKQb2R2WBFdsvWN8q1uwVUz
N11z/imitf73S5VvtuL3L5YU/OJTQhprE7fG5rTiBteCeUJACS2+YLV7Brfi
X/U/7gcJK6F9tvzFr3mtePruohZbQgktt1AQ73dow/PWeSsj6UrI40NalpJP
GxYSgPOvZZXQdcM1ITuvt2HZM660VUpKaK1ZekNsZRtetGT8yKFFSsjIddPG
nJ9teFnT1RdxKkqoK3ltZfFIG9aIUvj7fokSupjVc/iNcDteb/TEclZNCXEL
8qX+/3/b/wCfer3d
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
Olw=
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.8164964964434397, 0.8164965809277194}}, {{
     0, 6.283185307179586}, {-0.8164964964434397, 0.8164965809277194}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.597880198244688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], 
     SqrtBox["6"]]}], "-", 
   FractionBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    SqrtBox["2"]]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597880240168996*^9, 3.597880289564253*^9}, {
  3.5978803209731493`*^9, 3.5978803258440104`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["6"]}], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"3", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.597880248800294*^9, 3.597880290470766*^9}, 
   3.597880326404903*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597880248800294*^9, 3.597880290470766*^9}, 
   3.597880326406925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597880448752018*^9, 3.597880476230926*^9}, {
  3.597880581112226*^9, 3.597880583903514*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         FractionBox["2", "3"]]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       SqrtBox[
        FractionBox["2", "3"]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.597880454991905*^9, 3.597880479743347*^9}, 
   3.597880584484406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Reduce", "[", 
  RowBox[{"TrigReduce", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]], 
         FractionBox["1", 
          SqrtBox["3"]]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            FractionBox["2", "3"]]}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], "==", 
    RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"%", ",", "\[Theta]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597880536807497*^9, 3.597880554640568*^9}, {
  3.5978806011974783`*^9, 3.59788061978401*^9}, {3.597880650733955*^9, 
  3.597880699063414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["3"]}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["3"]}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}]}]}]}]], "Output",\

 CellChangeTimes->{{3.597880544462129*^9, 3.597880555306375*^9}, {
  3.59788060425844*^9, 3.597880620325838*^9}, {3.597880653308145*^9, 
  3.59788070011345*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.597880544462129*^9, 3.597880555306375*^9}, {
  3.59788060425844*^9, 3.597880620325838*^9}, {3.597880653308145*^9, 
  3.5978807001443996`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox["1", 
            SqrtBox["3"]], 
           FractionBox["1", 
            SqrtBox["3"]], 
           FractionBox["1", 
            SqrtBox["3"]]},
          {
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "-", 
              FractionBox["\[Pi]", "6"]}], "]"}]}]},
          {
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
           RowBox[{
            SqrtBox[
             FractionBox["2", "3"]], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "-", 
              FractionBox["\[Pi]", "6"]}], "]"}]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], "==", 
      RowBox[{"YAB", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], "/", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}], "/", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "0.1537"}]}], "}"}], ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597880752836281*^9, 3.597880825656514*^9}, {
   3.5978808743002787`*^9, 3.597880902510867*^9}, {3.607532912866146*^9, 
   3.607532962985074*^9}, {3.607532999909602*^9, 3.6075330020977497`*^9}, {
   3.60753312357823*^9, 3.607533159998487*^9}, 3.6075332031046333`*^9, {
   3.607533245436756*^9, 3.607533246894586*^9}, {3.60753330408053*^9, 
   3.60753330831291*^9}, {3.6075333906832027`*^9, 3.607533395256816*^9}, {
   3.607533440797658*^9, 3.60753344266076*^9}, {3.607573818225745*^9, 
   3.607573820994843*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = -0.1537, Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}}, Typeset`size$$ = {
    240., {53., 58.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$58217$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = -0.1537}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$58217$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> {{{
          1/3^Rational[1, 2], 1/3^Rational[1, 2], 1/3^
           Rational[1, 2]}, {(-(2/3)^Rational[1, 2]) 
           Sin[$CellContext`\[Theta]$$ + Pi/6], (2/3)^Rational[1, 2] 
           Cos[$CellContext`\[Theta]$$], (2/3)^Rational[1, 2] 
           Sin[$CellContext`\[Theta]$$ - Pi/6]}, {(-(2/3)^Rational[1, 2]) 
           Cos[$CellContext`\[Theta]$$ + Pi/6], (-(2/3)^Rational[1, 2]) 
           Sin[$CellContext`\[Theta]$$], (2/3)^Rational[1, 2] 
           Cos[$CellContext`\[Theta]$$ - Pi/
             6]}} == $CellContext`YAB[$CellContext`\[Theta]$$], 
        Plot[{(-Sin[$CellContext`\[Theta]$$ + Pi/6])/
          Sin[$CellContext`\[Theta]$$], 
          Cos[$CellContext`\[Theta]$$], Sin[$CellContext`\[Theta]$$ - Pi/6]/
          Sin[$CellContext`\[Theta]$$]}, {$CellContext`\[Theta]$$, 0, 2 Pi}]},
       "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{285., {97., 102.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5978807621773376`*^9, 3.597880790659925*^9}, 
   3.5978808426584177`*^9, 3.597880921690187*^9, 3.607532965259182*^9, 
   3.607533003116889*^9, {3.607533125180155*^9, 3.6075331611944637`*^9}, 
   3.607533203731291*^9, 3.607533247938243*^9, 3.607533309055444*^9, 
   3.607533396511841*^9, 3.607533443362008*^9, 3.607573822868197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigReduce", "[", 
  RowBox[{"TrigExpand", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "+", 
      FractionBox["\[Pi]", "6"]}], "]"}], "/", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigReduce", "[", 
  RowBox[{"TrigExpand", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "-", 
      FractionBox["\[Pi]", "6"]}], "]"}], "/", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.607573432260947*^9, 3.607573473241785*^9}, {
  3.6075735268756847`*^9, 3.607573564202228*^9}, {3.607573838461972*^9, 
  3.607573840588739*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["3"], "+", 
    RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.607573425090777*^9, 3.607573473913351*^9}, 
   3.6075735342907553`*^9, 3.607573564920882*^9, 3.607573841509367*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["3"], "-", 
    RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.607573425090777*^9, 3.607573473913351*^9}, 
   3.6075735342907553`*^9, 3.607573564920882*^9, 3.607573841511402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1", "1"},
        {
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]},
        {
         RowBox[{"-", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "+", 
            FractionBox["\[Pi]", "6"]}], "]"}]}], 
         RowBox[{"-", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
         RowBox[{" ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "6"]}], "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "6"}], "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.597881526575115*^9, 3.597881624565824*^9}, {
  3.5978816882212877`*^9, 3.597881698107583*^9}, {3.607575513661421*^9, 
  3.607575514276556*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1"},
     {
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", "\[Theta]"}], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "4"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], 
         RowBox[{"4", " ", 
          SqrtBox["3"]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "48"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "5"], 
         RowBox[{"80", " ", 
          SqrtBox["3"]}]], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "6"], "1440"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
         Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2], 
         Rational[1, 4], Rational[1, 4] 3^Rational[-1, 2], 
         Rational[-1, 48], Rational[-1, 80] 3^Rational[-1, 2], 
         Rational[1, 1440]}, 0, 7, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "24"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "6"], "720"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {1, 0, 
         Rational[-1, 2], 0, 
         Rational[1, 24], 0, 
         Rational[-1, 720]}, 0, 7, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", "\[Theta]"}], "2"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "2"], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], 
         RowBox[{"4", " ", 
          SqrtBox["3"]}]], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], "48"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "5"], 
         RowBox[{"80", " ", 
          SqrtBox["3"]}]], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "6"], "1440"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2], 
         Rational[1, 4], Rational[-1, 4] 3^Rational[-1, 2], 
         Rational[-1, 48], Rational[1, 80] 3^Rational[-1, 2], 
         Rational[1, 1440]}, 0, 7, 1],
       Editable->False]},
     {
      InterpretationBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SqrtBox["3"], "2"]}], "+", 
        FractionBox["\[Theta]", "2"], "+", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", 
          SuperscriptBox["\[Theta]", "2"]}], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "12"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], 
         RowBox[{"16", " ", 
          SqrtBox["3"]}]], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "5"], "240"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "6"], 
         RowBox[{"480", " ", 
          SqrtBox["3"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {Rational[-1, 2] 3^Rational[1, 2], 
         Rational[1, 2], Rational[1, 4] 3^Rational[1, 2], 
         Rational[-1, 12], Rational[-1, 16] 3^Rational[-1, 2], 
         Rational[1, 240], Rational[1, 480] 3^Rational[-1, 2]}, 0, 7, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        RowBox[{"-", "\[Theta]"}], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "6"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "5"], "120"], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 1, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {-1, 0, 
         Rational[1, 6], 0, 
         Rational[-1, 120]}, 1, 7, 1],
       Editable->False], 
      InterpretationBox[
       RowBox[{
        FractionBox[
         SqrtBox["3"], "2"], "+", 
        FractionBox["\[Theta]", "2"], "-", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", 
          SuperscriptBox["\[Theta]", "2"]}], "4"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "3"], "12"], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "4"], 
         RowBox[{"16", " ", 
          SqrtBox["3"]}]], "+", 
        FractionBox[
         SuperscriptBox["\[Theta]", "5"], "240"], "-", 
        FractionBox[
         SuperscriptBox["\[Theta]", "6"], 
         RowBox[{"480", " ", 
          SqrtBox["3"]}]], "+", 
        InterpretationBox[
         SuperscriptBox[
          RowBox[{"O", "[", "\[Theta]", "]"}], "7"],
         SeriesData[$CellContext`\[Theta], 0, {}, 0, 7, 1],
         Editable->False]}],
       SeriesData[$CellContext`\[Theta], 0, {
        Rational[1, 2] 3^Rational[1, 2], 
         Rational[1, 2], Rational[-1, 4] 3^Rational[1, 2], 
         Rational[-1, 12], Rational[1, 16] 3^Rational[-1, 2], 
         Rational[1, 240], Rational[-1, 480] 3^Rational[-1, 2]}, 0, 7, 1],
       Editable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597881625306417*^9, 3.597881698548362*^9, 
  3.607575515757069*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rYAB", "[", "\[Theta]_", "]"}], ":=", " ", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1"},
     {
      RowBox[{"-", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", "6"]}], "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", "6"]}], "]"}]}]},
     {
      RowBox[{"-", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", 
         FractionBox["\[Pi]", "6"]}], "]"}]}], 
      RowBox[{"-", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{" ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "-", 
         FractionBox["\[Pi]", "6"]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.597881788231358*^9, 3.5978818024399767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cube", "=", 
      RowBox[{"d", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{
            RowBox[{"rYAB", "[", "\[Theta]", "]"}], ",", "tRange"}], "]"}], 
          ".", "RGBCube"}], "-", " ", 
         RowBox[{
          RowBox[{"rYAB", "[", "\[Theta]", "]"}], ".", "RGBCube"}]}], ",", 
        "dstRange"}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MatrixForm", "[", 
        RowBox[{"cube", "  ", "dstRange"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Max", "[", "cube", "]"}], " ", "dstRange"}], ",", 
       RowBox[{
        RowBox[{"Min", "[", "cube", "]"}], " ", "dstRange"}]}], "}"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"-", "0.1537"}]}], "}"}], ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tRange", ",", "255"}], "}"}], ",", "1", ",", "1024", ",", 
      "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dstRange", ",", "255"}], "}"}], ",", "1", ",", "255", ",", 
      "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597881778112784*^9, 3.597881810878399*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
    64, $CellContext`\[Theta]$$ = 3.141592653589793, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], -0.1537}, -Pi, Pi}, {{
       Hold[$CellContext`tRange$$], 255}, 1, 1024, 1}, {{
       Hold[$CellContext`dstRange$$], 255}, 1, 255, 1}}, Typeset`size$$ = {
    972.98203125, {195.9375, 18.704375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$112569$$ = 0, $CellContext`tRange$112570$$ = 
    0, $CellContext`dstRange$112571$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`dstRange$$ = 255, $CellContext`tRange$$ = 
        255, $CellContext`\[Theta]$$ = -0.1537}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$112569$$, 0], 
        Hold[$CellContext`tRange$$, $CellContext`tRange$112570$$, 0], 
        Hold[$CellContext`dstRange$$, $CellContext`dstRange$112571$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cube = $CellContext`d[Dot[
            $CellContext`d[
             $CellContext`rYAB[$CellContext`\[Theta]$$], \
$CellContext`tRange$$], $CellContext`RGBCube] - Dot[
           $CellContext`rYAB[$CellContext`\[Theta]$$], $CellContext`RGBCube], \
$CellContext`dstRange$$]; {
         MatrixForm[$CellContext`cube $CellContext`dstRange$$], 
         Max[$CellContext`cube] $CellContext`dstRange$$, 
         Min[$CellContext`cube] $CellContext`dstRange$$}), 
      "Specifications" :> {{{$CellContext`\[Theta]$$, -0.1537}, -Pi, 
         Pi}, {{$CellContext`tRange$$, 255}, 1, 1024, 
         1}, {{$CellContext`dstRange$$, 255}, 1, 255, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1018., {177., 182.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5978818131102047`*^9}]
}, Open  ]],

Cell["Where does this error ocure", "Text",
 CellChangeTimes->{{3.597887946096026*^9, 3.5978879575297737`*^9}, {
  3.597889344895341*^9, 3.597889359585155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]YABsign", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "#1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "#2"}], "}"}]}], "}"}], ",", "0"}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"YAB", "[", "\[Theta]", "]"}]}], "}"}], ",", "2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.59788962323405*^9, 3.59788967293137*^9}, {
  3.597889703823958*^9, 3.597889716645357*^9}, {3.597890378363041*^9, 
  3.59789038046367*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \[NoBreak]\\!\\(maskPos[\[Theta]]\\)\[NoBreak] at \
position {2, \[NoBreak]\\!\\(1\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\
\\(\\(\\(\\*TagBox[GridBox[{{\\\"\[Piecewise]\\\", GridBox[{{\\\"1\\\", \
\\\"#1\\\"}, {\\(-1\\), \\\"#2\\\"}, {\\\"0\\\", TagBox[\\\"True\\\", \
\\\"PiecewiseDefault\\\", Rule[AutoDelete, True]]}}, ColumnAlignments -> \
{Left}, ColumnSpacings -> 1.2, ColumnWidths -> Automatic, AllowedDimensions \
-> {2, Automatic}, Selectable -> True, Editable -> True]}}, ColumnAlignments \
-> {Left}, ColumnSpacings -> 0.5, ColumnWidths -> Automatic], \\\"Piecewise\\\
\", Rule[SyntaxForm, Equal], Rule[SelectWithContents, True], Rule[Selectable, \
False], Rule[Editable, False], Rule[DeleteWithContents, True]] &\\)\\), \
\\(\\({\\(\\(maskPos[\[Theta]]\\)\\), \\(\\(maskNeg[\[Theta]]\\)\\), \
\\(\\({\\(\\({1\\/\\@3, 1\\/\\@3, 1\\/\\@3}\\)\\), \
\\(\\({\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \[Theta]\\)\\)]\\)\\)\\)\\), \
\\(\\(\\@\\(2\\/3\\)\\\\ \\(\\(Cos[\[Theta]]\\)\\)\\)\\), \
\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)}\\)\\), \
\\(\\({\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \
\\(\\(Cos[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \[Theta]\\)\\)]\\)\\)\\)\\), \\(\\(\\(\\(-\\@\
\\(2\\/3\\)\\)\\)\\\\ \\(\\(Sin[\[Theta]]\\)\\)\\)\\), \\(\\(\\@\\(2\\/3\\)\\\
\\ \\(\\(Cos[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)}\\)\\)}\\)\\)}\\)\\), \
2\\)\\)]\\)\[NoBreak] has only \[NoBreak]\\!\\(0\\)\[NoBreak] of required \
\[NoBreak]\\!\\(2\\)\[NoBreak] dimensions. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.60042679862283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \[NoBreak]\\!\\(maskPos[\[Theta]]\\)\[NoBreak] at \
position {2, \[NoBreak]\\!\\(1\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\
\\(\\(\\(\\*TagBox[GridBox[{{\\\"\[Piecewise]\\\", GridBox[{{\\\"1\\\", \
\\\"#1\\\"}, {\\(-1\\), \\\"#2\\\"}, {\\\"0\\\", TagBox[\\\"True\\\", \
\\\"PiecewiseDefault\\\", Rule[AutoDelete, True]]}}, ColumnAlignments -> \
{Left}, ColumnSpacings -> 1.2, ColumnWidths -> Automatic, AllowedDimensions \
-> {2, Automatic}, Selectable -> True, Editable -> True]}}, ColumnAlignments \
-> {Left}, ColumnSpacings -> 0.5, ColumnWidths -> Automatic], \\\"Piecewise\\\
\", Rule[SyntaxForm, Equal], Rule[SelectWithContents, True], Rule[Selectable, \
False], Rule[Editable, False], Rule[DeleteWithContents, True]] &\\)\\), \
\\(\\({\\(\\(maskPos[\[Theta]]\\)\\), \\(\\(maskNeg[\[Theta]]\\)\\), \
\\(\\({\\(\\({1\\/\\@3, 1\\/\\@3, 1\\/\\@3}\\)\\), \
\\(\\({\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \
\\(\\(Sin[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \[Theta]\\)\\)]\\)\\)\\)\\), \
\\(\\(\\@\\(2\\/3\\)\\\\ \\(\\(Cos[\[Theta]]\\)\\)\\)\\), \
\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)}\\)\\), \
\\(\\({\\(\\(\\(\\(-\\@\\(2\\/3\\)\\)\\)\\\\ \
\\(\\(Cos[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \[Theta]\\)\\)]\\)\\)\\)\\), \\(\\(\\(\\(-\\@\
\\(2\\/3\\)\\)\\)\\\\ \\(\\(Sin[\[Theta]]\\)\\)\\)\\), \\(\\(\\@\\(2\\/3\\)\\\
\\ \\(\\(Cos[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)}\\)\\)}\\)\\)}\\)\\), \
2\\)\\)]\\)\[NoBreak] has only \[NoBreak]\\!\\(0\\)\[NoBreak] of required \
\[NoBreak]\\!\\(2\\)\[NoBreak] dimensions. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.600426798626492*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {"1", "#1"},
           {
            RowBox[{"-", "1"}], "#2"},
           {"0", 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"maskPos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"maskNeg", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", 
           SqrtBox["3"]], ",", 
          FractionBox["1", 
           SqrtBox["3"]], ",", 
          FractionBox["1", 
           SqrtBox["3"]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             FractionBox["2", "3"]]}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}]}]}], "}"}]}],
        "}"}]}], "}"}], ",", "2"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597889674345372*^9, 3.597889717625826*^9, 
  3.597890381100012*^9, 3.600426798637093*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597889853158505*^9, 3.597889857540435*^9}, {
  3.597890120922997*^9, 3.597890124098057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PiecewiseExpand", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{
       RowBox[{"\[Delta]YABsign", "[", "\[Theta]", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5978901339394817`*^9, 3.597890212670632*^9}, {
  3.597890288132381*^9, 3.597890290769993*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[GreaterEqual]", 
           RowBox[{"2", " ", "\[Pi]"}]}], "||", 
          RowBox[{"\[Theta]", "<", "0"}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.597890177673686*^9, 3.5978902132417183`*^9, 
  3.597890292227797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox["\[Pi]", "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
          RowBox[{"\[Theta]", "\[Equal]", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
           FractionBox["\[Pi]", "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
           RowBox[{"2", " ", "\[Pi]"}]}]}]},
        {
         RowBox[{"MatrixForm", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
          RowBox[{
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
           FractionBox[
            RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.597891050772461*^9, 3.597891122188867*^9}, {
  3.5978912618360443`*^9, 3.597891316005412*^9}, {3.597891353051839*^9, 
  3.597891370734918*^9}, {3.597891465216514*^9, 3.5978914811457977`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"0", "0", "0"},
            {"0", "0", "0"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {
             RowBox[{"-", "1"}], "1", "1"},
            {
             RowBox[{"-", "1"}], "1", "1"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"0", "0", "0"},
            {"0", "0", "0"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}], "||", 
         RowBox[{"\[Theta]", "\[Equal]", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"1", 
             RowBox[{"-", "1"}], "1"},
            {"1", 
             RowBox[{"-", "1"}], "1"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {
        TagBox[
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "1", "1"},
            {"1", "1", 
             RowBox[{"-", "1"}]},
            {"1", "1", 
             RowBox[{"-", "1"}]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
         Function[BoxForm`e$, 
          MatrixForm[BoxForm`e$]]], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.597891372013459*^9, 3.597891482359988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Piecewise", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"G", "+", "B"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
         FractionBox["\[Pi]", "2"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "+", "G"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "+", "B"}], "<", "1"}], ",", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
         FractionBox["\[Pi]", "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         FractionBox[
          RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
        RowBox[{
         FractionBox[
          RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
         RowBox[{"2", " ", "\[Pi]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]"}], "<", "\[Theta]", "<", "0"}]}], "}"}]}], 
    "}"}], ",", "Null"}], "]"}]], "Input",
 CellChangeTimes->{{3.597926924783389*^9, 3.597926965351029*^9}, {
  3.5979270052058887`*^9, 3.597927023352458*^9}, {3.597927076112207*^9, 
  3.597927375278658*^9}, {3.597928972466358*^9, 3.597928988156109*^9}, {
  3.597929046867424*^9, 3.5979290885372753`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{"B", "+", "G"}], "<", "1"}], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]},
       {
        RowBox[{
         RowBox[{"G", "+", "R"}], "<", "1"}], 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]},
       {
        RowBox[{
         RowBox[{"B", "+", "R"}], "<", "1"}], 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]},
       {"Null", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.5979272167747107`*^9, 3.597927249334537*^9}, {
   3.597927349746253*^9, 3.5979273757327213`*^9}, 3.597929096349326*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "6"}], ",", 
    RowBox[{"\[Pi]", "/", "2"}], " ", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"7", " ", "\[Pi]"}], ")"}], "/", "6"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Pi]"}], ")"}], "/", "2"}]}], "}"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5", "\[Pi]"}], ")"}], "/", "6"}], " ", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "\[Pi]"}], ")"}], "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"11", "\[Pi]"}], ")"}], "/", "6"}]}], "}"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "6"}], ",", 
    RowBox[{"\[Pi]", "/", "2"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"7", " ", "\[Pi]"}], ")"}], "/", "6"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", " ", "\[Pi]"}], ")"}], "/", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.597928031858972*^9, 3.597928059891905*^9}, {
  3.597928091653737*^9, 3.597928148525792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "6"], "<", "\[Theta]", "<", 
          FractionBox["\[Pi]", "2"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<G + B < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{" ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{" ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["\[Pi]", "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<R + G < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]}], "+", "0.5"}]}], 
         "}"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"1", "/", "4"}], ",", "1"}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "r"}], "}"}], ",", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", 
          FractionBox["\[Pi]", "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "6"]}], "||", 
         RowBox[{
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "6"], "<", "\[Theta]", "<", 
          RowBox[{"2", " ", "\[Pi]"}]}]}]}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Green", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<R + B < 1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "+", "0.5"}], ",", 
          RowBox[{
           RowBox[{"0.3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "+", "0.5"}]}], "}"}]}], 
       "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597928559794848*^9, 3.5979286685837593`*^9}, {
   3.597928733728745*^9, 3.597928754275741*^9}, {3.597928815049721*^9, 
   3.5979288717941*^9}, {3.5979291159386272`*^9, 3.597929127980763*^9}, {
   3.597929163885757*^9, 3.5979291961844187`*^9}, {3.597929454486833*^9, 
   3.5979294748445463`*^9}, {3.597929511495516*^9, 3.59792959945166*^9}, {
   3.597929675282404*^9, 3.5979297271172028`*^9}, {3.597929762649514*^9, 
   3.5979297790034122`*^9}, 3.597929819123199*^9, {3.597929850729494*^9, 
   3.597929881188436*^9}, {3.597929917589932*^9, 3.5979299563399487`*^9}, {
   3.5979300064839287`*^9, 3.597930121325137*^9}, {3.5979415084271317`*^9, 
   3.597941566709869*^9}, {3.597941596739175*^9, 3.597941618990679*^9}, {
   3.597941747047269*^9, 3.597941758121895*^9}, 3.5979418723002977`*^9, {
   3.597943577416791*^9, 3.597943607910387*^9}, {3.597943656859023*^9, 
   3.597943672813488*^9}, {3.597944945687141*^9, 3.5979449854601917`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxdWgVQllu0BayLgYXdhdjd6Dawu7AbbLHBwlYETFQsRMVEEBVBUdCFNNLd
3Y1doM/H3h9v5jl35syatdb2+v/f2ef79zodVm+dY6CmoqLiWF1F5X/XiGKL
jNufvWhqSo3dXtUD6Ph4tczz+x1oQ/7CGtb9QymSeUxhHmbMQ3gc1Pgc0Ha4
P/nrhu0fvCqEFn02cKwx9TlNclozrdrHCDrMPPyYx1LmITx69Fn83PpwEN2d
P/19VEo4lXlNKRy70JmSSltauU6KoZ7Mw5Z5fGYewqPo4cppZ9aEUfopJ12N
M1FkeqmP9mGDV7StV0TqltvxVMw80piHBfMQHmOHao4OOhlB7d2b+U8cEUtt
DTQN3u54Q9U3mXXr9COJxjGPdsyjI/MQHtf8/QbUeRxFK0oPTD2SH08ug37e
+XXoLU2fd3tYUdc0us48ljMPN+YhPMoW7u86JTiGbDpmhLy5kkRdq20tvTHB
g5p93p/iG5lOH5nHTebRjXkIjwn5vVuZlcVRyvyJc76MT6Udm9LPDA9+TxkX
Fhy7cyiTJjGPJOZhxDyEx829GRr+jRPpnG5MQdNfafQucm7P+Lle5NB3gPaB
Htl0i3mcZR6ezEN4fFG3Uqs1JJl6p5xyGDA7g2rr+H4wTvAm41CNYL3YHPrG
PHoxDw3mITymXp/8bfziVAoxHmE461Em6d0buqHpKl8aY1iwvd+xPJrOPIKZ
x2LmITxmX/6zy/NdGhk2LOmz5W8W2da1r+WS60d16/k2rdungOYwjy3M4wHz
EB4HlsWVrApLp3r2tz+a6eVQya42D+YaBlCM/R23nIRCMmEedZnHJ+YhPB51
cVqvmpFBT3TnvnjwJJeGJ5/T/fTlA92eYrLy/clismMeDsyDmIfw4P2XKfsv
X/ZfkOy/Utl/mbL/8mX/Bcn+K4Wyb8NlH3c7SDGpTX3JvOGmH+VOgVX70kT2
aeumue1CTj2lQ41PPdQeH061lmoO0HqwXUel8k8YGSWnf5ljuFsn8eWWf/9F
0jTZ92HSB7pzfZhxfQTIvj4g+7wD14fUR21zm2nD9pq7S300X2s35F2j8+5S
H1E2D94uW/aBqrlf//vKNKyqD3SXvnBvSdy0e+FO1Gg2fUy2jqKs5U9fHhq8
V6fSnhhD0eyHGvshfmhL33jIfogfPUyrBaTmWbqLH0dR737i3RAaW/r36MdB
kVV9pFD6ik7Pt2bpKS708Oy34Re/xNLctAN7HP4c0LnQebJl58kJdIz9ED8y
pM8USN8ZzX6IH6MeLVusisvu4kezbcN9e+4Op8MdDWr2yIqu6kNjpC9FlN/x
bVvkSsODnhyfNC2R0vt2ubl5zWGdzZUfYDKJH4fYjw7Sp0ZL34phP8SP2QGv
CjtevuoufmxRKXm96WokYf4HM33LuKo+dlX62sbgk9WW/nSjUHWDkIq7KXTt
Y50/Ryce1an837f8t+/Yj3fsx0rpc1ek7xmyH+KHQUFDE91NN9zFD+/zd548
doumv6f61LMZnVjVB0ulL6rabBp9rSbIqZPG6fiKNJrt9Gn5tR7HdSwrC2SQ
D/vxh/24LX2yWPpmLfZD/NhbZ7PG2jE27uJHqw7z7+SnxNIo90vnY0uSq/ro
eOmr04c8GlWo/p4OeOb3dbbLIPWd8Xha/6TslyxqzX6MZD9Spc/qSt+dxX6I
HxOaZoZ6WdyW/ZCFHc//u6ytlkD4Xm52akZaVR+2lr589VbLZLPznjRxlU/0
2flZ9H6AR3vfz6Y6hpXfXzbtZD/esR/ixw3p29bsh/gRpnX+atS3O+7iR8AY
91PruiTR8gtPp96/n17Vxz9LX8+qdWa/djNvaqhyZ98G1Rza++XBkaRYM52k
yg2USx/YD/Gjj/T5j9L389gP8WPxkJGrslfddRc/2kdsPfBgUgr96b66nmd5
RtU5MFnOhb7b/rbwu+lDSTYH2un+66/9XM5kfHKz0JlS+QXmUwf2o4L9CJVz
YpKcGwPZD/Eja2JBt29B99zFjxHPG7p+GpRGNt6aoSlzs6rOkVlyrhyI2+5q
0NmPHoxc6N12UT7l7d41Tv32GR3Xyv5RQDrsx032Q/yYKefOYfZD/DBceOVT
zaEP3MWPdXsL+1lOTKeRy/3O/36cXXUO7ZdzyX90ll51e3/anjRgw8/qhXR7
8JJ77Y6f09Gq3D9FtJ79ED805JwSP4LYD/Hjx3pdt2Z3H7qLH5ZjfOz7Lcqg
5O975zRXy606xx7KuaZpp/fVtt8HGrG/vkbUsyJy+H1brZXzeZ1LlfunhC6y
H0nsh6Occw/k3GvBfogfR/d+PKatYecufrxVv9UlfGMmHbjQU3PQoryqczBc
zsUVDQMujnENpBotC50cl5bIeXVB9l8ZvWM/9rMf0+ScDJNzU5/9EL+cR49l
/5VBOSe15dxE698Xdcx3yv4KJws557rKudfW/kfy4plnZP+Eo7qcW8o51tvG
f/6GOcY6lR9v52gSHpFyTtka6amEmlxwF145N+iwnEPW7ayaWbXcL/01jsbJ
uXJIzhmXK88ulM29JP0zDsq50VTOkdp31sR7ZhzU+fP3f/8k0hE5F5rIOeHn
WrtTo+5X3IWH0vc3yzkw8sLVYOP5R3QSKvdnKnlIX98kfT4xXt95gMp1d+Gh
9G0v6eNfZx/qfXbYMXl/SCcVM+7LntKnS3+9Gz8/xlrO/3Qofbel9OEnjdae
u9fmhHx+mUTSV1tIn63WukWskcMt+fwyofTN7dJHDSKnlb1RNdV5Vbm/spS+
iq3SJy1shg2cNuaOu/BYIX1P6YNtLw2YHZ59SvZXDq2UvuYnfa7p05zypQ62
sn9yoPStttLHoue1dMoNMNe5WPkF5dFf6UttpE/dwkWfLc3uuQuv9A0aLn3I
oolq4z9PTsvzXaD0JQyTPqMdNvrswaP35fktUPY9rZU+ohuTu1PT8qzO1soP
uJBGSV8wkD7xIq1Y71zxA3fhkSL7XukDh6au29hkxHmdlMrvp5hSZV9fkH0+
6uP1drcXPnIXHsq+dZd9nGCfcL19rwvSn0vJRPalm+xTX9VJec+87KT/lkJ3
cb1Fy5oHknlwh47ra76nsCe7jvRRc6SWui3nj9gaRgZbew1wtrOmFY31T5sE
hdJ41sOM9YhmPUQPQ9ZD9DjU9VbFPA0ncjwSblPmG0lHGUMwmv44NtyylQuN
xam8+21jqQVjCMYT//XGodquFFNO/ZcYJdBzxhAM3WvTnesOdqONw7/vbxCS
TJMYQzCSNvT/OHncO1LRic3I+Pe+lMEYgjH8Zp0r4x550IcEJ9O3ozJoJGMI
xskaBwdl9Paky3vP9rxakElmjCEYEVvKIg+7eNGK5hvDd1hlUzRjCEbbmNU7
2un4UPdX442mj82lDowhGBtHRTd45+lLX+Z3aKVdkkeGjCEYLx9MfLp0sj/h
SznUrhfQG8YQDNX6b6b/Dg0gs4tx+snji6gmYwjGNOOeRdf0Amluf2d114/F
NJsxBGNExCBatjOMutpMT1vk4E0D0HPFS9NnlJnx9WeTVhFUP7U4+r91d2h+
3+ZB22ZEkg7rocV6DGY9RI8mrIfoMe97VrjF4kjyNtxrM3WOP30419D686UX
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
oSdzR2UO2faj14+hVv+3+mlu2Fqx9D1lpadcPRkaRwtljih6tGMdRI8A1iOT
9VDmgsqc8OSr68OT1KLphKwuUaE7fG57ke5077nldZJITeZ8z2TuZ8o6iB6v
WI9xrMdCmdspc7xSk+0HDm2NpRJZ714abHQmy4fuu9pp7JiUSotkDlcqc7ky
1kH0uM963GM9nspcTZmzLdSd9K5jUjzpyXph3s2987X9qZqlX9bOsen0TOZk
fWRutoh1ED0ush6iR02ZeylzMI/a7VR8JyURZD2kWd2kzeYP5DxxuKdjWgbV
kjmWocy1PFkH0eMI6/GC9VgmcyllTtUt/OuYDS4ppC3rlqiNh7OfBpF+hcOt
/INZtFzmTE9k7tSddRA9trIeooezzI2UOVLA1JwxNf/9zvSXdcml8GNPPodQ
kxftTDq3ySEXmQN9k7nQB9ZB9FjOemiyHnVkrqPMeSocwzMW+KVTuaydu1t7
vbkRRr7rLRevcMulujKnsZK5zR/WQfTQYj18WI9VMneROQn1a/T2mF1FRtXa
ynymj83bcDJqW2Po9UX5tEbmKDK3QX/WQfRow3rsZj2WylxEmZOs3f2o8+9/
v1cMZG1UoOZ3NDWCukYZN4n+XkDLZM4RLXOPdayD6KHJemixHqdkbqHMMa7H
XfSZtjGbrsmqPuWl/1rVKIo1K/hU36qIRI/dMpe4wTqIHnVYjxjWw0nmCsqc
IXjEobU2t3MoSNa/dhs+TOn0b1/TsrApA0vohcwJGsvcIIR1ED1UH1fqcYL1
4Hq+Us+X5krupORQ7PcVvy/mSW7UVXIklXWc80RK7qPKGBGS0zhIjqLkKo6S
ewhGT8kplNyil+QKMyVnOCo5gJILHJO5/RmZ48fLnF2ZuyfIXDxY5uR9ZY6t
zLX7ydy5rsyhTWVOrMyNT8lcVzCUOayvzGVTZW7qI3PUQTLnVOaeg2UuaSBz
ygkyR1TmihNl7ldd5oDbZU6nzO12yFztnszZbsocTJmL2cjcSlfmWH4yZ1Lm
Tv4yF8qQOdFgNb1HY+oF0CBZh/AKwah+rlrPUznBVE3WGrxCMArPxC3IXRFO
BbIKhmDMmff0mnlQJM2WdS6vEAy3licTew2LoTeyuvMKweiUvrRN+P046ihr
Z14hGKcfDlixq1EiWch6hlcIxtctte80O5RMn2X9xisEY8XA9Iw3ham0TNaV
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
Mr2QLjVZtf7HyVQSjPOM8T8z7DUg
      "], {{
        {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwlkk8rhFEUh+8Zn8S3sGXDwkKysLAYEhb+hQUlLEYJi1HCYpSwGCWkIQ1p
SEMa0pCGNKQhsWHDhvKcfoun3zPve+855713ylt66rsjIYQKKIMrGIN9C+GA
bIRR/IacgFO8gTyEmCmbYBzPkFGYwmvJNAya0vcM4XVBdUdMfbxuFj8nB2AN
fyZX4cvU3+tO4p1B65J4Imjdp6n/McTxM7IXVvCOoN/LeIy8hRye87lgE4+T
D1A05QI84tPkPRRMOQt3phkvIWU6jwLkTfue4N2US/Bh2leEEp4PmuPIVGMY
dkxzeb8L0zNflzHV9vmuTTX8m19Ms/s9pfFs0Lksms6gFWbwbbIKmvFXch3+
8Mqgd1E8Sb5BJKK1u17LdH5+Rhume/D9v6b3fq9dpu8rwTeeImug3XT/JzBn
eu89fkx9tvw/Rq/qoD1tpn170Gea3b8nYXrm/5V+Uz2/y3n8H+e3ba4=
            "]], 
           PolygonBox[CompressedData["
1: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
Dh44No+zgk5Fl3Jm/g8UMZwE
            "]], PolygonBox[CompressedData["
1:eJwtlXtojmEYxt/necOY83lmmJkZZhg2ZvyBPyiKoqgpx5oyh6IcayvH2sqx
KMeinM1oDjmsjTWsYW2sObShiSwimojf5d4fX7/vva/ne7/3ue7rud/Yxavm
ZPsgCNL4RPDZwyc1DIJaWO2CYDf8wIJE+BnuhTXOdK3T+miYBJvQF8Kd6Hfh
UOqZsCPsBsvQF8Bc9Nswkfp82AF2gaXoF2EAG8Ek6hfgQJgOQ3gW/uL372EG
12dgLByv38HlYD96CRzO9TLYGfaCFdx3McxHL4bDqC+CnWAP+BB9FlyNXgQH
U58J28FIeAt9DlyPfgMmUJ8NI2EHeAf9NPyO/hZOpH4KDoCp8A/6PLgZ/RYc
Qn0ubA87wWL0GXAF+jUYT306bAvbwuvoG+EV9Ao4ivoG2APGwpfo2fA4ehkc
QX0l7AqjYZW3fj5Er4Zjqe+CUaH1V33eAkdzXQmLWLce1lLvD19726/2rf2v
c/a8ei49321v+9W+tf9v6EfhT+op8Le3/Wrf2v8mZ37LV/l7z5vf8l3+r0Kf
Bq9SbwNvwqlwEHohXII+BbYJ/7c+KPSWJ+VK+cpx1i/1Rf0pgSdgOnq98ox+
WP2iPgo2e8uTcqV8NaOfVN6oj4V/veVRuVQ+/zrrt/qq/nrqB3SWYB2sQ8+H
n9CHwS/wEByP/grWOztPOjc6P9/gNjgGvUrPi74VvqEeB99565f6pv6Vo+fC
BurxsBEegRPQ3+ga/SD8Sj0Z/vCWJ+VK+cpCnwwvU2+lfsMcmIL+VP10ljfl
Svmq97Z+IfUCGMe6SbB1aL/XfbTfJ+jP4TjqebBPaPuXD+rnUmf9Ux/Vz4jQ
+qs+L2o5lzqfec7mheaC5kO5t341OPNPPsrPmND6pz4qbx+c7V8+yI9+oeVP
OVSez6M/giOpr4PdQ8u3ci4/7zjbv3yQH71C81c+y8+Xzvqb1tLvvqH5K5/V
r+vOzo/Okc5Tz9D6pz4qT03O8qccKo/9Q8uXcrYCHka/D5OoZ8EuMEq+evNT
vsrfStZth++pJ8CPcC08Tb0cJrNuDewGY2CNt2vVpZ9y9n+6r+5f7c0P+SJ/
zjmbJ5obmh8vvM0bzR3NnwJn/6f76v513uaN5o7mzzFn81hzV/P3mbd5rLms
+bzP2ftC7wW9Hx57e1/ovaH3xw5n81JzUfPxgbf9ljo7HzonOi+9Q9u/fMhq
8U3+HXI27zXXNd8rveVVuVV+M9EzYCuu+RpcQv8HsznfAg==
            
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0UsrxFEYB+Bj8EHmY1DTNCTJSG5pGpJbmlwmMUlIQhLSZCQhCcltwcLC
wsLCwsLCwsLCwkLJl/D8m8XT75zezfs7Jz6Qb5+oCCHkuIuFEJ2rK0NIyF8S
VSHMkGSHLLOk2KWXOerZo48FGtinn0UaOWCQJZo4YphlmjlmhFVaOCHHGq2c
Mso6bZwzzgYdXJBniy4umWSbbq6ZokiGWwrRTOkrXYPeNSIri9FbyFr3jPmN
/OGMbw75osQnm3ywwjvzvDHNK2O8MMQzPTzRySNpHqjjnhR/WCMk7VGIlf/n
HyZ8Ngc=
         "]], LineBox[CompressedData["
1:eJwl0b9KAlAUB+CbCj1Hz1FE/yiJCJEICQkRCY0wiSiJCIkIkQiRCIkIiRCJ
kIaChoaGhoaGhoaGBoeGhugZ+qThu79zucs55w5l15PFgRBCgftICFE56JiU
P4zGQigzxglpdpjglGV2maJJhj2mOSNLhTjn5NhnlgtWOGCOFnkOmeeSVaok
uGKNGknaFDligQ4ljlnkmg3qpLhhkwZLdNnq1xbQNWvU3MMyLRt2EZMj/bv3
W/lNhy9a9GjySZ0PqrxT4Y0yr5R4Ic8zGZ5I8UiCB+LcMcMv2gvj+tiO/P/P
H6v4NtA=
         "]]}}], GraphicsComplexBox[CompressedData["
1:eJw9WgdYj/37JevNyN57JXtmxi3K3hGSFdlCiCibVPbISiUZEZEiSqelvfce
3/bOXsXf3337ud7r+lznOefc7/t+n+dzf57nPnoa7FhkqFSnTp2n9evU+f/1
iLZS3oWDLthcsqyB7Yhoiq2wVjh8DMCcrAZ7A+qHkhnzJDximCfhofvR8GmD
2c8xw23dnHrv48hc5WNot/EhCNWKOTh6bRQtZp6EhxnzJDwqAmaVTVnmjoyq
TjaeM5JowFC957ZHInB3yVy/hKxYKmWehIca8yQ8jl8ZqnbE8BV2Do7L3u6Q
SmUP1sw5uy4GitNuWipnE+gI8yQ8Spkn4dHJsI3hW+M3qL/Vsn/vbxmkObbN
5IhTcejp3T5k+oRkasc8CY/JzJPweK7+/c6Pw28xd7HDuPJ+OXQ9JHhkk0cJ
WFNlNvtoSSo9YZ6ExzXmSXj0qbej6tY0X7T/eDArKD6XqpYd7DcrMgkOvRRR
b65lUC/mSXhUME/CY+fW3LPjI/2guLj0+J3DeaRdMqSzZXUKspdMX/RJO5uM
mCfhocU8CQ/veJ1BqToBcBk2Us1sYAHZmipUQlqn47xWUmm7Hzn0mnkSHreY
J+HRSCMobF9aIPZFq0TqJhfSR2UbpUZjMjE067TLyIUKqs88CY/3zJPw0HEa
u7nd2iBoGpXuGn68mGbenPlFWy8b0fsmGC14mEcLmCfhMYN5Eh72TR838igK
RtNmQe2aDi2lBVd/7fH3yYFRy8qh23/n0y3mSXjMZ56ER+mervd1jEKR9PiO
V2FaGR1cmVK5NiYXKo8d3lvqFlIR8yQ8hCfhMTrzvNaHT2FwmGW+xu9UBT3o
67aprkKBp1o6L+4/KaIRzJPwuM88CQ/efxGy/6pk/+XJ/iuR/Rch+69K9l+e
7L8SNNJvM1L1/i6NOn//xFD7dkXdo0674nDr0w/UtGPJJDP30yKjvRrpL7f/
+See1A5RUna7IFi33Pqtxi2cZss+jpN9HSL78pDs08ZWdnPGmVp5S3205vok
9dFhg/MYn1YXvKU++nF9kvqYJX0kXvpKsPSFI9In7qxImeMU64ZWC+l9pm0C
5a9yfXl4tKnG33LpSRRvd//typVhqO998/cri5j/7fuB0gfs2U/ix0CLeqHZ
xZe8xY9Y9pP44Sh9ZZD0mXGD3lrmZnngwbkv4y9/SiadHLP9Lr/MNC72mXmp
z8w0OoJm99LvRmFq1e9j79XjKVf6Rrn0kdHsJ/Fj0sOVenVx1Vv8OMx+Ej9y
pC9VSJ+KqrkT1K3cE+MjnpyYMSedcof1vb1t3RGNbX9/0Exqt3N80KC9sTja
y7DhwPxE6iF9Z4r0oXD2k/ixMPRVWa+r173Fj7bsJ/Gju/S1qdLnNkSeqqf/
3QvRyoZRtXez6Mb7Jr+OTT+m8fc//1IObatT+Xrr9Xj4LgmzXH8phVZL37oh
fcyA/SR+GJa2NNfaestb/NjKfhI/VklfvCl9svb21sk3GgJuvVXOpNbm0EK3
D6tuDDyhcelvAQUFXLjz5JFXIupYDm1mNzmd7KTvVUsf/M5+Ej9Mm2xT2aBp
5y1++LOfxI/b0lffS5+dNebhpDJlP5j5lwxzd1aQ8u5UuDY/Jfspnzr1XHKn
JCsZ5H3lQnJlJmVJ35wmfXQG+0n8mNYuLzrA2kH2Sz46sp/EjwzpyzOkT9vY
d8q0vOCP6WvfJZ5bkk9+I317BH200DD6e/8KaNfz/66qKaUBX2ssT8/L+V/f
vS19+DL7SfyIUb1wPeHLHW/xYwf7Sfw4J33dXvq8otHZg2rtA9Gyzp0Dm+sW
kumn+0czki01Mv5uoCIK1vQ+vbFvBlZfdJ19714uDZG+/Un6eDb7SfzQGzNx
bcHau97iRxD7SfwYLOfCFzknBu/83TH49jtk2Jl11/rTL4d7nFV88LLWmPX3
BpZQt7gdZvdnZOH3AINm/jUKipK+P1vOgQHsJ/Ejf3pp/y8RTt7iR1f2k/gR
KefKXDlnTFN2eRr2Ccb9icsCuy0voeK9e6YqO5zV8PzbP0pp/POWnh/Uc2Af
2CY6Syf/f+fGQjlHTNhP4ofRsmsfGo697y1+iJ/Ej+1yLi2Sc+rd5Hzd+o9D
sCtj5Obv9cvIYfQKp+4nzmuo/t0/5bTBtGz4pem5mLQq+MLPRwXUTM4dMzmH
/NhP4se3TVpe7e8+8BY/DNlP4kdTOdfM5Zxr4az72XF4GCYcbK6S8KycXH46
KHV2v6Bx5e/+qaSLmu8eD1+uQNZX00UdlIroiZxbD+Uca8Z+Ej+Omb4/rqbi
7C1+XGA/iR8uci46yzm5omXoZU3PcDToVOb2VL+S+Dy7KPuvmryV7fvGbsmD
+cVBbdSXF8t5VSLnVR4tZT+JH3xePZL9Vw0v9pP45TwqkfMoD+jy87KG1W7Z
b7FkJedWfznHuj3+lqk3/6zsp1hYyrk5QM7RIXYhSzYv2qfx9+fuk/i/cyZR
zh1HE9060eYXvYVHPTnHkuVcs+1u096m00Hptyk0Rc6JY3JueFx7drFa54r0
0xQIT8flXGp8Z12qv+KQxq/f//8nnY5In28vfT/Ys3HvVgOueQuPw3KOCI+J
F69H7ltyVCPt737NJkif3i59Oz11vfvIOje9hYePnANGci58Xnh4yLlxx+X9
Ipd+n+Y+Gyh9t+qHj/aSJFt5P8jFL+bpnfT1J602nHfqelJ+vzyaJH2ys/TN
el06Jpu42Mvvl4eJ0oe7SF82jJ9T/aauhcarv/st/399zlj6nrXduFFzNO94
Cw8f6aO7pa92uzJyYWzBadlvhf/rU2HSt9q5FtbouzjKfirEKumD4dIXExd3
cisKtdK4/PcGFdMv6TM9pO/Y4/K77e2dvIVHrfSxntLXrNvWbf3ryRl53kvp
tvSJCdI31GImnzt07J48z6WwlT4kPLSSina3uXROY8ffH7iMJso+3yj7/kVO
he75ivvewkN42iR95fDsjVvaTrigkfX3/lT8b59eln076f3N7g7LHnoLj0zp
A1ekL6Q9TrvZY/BF6ddVZCb77K3su6C6M4qfBThLP67CQdnHPrKvI57sOTpU
6Sk6aXVaMmFHDDXOrkj8b+MdLBnWIWLnvHiaEKdOK3fHQM1ubs5yl0AKZj2J
Hg1YT6KH6GkA62HWz752sYobnh6NtasOiqcNDbUvjTF1wg/dX7GOL5No8df8
WGu9eAQZmdrNXhRCB1hPosca1pPoIXoKZj1afzs+/lJnD0zB6eJ73ZLJf7Dt
vA3WD2Bvnp+c0C2NjLpcWf9GMwnr6J7+xG/h1IL1JHp4sZ5Ej+2sJ0PWwzlk
075oNU8k1dCIFSZp1G3Jx8ZXbz+CllNYZkOLTLLQnPq1WC0VdVrEdhpqF033
WU+iRzvWk+hxivWkxHpMvjHXveloL2wZ//Vgi6hMOmg2KzjA9Qn2Gqbsst2X
Q3c2fLBs3yID83ce2tbCMZY0WE+ixy7Wk+jhwHpawHqkbB7xfuZUH9TRSFYo
/rxPlsfGaH5f8wwh+8P3eAxUkJf1nS7TvmbBftmV2cp74ymB9SR6FLGeRI83
rCcH1mPs7SbXpj70RViam8XbSQq6aVhj36L0OTqf8dkXlZ1HW5Y9XDq+KgeV
kx8NUJqRSOqsJ9HjCutJ9BA9VbEexxscUlcM8cdV03ODrpfm0czv/X712/0C
RvbPDxRdLqBvpb8dYg0UmNjfV/lnp2Q6ynoSPaawnkSPr6ynSaxH9Pbq+CMe
AVjdYUussU0BfT2jo0817vB3czKvM6OITpovLd2UlIczLZOKP1akUATrSfSo
Zj2JHidYT+dYj85JBsbdNd5hwCttk7lTiuhej8NvdE++RNuga0c61hRTqxau
I+vMKkD697Lgct806sB6Ej3sWE+iR0vWUybrsWFSYgsf/yB8WtKzs1plMS12
f9TBSMUTm1Ktjo94Vkr2jg3Nr70txEBF3QcFlzNoHetJ9JjDehI97FhPg1gP
t/vTXfVnhgCfaqB0s5SUZiSZnLz2Gl7l5qdmry+nQeqrgoYML8aBsPansjZk
kSvrSfT4Mf2vnkSPgawnM9bjl8qbuT+jQ2F5OWV9pnY5PUuvm2jbwwsqdXZZ
ru9QSa+DPZoHOZVgfaqNW1mXHPrBehI9HrKeRA9P1pMh6zFz36DyG7rh0Bnh
ruz5voJW7hg80t3ZG6tbrz9jHlFFWnrNlq/sUAbryJ69NjXMJW3Wk+ixmPUk
ekxlPZ1hPbierdSLpuEYtPqlxTPkKT5/b9s5TuqHS30/4nq2Ui8aQ1hPopf6
4VLfD8HnW9p+vPIC+3o8mRpunEiBjEkwVq35kjLM8SWarFp/9khYCukxJsH4
NCy9rZHra9jf6pys3iuDqhmTYFjX9V302NsbI1PjepSZZpMFYxKMXnFO54tD
gfVNtNVjNuVSV8YkGCtjtQovbfXD0Ec90h61ySM9xiQYD8e9OjH8gz++z6g5
dNI3n+4zJsH4dKd/75j9gQgoSu69ZlshvWdMgjG5sa2f0e93OHfqRcj4DsU0
kTEJhrWxyppmp4KxrO/57W0DS+g0YxKM5LQjvx43DUXvwC2tqneUUQJjEoze
Uz/azrochgqDaa/COldQd8YkGEaPDSeUdIzAq7q99O8FV9IWxiQYb2xOVCm8
7FGva9/QpTdjaZ23xbrh143lfSiGOpkbBU432yPvl3G06rB3mfXvSKR5jKm7
NtWfyvZ5js5ZEYZaD0P9yQ3ekdrjrm86No6EzrSOCw6rBdMzrk9SH1duzm47
K99a3qdicN/r3v2tb87J+2kcVnJ9Suf6KOX69Ivrox/Xp8VcH57GHUf1qHbE
g6lNoi2VEilu4pK+q9aYyPd/Aln9mnBqj9Z+eT9KouD1Z09/KoyFyal1WHQ4
iDZlHZuo4xmNR0kRU31mh1LCf3vWTBsZi7obj4ypNQonN65PUh8rK3/fmhZy
QeYDCSj65bJ+6chL8n6VBKlP+7k+NnJ9esz1Ec/1SYnro+3NndXzlO5j7pb3
CV5bUmgyehVZqR3Q+PvzvEymr4eVZ9xpaibv16mUa6nRuXdUAtouPW+u1TeM
jB1Ve62zioPu15EDNS5FUkuN1LzDufFwsSjqdtAjmlS4Pkl97GyuN3iT3WVv
qY/v3Rt92a98Vd7PUyH1qR3Xh9SnZVwfUp+ecn3s9At2MW/jjPcXktMq4tLJ
dXL1w1fV5hoz/v5A6bShbrJyVMJhDY+//8IM+vG07MlCj2Q87+c1YXR4JD1P
tL5nOzYRdc/MVV5ZHkMLdkza+Pp8EgYt7ne8pjaWNnF9kvo4Pszdx3KPjbfU
R1PNtRY3s695S3185/r0guvjGdcnJa6P+VyfBnN9RBR32+yi6oJrr97mdJ+Q
Tc1zV6kbZxzR6P33ecyiLZpxhuZRR+X/J4faJNycfMQ2DWpmH2sue8ZQ9X/v
1ZIKk7GsS93aW83j6Zzj3dIPE1NxLD/NZELPBArk+iT1YbNQZcHjWTe8pT66
G3h18Pa4Kf8/OWjN9ak/10cV16flXB9nuT4d5/ro38Kkb/pYV3SvWvjx4cJc
Cr6jbXPa95g877nUS+l10GW34zIPzaUh32fGPz2eiX3rlTPOWMfRMA1dl+ZX
0+Dq4l6dNiKRohL/MxpUno7UPee2HNBKou5cn6Q+Hhtvyo3oYSvPey5GHm/7
KNP6tsxLczGY69N+ro+hXJ+ecX1Ecn1K4/oIuFVYfaLvcxgraX/xa5BHhw0G
fbVzOiHf0wpK87fv98jmpPSfPOpzvsbN6M93S9Cc7l4nVyXQjh1eQ2dOzUTD
iZvyO+omUzNlo/eGN7MwrMGUVa83ppAP1yepD5/L/saVX+zke1yB3nGvbv8e
5iD9Jw+9uT4Fc30YcX1qxPXRlOvTcK6PXUNbzbd96oZ3bcd+T3udT2N6t17m
cfqUzL/y6dLxU6d9D1hIPyqg5z0X1zRwzkVbdfWbh4Yn0VPHHi+Ovc/GysjO
KctMU0nVbvOb+U45sLj6eeE3qzTayvVJ6mOznorS6UIHmY/l44li/YYWtnek
HxXgGden9lwfT7g+reL6kPp0muujZ8DEJy/GuKNj/4E1H7cXUlXed8/wbafl
e6yQZmttL0laZalR9+/9LiJyf6x9u0seNnSdbbqvfgp9LZ3SOWt+LtxXRodf
s02n4DFdzLb9zEV2X2ftMU8zqBPXJ6mPj1u8wq4vdJTvuUKM/dhyaM9Gd72l
PiZxfdrI9fGF65MH10cQ16dcro8o3c1Nwn09sFWj2++mvYrpgVNOR8UCK5m/
FZFSg8WzKqZYy/NUTOHT6p0fdSEf7g3WLtuZnErXTnzO+HFfgSaVx5CETNoQ
GzXRclEe1F/qjzOJzaJgrk9SH+YHN1129r4r87ki+NXD1+HGTvI8FSOM65MH
14cN16emXB+GXJ9Gc32YlV7ZrJj5Cm/nt1RSTSqhVYbBB76NOqPR9+/zWEJv
3o1/XK/fWXmeSmlpql5KeL1CKFWajNn8KJ3Uuz20a/8rD2sOjX7RNi+bGmw9
+vuecz6m9T5to3cgh/ZwfZL6aHimrf6bfve8pT5mt9nmOyXznjxPpdDl+lSf
60PqkwHXR32uT9O5PgYe8g3+HueJluvqNyCrMmqv+jRdpeM5mf+VkfGpnk07
NTkvz1M5FWx167luXxEWJZ1pZ2CeSUmv9NaMWlIA/UZ7dQbUy6V79Uf5+dcp
xK6ytS1+WOdSb65PUh8Xbf37hF+6L/PBMiT26WipM+OBPE/lyOf6tJjrI5Hr
00quDyeuT8ZcH2kty/u21H8DQ5OvjZZNqqDowisafWvPayj9fR4r6GrvE6Ov
77ug8frv/a6g3b+Ut/4oLYajj+NnvQXZZLKwWa+FLoU4HT0vMrSNgrTtCo9l
Ly3C7RcTrG7cVlAc1yepj85PdlSk1z7wlvpYox60cP2Lh95SH8Zcn5y4PvZy
fZL60OL6ZMf1YXGv/Qm1Ai+8tCxtvOtDJQXEv426XX1B5jmVVH3864a7my/K
81RFvy6sdb+4qhT7dfRLnS/+Oc/KkLe9XjHcrqlN36yaR3ljbmjVPC1G8MG2
9ce55tEhrk9SH05vu7ws3+Qs86BKFGvv7rS32yN5nqpQy/XJlOujNdenF1wf
Cq5PIVwfTeotvxg+wg7LLz+ePts3hka2TVE1d3TA4/t2s9bviaPY8vWOn6wj
8MLP5WJ+lR+VtGyj3nt3NOo+8t+Z6R9ASuwn8WMI+0n8iGE/ubMfxewnJfZD
8bDeySsDHfHr9cW55moJdEFjaN5j97tYGHligU1GIh27lZunNjgWCy6lzE+6
+o6aDxk32NchDvYHKodEbwqmDPaT+GHFfhI/jrKfFrIfKuwnB/ZjUoyeZsDE
e3DK2afjeiGZytadsk8Luo8vH7fohmilkq3vBZOlbRJQaVBfJWRCKPXTKUal
RSImzO5U4asSTmPZT+JHPvtJ/LjFfqpmP1TZTxPZj+tfn9e+n/8QMxqtWp77
LY2mW2euUE51xq1OC/V/uGTQiwJSPvUzCVYjh0W8zo2gyfuvLeq6IwWpnac9
dnOPoovsJ/GD2E/ihxv7yZr9IPZTOvvxuZvymx4Gj1E5WGt167VZdNdtVIex
ZS5wcOg83KZxDkU2rrrlrkhFG6Uh7xKnxpDe7WkFs3XTMeGL56hFf37XCvaT
+HGT/SR+RLCf2rIfy9lPGuz/852yxmT+nqeYNeCqm2N+Dv1OtU7YUOuKjy9U
Rrn65FLxULsheaEZWF861SmqXRzt8f+878DELFhlRbWeXSeeZrKfxI/P7Cfx
o4j9ZMh+GLOfrNmPlJcrOlLAM9hNPO3hdV1BT4/sCgmzeI5pwXXHhBjnkdKS
uX4tn2fjRdzy48El8RS8e9HJxZdykBqU/2FqfALFs5/ED2f2k/hRl/3kzn4E
sZ/S2Y9Tsyz26c5xw/sFBz0T5uSTfpvbqooWL3Aj7dO4XNUCUpn4q3+POblQ
8tph4OudSIsbPooqa6BAf9cfsRr3k+gI+0n80GU/iR/ip3rshw77aQD7oZ7l
lrg98QW01ht5Vfzpy00fhpz4fsMdFRVFGj/SCulW9JLdr6DAwrsnNV+fTybF
9bodjpvmwfRai+fqpik0hP0kfjRgP4kf4icd9iOX/XSA/VDsyhp5cpUHbPat
9WnoUUSvJ3xStOj9ElQ3nVqfL6Z+Bk+8543Mh731rR5uBqlkNHD52k4V+Qg+
rHphyJw0Smc/iR9u7CfxQ/x0h/3Yzn4KZT8uNGh8ybboJYqtFvt131xCm6K7
a6q5vMKlNlFTBk0tJfdP9RsW3i9A5e7nvx+pp9PPt88ePV9TiHabNHb0655B
p9lP4sca9pP48YL9VMV+/GA/dWA/Jt9Qr36x0xMT7aYHju1aRu3WzbYn9dco
7Oenrf21jKZY6M8371QE0g/OuvtfJp1e8N+nGQlFMFywaF6PD5k0lv0kfqiw
n8QPTfaTJvthwX7ayH5UDlo7L/z7a1x4Pj54YWw5vftiUqvr8wbjJ7jPWPX4
z3nc0f16m3PFOKeV+dY2PYva5a2emDO9BC/Hbhrc8V02FbKfxI+37CfxI4r9
dIH9aMt+8mQ/bH3PuCiOeUERODhsy8lKMrZyXGE03RvW8x7M3re6ila4NFE8
rlsKIxvTqFlLc+jO3len9nmV4mgLaqgckUOX2U/ix2b2k/ghftrBfjiwn46x
H76Pd831DfTCLv1wZ++ECLrwxrhxowxfJBe029j/aCz5ME/GzOMc8yQ8yH5Q
5ZPEAOztOsP007UEmsSYBKPqeGHs4uggtF5iao2nyVTBmATDfpODx8+QUDw/
8+i21bs0us2YBGP+XL0bjv4RmB+Y7rokI5PmMqYFjFFnRBvzmd7R+GrecO0F
0xyqHf4X0zfGWNZk47BverEI7ti99HN9BS1lTILxrHaqY3hyHGw8xuxecSGP
XBnTNcb4r7pHG/vFCdiwcEGNb+cCasSYBGOtovakcWwi1Cs2nVR9UEirGdNo
xnidkPZVe14y6lseVTkzopheMaYGjNEy+NXmjuEpSOhz89r7tyXUnDElMsbm
11fSy6en4a6vW4+lf95nNzEmJ8Zy/9Ll/pXL/UqX+1WOnRcGDt/o44MWV2q8
LMqiyYgxtWSMYpf5ZmnL/HH/6NDqc03jqYgxPWCM6xeV1xxd9A5ar9co6fVO
IhvGpM0Y00wCpqrNCUFu9cU2fcenkjZjUjDGVz3zftHa4TiiFqBavSCDPjOm
o4zxgMY0MaEodF/zaazXxmy6x5h6MMagS/v3nbONQXb4pb5TKZcGMibBOHFi
ScnajnF4uvHx04dhCjrOmFwZI9NkxAp1m3gcrhc4RkU3nzIYk2Cob24e+V/r
RMy1z/DdnVtAIxnTPMY4s6J8Usb5JHSZ8Hlm6rYismJMXRmjYG7oM9emKShP
ahY/6Vsx5TGmCsaYNPl+r+OWqXhrrKrvdLyUNBiTYFwdcfyKbsN0WKlQgXLz
crrMmKwZo8Z5c9is3h44RStjZo2KohqZQ5bLXFJVckINyQ0jJhzeYOcQhEhe
6Qf7Sfz4KXNS8aOv5JLiR7j4oqSOs8wNN8scMUBywyWSIz6QuaXw8JMcUvg/
Op7b7ZY53hrJBSVXJB2ZGwqPVZIz/ssdZS4HN5mj1Tbn3O+05IB1ZG4nPH4y
T8Jjqcyt3ssca67keo6S8+nK3Ex4zJGcUHg8lbnRcJkj2Upu5y053hOZWwmP
W5IDCo8GMrfZKXOcMsnltkpOV1/mRsKjVHI+4aEvc5NnMkcZL7mb5HakJ3Mb
4TFOcrx/uZ6bzC2+yRzDUnI1yeXoucxNhMdpyen+5XbKMjeQOQWlSG4muRv9
J3OLf3OMZMnh/uVyMhfAGPmO7ye5mORqtErmBsJDVXK2f7nbCvluTpbvaBPJ
vQZLDqYn3+3CY4/kaMLDQr5b5TuZ1kmu9UZyrlPy3fzvO9pAcjLh8Vy+G9vK
d6Sl5FbakmM9k+9W4XH6Xw4mudgiyQkGSG5gGzKoNN80HLd5pYWSUwiPm3Ld
TnS/NvCc/t/c/uWAipdX+8dAVqplnoSHh1x/JbpHMidvJXPzbu8Dvo21iYOs
5CxzeuHRVa53F91AmVMvlLn1yVc3x2coJeIUrzRA5uTC44RctxDdUZkTn5e5
caX5LrPDO5JRxSsdkTm18KiQ69WiS5E5bbTMbXW1Zvj0ykjFMl4pWebEwmOJ
XF8uuqEyJ1WRuSkad68TNCMDvrzSEJnTCg8fue4vulMyp+wnc0u12M+amz2y
0J9XOiFzUuGhKtcHiC5D5oQyl6SQ2YWaDS/mIJRXSpc55b+5ZbBcDxPdSJnT
yVyQap7GKpYG56KWVxohc8J/c0Ph6ZfotGVO1lDmZsNbvT3uXKuArKQlczrh
MUyujxDdTplT3Ze5leHeh31+/vke2cAr7ZA5mfBYL9c3is5W5kTTZG50I+Xy
uzlbCnCTV7olcyrhcf3fddEFyZwmX+Y2fL4VyvlWSO9kTiS8nF+Fcn4VQl1J
96Fms1CM5pVGyjpGrtc7X2/Q6cJI1OeV6sraQK6Xnk1ZWrQ6FmW8UomsgrFw
sesNq4h4LOKVFsiqI9ffdDqVPnhcErx4pdeyesv1Xrn6XWPvpaA3r9RT1j5y
3frByNV7WqXjDK9kJetZuf5xe+M77Q9n4jOv9EHWL3J95ahcxZuybKzmlfRl
XSPXDWpXtBo6KBfreKW1sq6X6zZrpr848uccucYrXZVVMMIDRiyOu56HCF4p
TFbBqNOv2+fe0fmoyyv9VuVVSa6PtFK22dugEKN4pRGyqst1S8nxtSXXT+o/
Jjbt0Wv0btKm9y3dODotfy9AeCQwT8LjmXP9lC0jfHDc5Htmi8uJ9IQxCca7
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
      "], {{
        {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkT8rhnEYhX+HT+JbWGSQxWAwGAyUMFD+DZQwvEoYKGGghIESCgkJCQkJ
CQkJCQsLC4vr7hiuzul53vd+7nPunMqGkvqslFIuZEMbnMCyUnpER+EDf4zW
wxz+Au2EPfwlmoEj/DXaDWfyjGZYwt+gfXCFP///xhb+BZ2CH3wxugpN+EO0
FqbxpegGdOBL0HVoxb/Ge0gs/4yMwxfPH9AReMPfo4PwhL9F++FO3v00ZsnP
Yu9zecfIcyxnil235UyReV+eHbPu5dmR7Rpfg+7CML4S3YEBea/Y6V3uMnZ6
xhehK1An9xSZZ+SOD2BS7mAfxvAtyTeYx+eji1Ah54h3a/jy2Bd65V7jfp9y
T9HRt9xffLsFP5t8g1/5f9F1D34huV/R7WZy7xk5U1n0KGu865LvVgiN+GW0
AKrku8Vd2+WssXet3FPsOiTni75G5dzR44ScLy9+J8+OudX4P0HSbI4=
            "]], 
           PolygonBox[CompressedData["
1:eJxNmwf419P7xs97lAYlLbRlRUrIyJYVIpGtZZSVWaIkIiMlSoiKpgZZkVFG
yUhk7xWRPUKSfv7363M/rut/Xd/P9Yyzz/uc+zzPc863Re/zu/bLU0pDi5RK
0VFZSltJMVL0OcnXijaTfI3oQsm3iG4jebTo85KHqFymgleI3iX91dI3Eb1K
dIHSr6ZepV8lerf0l4v+T7/L9Bsv+UrlayQ6RPRp5b9etIXk60SfkfyKaGfJ
L4u+I3mCaFvJd4sukTxYdDPJg0SfkjxWtJXkMaKLJE9WO43V/r2iU6UfIX1L
0RtFn1X6QtGDJC8QfUPyZaINJQ8UfVLyAJVbp19//e6U/jzpa4ueK/qY0i8Q
rSP5fNHHJZ+tfL/pd5Z+46QfIH190f6iTyi9j2hNyWeKPir5YtG6ki8SnS+5
n8r9od95+t1OPtGf9TtDv9sk365824uOE12s/BdJ/5d+F+p3h/Tjpd9B9E7R
F5T+nOghkp8VfVNyb+X7Qb9e+o2V/nTpq4ueJvqI0t8V7Sb5HdEPJL8oerjk
JaJvS+4luoHknqIPM17RjSSfJTpP8mLRTpIXib4leaLa2UzzP0F0ivTdRb/V
71T9xkgeLrqB0q8VnRD9biN6V/S/u2gVyaeKPiT5Y9ETJX8k+pHkFaKnSv5C
9BPJj6me7VXfPNGZ0n8m/cmin4p+rPRVor0kfyP6meSHlW9b5X9I9D7pP5D+
eNH3RT9U+pPSt1H6E6KzpF8pfQ/Rr0Q/Vfoa0XMk/yn6leQlyreb8r8gen/M
aw3RM2J+k/gL9ftX8jcSC/EX65frt4r1rnIdVP5l0Qeke150F8nPic6Jea8m
2jvmn3mpKrlHzM960fMl/yP6dfI621By31hvf4ueJ3mt6ErJD6jerVT//aIz
pP9V+j6iv4iuYH9I307pC0Rnx75uKjos9jfrtp7kS2L9sg82YYyxH1j3DSRf
GuuffbUpOBD7C1xpzjoIfGEfby75itjP4EJjyUMDH9jX20m+LfY3+6C15Dti
P4BL20q+NfCJdVlL8jmxPn8SPUPyj6JfSP5e9DTJ34l+Lvl30bMkrxb9Mnmf
byy5X+z3WZqHLTQfM0WnB45sKXpT4Am4ubXkmwM/wbEtJN8QePaW6DGS3xR9
X/Jc0T0lPyD6quTpqreZ6p8mOk36P5Lx4xfR6sm0fuDKYclz/7tol+Rv8Gfy
fB/EvkymDQJ/jo6y1Hl0fJvH9TtAuidEX2e9ix4o+WnR5cnr6ALJ/4v19FMy
XoFbhyZj32+inePb0xZ96Jr8zQ+M9UAaeTgb1omemLyW/kleT4eAo8m0aawz
8vwZZThXqBOcPljyM5nxel2kk4/xsrbWiB6bvMZoe7X4I5PXJDw6+lVT/K/J
eA/uH5GcznnCuUKZ32KMP4pukIyjh7IvA0/BxSMkvxT4CC70lPx14AP7qC9z
FPsJnDhX8l+BF+BWd8lfBn6xLo6V/Hasj9cZt+Q3RN9LxrFTJH8eeAZOnSD5
w8ArcPs4ye9lxm/W8dl881jPrPszJf8c6591f7rkH2L9g4u9JX8b+DhZdBfJ
U0VfkvyQ6D6SHxFdlozzh0l+ITPeTxLdSfK9oi9KflR0P8mPib4meZrorpJn
iL6cvO73kvxgrP9XRbtIfk303eRz/0jJSzOf/7NFO0i+X3Sp5PtEd5c8S/QV
yctZ57nnjfkCO/4WPSEZQ/6K78t35vtjR+woeWJme4K1g72D3cMaelh079zj
XhZrlTV7UjIGsi7A9/0zr48asVYOSsZ8ztYfxB+YfBaAxewh9g6YTLkacU6Q
Z5z2fV3t/9tE7wXHRDeWfIvoPZLnKN8eueeB8c8U3S33PDD+8crXQPnvFJ0s
/VPSd8y9r9nPy0SPyj3PzO98+pAbB9j/B2S2T7BTDpE8RXTn3OuA73+j6q2h
+m8QnSj9KNGNJI8UnST5HuVrl3sd8P3nie6bex3w/aeLts+9Dvj+YP1a0eOS
Mf+7ZHsCu2LfwDvwu2Nm/Ps+2f7CDjsg2Tb4VnSf5LPw29DtLV5/Fexmj7O3
+8X3Yj9jt/GNDs7cB86dbslYij2KXdol1gprhjTyrI0+U6427WY+f2mbPsAz
BvreI8aDjnxV0Ge2n7Cj9pf8c4yXfKQzTsbLudUpxs4cgPWcYeSlDGnk2S/W
GHZcx+S1hoxen6RyzmPgr8t83jMvzA921d7Jdscl+pW57Q/skovEZ7ntE2wN
5py5xubA7jpJuk8y21+c3etFT0k+w7HrvtOvR9h32PL/49skn4X/Jp+Hh4qv
m0yRSSMPexX7HDudPUvZFrFGakdZ6uiefKZy9vKheyafwfgumWiv5LO4XuDV
UaItGG/m87mTaP1kHl3v5DO7U6SPjDoYG/4Ofg9jpG38C/wM+rBBZns7j/ro
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdoVUEQhs+eq7HFqDF2jT3G2HsX9UEFBUUFBYXYwIAVFKygYAUFKxiw
QgQrJASNvZfEklgSe4k1KvbYYvf7mX3Y++3szN3dmX/2NBw/fdi0MAiCroyy
jC6RIFgP77OYBCtjr4J3XRDcg02w+8P9+EvBLDgATsK/H+5l9CKmCP5lbR9s
gN0d1ocrYSd4C+Y521tn6KxKsDGjD/MM9tW9MvnpC8cRmwk3MboR8wgWsbYZ
1sRuD2vA3ox05q9DyykeexeMYL/y/9UehditYRz2BvjC2Z7dsbfBJ/jbwurY
qfAN/seB+RSj+VvWtsPa2B1hLX+27qCzSrFHBmyE3RM29LVTDVWrFP4/EL4P
rfbvYBrsgf8pLMa/A9bF7gzrRKx2quFtYhNgNPYSmOuspp2xV0sv/IkwBnsF
zMd/JzBtpbG0vOcsd9VAtagKN6oX4AP42FnuqoFqUS1id9Mdn4VWc9VeGnxy
dueRjETWjsFFrI2C34itDL/CZviGMz/KvDz8CAfDucQeCcynGM3nsTYCfiEm
Bn4OrTfUI+qF8fj7SQfWo6RRaL2nHnwZWs1UO9Xwj7OeXO1rpFoUsLYGxmK3
hFUilrtq8DC0NfkUU+isJm2wZ8LL+GsHaqwgmAJ2478EO2IvhzfxN4HlsRfB
bPwFsCn2IHjQ31l3Vw5T8WfpHTFaEnMOprKWondETE3lENreOkN75TjTVhpL
64p6B4yFzK8T2wBGYc9RvYm9Btthz4dX8cerR7FnwQP482ASdjI87TWTdtJw
Jf5Tge2tM7TXMWe5KUflWs7nphyVyzRn2n70Wn+Ai2EH/DfgGWe9qx5WL1fQ
O2Hs1HsM7U3pbemNfSf2OWyOPRqe9D2h3lCPLMV/Ak5mtCLmAtzqTBtpJK3+
hXa27pDPvBEsi71A+Tq70wRGC9bOwHWsTYS/ia0Of4XmU8xZ5rGwBI6Ba539
ZzajLTFXYIaz2ksDaVEaDoEJ8BCchX8oLGaPaL2h0HyKOey/Cfo26Bsx09l/
kr1G0mIVa2PhT2Li4I/QelM9ql7c40xbaSytIxF7m3qjx/2ZOlt3WOjszeru
yiGX9bowxJ4B053lpNqqxtm+JqqNarTFWc2lnTSUViXOvr36ButbXE/fGcZ0
5hd9T6u31eNpxOYEpq00lpbLnNW2xNf6e2hvQ2/kvM9ZuasGG529Ge2tM7TX
Dmd3Vw7Kxfne1xtQr2c50149oF4oA/8Dwf7UVA==
            
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0U8rhFEUB+Dr5YPwLYx6myZJSDKSmKQZSUNMaCIUoQjlbxGKUIQSZWFh
YWFhYWFhYWFhoXwMz5vFc8853Vv3/ro1hVJ2tCKEUOQ2CiHpY0us3pHmgWYe
yfJED88UeGGIV8Z5Y5p3FvhglU+2+eKAb0754Ypa96bUXGUIW97yS5252nyj
pux3VemZ4JpOLhnjgg7OKXFGOyeMcEwbRwxzSCv7FNmjhV0G2aGJTQbYoJF1
+lmjgRXyLFPPEn0skmGeXuZIM0uOGWKm6GaScnJGzoy89/JHyR/IX47+/+cP
10w16Q==
         "]], LineBox[CompressedData["
1:eJwl0c9Hw2EcB/Cn1T9S/8Ym63eSyWSSmUymTb4lWYpG0SgajUaxUWw0SkQd
OnTo0KFDhw4dOnToEP0VvabDy8fn+eH5vD2D+bV01BdCKHIXC6FfTVoY6/VM
8ECKRzI8keOZAi9EvFLmjQrvVPmgxicNvmjxTYcfboh7N65mDVE3yy8J/ZD+
Vk3YXxhwlk2uydBlgyvm6bBOmzSXRFwwR4tVmqQ4p8QZszRY4ZQZ6hQ4YZoa
yxwzyRF5DhmnyhIHjLJPjj2SVMiyyzA7LLJNuXdHzil57+XXhhH5t2L///MH
rBc2zg==
         "]]}}], GraphicsComplexBox[CompressedData["
1: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
lwgzdFoGlvWCsN5VvK+GUmOTNV6jdpppTwa5OQ8NDaO6+oP7GDTwpBPCXA8M
nWsLM/Rff2/h4tfTnxF09MfAQ5sMLmo7Vc73qZ4dSV5Vixrm1vShjsLsDYbO
z4UZOvmC5X00hj7vrjLapvpVrd/g5jFRP2No45v7385W9aMXwrwZDJ3XCzN0
2gJ2KT7f8bSsbFSVwHAr7XLjSbm29ROodfiq5P4VAmiZMLcFQ+c/hBk6tQNL
vU2mlUNDDU0CbbTlZ7n/eFg/mcJd23olfQ+kcsIcCYbOIcIMnaLB4k+lUKty
j33OOV3Thr6LPtzUNoWeB76Z5vlfMIHZsxR7CLOK9wbL75tGsc+t2t02/1dr
e+ptzX1d0qixR4C3+dZQshHmpmDo3EiYoVMzsPTH12S6/9AR9+03tOs7Vr2c
6ZpOGx/c6rfyYxitE+ZNYOi8XpihkzFY6n0mjTX4Jzty/i3tUJ9WrScYZJD/
v4duDdoQQUOE+RUYOvsJM3QKBEt9z6JyFaePzR9mr625eKCDU1Amtb64pEmt
N5FUQ5jbgqFzK2GGTu3AUs9z6In3APvy7e5ok79P69NwbjbtPDbkZPqqaEoS
ZhMwdN4uzNBpN1jqdx5tOPRH9cbVHLWOl1Y/M8nIofCdzX4+yoqhu8IcCYbO
ocIMnaLBUq/z6XzrA30vbrmn3dXn4Ki09XnUae3XdccN48hEmLuAoXMHYYZO
3cDy/fGGCvd/XnbN6L62fLO2frMuh1CI+YE3qW5W3Mig8YyBa4Mp6s6mvd3K
3eW01I9f6jUJpX7cecHDw/f4xvBqQUfLRZDPhka9Wxba8p29IZaFPmG0v53V
9+l6Try15Z3h/r9+x+DTta6+N3vAE1a+DXdbGU1tL68rnFjuOg/lI1n/No+i
JkX7B5g2ceGq85ee3PMympYt/BTd3fYhvz0TFZsfGkf7PHwdTOre4ohv1HOu
cSw9eLFiS1B7V7a80iSqT6t4+tE9rt4ax8d84dHT5BYDkyglq7mRg74DGw34
vKNmYAKNvTTBuXpfN+4ZE9oyd1sSmZd1n2qv1XKLN1Pe35ySQkNqGreN6+/I
PwdGpaaaJlO6Uc+3Y4Y/4yXVRvQJXpFCXUPtTmf5MW8oN+KTR8U0CrqSUXig
7X1+Get0+OngVBpsUe3C8Jvu3PV2y9jbddNoSYhBhukqD/au1/9L7ON02t2t
9qSrd53YbNupzhdz0uhYxV19Urs+56LR33YddE+ne38+OtDj3XNu1KHTt/f/
ZFA3z0F3HvRz5gUNV4ZsMH9NUf8Uhu1x8WSvzKjWC1dn0HebDq2Dt3rxKk3z
n9VbZVHiTKNq/u4u3OHRCOMJw36d/8jFG1povPnkoQcvBjTMotFVr3qs+enN
TyfVKqcfmU0nc8yMUsc84ncz/mjSviCL1gyOqPnsuQ/Pbnv6n3pe2WS2QW/h
74d8udaSChXpWC4N2uXu+yXUlZ99+MblLueQ2/VRjvPGvOBWXitrF67NpZTY
PT/sq/uxofHnyrMH51N+rby2teY94SPnopcmjMij32o8mfBfkB/nLx756GWT
fOo6/P3Vsede8sOjOVXXvyugK/82OND+tRtP7elcxfVtPk3b0jnv0kx/fli2
1bx/fQtoq73hwOxGAfzXOftR49yDqVX5v87697Rk++uWY5duCiWqF61vYmvN
Px6fnWDSPpze3Cx/0KyTLU95dWCyeXwEWWq6pdk7X2O75C3THM9E0cTgOUM9
B/3Ln96vnPnCIIa+LTlkFetznUdXnv9XSlEs3f58//vbSTf5SuMp8746xNOc
4wlzq8Tc4oIuBgvqLEqkKi2qPGm52J6trZv0MK+aTK5OvRv2z3XgsR3PO9mm
J5PRyIXGkzbd5fcP9Ho7PkuhBrHHw5d9d2TLQUdc3C6mUvrDuY3I8x6P9C3b
78WGNHLbs/7Fy8P3+e3kHa7h49PJbOzhLTPHO/Gl2A9/pui/ppV1LfRTaz5g
g6Vr3PLLZNDwRKeIfyIecH5+puZrbAY1ufniwJdLzmy+ZdGzSi6Z9G59Yq+D
812YysZRndNZ5DfwQ2rN1g8569h0jxZG2WRdsarp1cyHbFo3cFjn4Tm0LajF
0PYOj3iQ5Siv/s1yaeqlPoUP1rlyRjuPESM+51L7JeOsqM9jPnN/gO+UkDwq
22XRRP8vj3nAQOfR8+3zKeaT8feZz55wqleXlysPFtA99xMOqfvc+PjEG+O2
LHhDh4/Zzl0zSstG8P/2if9Hyu+bLX4fKT9Q+ZmI50OIh87iF+7XIJ/nIF/F
74K/qPQZ8BOV/1cg/h8pf1DtB2bxCw9rEM9vEa84D/6h8vsOit9Hyg9U64FZ
/MHjGsTzEcQr3ge/sAL8vabi75Hy/9R6YBY/8JQG8dwC8Yobwh+cAD/vgfh5
pPw+tR6Yxf87q0E8P0K8Ykf4gcq/ayv+HSl/T60HZvH7zmkQz+0Rr7g1/L9U
+HXrxa8j5eep9cAs/t55DeJ5E+IVr4Xf5wB/7qn4c6T8O7UemMXPu6BBPLsj
XvET+Htb4MdVET+OlF+n1gOz+HcXNYjn6ohXXAl+3lD4bzPEfyPlz6n1wCx+
3WUN4nk24hVPgX9XHX6btfhtpPw4tR6YxZ+7qkE82yFesQX8ukj4a3nir5Hy
39R6YBY/zlKDeC5EvOJs+HPKT+svfhopv02tB2bx36w1iGcN4hX3hh9nBP9M
6kcAKX9NrQdm8dtsNIhH/Qggxbvgv+2G/9ZY/DcCc/NSXA/+XB34c9fEnyMw
Xy/FNvDvbsC/GyD+HYF5UCnuB39vAPy9YPH3CMxhpTgA/l8Q/L8V4v8RmFeV
4qXwB53gD/60KPYHCczlLUvyfxYl/cNx4h8SmCeW4jHwF0fBX7wg/iKB+XIp
Pl/Kf0wX/5HAnFmKU+BPxsOf7Cb+JIG5ZynuDP/yX/iX28W/JDCblGJj+Jvr
4W/6iL9JYH5Zij3hf2rgf9YR/5PA3KAU14A/WhH+6N/ijxKYF5Xiv+Cfqu/3
RfL9Tq2r1W19ZWYoRXfoFxJ7+zGp73l1/g/R38FjewdymdtGL8e2dkH9C2bx
T/dp4J9ybfFPCevzbPgDWJ8jZH0+KOtROVmP9xt/Sah5LoIe3KoQvbLnM1Lf
/2p/+KksfuohDfxUXid+KiGfHSWf01MSLx4KiibfukZrv8/zIPX9r9aDf8ri
nx7TwD/lV+KfEvLZS/LZYILXtG/V4sk5PGiDt7Unqe//kv09jsUvPamBX8od
xS8l5PN9yed/XW/pbRidRLZmfY1PpnuT+v5X68EfZfFHz2jgj/IR8UcJ+Wwl
+Vze1Dd947AUOjPdYtuM9i9Iff+XKfFPCosfaqqBH8rvxQ8l5PMJyWfnUQOe
301OpV11K5g0W/2S1Pe/Wgn+J4v/aaaB/8m24n8S8nm75PPS7w5W2bvSaVX4
yj2vHQNIff+r9eB3svid5hr4nTxF/E5CPi+XfK73oIVJm2YZ9JdZyP477wOx
Tmapep3B4m9e1MDf5DLibxLyeYbks88K0zkL3DKpTcernk+uBJP6/lfrwc9k
8TMva+BnsqP4mYR8/kPy2bh5xf6Xf9WHJscmeVs+DSH1/a/Wg3/J4l9e1cC/
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
Fl3dr2IX3K/qLv2EWqKfVFl/c0+1d1nU1CnVq+3mEFL3rVbJfSvCfSy+jH4E
nTdARz43Rz7W5+ayPiu9sejqPhcvwX0u9CtqhH71RL/J/JFncqhObXOfKhdC
Sd3vaiz3u3T9bBz6HXT+AzryuR7yVT+sL+uz0muJru6PcW3cH0M/pJroh6vj
Tw7c2zWPqm0Y8yLfNYzUfTI/uU+m65df0U+hcwh05PPvyFf99ndZn5X+m+jq
vhp74L7acOm3VAn9trFpmUbagHwqG/rNLyQ2nNT9NWO5v0a438Y30a+h827o
yOfyyMf6XF7WZ6X/CCnW1f04/gf34zSul21PO/hT+qxpbw9/YNLfV67PrFfB
vOfZwCHuyzxpsOicKjpDp32ic8ebjy4u8wrjmiGvDmvCfAhMtYW5V+Dqb5vd
Itk6bUGQK72kHsJkK8z9P/yx8KBTDHf79LZ+H4dX1E+Yegjz4MZRnma34nlh
hWGOs08EE5jAPHLIiXZ21kl88/dqYebDQglMYNZ/YO0dMy6FC+uHfwovCiMw
gbnDyB1bFvmmcv+WFo3rOEYQmMDcNWZGh+xh6bynw7LBUwyjCEz7hLn76u5x
6569Zt+e3RafbhJDYPIT5j4/q54s+jOTa2uKDr4KiaXewgTm/qavB+9xyeLZ
IzxuVTsST2CaI8yD2roXVu6Rw1YTj70aMziRBgqTjTB+v1zOKP59kghMWcJs
kDipktW1QBrgsqHpvnseBGbFI8H9hXXxGnD7egkZiaNDyde3wtIfTb0JzH6l
2FtYFw+duw40HVtAETQz1tx++9EXBObZpRi6Ln4OuPeiUXe/942m9Lz27z99
9CcwZ5Ri6NwT8VlgzeFvtX7vGkfGP58M2Lg4iMC8tRRvEuYBiN8OHnrn/uam
bROp/FF9jy3LQwjMioeDywrr4iuC7Ywe5NU7lUxjTd+kuzQLIzCPB18HQ9fF
TwDf/HbS0qJKKplecf3tQ1g4gdmsFEPXxZuDHU6vmNz2YBrF2e3t3PNYJIE5
AXwXDF0XnwR2bDW83J0yr6nN3bGT1w2JJjDrl+JWwrp46HzPpZlz750ZtPJR
nU13P8UQmBU7gVcI6+JXg11GFxlqP2fSA/f4C3kOcQRmF/Aj8H1hXTx01saF
NjDYmE1f/f5167gkgcD8rRQXCfMTxP8Aa9fc8fMvyKEhYWuSVjRKIjAPK8WD
hXXxBmBVL1U9Rb3F8/r/9XYX6qmqx1mot6qe6qG+dka91StZX8kS9VXVW8uS
9ZW6oL6qetulZH2l+aivQ1Bv55esr3S9ZH3l6yXrKxWgvrZHvc1Dfe2EetoX
9RXMvVFfu6Oe7kJ9BfNO1NeeqKfeqK9g9ixZX6km6quqt3ol6yvNLFlfeXrJ
+koWqK+q3lqUrK/oj0noh7noh0k8ZNzm6Q3avyLz7qeqLolwp2HCbCbMN/zf
/N7keAi1Gd5yatJQLwJzK2G++9Zufcd94eQ8w+nS3Lu+BGYnYXZuMCfiz21R
NHyFQUpUY38C81Bhdh1U488x62IpeHtk++mHAwnMYH6+xOvq7OUJ9GBk7/5Z
X4IJzPeFOd1LU6Z3t2T6Oun7XP17oQT+9V5ezJw1q4GT26/vkyF/+exeuiyc
coQZzDk5b5cM10+jo4tPX7NtGkl5wnxYmAtMAur526RT6KrZvsmhUVQozMHC
/K7mDd+pzTKo0eY/cpsfjaEPwtxAmD9f27st9mImLdqVo/c3xRGYFwjz177z
Oi2um03XDz/oeeVjPIHZTvjXc943Ift0Dr05s3NmjH0igTlfmO3615t3rkYw
Jfw5q6vN8eeE35Mv4ve0FZ2VjniOE9b9/ohnxFMS9NvzX7JtpV/vneOzNzcr
8tb9/vo4D9B5DXTFK4V15wfxuvXWQb93YHdrp+8R9G3+jqeXlvrpzs9DnCfo
rHQn8FdhvoPz54rzptb7Ad3ldu/DHh+i6dj63yvWDwkgJ5w/A5xH6HwC+iPw
EWFGPI3AeVXrnYL+NDg7Jzg3jqo/n6Tv1zxYd37DcZ6hsx50BiNed/4jcd7V
eohnr0+WE5NTE2mmf8OxlSNCdOdfPQ/QWek+4OnC7I7nxwXPy3OsNxv6Ur2O
MZ/zkulKeMo/I46H6Z4f9TxBZwvoihGve/6+4XlT61lBN7KpcHz3ilRKTbh9
dv/QCMLzyMPwPELndOiKEa97fhHPy7FeBvQ1vZM0ldPTqHPmRhePz5GE55nV
8wydu0JX3FFY9/wfx/O+Gushntf7Pi44teA1bSjUxPy8E02oB6zqwVrReRN0
xDPidfUjHPUC8WQMfdMcM+v6cRmk/VLx+6ClsYR6wqqeQOdn0BU/EdbVnyao
Nxuwnjv0rflrplrOzKIK5YNa7mwcTx9Rf5agHkFnpSsuJ8yIJ0PUK2OsVwn6
jj1jKuiHZtP46hcNngQnUBHq103UM+g8EbriscKMeLqNeqfWmwx9V502D+9M
yCWzeotWFB1K0tW/t6iH0Fnpis8I6+rne9TLnVjvIvT/AxqyIj8=
      "], {{
        {RGBColor[0, 1, 0], Opacity[0.2], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFm3ccl1P7x8+5vyeEkGSUSlJGgyJRISVJdmZkj+z9ePB47JEySmVmhZTI
3jsjGZGRUp6KJDIqUTJ+n3efy+v3x3md66zrnHOdc655382PPn2/06qU0s+1
lIryj1S4V/CHyn/LKZ0qeD01nKK8qeraK/9OaSulNVX+r/rcrXSR0lsaf6bq
G6n/Gcqbqf061Y9VGqz0rtpvVD5O6Qal91Q+Uf3WUf8Bypuo/8mqH868Sq+q
va3q5ym1UVpD7UeRq/+RyhurfC7jVD5H+UYqD9C4m5ROUnpF439Q3TNqW6D8
L9XNV/6kyt8q/1PlhcqfV/ln5X+rPFP5QyrPUP67ytOUP6jy58qXqXyi0tDs
ecB/lvJblM5Uel3lP9Vvgvr/obxSOk5wfa3vWOUbqjxX6THBXyv/Q2NmK39E
5VnKl6u8RPlLKv/CoSh9qnS/yp8oX6r205VGKJ2m9Jq6nKJ8WDbdoNcy9XtV
/Zcqz0rXqv5BpYFKk9TeUW0/KG2jtJbad1C+WKmr0tqVx70m+PcYf5vSpSr/
Rn12/esqL4929vmGyn/Ffmdpjsui/b+C79CYn5Rfp3Redr831f539E+C31aq
lGqV84nAUd5W6fLo/7rGF8GTlFbivlbO31VaOcrfCOWVUb5CcFb+Vs3zgO+n
WNN3yrdQuj3ga5T+JXj7mt/Cdpyb+vdUvkxpF+6pyleoz31KlytN1JidVf+r
UjelBtBK9fcqXaL0djJu5vt39hy9uRtKuyk1VP8DlNfR/dhf+foq7wstVN6H
d6dyf+WrqXwY70rlPaGF0h5K66p8iPJV1H6w8g1UvlrzPKB0ldI7mu8u1hz0
fEt1zZV/yVsBr9ouVN2dShcovZl8l79Sfmnynf4q6r5UvmHyu31YaUi83y+j
nXfwH8FfK90quKNSC8E3x1jazoj6W+O9XBr04Qw6Z58H67gLXLEe6mk/R+nq
wM0clymdLXir7Dl4Dxcm86F7lC4OfsSdG6l0vtIbyXjAx1lPUHmSaHCPaDFA
+REq/6U0ROVOSncIvrtmngYvO1v51cEf4ZOPZPMfxoNnocq3wWOS18pc26rt
p8DHe+NcRnMX4ny4J6OULov7wrv8seZx9IdvPqR0ffBP7t39SlfG/eNdj1Ea
FO8b2rCGc7NpND/K1LeI87o56MZ51tM8k5VW501VHndb0Bv61Ff9FNbCm1L7
E0o3Ct5aaXrQHXxnBD86M8737OCHddXvPe4o91xjGyr/lLdEncqbwwuVNlOq
p3Id5e/U/M55zy2Vz1bahDVWfke8p/PiPDeAN/N2lOqqvYnyL+C1Squq3Dpb
nsAfz1X/z5PL1DcUPCVZXrRSWiOZt3+k/PRkHk/9TcHvqYP3zky+a+y9ZfYY
5MJpybx4avJczDkl6uDTZ8Rc1AEjoz4PnPD1fyXPPTTwrhxrpQ9tpwbuYYGD
9c6M8fRhP9zFc0MWngdvUv5K8G/kSXulS+D5yJlsOT+KMw55z9veSOnl5DeO
HBwHzwh5uFH0OYE9c/84E7V/rPzRqKcdPvFSMt77oh38LZVfwBkpf1zlg+M9
8C4eUv/pqh8b7chb5N4DKn8W8q9Ztv7QSOlo7m82v1tFac9k3vErNErmIb9G
3S5K26HnJPODnZTaJ/O+JZxL8J6fow6+eH0y7nqxtquCl9CHNngKesGYmte9
LPCOjPuJzGNe5gc3c7Ae9CX0Jta4JOYDZ/toWw6fC17WO5ufAVO3PPqAh/1A
l9Gaf2rQ5wPWFeWTk2nVLM6CMzlLsuIvpWMEP8d7FfyH0voqP63yYYJnKvXi
XbNP4blI+NooX401cjdCP7lI5f8l6ytbqrwe91pjl6Ofqd9TvBHBS5UOV/kJ
lTcWPFxpsuA6vDPBy5TWVfuTvBvBlRqaqvwiPF7lv5U2VPl5eKrgrPbjVH5B
5T+S6QOddoIfZOub6ygdmgxT90wyL0UXaqD0WPDONaIOPWlcctuDUb9/8j2D
huitzybXj457S/s6MR967uNRhh/3j/n7R3lgzAk++PnRcX9Hx1zMfU3U0z44
1jwm9gLuQdHWKNaCTOAcXo53zvuGHugf6CG3JesqKyvdH7IDPjpHqVXw00fQ
0QVvCl/Orv8qyrRvofwbpdbBn3sikwS3QAZm8+25NfejfSnriv4jBO+uuhu4
H7xh9e+CDET3UHpb5Q7KF4Q8wZ5AL/mf0sahn2BnfF9zP9pXVf5BjEeeIFfe
r7meMnr+s8jQyvo+ev5TKn9XWd+fA59ij6FvfwKfiPJZyXr54+w59HPyJ1Se
F2XskG+V2tVsj7SJ90H7s2pfpPzF4K/YE8PRg9kD9dnreDrKrId1PoeOEOud
rjVcHOV/J9slL9SMF3zMOz/oyfzQaVacB/RaxD1BX1G6Me5ChgeFrlFl3wn0
2LuTy+gfeyntmsznH+YMgt/vFe2XBI4b0Rmj/ZnAzRzcO97fyoG/CnzwZfSV
vtn8eVS0MTc6D+3w2BV6a7xlcHF3L46xq0TblYGHusvjTmM3ja/5XDnPbsoH
qrweegdrQSfm7ii9m613fKa0bugfayv/RKlB6DfoQR9C29CH0Hs+rrkf7egZ
05Qahb5Bv48CP/3BOzXmBz/9pis1jv4LeOcx37XJesoMpaahr5DPjPOjPEbp
2hj/odY/Qvyvu9KZGvux0vvJ+ih6KSzgrpptdmz105XvrXyo8i7IVI3fXflf
Sn1qtj9eUhoR5a+z7cBflHas2R7szN2L8dhDzyrdJHgn7kC2nbSw5n6076p8
uVKvmu0l7BQcC3vVbK9g9/xZ8zqYn3mWBD7mw476Tal7zfZUP+ig8YfWbN9g
59Qtrqe8Fnyu5vZHNNV+yova+9ZsP2FH1YrrKR+idEvN7XOz7T3o85jqP8+2
x+EHg3n38Hjlw2M/s1ReFbkIXZUeTLbbVhL+A2u23w5XXk/lI2q219h3Lu7P
/rHjVi/uRzvjVlb5oBj/utKtNZfnZ9udv9dMV+gJXZYq9Qj6FPUZFuV7k+Xo
SMEn1CxP8as0FP6TavavvK10h+BjlH5U3+ahv6HHZfRM7l6x7ogOeU28d979
Kmo/nnmL8ePPwK+xdnE95bPIi20lbKZjlO4UfLLST9l+mqbF84Cfda1b3M76
8DOtr/JpcYc5i9nxtr8K3XFa6FroiIOjD3x8VaVNKus/6EFcvU+jTP1jyFfB
axXvH//R4Uq313xe32X7ldYs7kf7zNg/dBifTStsP3RZdNqPgn7QEXuQvjOD
d8IjN401o/fiX8POREeHvr9kr401oruhs02L/ox7MlvvwQaFnug/c0PeoJc9
BV+szO/h+23R8ULeIHfWTIbnh6xB5syPdvo9ne0fQ94MRQ5l454bsg6ZNjTa
kUv1Qzb9ELIKGYUtsTBkEzLv5sr+n1nqu36yPwv/0TDkWDZMHcwKm2RYtONn
WjfZf8V48LycDVOHrwmf0sjK+gN6xEbJ/jb8Q7cofyU7p4zfaINkmD74mvAh
4Q/CH3Kr4Fezc8r4SZpgB8SesJPWTm5jDL4jfCjYp/iX7lB5QjZMHbbqylFP
HX6oZsn2L+tl3W9kw9Shq6DD3FlZPiGnNkmmJfOzjuez7fOro9+b2TB1yBpk
zr2V5R1yb9Nkexh5MUrlSdlt2NzIImQS9jzy5x6VJ2a3DQw876j8YGV9EL2w
Q8gqxiD7GgRu5kCWIZO4e9jcyKpmMS99kFutk/1N6IujVf4gG6YOXaVF1FOH
XtkuGRc4udfvZ68FHwC6KDop/mf8Dw+r/Em2/wB98yGVp2TrmviM0Y3QkcZV
rkMP7Zi8b/aEHG4Vuio40F1bB27mQNfcOvDSB712m+R56YMfZHuVH63sL8Jv
1CV57hti3o+z2/C54svpFHthT9B5cnYbfcAzNdvXxHt/R+Wfs/3ojYv5Kvz0
vcoyHtm+OJt34SNElhwRMHWvqjxP7a9V5vfw/QOS/YvIvxdUnpOdU0Yu7p4s
2/AxIquQWU9Vli/Ime7J/mLk/+Pwqmzc+OThlfDUpyvLS+Rmj2T/6LDAMyN7
LDiQ9TvFWHCwzm+z18364cv7Jst2fJzIemT8dZX98dOCP7IOcKKXdEtuw7Y8
Jdk236qyvj0s+AswdS8GP2RtrBFZigzFlt4423aGHyOL8dEimw+KtbCmV1T+
JjunjB6yTzItoTG6Rt8YC44XVf4qO6eMnN8r2b88POg2M5v2nMHzKs/O1s3w
GaMroaO1quwPGVTZHt+4sv+mufrWTa6nHb8J/hX2wp6Qk8jHBwIHug2+A+pp
/yzq0CXRKU9K9g29FfeNe3dYcrwGef6myguyc8rI+YOT7y33F7l1eLIuynjw
/JDdFxwrYj281crxGWQK8od9sB/mZg3XVo5/ICOR389Upgl6ay+1v1FZ30Hv
OSiZltAUXalX0BF6orf1TqYl48HzZTbulkEraEa8Bnzg/V51LSr7r5D/6D+s
DZqjC0yJuRmD7nNC4AIn60beMxYcj4a+cE3gmxI40HM2KH7PTYMWyB58c9iy
IyrbswuiDtusdWXbC/2CsyR+NDvO79Pk+NJmKq+e3JcxyHv0gTHRhu6Azwo9
An/b9KijjT4tssezV+JhM2O9tIN/bvQfFOOvj/s4Nu7m46GfgQd8vMVTYm2s
8eywtdtVtrc3V78GyTll2ugzOd407x5/0fi4M9wVbL5aHfuM8BUdn63Ho89j
93RNhtHxsU26BB2gB3Yu+g+4wDmksryHltj02PLYlvgKNsv2DaB/Don+s6IP
bfRBT0I/ahPn0SroMTRwzIk1b1HZn7qp4LWS4S1iLayJeurwu2LjdYjz5x6g
zzwRa3029DP0JPwH+BHQl/AVbF1ZF8JngD6EP2JR1I2I8i2Bj1joNOXnJftK
pkUda2J9w4J/4rdAf2uT7U+hL2Pw+1GmHv8f8JbRlzHgAd/82GP7uONtg970
xX+4JMaw1w6xF/aEHsSe8cOgDw2J8k0xnrvSLtrog038ULzRugFTBy1nxN5H
xFtaHPeP+O/CwAEt22b7XtBvoSU0bae6Rqr7Irk/4xoETN35yb6adnEGwNS1
DZycE/owvs9uxW+Bu83e8aHiS8WXt5HahhXzYBVTx8r+e/RU9FNg6ojF/hbr
I978Z5wv8Gz09OTYLPCEuBOsf9vseCvG0eXJeMGJ/xB9GF/iNgFThz5LvJe4
L/ouevWrcUbcH9o6ZMd60c87RPuyOENgxhC7JbZMLHZu8tysYfvK62FdLZP1
XOK/xIHRd++v7H/BD4M/5/bK8WP0afR/bNEjsm1d+C96I/4c/DXojzvHePCg
X46M8cSh0ceJXW8XMHUrYOiFLEpeG2tkLVWs/a2gUdPknDI2AjQD9+2xX+yN
rWMOzoIzgVbQDLpiH/TM9sfilx2eHHvvFLSG5sCvBU72S+y7a2Xdndj33ZXr
iJfhT+0aZeqxB9Dr8ZfiH0W/x256J+YA3wfRl7HYI52y4+noya1CX6bMXMy5
Q2V/63bwvmRcXWJ8iXra8ctemTwWnMTisY9oAwdrYU34znaq7JtbM2DqsCOw
H9gP8cf6MT+xyu9VPzDZV9cl218HTF2n2B82GTTsHPeJe4V9BUwdsfBa4Joc
Z8z9A9eOlW2nNaKe9npxH1kLthZ3ca2Ap8SZQO+7g973RnlU7Adc4AT3h7Hu
NsnnyvkujTtDrHReMu2gIbHP35LvBncE+wP/PH567B9inwvVdkOybxLaEl9t
GOfdLdtfSRt98DXuWtlWwtfYo3I7/bZObqPP2Mr20g/J+MDLee+Q7T/Fjzoo
ee7Pg2bsh7fXNdu3ib3YvXJ/xm2Z3PZJvNO2gZs5wAVO7C38n6yNNQLvnO3L
bhbwzOi3Tbw/eBZxKd4jb503z9uHBxxZ+fsidE701QmCWxXz4lnJbetlx6oG
xFjix02Cf+C73aWy77VxwNRhv2Efjw164cclHsJYbFngDQP+IvDCf6YFzbH9
GgUe8AFTNzV4FfcLe323yvwBPtE5mc7Qe4O4T58FjbGt8T1jdxIPIC6A/Tk2
yuPiPLtnx1eIswxJtou/jjtBO3erd+VYEPb2suTvr3qpbtvkscDg3jhg6sBL
+5xYM3ezVeyVO9wy9tc77i/3GPt5Vtw16NUi7vrsGMd9BD/zt439zIs1EZsk
FrNH5XgM8codkr9tWZy8N/bYp3J8anxlfXBx9IFm3Ef8D9Ac2kFD6mlvHuW5
gQPbfIvAQx1xL+JZu2bHx7Dfsf9ZB+thbTfHe4K+m8d9pi9jiI21jnHUgZs5
6MuZgHuzuAusb3Tcn9d1X/9bfNe588greAY+pTdibmiCL5tYEbGzPSvb6h3i
bPh+r33wjz+Ty9R3Dpi625Njb7tn4wCmjm/Faqq7JzlWAO7vo9/O6I6Vv1/h
OxbiDXtVju9hp3dLzimzFtYEbfkerWPsf+8o94nzAqYOXODcJ/AzT49kvwLf
1/C9DP4F7GjiFcQjsKdp65P9LQ/+lz2y4xXELUaq7u/k772gGffn4MrxEex0
7HPqaceGgKZ9Aifzdo+x4AAXOPetjJ95dkmGqWMtnWPdrO/pWD/0g6Y7BD0W
RR/2i73yY+yZvbFHaAdN+fYG/xRrZc3EbvrE2SyOc+E8Xoz9EG/B/0BsZ7/K
tu+OgZvv13YO+u0f5X1ifcRm+laO9eCvwW6mjrHg6Btl6rHHGQsOYiXEcrC/
iVcQt8CfcUDl+M5zlf1NtO2THbvoEfW0MxYctC0NPNjvtIEDXN1jL+xpb5V3
S6Y13+v1jPMHrqN8VHIsZXnMAW78A/tmx1doo8+BlcvU90mGqcNXRgwGfxk4
gKl7LsovxH5YD9/39Q761Ik1sC7uA211VTc6ORYG/Efsg/Xvnx0fo40+wAdV
PrvdA6aOfnsn75v98xZ5k+gO8AP4QvNkWvG94J5Bf2JPyERkITGofoJxVLxc
2d9GX3yBxMaI3b0c7cDU4Z8rEU/Dv0hs7dDK8H7Rn/ZXAx/+sRzxP/xl4GJO
YOoODBzE6cYkz/13nDH05FvI1bLb6HNANj7w4m9jbsaDZ7/kWFr/yrEz/HXA
1OFfxP/J3HwveUis55Ds+B1xvIeTv8VcMxumjlj7+ODH+JPxL1DXLvjB+Cg/
FvyKseDgnDgfcsoHxPsrQWtoiX+QteDrJPZEbPPwWF+/oN9rsX7ihN/GWg+r
DFMHTB37ODCZVtCMO8v9xT9XL+KNC4J20JDYJf7dCZXjqczNGoi19suOpeJv
PTTuDHHL8aqrn/09KnSH3vjJVo14LP4y6mnvH/eDb7UbZn/7Q2ytX8zBOPx1
3EXwM88hyethvawbfyK4mJO5D4v9gvOooEfDmIN69s/YCUFP/OFHVY7n8f1R
f7UfWzleObHy954To0wck/gkscGjK8dG8Wfjt1wr4oH4L4+OMvX4Q48I+k2I
9QJTBy2gCX7R+lFHO2thTStw1VxP+3FBvxVrqez7J6aKbYuNi18Vfyp5g4i3
0od9gRPaQmNwMSd7OTZ4F/dh3+BX+BZ2LPat4mPYodiHhu9sAPodZ6d0C/wp
+1uDp4v9UvhQGPtosZ8WHD0EP1Mcf8VHtovg54r9ePjvdi/WWdBV8HHsxtst
9pPgH+kNr1CaIfgCpWsEP1Asx5BfOwl+rDiei09+V3x9xf4m/E+9BL9UHJ/E
Z9NT8PNKnwk+B/0OehbzdnjxzoKfVPpQ5VOTY93vV47FEpPdX+WPiu0VbJL9
mLvYXsO+3Iu7U+yvuBz9gLtabOdj3x8seGqxPowOeojgz5V+ETwUfiD40+J4
LTZNn2KbZFayDwXf0BPFflN8RHty15TmCL4Efi54itKPggcjr6B9sf2GfddX
8OTi+BY22MBiGtQJfeRrzoI7IJiA/2fFa2It2Fas/cpiXZ49tCvuQxv21rTi
PbGXHtl7aVNsy7En9tpWaavkPW9ZPIa+nVSewVsv1n/Rg5lrVLFOz5x8e3h1
sS6GLv1lMQ7G/q60VTEOxqJvP8hbKJaVyFL2xh3m7rLHb3kPxfoFusQc3mKx
Pogu16G4Dhh97qtimkErdLjZxXMyFzG+ubxfpTs5G3Sw4jrgnqr7RvC1xbIc
2TyveA5wE0ObVXzHudvozNsUr5G1od/MFzyomHejg3xXPAe4V1J5uuCrinV1
bMK94Q3F8eYr2KPgd4v9MPgQRhbXXRm6wZ3Fd5q7jO/j4uI+tKEv3FF8x7nb
+LqwNagDxuaAN3AmnAU8grP8ojg+ypmeWDleyZs6njtbPCdz4V+hjT5LsmOa
2N7Y4MgB+H+/4j2yN3we7wc+4qC80YsE317s18SfeYHgW4r91vir7xN8eLGt
gh1zP7jL/+v68Jaji3UleAy0ZAx9oendxW+Kt4Rv465ingAvwE/BXPAgeA9z
shZ4AG+fNf1H8G3FPl384bcW8zx4HX7iC4vrgPEf0xce+c+3tPsKfo87Ifiq
5H+pBgR/ggYfVP6+BtpBw3crx4+IIy3Kli38r3VqyCvkG9/XTAp5d3zl72v4
/vfYZJg6xoKDeur4Dofvgxtn4wNv/zgPeObkOF++8+X7Inwn+FAmRzvf9/wa
Y8EBrhX/kKl8UuU2+rA39nhsrI+1Tgz5RXxwUqyf74T4v4LvfsHBd0R8/wst
js3+NoZvZICpg07HJc9Ff8adkPyvWJPsseA4rnLduYGfNsrUH5m8N2DaTor+
1LFv2k8I+nMOxyTvg/2cGfKZNvoQqyfGx1uBp8JLeTPfg587iKxRn47FdcB7
JPPWD4v9ZvDYzQW/zXiVN1a5NW9NaXuVN0+WXZcX+zaQYYxFJiALwIEsu6zY
V4dMQ1ZsUezrXfFNhOCXi+MW+Mi4i8zJXNxJZC93nLuNDEYW8sZ52ytiC8Uy
65LkNSLrebO8VWQ+vGqzYt83PGtSMQ+Dd+EnfqT4G/V/7t4Ngh8u5hPwhxuL
+zQOfY42vjnn7tFnXPE35+hC6IbXF9cBox+iG7RQqpesI8ArLy32ba7wXRe/
Qd4eNIU2rJG1QaOWgl+AZvCtZFnMGUB7ZPJ1gh8q1lnRj6ElOgq6yYq4kuCb
i2OgxFeRTcgIZAMyCt6FjEA2wMOg1RvFcQNohuxCJiGLkGHoHvBweDc6CLIJ
GY9sR0bB+5BpyDJ4ILjQOdA1wAkvRGYhq+CJpwr+VWltlR9V+WTBi4u/b8Am
OEXwkmJ9HZ2cu3ZPsV+NO4eusinnk6yznCR4UbF9gk3F3tER0Q2hAbrbJsWx
U3S414p1QnTBLeERxd+8EsMjnoeuyBlAe3RGZP+CYnsYHYC3hMxEVvKmWAs4
wcWa0AWRschWdMIBgn8qth+xMU8Q/EPx9wLYSCcK/llpdZXHqjxY8NhiOw/7
7t5imYWswneJ7EcnQRdBByBozT8M8Cd4E/8ydC7W5flGAtqhM6IrQkP+hdiu
2Dbim4btBf+mdJjgfslrQ2dAV2CNrJ07x11jDz8W74G1Y+ehW/FPB75IdKxO
gheCX219k/cGz4HXsMdti3EwFvuavtCAvTOma/Ge2Av89YpiGrB3/LX8S8Ka
WSv/lPAvyJBiXgnP5KygIbTjzKDF78V2DjTpIvhPpaO4y8lt/CNCfI8+tPHP
Cv+q0Id/RRhDX/4Zgbchw5Hd8Dj+FbmpmPcjA/j3ZWix7EPW8W8KPAVegi3F
XYVnwCu4s9CeN8Fb4Ay4+/AkeBFvANsIHQTdAxvp2WKbCFuIbwOwhZD5/3zb
gK3UvPhbHGwmbCnuOHcbm2p88T8uyKcVcqrYpsGWgefAW3iD/9jivB3mZC7e
0JjiO81dxheALkkdMDold5c3yVvkDnM2zNkk5Bm88SneZDaPxFY6n/eUbDP9
UswT4AXY8tge3AHOHhsEXsEd4u7AM+Al3DnuGjyFuw0OxnLH0fXR0dDN0Pmx
HT5W2jHbhoBWjxd/xwTNsAXPK/62F5uQvthE2EKMYe3YeNh27AFbCp4Lr8Wm
Ahc2JbYkOOH96HjodsiA/wMXUPRn
            "]], PolygonBox[CompressedData["
1:eJwtkyssxmEUxt8jmEAxwcZsTKEQbKYoZhMoBJspBHP3ud8+fPhc5jZMMMEE
E0wwwQRzvxMkSZIkSZL8np0vnD3nOef8/+f65jb31HYnhRCykRTkEJnF8Awu
WghH4CC8DqyHj6J3ob8jyUgBvBtsw3cJ7iLT2B7BGWx7YD+8EqyBx9C30f+Q
UqQXvgVO4nsA55EJbLfgELZFsAdeAJbB4+jH6OnmNak21bgEfwGj8Bj4hWQh
XfAo2If/Jvi3+odil7GdKA+8AWyEz6Gfomea2+RTzCr8NbhPMdLXsJ2Bw/Am
sAm+r77hT4qDH4AD8Gqw1tynmGTzmWg2mlHc/Jtx+Bj4iWQgnfAhzQD/dWI3
2lGq+T/1b+VYMN9ZLDED9dqvfKAWnAeWwFc0a/gdOApfAyPwYrAcPgCOwa80
O/PcqkG1FJr7FPOBpCEd8IhiLPFN8BvRLbSb+xSj2Hzz3tSjeomY70Y70q6K
zHevG/gOXrNqVw+D5jcxDz8Hc8xnrtlrB+vwt0Rv6vEn+M3odnRDI+Y96/Z0
g7q1KWw7ug14OVgFn0LfRP8NPhPNRjMax3cf3KcY6VHz29UN65YrzGtTjapl
A36h3PBWsMX8beiNBPOcyq0aps3fzD8SgXGc
            "]]}]}, {}, {}, {}, {}}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0T8oBFAAx/F3MthsNkVsFikDA5KI4QYiCcPRKQNlMCBJ8i9JQrqEJCFd
SmE4gxtQJAOLhUFKycBiko8Mn/d9v/H18mP9jX2REMIw+Rkh/N1n9NClQLPs
BT2xizTbXtaUXaw5dkLP7VLNtTf0wi7XQntbr+1KLbL39M6u0RI7qQ92vZbZ
R/poR7XKPtUnu0nr7DN9sVs1aqf1ze7QZvtSP+yYtts3+mX3aJd9rZ92XLvt
xcwQfhggyQLf9HHAPJ/0ss8c78TZZZZXYuwwzTOdbDPJI21sMcE9LWwyzi2N
rDPGFVHWGCVNAwlGSFHLKkMcU80KgxxSwRJ5eGqYciQj///8C0PeQ88=
         "]], 
        LineBox[CompressedData["
1:eJwl0s8rH3AYB/DPl68/xNK2JGlpaa2spihqQlltNWFsCEVRWtKSkCRpaUla
0lrSF4WD7YADyo8DDjjgYDvg4EeZg73G4dX789RzeT99EkvrCmojIYR2kuJC
iJdN0RBiZDJJIjO8ZJYk5snmJw9ZIJdFHrPMK1ZIZp1CNkhhi2K2SWWXN+yR
xgHvOOQJx5Txm3ROqOSUp5xTzQUZXFPHX55xSwMhIYTn8r3nmr6Xyn+UFeZ1
eWWukpXmfnsR+41ygj5uqGecXi6p4Qc9nPGB73Tzh3LG6OSIEkbpYJ+3fKOd
HV4zwmc2KWKYNlbJZ4hWlsjjK5/4RQ6DtDBHFl9oZooXDPAgeneO0KPvtN6P
5P8TdclY5P4//AM9fEta
         "]], LineBox[CompressedData["
1:eJwt0TsoBWAAhuH/uE4sMiiFdAgJSW7ppFAGyq1IBqeEARkUmUwmk8lkMpkU
KSIWFgYMGDBgwIABA8ojhqe3b/svefGJzvFICGGWooQQUnQmKYR1Gtkgny2a
2SbKHq3sU8gBbRxSxBEdHFPCKT2cUcoFfVxSxjUD3FDBHYPcU8kjQzxRxQuj
vFLNO2N8UMsXk3xTT0JyCFOaqA064p7T7ruruR5gVId1R3M0rnHd1Czt1wFd
0wzt1l5d1TRt0y5d0VRt0XZd1ojGtFWX9JMamuxFfaOCmL2gzxRTZ8/rA/lU
2XN6Szblkb9/uyKTEntKz0mnwJ7Qk98zEbXH///5B7TdOtY=
         "]]}}]}, {
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"R", " ", "+", " ", "G"}], " ", "<", " ", "1"}], 
       Scaled[{0.35, 0.7598076211353315}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"G", " ", "+", " ", "B"}], " ", "<", " ", "1"}], 
       Scaled[{0.65, 0.7598076211353315}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"R", " ", "+", " ", "B"}], " ", "<", " ", "1"}], 
       Scaled[{0.7924783736545471, 0.5667562801868943}], ImageScaled[{0.5, 0.5}],
       BaseStyle->{FontSize -> Larger},
       FormatType->StandardForm],
      "InsetString"]}},
   Frame->True,
   Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
   PlotRange->{{-1, 1}, {-1, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{
      GraphicsComplex[CompressedData["
1:eJxdWgVQllu0BayLgYXdhdjd6Dawu7AbbLHBwlYETFQsRMVEEBVBUdCFNNLd
3Y1doM/H3h9v5jl35syatdb2+v/f2ef79zodVm+dY6CmoqLiWF1F5X/XiGKL
jNufvWhqSo3dXtUD6Ph4tczz+x1oQ/7CGtb9QymSeUxhHmbMQ3gc1Pgc0Ha4
P/nrhu0fvCqEFn02cKwx9TlNclozrdrHCDrMPPyYx1LmITx69Fn83PpwEN2d
P/19VEo4lXlNKRy70JmSSltauU6KoZ7Mw5Z5fGYewqPo4cppZ9aEUfopJ12N
M1FkeqmP9mGDV7StV0TqltvxVMw80piHBfMQHmOHao4OOhlB7d2b+U8cEUtt
DTQN3u54Q9U3mXXr9COJxjGPdsyjI/MQHtf8/QbUeRxFK0oPTD2SH08ug37e
+XXoLU2fd3tYUdc0us48ljMPN+YhPMoW7u86JTiGbDpmhLy5kkRdq20tvTHB
g5p93p/iG5lOH5nHTebRjXkIjwn5vVuZlcVRyvyJc76MT6Udm9LPDA9+TxkX
Fhy7cyiTJjGPJOZhxDyEx829GRr+jRPpnG5MQdNfafQucm7P+Lle5NB3gPaB
Htl0i3mcZR6ezEN4fFG3Uqs1JJl6p5xyGDA7g2rr+H4wTvAm41CNYL3YHPrG
PHoxDw3mITymXp/8bfziVAoxHmE461Em6d0buqHpKl8aY1iwvd+xPJrOPIKZ
x2LmITxmX/6zy/NdGhk2LOmz5W8W2da1r+WS60d16/k2rdungOYwjy3M4wHz
EB4HlsWVrApLp3r2tz+a6eVQya42D+YaBlCM/R23nIRCMmEedZnHJ+YhPB51
cVqvmpFBT3TnvnjwJJeGJ5/T/fTlA92eYrLy/clismMeDsyDmIfw4P2XKfsv
X/ZfkOy/Utl/mbL/8mX/Bcn+K4Wyb8NlH3c7SDGpTX3JvOGmH+VOgVX70kT2
aeumue1CTj2lQ41PPdQeH061lmoO0HqwXUel8k8YGSWnf5ljuFsn8eWWf/9F
0jTZ92HSB7pzfZhxfQTIvj4g+7wD14fUR21zm2nD9pq7S300X2s35F2j8+5S
H1E2D94uW/aBqrlf//vKNKyqD3SXvnBvSdy0e+FO1Gg2fUy2jqKs5U9fHhq8
V6fSnhhD0eyHGvshfmhL33jIfogfPUyrBaTmWbqLH0dR737i3RAaW/r36MdB
kVV9pFD6ik7Pt2bpKS708Oy34Re/xNLctAN7HP4c0LnQebJl58kJdIz9ED8y
pM8USN8ZzX6IH6MeLVusisvu4kezbcN9e+4Op8MdDWr2yIqu6kNjpC9FlN/x
bVvkSsODnhyfNC2R0vt2ubl5zWGdzZUfYDKJH4fYjw7Sp0ZL34phP8SP2QGv
CjtevuoufmxRKXm96WokYf4HM33LuKo+dlX62sbgk9WW/nSjUHWDkIq7KXTt
Y50/Ryce1an837f8t+/Yj3fsx0rpc1ek7xmyH+KHQUFDE91NN9zFD+/zd548
doumv6f61LMZnVjVB0ulL6rabBp9rSbIqZPG6fiKNJrt9Gn5tR7HdSwrC2SQ
D/vxh/24LX2yWPpmLfZD/NhbZ7PG2jE27uJHqw7z7+SnxNIo90vnY0uSq/ro
eOmr04c8GlWo/p4OeOb3dbbLIPWd8Xha/6TslyxqzX6MZD9Spc/qSt+dxX6I
HxOaZoZ6WdyW/ZCFHc//u6ytlkD4Xm52akZaVR+2lr589VbLZLPznjRxlU/0
2flZ9H6AR3vfz6Y6hpXfXzbtZD/esR/ixw3p29bsh/gRpnX+atS3O+7iR8AY
91PruiTR8gtPp96/n17Vxz9LX8+qdWa/djNvaqhyZ98G1Rza++XBkaRYM52k
yg2USx/YD/Gjj/T5j9L389gP8WPxkJGrslfddRc/2kdsPfBgUgr96b66nmd5
RtU5MFnOhb7b/rbwu+lDSTYH2un+66/9XM5kfHKz0JlS+QXmUwf2o4L9CJVz
YpKcGwPZD/Eja2JBt29B99zFjxHPG7p+GpRGNt6aoSlzs6rOkVlyrhyI2+5q
0NmPHoxc6N12UT7l7d41Tv32GR3Xyv5RQDrsx032Q/yYKefOYfZD/DBceOVT
zaEP3MWPdXsL+1lOTKeRy/3O/36cXXUO7ZdzyX90ll51e3/anjRgw8/qhXR7
8JJ77Y6f09Gq3D9FtJ79ED805JwSP4LYD/Hjx3pdt2Z3H7qLH5ZjfOz7Lcqg
5O975zRXy606xx7KuaZpp/fVtt8HGrG/vkbUsyJy+H1brZXzeZ1LlfunhC6y
H0nsh6Occw/k3GvBfogfR/d+PKatYecufrxVv9UlfGMmHbjQU3PQoryqczBc
zsUVDQMujnENpBotC50cl5bIeXVB9l8ZvWM/9rMf0+ScDJNzU5/9EL+cR49l
/5VBOSe15dxE698Xdcx3yv4KJws557rKudfW/kfy4plnZP+Eo7qcW8o51tvG
f/6GOcY6lR9v52gSHpFyTtka6amEmlxwF145N+iwnEPW7ayaWbXcL/01jsbJ
uXJIzhmXK88ulM29JP0zDsq50VTOkdp31sR7ZhzU+fP3f/8k0hE5F5rIOeHn
WrtTo+5X3IWH0vc3yzkw8sLVYOP5R3QSKvdnKnlIX98kfT4xXt95gMp1d+Gh
9G0v6eNfZx/qfXbYMXl/SCcVM+7LntKnS3+9Gz8/xlrO/3Qofbel9OEnjdae
u9fmhHx+mUTSV1tIn63WukWskcMt+fwyofTN7dJHDSKnlb1RNdV5Vbm/spS+
iq3SJy1shg2cNuaOu/BYIX1P6YNtLw2YHZ59SvZXDq2UvuYnfa7p05zypQ62
sn9yoPStttLHoue1dMoNMNe5WPkF5dFf6UttpE/dwkWfLc3uuQuv9A0aLn3I
oolq4z9PTsvzXaD0JQyTPqMdNvrswaP35fktUPY9rZU+ohuTu1PT8qzO1soP
uJBGSV8wkD7xIq1Y71zxA3fhkSL7XukDh6au29hkxHmdlMrvp5hSZV9fkH0+
6uP1drcXPnIXHsq+dZd9nGCfcL19rwvSn0vJRPalm+xTX9VJec+87KT/lkJ3
cb1Fy5oHknlwh47ra76nsCe7jvRRc6SWui3nj9gaRgZbew1wtrOmFY31T5sE
hdJ41sOM9YhmPUQPQ9ZD9DjU9VbFPA0ncjwSblPmG0lHGUMwmv44NtyylQuN
xam8+21jqQVjCMYT//XGodquFFNO/ZcYJdBzxhAM3WvTnesOdqONw7/vbxCS
TJMYQzCSNvT/OHncO1LRic3I+Pe+lMEYgjH8Zp0r4x550IcEJ9O3ozJoJGMI
xskaBwdl9Paky3vP9rxakElmjCEYEVvKIg+7eNGK5hvDd1hlUzRjCEbbmNU7
2un4UPdX442mj82lDowhGBtHRTd45+lLX+Z3aKVdkkeGjCEYLx9MfLp0sj/h
SznUrhfQG8YQDNX6b6b/Dg0gs4tx+snji6gmYwjGNOOeRdf0Amluf2d114/F
NJsxBGNExCBatjOMutpMT1vk4E0D0HPFS9NnlJnx9WeTVhFUP7U4+r91d2h+
3+ZB22ZEkg7rocV6DGY9RI8mrIfoMe97VrjF4kjyNtxrM3WOP30419D686UX
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
oSdzR2UO2faj14+hVv+3+mlu2Fqx9D1lpadcPRkaRwtljih6tGMdRI8A1iOT
9VDmgsqc8OSr68OT1KLphKwuUaE7fG57ke5077nldZJITeZ8z2TuZ8o6iB6v
WI9xrMdCmdspc7xSk+0HDm2NpRJZ714abHQmy4fuu9pp7JiUSotkDlcqc7ky
1kH0uM963GM9nspcTZmzLdSd9K5jUjzpyXph3s2987X9qZqlX9bOsen0TOZk
fWRutoh1ED0ush6iR02ZeylzMI/a7VR8JyURZD2kWd2kzeYP5DxxuKdjWgbV
kjmWocy1PFkH0eMI6/GC9VgmcyllTtUt/OuYDS4ppC3rlqiNh7OfBpF+hcOt
/INZtFzmTE9k7tSddRA9trIeooezzI2UOVLA1JwxNf/9zvSXdcml8GNPPodQ
kxftTDq3ySEXmQN9k7nQB9ZB9FjOemiyHnVkrqPMeSocwzMW+KVTuaydu1t7
vbkRRr7rLRevcMulujKnsZK5zR/WQfTQYj18WI9VMneROQn1a/T2mF1FRtXa
ynymj83bcDJqW2Po9UX5tEbmKDK3QX/WQfRow3rsZj2WylxEmZOs3f2o8+9/
v1cMZG1UoOZ3NDWCukYZN4n+XkDLZM4RLXOPdayD6KHJemixHqdkbqHMMa7H
XfSZtjGbrsmqPuWl/1rVKIo1K/hU36qIRI/dMpe4wTqIHnVYjxjWw0nmCsqc
IXjEobU2t3MoSNa/dhs+TOn0b1/TsrApA0vohcwJGsvcIIR1ED1UH1fqcYL1
4Hq+Us+X5krupORQ7PcVvy/mSW7UVXIklXWc80RK7qPKGBGS0zhIjqLkKo6S
ewhGT8kplNyil+QKMyVnOCo5gJILHJO5/RmZ48fLnF2ZuyfIXDxY5uR9ZY6t
zLX7ydy5rsyhTWVOrMyNT8lcVzCUOayvzGVTZW7qI3PUQTLnVOaeg2UuaSBz
ygkyR1TmihNl7ldd5oDbZU6nzO12yFztnszZbsocTJmL2cjcSlfmWH4yZ1Lm
Tv4yF8qQOdFgNb1HY+oF0CBZh/AKwah+rlrPUznBVE3WGrxCMArPxC3IXRFO
BbIKhmDMmff0mnlQJM2WdS6vEAy3licTew2LoTeyuvMKweiUvrRN+P046ihr
Z14hGKcfDlixq1EiWch6hlcIxtctte80O5RMn2X9xisEY8XA9Iw3ham0TNaV
vEIw1lQsadSnZzqtllWfVwjGlZUTXxxenUFWsgqGYAR59Z8XcTWTAmUVDMFQ
7dr2a6fQLFKRVY1XCMZAc3Wr3TVyaICsg3iFYPD+dpH9HVJ1z0a5d8P72UX2
cwi05V6N8FDuzSj3aHzlXoxgKPdelHswa+Rei3LPRbm3otxjUWnA91IEQ7l3
otxDmSn3SgRDuTei3CO5JfdCBEO596HcAymRex2CodzbUO5xjJR7Gco9DeXe
hXIP47Tcq1DuWSj3JpR7FIlyL0K5J6Hce1DuQfSQew3KPQfl3oJyj2Gf3EsQ
DOXewf+7h6DcS4Byb0C5R2Ah9wIEo3hDWHCjda9o1/w741e6hlFLmxm4OOYt
jf6R2b/jyhAyGHN89s02HlR6xdzWyC2s6h6Aci+glP3YyX60Zj+I/VjLfpSw
HwmS84sfvvk3o2xL3CjS46RKzJdIejtglde26+/p3YC7PZImRFATrVGDdJt5
0dlQN+cxEZFVOb6S6wewHxHsxzv2Q/xoxn6cYT+MJKcXP8KdXba0GOFBA3tu
dpvaL5a2NG/1sNklb1q6KWrkw2XR5F37R/PCBr7Uo1axb938mKocXsnlI9mP
AeyHIfuxhP3wZT+6sx9NJGcXP97tar09/aAnXbwy2+j9lgRqUxFl/u6MH/2y
rTFrx6442lX6vPxC7QAKGNU2PvZvfFWOruTqHuyHJfvRlv34yX4YsR/+7Mdz
ycnFD4eBx3bZeXrTV7Uh/YY8Tqbg9LOGBqYf6GrC4NUjLRKpc9SmtKHVg2id
0cxC26bJVTm4kos7sh9f2I8Q9uMK+/+9p1T6sZb90JacW/y4/iXfeHtNP+ox
RMNIb2caHfSdNKfukWAa2mj9rv9sUyjatYt3akUIVVvg8edl07SqHFvJta3Z
j+7sx2H2Ywj7Ect+qLEfxpJTix+nnGftHzYlgBKLDs+90PBff52vemPRyDAq
vDfNa0NSGnmFlM71+h1GEZ/iTFvbplfl0Eoubc5+iB/X2A/xw5v9ED98JWcW
P4x2vTqoejaQTtt+7hv07xwtm5hSt9ebcHIbbTAtdN2/98/3QT5WeyLI9uzH
Bkd7ZVblyEquvIf9sGA/PrIfb9iP1uzHHfajieTE4ofBwLZHA8KDadTCtRq1
ZmTTpOFuB1WGRJJ5kkn0wM+ZtOuF3ZCNXyNpR/fa13Nds6pyYCUXXs9+jGQ/
prAf4ocR+7Gd/VgrOa/40W2fp6d/7TAqrhdfOKYoh273vFoW+SKKFu+xWn79
YDYF3T9pN3JHNI3x7dhpum5OVY6r5Lrd2Y8i9sOW/VjEfgSzH6PZD2fJacWP
dgm7vR16htNNr6kBB8zz6Efb3asf9o0hbc2nuX/Vc6nz1TWtGpbGUIPVIxyc
QnOrclgll+3AflizH7/YD/FDi/2oz36osR/iR7Ph3XzPz4igGXvfPXilXUCz
G86J2vckln4+9dtmcDmPTMxHn8naFEdpFXMHNV+SX5WjKrlqC/ZD/JjLfvxg
Pw6yH6nsxxzJScUPjetJfru2RZJKn37HP/kW0uNqfSbM6B7/7/db2s8P7Qso
5kCbv6/y4unZtc3vTHIKqnJQJRdtwH787V3phz374cd+xLEfT9kPW8k5xY/q
v84FLLSMoqdZd1f1Migm1W91XDs8TKAruT+O9nUopJ5bf22zMEikg4NOTMzc
XlSVYyq5Zk32w5H9qMZ+WLEfvdkPE/Zjj+SU4oeSOyo55AvJGQVDyRWVnHGW
5IhKrqjkhkqOWCw5oWAouaCSE1pIDihYyfWUnI8aS86n5H5KrqfkfPqS4wmG
ktspOd4LyekEQ8nllJxOTXI4wVByNyWHmy05m2AouZqSs92WHE0wlNxMydHK
JCcTDCUXU3IykhxMMJTcS8nBzkrOJRhKrqXkXIaSYwnGN/U2Qb3Hv6QhX0Of
nIgIpcyAY6HfTrnS1GeLnU1Mw6tyLSXn+sF6DGY9slmPKayHGuuVXAzhZgUR
74LeULlB8AXXLpGEybNjTjZ4Sw6tRm/97BVVlXspOVgk6/Gb9XjPetizHrck
B1NysSfqrvEz5oGWhTtN6706hoL0zxnWCfKgOqZdum9QiavKxZSc7BnrsZT1
CGE9RI8RkpOJHp7eY7eVFr8nN52rte7ZxNPrzt+2R9b3os2famen6CRW5WZK
jubNerxhPdxYj02sR7zkaKLHs+N2O1/186bWj0w8WyQm0cOspbtvzPWhoGVl
t+btTanK1ZSczYn1aMV62LEegazHCMnZRI9bug2MD+32JZg9f+dXJ40u3/Pa
s+aKH13J2tgrOyGtKndTcrg7rIfocYX1sGI9zCWHEz3OVDfeN/G1P22jztZq
j9PpmH73Az0SA2ji9eTa7fdmVOVySk53jvXYynqcYD1Ej3jJ6ZTcbr93skn9
ig/U/qvV3pGTMml75wuHPrcNoh8zZ+UtbpZVldspOZ4J6yF67GQ9vrMe3STH
Ez02HNc9Ejs6mMIfqy/Yk5NFK7O+H3VbHUJ2Nbx8LrtkV+V6Ss63mfUIYz3W
sB6ix17J+ZTcT0/X/vit46F0ZOWBgS+O55DWnD5eY+aG0SK3QXfD5uZW5X5K
DriI9TjMemizHgtZDz/JAUWPDmrq3gOywqhv09KGJR3zqI1ThneX3eGkvv3R
4Tqf8qpyQSUn7MR69GE92rEeokdTyQlFjxar3X2a1YygzMBVpdrv80mzkZWv
+pUIeqPVavmE8wVVuaGSI7ZiPTJYj6asx2vWw0ByRNGjgedWv99dI+nikaig
NSsKqe6Oyf7FrpG0OenMiCO9i6pyRSVnbMR6WLIeGqzHJtbjpeSMoketjp0C
UidH0bghEx/bVBSRWkR5QHhCFLW0VGnhHlRclTsqOaQ66zGW9ajOerRgPY5I
Dil66Lhetz3nEEhZC+Z+NP0CGsUYGYyhmzKz5q27ITTcZUfro8/e0wTGGMoY
2k2Sc1ImRZCfX3X9P619SDB8GKP3CMspJRRNeglW9vvM/EkwBGPgqomOFYPj
KKtI+/O3r4EkGIKhY1resF7vRDL6+2b4ztWhJBi7GGPMk+e7W3dJoWpmWu+N
14XTOMZQZYx7G14UNTmbRlMsS7Nc2kTSA8YQjEflZ2xuqmeQ5Q3X/7782+eC
IRgO59bP6nIikxLvHenZ3zyGHBlDMJ52HKf2RCWbOjtOmbVtdBwJRkfGeObS
xnnggRza+KrxLsdv8eTEGOsZw2XSDwP377n0wiPpSpFDIr1ijOeM4Z4Y0Ux3
Zz79Crjv1n1NMgnGD8ZwN3wSEFhSQKMjDVPXt0glwRjFGFpH1QYtCA6jw+9G
jPZY60WCcZAxuj96dXWtdyRphAeb6kT6Uk/GEIwBIZvLd7vFkE3milBX+kCC
IRhDv3RYecIpnnp9+9h0kMO/322MIRijWsZ6XbJLouXVxz5deDqMRjOGYEwY
fbrrvdup9KBenUirsREkGIKh9eK2T/zUdCppGvUt6kckaTNGEWP0mLDfeJVf
Bg1uf7Nl46fRJBgDGaNv/Pxu+WOz6GC3taNmG8SSYBxgjP6b+yZue5dNPv37
rD7XKp4Ew4sxBv2tfebHsFxqoPPjRHB4AgmGBmMMtcweddglj/TGv7ercyqJ
BGMeY4zs4lFWq18B3ZxhHjx5VAoJhmDZf4Wy/1Jl/xXK/kvF6Km75zXTDiar
vmdrr4n2oLGMcYkxHgaW1mtlEU6dx7WfkzrGmwSjI2M4fry3vfvRKHKe73Rt
iaMfCYYTYzg3Wxw9bG8sjVuvmx7bMpAEYwxjuI6sP2zytgQK2xejPc80hARD
MDzXeFsvXJdMLyYMHJr3M4wE4zljZHnrqAzsk0a/ZlYs0XoWQYLxgzHyFjRz
cvt37o5e5HtIf20UFTCGYBQUfFwzTiuTzFafu2vbOoaKGMOUMUpMgpoE3smi
iE0L/dIiYqmMMcIY41ODh35z2uRQi90dCtuaxdMXxmjGGN/vHtmbcDWXVh0s
0FhGiSQYKxjj1+ClPVZr5tMD0xf9b3xNIsG4xxjlAYOT888VUOn5A3rx9ikk
GMWMcW9ok6UX64dR8rAFve9YeJJgJDLG4+UfYFvz33kxLX93mx8+JBgbGf97
vzrUyakimsqX7397TT/g3/tTJcYvxnB5PND0/Zc4Mt9er0bT8CB6xRinGONt
WH5BWGEi1fWcqRXQNozAGILh/c1mRlpGCukFNp9SKzqcfBljHmPoa3SP/16U
Rjei0reMt4gkwRCMDXeqWxxan0EZyY8vHBsTTYIhGIYDU3VqZWVSz9ydLu+/
x5BgdGeM7X6vS86uyKYdZTrxf5/EkWAIxq7Fl243Tcwh9581KkbqJ5BgvGGM
PcWGc2z08qh6tdD2B1omkWCoMcb+w5Ora0Xk07S6V3XfhCWTYExhjIONO798
Mr2QLjVZtf7HyVQSjPOM8T8z7DUg
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[1, 0, 0], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwlkk8rhFEUh+8Zn8S3sGXDwkKysLAYEhb+hQUlLEYJi1HCYpSwGCWkIQ1p
SEMa0pCGNKQhsWHDhvKcfoun3zPve+855713ylt66rsjIYQKKIMrGIN9C+GA
bIRR/IacgFO8gTyEmCmbYBzPkFGYwmvJNAya0vcM4XVBdUdMfbxuFj8nB2AN
fyZX4cvU3+tO4p1B65J4Imjdp6n/McTxM7IXVvCOoN/LeIy8hRye87lgE4+T
D1A05QI84tPkPRRMOQt3phkvIWU6jwLkTfue4N2US/Bh2leEEp4PmuPIVGMY
dkxzeb8L0zNflzHV9vmuTTX8m19Ms/s9pfFs0Lksms6gFWbwbbIKmvFXch3+
8Mqgd1E8Sb5BJKK1u17LdH5+Rhume/D9v6b3fq9dpu8rwTeeImug3XT/JzBn
eu89fkx9tvw/Rq/qoD1tpn170Gea3b8nYXrm/5V+Uz2/y3n8H+e3ba4=
             "]], 
            Polygon[CompressedData["
1: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
Dh44No+zgk5Fl3Jm/g8UMZwE
             "]], 
            Polygon[CompressedData["
1:eJwtlXtojmEYxt/necOY83lmmJkZZhg2ZvyBPyiKoqgpx5oyh6IcayvH2sqx
KMeinM1oDjmsjTWsYW2sObShiSwimojf5d4fX7/vva/ne7/3ue7rud/Yxavm
ZPsgCNL4RPDZwyc1DIJaWO2CYDf8wIJE+BnuhTXOdK3T+miYBJvQF8Kd6Hfh
UOqZsCPsBsvQF8Bc9Nswkfp82AF2gaXoF2EAG8Ek6hfgQJgOQ3gW/uL372EG
12dgLByv38HlYD96CRzO9TLYGfaCFdx3McxHL4bDqC+CnWAP+BB9FlyNXgQH
U58J28FIeAt9DlyPfgMmUJ8NI2EHeAf9NPyO/hZOpH4KDoCp8A/6PLgZ/RYc
Qn0ubA87wWL0GXAF+jUYT306bAvbwuvoG+EV9Ao4ivoG2APGwpfo2fA4ehkc
QX0l7AqjYZW3fj5Er4Zjqe+CUaH1V33eAkdzXQmLWLce1lLvD19726/2rf2v
c/a8ei49321v+9W+tf9v6EfhT+op8Le3/Wrf2v8mZ37LV/l7z5vf8l3+r0Kf
Bq9SbwNvwqlwEHohXII+BbYJ/7c+KPSWJ+VK+cpx1i/1Rf0pgSdgOnq98ox+
WP2iPgo2e8uTcqV8NaOfVN6oj4V/veVRuVQ+/zrrt/qq/nrqB3SWYB2sQ8+H
n9CHwS/wEByP/grWOztPOjc6P9/gNjgGvUrPi74VvqEeB99565f6pv6Vo+fC
BurxsBEegRPQ3+ga/SD8Sj0Z/vCWJ+VK+cpCnwwvU2+lfsMcmIL+VP10ljfl
Svmq97Z+IfUCGMe6SbB1aL/XfbTfJ+jP4TjqebBPaPuXD+rnUmf9Ux/Vz4jQ
+qs+L2o5lzqfec7mheaC5kO5t341OPNPPsrPmND6pz4qbx+c7V8+yI9+oeVP
OVSez6M/giOpr4PdQ8u3ci4/7zjbv3yQH71C81c+y8+Xzvqb1tLvvqH5K5/V
r+vOzo/Okc5Tz9D6pz4qT03O8qccKo/9Q8uXcrYCHka/D5OoZ8EuMEq+evNT
vsrfStZth++pJ8CPcC08Tb0cJrNuDewGY2CNt2vVpZ9y9n+6r+5f7c0P+SJ/
zjmbJ5obmh8vvM0bzR3NnwJn/6f76v513uaN5o7mzzFn81hzV/P3mbd5rLms
+bzP2ftC7wW9Hx57e1/ovaH3xw5n81JzUfPxgbf9ljo7HzonOi+9Q9u/fMhq
8U3+HXI27zXXNd8rveVVuVV+M9EzYCuu+RpcQv8HsznfAg==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0UsrxFEYB+Bj8EHmY1DTNCTJSG5pGpJbmlwmMUlIQhLSZCQhCcltwcLC
wsLCwsLCwsLCwkLJl/D8m8XT75zezfs7Jz6Qb5+oCCHkuIuFEJ2rK0NIyF8S
VSHMkGSHLLOk2KWXOerZo48FGtinn0UaOWCQJZo4YphlmjlmhFVaOCHHGq2c
Mso6bZwzzgYdXJBniy4umWSbbq6ZokiGWwrRTOkrXYPeNSIri9FbyFr3jPmN
/OGMbw75osQnm3ywwjvzvDHNK2O8MMQzPTzRySNpHqjjnhR/WCMk7VGIlf/n
HyZ8Ngc=
           "]], 
          Line[CompressedData["
1:eJwl0b9KAlAUB+CbCj1Hz1FE/yiJCJEICQkRCY0wiSiJCIkIkQiRCIkIiRCJ
kIaChoaGhoaGhoaGBoeGhugZ+qThu79zucs55w5l15PFgRBCgftICFE56JiU
P4zGQigzxglpdpjglGV2maJJhj2mOSNLhTjn5NhnlgtWOGCOFnkOmeeSVaok
uGKNGknaFDligQ4ljlnkmg3qpLhhkwZLdNnq1xbQNWvU3MMyLRt2EZMj/bv3
W/lNhy9a9GjySZ0PqrxT4Y0yr5R4Ic8zGZ5I8UiCB+LcMcMv2gvj+tiO/P/P
H6v4NtA=
           "]]}}}], 
      GraphicsComplex[CompressedData["
1:eJw9WgdYj/37JevNyN57JXtmxi3K3hGSFdlCiCibVPbISiUZEZEiSqelvfce
3/bOXsXf3337ud7r+lznOefc7/t+n+dzf57nPnoa7FhkqFSnTp2n9evU+f/1
iLZS3oWDLthcsqyB7Yhoiq2wVjh8DMCcrAZ7A+qHkhnzJDximCfhofvR8GmD
2c8xw23dnHrv48hc5WNot/EhCNWKOTh6bRQtZp6EhxnzJDwqAmaVTVnmjoyq
TjaeM5JowFC957ZHInB3yVy/hKxYKmWehIca8yQ8jl8ZqnbE8BV2Do7L3u6Q
SmUP1sw5uy4GitNuWipnE+gI8yQ8Spkn4dHJsI3hW+M3qL/Vsn/vbxmkObbN
5IhTcejp3T5k+oRkasc8CY/JzJPweK7+/c6Pw28xd7HDuPJ+OXQ9JHhkk0cJ
WFNlNvtoSSo9YZ6ExzXmSXj0qbej6tY0X7T/eDArKD6XqpYd7DcrMgkOvRRR
b65lUC/mSXhUME/CY+fW3LPjI/2guLj0+J3DeaRdMqSzZXUKspdMX/RJO5uM
mCfhocU8CQ/veJ1BqToBcBk2Us1sYAHZmipUQlqn47xWUmm7Hzn0mnkSHreY
J+HRSCMobF9aIPZFq0TqJhfSR2UbpUZjMjE067TLyIUKqs88CY/3zJPw0HEa
u7nd2iBoGpXuGn68mGbenPlFWy8b0fsmGC14mEcLmCfhMYN5Eh72TR838igK
RtNmQe2aDi2lBVd/7fH3yYFRy8qh23/n0y3mSXjMZ56ER+mervd1jEKR9PiO
V2FaGR1cmVK5NiYXKo8d3lvqFlIR8yQ8hCfhMTrzvNaHT2FwmGW+xu9UBT3o
67aprkKBp1o6L+4/KaIRzJPwuM88CQ/efxGy/6pk/+XJ/iuR/Rch+69K9l+e
7L8SNNJvM1L1/i6NOn//xFD7dkXdo0674nDr0w/UtGPJJDP30yKjvRrpL7f/
+See1A5RUna7IFi33Pqtxi2cZss+jpN9HSL78pDs08ZWdnPGmVp5S3205vok
9dFhg/MYn1YXvKU++nF9kvqYJX0kXvpKsPSFI9In7qxImeMU64ZWC+l9pm0C
5a9yfXl4tKnG33LpSRRvd//typVhqO998/cri5j/7fuB0gfs2U/ix0CLeqHZ
xZe8xY9Y9pP44Sh9ZZD0mXGD3lrmZnngwbkv4y9/SiadHLP9Lr/MNC72mXmp
z8w0OoJm99LvRmFq1e9j79XjKVf6Rrn0kdHsJ/Fj0sOVenVx1Vv8OMx+Ej9y
pC9VSJ+KqrkT1K3cE+MjnpyYMSedcof1vb1t3RGNbX9/0Exqt3N80KC9sTja
y7DhwPxE6iF9Z4r0oXD2k/ixMPRVWa+r173Fj7bsJ/Gju/S1qdLnNkSeqqf/
3QvRyoZRtXez6Mb7Jr+OTT+m8fc//1IObatT+Xrr9Xj4LgmzXH8phVZL37oh
fcyA/SR+GJa2NNfaestb/NjKfhI/VklfvCl9svb21sk3GgJuvVXOpNbm0EK3
D6tuDDyhcelvAQUFXLjz5JFXIupYDm1mNzmd7KTvVUsf/M5+Ej9Mm2xT2aBp
5y1++LOfxI/b0lffS5+dNebhpDJlP5j5lwxzd1aQ8u5UuDY/Jfspnzr1XHKn
JCsZ5H3lQnJlJmVJ35wmfXQG+0n8mNYuLzrA2kH2Sz46sp/EjwzpyzOkT9vY
d8q0vOCP6WvfJZ5bkk9+I317BH200DD6e/8KaNfz/66qKaUBX2ssT8/L+V/f
vS19+DL7SfyIUb1wPeHLHW/xYwf7Sfw4J33dXvq8otHZg2rtA9Gyzp0Dm+sW
kumn+0czki01Mv5uoCIK1vQ+vbFvBlZfdJ19714uDZG+/Un6eDb7SfzQGzNx
bcHau97iRxD7SfwYLOfCFzknBu/83TH49jtk2Jl11/rTL4d7nFV88LLWmPX3
BpZQt7gdZvdnZOH3AINm/jUKipK+P1vOgQHsJ/Ejf3pp/y8RTt7iR1f2k/gR
KefKXDlnTFN2eRr2Ccb9icsCuy0voeK9e6YqO5zV8PzbP0pp/POWnh/Uc2Af
2CY6Syf/f+fGQjlHTNhP4ofRsmsfGo697y1+iJ/Ej+1yLi2Sc+rd5Hzd+o9D
sCtj5Obv9cvIYfQKp+4nzmuo/t0/5bTBtGz4pem5mLQq+MLPRwXUTM4dMzmH
/NhP4se3TVpe7e8+8BY/DNlP4kdTOdfM5Zxr4az72XF4GCYcbK6S8KycXH46
KHV2v6Bx5e/+qaSLmu8eD1+uQNZX00UdlIroiZxbD+Uca8Z+Ej+Omb4/rqbi
7C1+XGA/iR8uci46yzm5omXoZU3PcDToVOb2VL+S+Dy7KPuvmryV7fvGbsmD
+cVBbdSXF8t5VSLnVR4tZT+JH3xePZL9Vw0v9pP45TwqkfMoD+jy87KG1W7Z
b7FkJedWfznHuj3+lqk3/6zsp1hYyrk5QM7RIXYhSzYv2qfx9+fuk/i/cyZR
zh1HE9060eYXvYVHPTnHkuVcs+1u096m00Hptyk0Rc6JY3JueFx7drFa54r0
0xQIT8flXGp8Z12qv+KQxq/f//8nnY5In28vfT/Ys3HvVgOueQuPw3KOCI+J
F69H7ltyVCPt737NJkif3i59Oz11vfvIOje9hYePnANGci58Xnh4yLlxx+X9
Ipd+n+Y+Gyh9t+qHj/aSJFt5P8jFL+bpnfT1J602nHfqelJ+vzyaJH2ys/TN
el06Jpu42Mvvl4eJ0oe7SF82jJ9T/aauhcarv/st/399zlj6nrXduFFzNO94
Cw8f6aO7pa92uzJyYWzBadlvhf/rU2HSt9q5FtbouzjKfirEKumD4dIXExd3
cisKtdK4/PcGFdMv6TM9pO/Y4/K77e2dvIVHrfSxntLXrNvWbf3ryRl53kvp
tvSJCdI31GImnzt07J48z6WwlT4kPLSSina3uXROY8ffH7iMJso+3yj7/kVO
he75ivvewkN42iR95fDsjVvaTrigkfX3/lT8b59eln076f3N7g7LHnoLj0zp
A1ekL6Q9TrvZY/BF6ddVZCb77K3su6C6M4qfBThLP67CQdnHPrKvI57sOTpU
6Sk6aXVaMmFHDDXOrkj8b+MdLBnWIWLnvHiaEKdOK3fHQM1ubs5yl0AKZj2J
Hg1YT6KH6GkA62HWz752sYobnh6NtasOiqcNDbUvjTF1wg/dX7GOL5No8df8
WGu9eAQZmdrNXhRCB1hPosca1pPoIXoKZj1afzs+/lJnD0zB6eJ73ZLJf7Dt
vA3WD2Bvnp+c0C2NjLpcWf9GMwnr6J7+xG/h1IL1JHp4sZ5Ej+2sJ0PWwzlk
075oNU8k1dCIFSZp1G3Jx8ZXbz+CllNYZkOLTLLQnPq1WC0VdVrEdhpqF033
WU+iRzvWk+hxivWkxHpMvjHXveloL2wZ//Vgi6hMOmg2KzjA9Qn2Gqbsst2X
Q3c2fLBs3yID83ce2tbCMZY0WE+ixy7Wk+jhwHpawHqkbB7xfuZUH9TRSFYo
/rxPlsfGaH5f8wwh+8P3eAxUkJf1nS7TvmbBftmV2cp74ymB9SR6FLGeRI83
rCcH1mPs7SbXpj70RViam8XbSQq6aVhj36L0OTqf8dkXlZ1HW5Y9XDq+KgeV
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
T8Jjqcyt3ssca67keo6S8+nK3Ex4zJGcUHg8lbnRcJkj2Upu5y053hOZWwmP
W5IDCo8GMrfZKXOcMsnltkpOV1/mRsKjVHI+4aEvc5NnMkcZL7mb5HakJ3Mb
4TFOcrx/uZ6bzC2+yRzDUnI1yeXoucxNhMdpyen+5XbKMjeQOQWlSG4muRv9
J3OLf3OMZMnh/uVyMhfAGPmO7ye5mORqtErmBsJDVXK2f7nbCvluTpbvaBPJ
vQZLDqYn3+3CY4/kaMLDQr5b5TuZ1kmu9UZyrlPy3fzvO9pAcjLh8Vy+G9vK
d6Sl5FbakmM9k+9W4XH6Xw4mudgiyQkGSG5gGzKoNN80HLd5pYWSUwiPm3Ld
TnS/NvCc/t/c/uWAipdX+8dAVqplnoSHh1x/JbpHMidvJXPzbu8Dvo21iYOs
5CxzeuHRVa53F91AmVMvlLn1yVc3x2coJeIUrzRA5uTC44RctxDdUZkTn5e5
caX5LrPDO5JRxSsdkTm18KiQ69WiS5E5bbTMbXW1Zvj0ykjFMl4pWebEwmOJ
XF8uuqEyJ1WRuSkad68TNCMDvrzSEJnTCg8fue4vulMyp+wnc0u12M+amz2y
0J9XOiFzUuGhKtcHiC5D5oQyl6SQ2YWaDS/mIJRXSpc55b+5ZbBcDxPdSJnT
yVyQap7GKpYG56KWVxohc8J/c0Ph6ZfotGVO1lDmZsNbvT3uXKuArKQlczrh
MUyujxDdTplT3Ze5leHeh31+/vke2cAr7ZA5mfBYL9c3is5W5kTTZG50I+Xy
uzlbCnCTV7olcyrhcf3fddEFyZwmX+Y2fL4VyvlWSO9kTiS8nF+Fcn4VQl1J
96Fms1CM5pVGyjpGrtc7X2/Q6cJI1OeV6sraQK6Xnk1ZWrQ6FmW8UomsgrFw
sesNq4h4LOKVFsiqI9ffdDqVPnhcErx4pdeyesv1Xrn6XWPvpaA3r9RT1j5y
3frByNV7WqXjDK9kJetZuf5xe+M77Q9n4jOv9EHWL3J95ahcxZuybKzmlfRl
XSPXDWpXtBo6KBfreKW1sq6X6zZrpr848uccucYrXZVVMMIDRiyOu56HCF4p
TFbBqNOv2+fe0fmoyyv9VuVVSa6PtFK22dugEKN4pRGyqst1S8nxtSXXT+o/
Jjbt0Wv0btKm9y3dODotfy9AeCQwT8LjmXP9lC0jfHDc5Htmi8uJ9IQxCca7
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
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[0, 0, 1], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwtkT8rhnEYhX+HT+JbWGSQxWAwGAyUMFD+DZQwvEoYKGGghIESCgkJCQkJ
CQkJCQsLC4vr7hiuzul53vd+7nPunMqGkvqslFIuZEMbnMCyUnpER+EDf4zW
wxz+Au2EPfwlmoEj/DXaDWfyjGZYwt+gfXCFP///xhb+BZ2CH3wxugpN+EO0
FqbxpegGdOBL0HVoxb/Ge0gs/4yMwxfPH9AReMPfo4PwhL9F++FO3v00ZsnP
Yu9zecfIcyxnil235UyReV+eHbPu5dmR7Rpfg+7CML4S3YEBea/Y6V3uMnZ6
xhehK1An9xSZZ+SOD2BS7mAfxvAtyTeYx+eji1Ah54h3a/jy2Bd65V7jfp9y
T9HRt9xffLsFP5t8g1/5f9F1D34huV/R7WZy7xk5U1n0KGu865LvVgiN+GW0
AKrku8Vd2+WssXet3FPsOiTni75G5dzR44ScLy9+J8+OudX4P0HSbI4=
             "]], 
            Polygon[CompressedData["
1:eJxNmwf419P7xs97lAYlLbRlRUrIyJYVIpGtZZSVWaIkIiMlSoiKpgZZkVFG
yUhk7xWRPUKSfv7363M/rut/Xd/P9Yyzz/uc+zzPc863Re/zu/bLU0pDi5RK
0VFZSltJMVL0OcnXijaTfI3oQsm3iG4jebTo85KHqFymgleI3iX91dI3Eb1K
dIHSr6ZepV8lerf0l4v+T7/L9Bsv+UrlayQ6RPRp5b9etIXk60SfkfyKaGfJ
L4u+I3mCaFvJd4sukTxYdDPJg0SfkjxWtJXkMaKLJE9WO43V/r2iU6UfIX1L
0RtFn1X6QtGDJC8QfUPyZaINJQ8UfVLyAJVbp19//e6U/jzpa4ueK/qY0i8Q
rSP5fNHHJZ+tfL/pd5Z+46QfIH190f6iTyi9j2hNyWeKPir5YtG6ki8SnS+5
n8r9od95+t1OPtGf9TtDv9sk365824uOE12s/BdJ/5d+F+p3h/Tjpd9B9E7R
F5T+nOghkp8VfVNyb+X7Qb9e+o2V/nTpq4ueJvqI0t8V7Sb5HdEPJL8oerjk
JaJvS+4luoHknqIPM17RjSSfJTpP8mLRTpIXib4leaLa2UzzP0F0ivTdRb/V
71T9xkgeLrqB0q8VnRD9biN6V/S/u2gVyaeKPiT5Y9ETJX8k+pHkFaKnSv5C
9BPJj6me7VXfPNGZ0n8m/cmin4p+rPRVor0kfyP6meSHlW9b5X9I9D7pP5D+
eNH3RT9U+pPSt1H6E6KzpF8pfQ/Rr0Q/Vfoa0XMk/yn6leQlyreb8r8gen/M
aw3RM2J+k/gL9ftX8jcSC/EX65frt4r1rnIdVP5l0Qeke150F8nPic6Jea8m
2jvmn3mpKrlHzM960fMl/yP6dfI621By31hvf4ueJ3mt6ErJD6jerVT//aIz
pP9V+j6iv4iuYH9I307pC0Rnx75uKjos9jfrtp7kS2L9sg82YYyxH1j3DSRf
GuuffbUpOBD7C1xpzjoIfGEfby75itjP4EJjyUMDH9jX20m+LfY3+6C15Dti
P4BL20q+NfCJdVlL8jmxPn8SPUPyj6JfSP5e9DTJ34l+Lvl30bMkrxb9Mnmf
byy5X+z3WZqHLTQfM0WnB45sKXpT4Am4ubXkmwM/wbEtJN8QePaW6DGS3xR9
X/Jc0T0lPyD6quTpqreZ6p8mOk36P5Lx4xfR6sm0fuDKYclz/7tol+Rv8Gfy
fB/EvkymDQJ/jo6y1Hl0fJvH9TtAuidEX2e9ix4o+WnR5cnr6ALJ/4v19FMy
XoFbhyZj32+inePb0xZ96Jr8zQ+M9UAaeTgb1omemLyW/kleT4eAo8m0aawz
8vwZZThXqBOcPljyM5nxel2kk4/xsrbWiB6bvMZoe7X4I5PXJDw6+lVT/K/J
eA/uH5GcznnCuUKZ32KMP4pukIyjh7IvA0/BxSMkvxT4CC70lPx14AP7qC9z
FPsJnDhX8l+BF+BWd8lfBn6xLo6V/Hasj9cZt+Q3RN9LxrFTJH8eeAZOnSD5
w8ArcPs4ye9lxm/W8dl881jPrPszJf8c6591f7rkH2L9g4u9JX8b+DhZdBfJ
U0VfkvyQ6D6SHxFdlozzh0l+ITPeTxLdSfK9oi9KflR0P8mPib4meZrorpJn
iL6cvO73kvxgrP9XRbtIfk303eRz/0jJSzOf/7NFO0i+X3Sp5PtEd5c8S/QV
yctZ57nnjfkCO/4WPSEZQ/6K78t35vtjR+woeWJme4K1g72D3cMaelh079zj
XhZrlTV7UjIGsi7A9/0zr48asVYOSsZ8ztYfxB+YfBaAxewh9g6YTLkacU6Q
Z5z2fV3t/9tE7wXHRDeWfIvoPZLnKN8eueeB8c8U3S33PDD+8crXQPnvFJ0s
/VPSd8y9r9nPy0SPyj3PzO98+pAbB9j/B2S2T7BTDpE8RXTn3OuA73+j6q2h
+m8QnSj9KNGNJI8UnST5HuVrl3sd8P3nie6bex3w/aeLts+9Dvj+YP1a0eOS
Mf+7ZHsCu2LfwDvwu2Nm/Ps+2f7CDjsg2Tb4VnSf5LPw29DtLV5/Fexmj7O3
+8X3Yj9jt/GNDs7cB86dbslYij2KXdol1gprhjTyrI0+U6427WY+f2mbPsAz
BvreI8aDjnxV0Ge2n7Cj9pf8c4yXfKQzTsbLudUpxs4cgPWcYeSlDGnk2S/W
GHZcx+S1hoxen6RyzmPgr8t83jMvzA921d7Jdscl+pW57Q/skovEZ7ntE2wN
5py5xubA7jpJuk8y21+c3etFT0k+w7HrvtOvR9h32PL/49skn4X/Jp+Hh4qv
m0yRSSMPexX7HDudPUvZFrFGakdZ6uiefKZy9vKheyafwfgumWiv5LO4XuDV
UaItGG/m87mTaP1kHl3v5DO7U6SPjDoYG/4Ofg9jpG38C/wM+rBBZns7j/ro
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
             "]], 
            Polygon[CompressedData["
1:eJwtlFdoVUEQhs+eq7HFqDF2jT3G2HsX9UEFBUUFBYXYwIAVFKygYAUFKxiw
QgQrJASNvZfEklgSe4k1KvbYYvf7mX3Y++3szN3dmX/2NBw/fdi0MAiCroyy
jC6RIFgP77OYBCtjr4J3XRDcg02w+8P9+EvBLDgATsK/H+5l9CKmCP5lbR9s
gN0d1ocrYSd4C+Y521tn6KxKsDGjD/MM9tW9MvnpC8cRmwk3MboR8wgWsbYZ
1sRuD2vA3ox05q9DyykeexeMYL/y/9UehditYRz2BvjC2Z7dsbfBJ/jbwurY
qfAN/seB+RSj+VvWtsPa2B1hLX+27qCzSrFHBmyE3RM29LVTDVWrFP4/EL4P
rfbvYBrsgf8pLMa/A9bF7gzrRKx2quFtYhNgNPYSmOuspp2xV0sv/IkwBnsF
zMd/JzBtpbG0vOcsd9VAtagKN6oX4AP42FnuqoFqUS1id9Mdn4VWc9VeGnxy
dueRjETWjsFFrI2C34itDL/CZviGMz/KvDz8CAfDucQeCcynGM3nsTYCfiEm
Bn4OrTfUI+qF8fj7SQfWo6RRaL2nHnwZWs1UO9Xwj7OeXO1rpFoUsLYGxmK3
hFUilrtq8DC0NfkUU+isJm2wZ8LL+GsHaqwgmAJ2478EO2IvhzfxN4HlsRfB
bPwFsCn2IHjQ31l3Vw5T8WfpHTFaEnMOprKWondETE3lENreOkN75TjTVhpL
64p6B4yFzK8T2wBGYc9RvYm9Btthz4dX8cerR7FnwQP482ASdjI87TWTdtJw
Jf5Tge2tM7TXMWe5KUflWs7nphyVyzRn2n70Wn+Ai2EH/DfgGWe9qx5WL1fQ
O2Hs1HsM7U3pbemNfSf2OWyOPRqe9D2h3lCPLMV/Ak5mtCLmAtzqTBtpJK3+
hXa27pDPvBEsi71A+Tq70wRGC9bOwHWsTYS/ia0Of4XmU8xZ5rGwBI6Ba539
ZzajLTFXYIaz2ksDaVEaDoEJ8BCchX8oLGaPaL2h0HyKOey/Cfo26Bsx09l/
kr1G0mIVa2PhT2Li4I/QelM9ql7c40xbaSytIxF7m3qjx/2ZOlt3WOjszeru
yiGX9bowxJ4B053lpNqqxtm+JqqNarTFWc2lnTSUViXOvr36ButbXE/fGcZ0
5hd9T6u31eNpxOYEpq00lpbLnNW2xNf6e2hvQ2/kvM9ZuasGG529Ge2tM7TX
Dmd3Vw7Kxfne1xtQr2c50149oF4oA/8Dwf7UVA==
             
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0U8rhFEUB+Dr5YPwLYx6myZJSDKSmKQZSUNMaCIUoQjlbxGKUIQSZWFh
YWFhYWFhYWFhoXwMz5vFc8853Vv3/ro1hVJ2tCKEUOQ2CiHpY0us3pHmgWYe
yfJED88UeGGIV8Z5Y5p3FvhglU+2+eKAb0754Ypa96bUXGUIW97yS5252nyj
pux3VemZ4JpOLhnjgg7OKXFGOyeMcEwbRwxzSCv7FNmjhV0G2aGJTQbYoJF1
+lmjgRXyLFPPEn0skmGeXuZIM0uOGWKm6GaScnJGzoy89/JHyR/IX47+/+cP
10w16Q==
           "]], 
          Line[CompressedData["
1:eJwl0c9Hw2EcB/Cn1T9S/8Ym63eSyWSSmUymTb4lWYpG0SgajUaxUWw0SkQd
OnTo0KFDhw4dOnToEP0VvabDy8fn+eH5vD2D+bV01BdCKHIXC6FfTVoY6/VM
8ECKRzI8keOZAi9EvFLmjQrvVPmgxicNvmjxTYcfboh7N65mDVE3yy8J/ZD+
Vk3YXxhwlk2uydBlgyvm6bBOmzSXRFwwR4tVmqQ4p8QZszRY4ZQZ6hQ4YZoa
yxwzyRF5DhmnyhIHjLJPjj2SVMiyyzA7LLJNuXdHzil57+XXhhH5t2L///MH
rBc2zg==
           "]]}}}], 
      GraphicsComplex[CompressedData["
1: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
lwgzdFoGlvWCsN5VvK+GUmOTNV6jdpppTwa5OQ8NDaO6+oP7GDTwpBPCXA8M
nWsLM/Rff2/h4tfTnxF09MfAQ5sMLmo7Vc73qZ4dSV5Vixrm1vShjsLsDYbO
z4UZOvmC5X00hj7vrjLapvpVrd/g5jFRP2No45v7385W9aMXwrwZDJ3XCzN0
2gJ2KT7f8bSsbFSVwHAr7XLjSbm29ROodfiq5P4VAmiZMLcFQ+c/hBk6tQNL
vU2mlUNDDU0CbbTlZ7n/eFg/mcJd23olfQ+kcsIcCYbOIcIMnaLB4k+lUKty
j33OOV3Thr6LPtzUNoWeB76Z5vlfMIHZsxR7CLOK9wbL75tGsc+t2t02/1dr
e+ptzX1d0qixR4C3+dZQshHmpmDo3EiYoVMzsPTH12S6/9AR9+03tOs7Vr2c
6ZpOGx/c6rfyYxitE+ZNYOi8XpihkzFY6n0mjTX4Jzty/i3tUJ9WrScYZJD/
v4duDdoQQUOE+RUYOvsJM3QKBEt9z6JyFaePzR9mr625eKCDU1Amtb64pEmt
N5FUQ5jbgqFzK2GGTu3AUs9z6In3APvy7e5ok79P69NwbjbtPDbkZPqqaEoS
ZhMwdN4uzNBpN1jqdx5tOPRH9cbVHLWOl1Y/M8nIofCdzX4+yoqhu8IcCYbO
ocIMnaLBUq/z6XzrA30vbrmn3dXn4Ki09XnUae3XdccN48hEmLuAoXMHYYZO
3cDy/fGGCvd/XnbN6L62fLO2frMuh1CI+YE3qW5W3Mig8YyBa4Mp6s6mvd3K
3eW01I9f6jUJpX7cecHDw/f4xvBqQUfLRZDPhka9Wxba8p29IZaFPmG0v53V
9+l6Try15Z3h/r9+x+DTta6+N3vAE1a+DXdbGU1tL68rnFjuOg/lI1n/No+i
JkX7B5g2ceGq85ee3PMympYt/BTd3fYhvz0TFZsfGkf7PHwdTOre4ohv1HOu
cSw9eLFiS1B7V7a80iSqT6t4+tE9rt4ax8d84dHT5BYDkyglq7mRg74DGw34
vKNmYAKNvTTBuXpfN+4ZE9oyd1sSmZd1n2qv1XKLN1Pe35ySQkNqGreN6+/I
PwdGpaaaJlO6Uc+3Y4Y/4yXVRvQJXpFCXUPtTmf5MW8oN+KTR8U0CrqSUXig
7X1+Get0+OngVBpsUe3C8Jvu3PV2y9jbddNoSYhBhukqD/au1/9L7ON02t2t
9qSrd53YbNupzhdz0uhYxV19Urs+56LR33YddE+ne38+OtDj3XNu1KHTt/f/
ZFA3z0F3HvRz5gUNV4ZsMH9NUf8Uhu1x8WSvzKjWC1dn0HebDq2Dt3rxKk3z
n9VbZVHiTKNq/u4u3OHRCOMJw36d/8jFG1povPnkoQcvBjTMotFVr3qs+enN
TyfVKqcfmU0nc8yMUsc84ncz/mjSviCL1gyOqPnsuQ/Pbnv6n3pe2WS2QW/h
74d8udaSChXpWC4N2uXu+yXUlZ99+MblLueQ2/VRjvPGvOBWXitrF67NpZTY
PT/sq/uxofHnyrMH51N+rby2teY94SPnopcmjMij32o8mfBfkB/nLx756GWT
fOo6/P3Vsede8sOjOVXXvyugK/82OND+tRtP7elcxfVtPk3b0jnv0kx/fli2
1bx/fQtoq73hwOxGAfzXOftR49yDqVX5v87697Rk++uWY5duCiWqF61vYmvN
Px6fnWDSPpze3Cx/0KyTLU95dWCyeXwEWWq6pdk7X2O75C3THM9E0cTgOUM9
B/3Ln96vnPnCIIa+LTlkFetznUdXnv9XSlEs3f58//vbSTf5SuMp8746xNOc
4wlzq8Tc4oIuBgvqLEqkKi2qPGm52J6trZv0MK+aTK5OvRv2z3XgsR3PO9mm
J5PRyIXGkzbd5fcP9Ho7PkuhBrHHw5d9d2TLQUdc3C6mUvrDuY3I8x6P9C3b
78WGNHLbs/7Fy8P3+e3kHa7h49PJbOzhLTPHO/Gl2A9/pui/ppV1LfRTaz5g
g6Vr3PLLZNDwRKeIfyIecH5+puZrbAY1ufniwJdLzmy+ZdGzSi6Z9G59Yq+D
812YysZRndNZ5DfwQ2rN1g8569h0jxZG2WRdsarp1cyHbFo3cFjn4Tm0LajF
0PYOj3iQ5Siv/s1yaeqlPoUP1rlyRjuPESM+51L7JeOsqM9jPnN/gO+UkDwq
22XRRP8vj3nAQOfR8+3zKeaT8feZz55wqleXlysPFtA99xMOqfvc+PjEG+O2
LHhDh4/Zzl0zSstG8P/2if9Hyu+bLX4fKT9Q+ZmI50OIh87iF+7XIJ/nIF/F
74K/qPQZ8BOV/1cg/h8pf1DtB2bxCw9rEM9vEa84D/6h8vsOit9Hyg9U64FZ
/MHjGsTzEcQr3ge/sAL8vabi75Hy/9R6YBY/8JQG8dwC8Yobwh+cAD/vgfh5
pPw+tR6Yxf87q0E8P0K8Ykf4gcq/ayv+HSl/T60HZvH7zmkQz+0Rr7g1/L9U
+HXrxa8j5eep9cAs/t55DeJ5E+IVr4Xf5wB/7qn4c6T8O7UemMXPu6BBPLsj
XvET+Htb4MdVET+OlF+n1gOz+HcXNYjn6ohXXAl+3lD4bzPEfyPlz6n1wCx+
3WUN4nk24hVPgX9XHX6btfhtpPw4tR6YxZ+7qkE82yFesQX8ukj4a3nir5Hy
39R6YBY/zlKDeC5EvOJs+HPKT+svfhopv02tB2bx36w1iGcN4hX3hh9nBP9M
6kcAKX9NrQdm8dtsNIhH/Qggxbvgv+2G/9ZY/DcCc/NSXA/+XB34c9fEnyMw
Xy/FNvDvbsC/GyD+HYF5UCnuB39vAPy9YPH3CMxhpTgA/l8Q/L8V4v8RmFeV
4qXwB53gD/60KPYHCczlLUvyfxYl/cNx4h8SmCeW4jHwF0fBX7wg/iKB+XIp
Pl/Kf0wX/5HAnFmKU+BPxsOf7Cb+JIG5ZynuDP/yX/iX28W/JDCblGJj+Jvr
4W/6iL9JYH5Zij3hf2rgf9YR/5PA3KAU14A/WhH+6N/ijxKYF5Xiv+Cfqu/3
RfL9Tq2r1W19ZWYoRXfoFxJ7+zGp73l1/g/R38FjewdymdtGL8e2dkH9C2bx
T/dp4J9ybfFPCevzbPgDWJ8jZH0+KOtROVmP9xt/Sah5LoIe3KoQvbLnM1Lf
/2p/+KksfuohDfxUXid+KiGfHSWf01MSLx4KiibfukZrv8/zIPX9r9aDf8ri
nx7TwD/lV+KfEvLZS/LZYILXtG/V4sk5PGiDt7Unqe//kv09jsUvPamBX8od
xS8l5PN9yed/XW/pbRidRLZmfY1PpnuT+v5X68EfZfFHz2jgj/IR8UcJ+Wwl
+Vze1Dd947AUOjPdYtuM9i9Iff+XKfFPCosfaqqBH8rvxQ8l5PMJyWfnUQOe
301OpV11K5g0W/2S1Pe/Wgn+J4v/aaaB/8m24n8S8nm75PPS7w5W2bvSaVX4
yj2vHQNIff+r9eB3svid5hr4nTxF/E5CPi+XfK73oIVJm2YZ9JdZyP477wOx
Tmapep3B4m9e1MDf5DLibxLyeYbks88K0zkL3DKpTcernk+uBJP6/lfrwc9k
8TMva+BnsqP4mYR8/kPy2bh5xf6Xf9WHJscmeVs+DSH1/a/Wg3/J4l9e1cC/
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
Fl3dr2IX3K/qLv2EWqKfVFl/c0+1d1nU1CnVq+3mEFL3rVbJfSvCfSy+jH4E
nTdARz43Rz7W5+ayPiu9sejqPhcvwX0u9CtqhH71RL/J/JFncqhObXOfKhdC
Sd3vaiz3u3T9bBz6HXT+AzryuR7yVT+sL+uz0muJru6PcW3cH0M/pJroh6vj
Tw7c2zWPqm0Y8yLfNYzUfTI/uU+m65df0U+hcwh05PPvyFf99ndZn5X+m+jq
vhp74L7acOm3VAn9trFpmUbagHwqG/rNLyQ2nNT9NWO5v0a438Y30a+h827o
yOfyyMf6XF7WZ6X/CCnW1f04/gf34zSul21PO/hT+qxpbw9/YNLfV67PrFfB
vOfZwCHuyzxpsOicKjpDp32ic8ebjy4u8wrjmiGvDmvCfAhMtYW5V+Dqb5vd
Itk6bUGQK72kHsJkK8z9P/yx8KBTDHf79LZ+H4dX1E+Yegjz4MZRnma34nlh
hWGOs08EE5jAPHLIiXZ21kl88/dqYebDQglMYNZ/YO0dMy6FC+uHfwovCiMw
gbnDyB1bFvmmcv+WFo3rOEYQmMDcNWZGh+xh6bynw7LBUwyjCEz7hLn76u5x
6569Zt+e3RafbhJDYPIT5j4/q54s+jOTa2uKDr4KiaXewgTm/qavB+9xyeLZ
IzxuVTsST2CaI8yD2roXVu6Rw1YTj70aMziRBgqTjTB+v1zOKP59kghMWcJs
kDipktW1QBrgsqHpvnseBGbFI8H9hXXxGnD7egkZiaNDyde3wtIfTb0JzH6l
2FtYFw+duw40HVtAETQz1tx++9EXBObZpRi6Ln4OuPeiUXe/942m9Lz27z99
9CcwZ5Ri6NwT8VlgzeFvtX7vGkfGP58M2Lg4iMC8tRRvEuYBiN8OHnrn/uam
bROp/FF9jy3LQwjMioeDywrr4iuC7Ywe5NU7lUxjTd+kuzQLIzCPB18HQ9fF
TwDf/HbS0qJKKplecf3tQ1g4gdmsFEPXxZuDHU6vmNz2YBrF2e3t3PNYJIE5
AXwXDF0XnwR2bDW83J0yr6nN3bGT1w2JJjDrl+JWwrp46HzPpZlz750ZtPJR
nU13P8UQmBU7gVcI6+JXg11GFxlqP2fSA/f4C3kOcQRmF/Aj8H1hXTx01saF
NjDYmE1f/f5167gkgcD8rRQXCfMTxP8Aa9fc8fMvyKEhYWuSVjRKIjAPK8WD
hXXxBmBVL1U9Rb3F8/r/9XYX6qmqx1mot6qe6qG+dka91StZX8kS9VXVW8uS
9ZW6oL6qetulZH2l+aivQ1Bv55esr3S9ZH3l6yXrKxWgvrZHvc1Dfe2EetoX
9RXMvVFfu6Oe7kJ9BfNO1NeeqKfeqK9g9ixZX6km6quqt3ol6yvNLFlfeXrJ
+koWqK+q3lqUrK/oj0noh7noh0k8ZNzm6Q3avyLz7qeqLolwp2HCbCbMN/zf
/N7keAi1Gd5yatJQLwJzK2G++9Zufcd94eQ8w+nS3Lu+BGYnYXZuMCfiz21R
NHyFQUpUY38C81Bhdh1U488x62IpeHtk++mHAwnMYH6+xOvq7OUJ9GBk7/5Z
X4IJzPeFOd1LU6Z3t2T6Oun7XP17oQT+9V5ezJw1q4GT26/vkyF/+exeuiyc
coQZzDk5b5cM10+jo4tPX7NtGkl5wnxYmAtMAur526RT6KrZvsmhUVQozMHC
/K7mDd+pzTKo0eY/cpsfjaEPwtxAmD9f27st9mImLdqVo/c3xRGYFwjz177z
Oi2um03XDz/oeeVjPIHZTvjXc943Ift0Dr05s3NmjH0igTlfmO3615t3rkYw
Jfw5q6vN8eeE35Mv4ve0FZ2VjniOE9b9/ohnxFMS9NvzX7JtpV/vneOzNzcr
8tb9/vo4D9B5DXTFK4V15wfxuvXWQb93YHdrp+8R9G3+jqeXlvrpzs9DnCfo
rHQn8FdhvoPz54rzptb7Ad3ldu/DHh+i6dj63yvWDwkgJ5w/A5xH6HwC+iPw
EWFGPI3AeVXrnYL+NDg7Jzg3jqo/n6Tv1zxYd37DcZ6hsx50BiNed/4jcd7V
eohnr0+WE5NTE2mmf8OxlSNCdOdfPQ/QWek+4OnC7I7nxwXPy3OsNxv6Ur2O
MZ/zkulKeMo/I46H6Z4f9TxBZwvoihGve/6+4XlT61lBN7KpcHz3ilRKTbh9
dv/QCMLzyMPwPELndOiKEa97fhHPy7FeBvQ1vZM0ldPTqHPmRhePz5GE55nV
8wydu0JX3FFY9/wfx/O+Gushntf7Pi44teA1bSjUxPy8E02oB6zqwVrReRN0
xDPidfUjHPUC8WQMfdMcM+v6cRmk/VLx+6ClsYR6wqqeQOdn0BU/EdbVnyao
Nxuwnjv0rflrplrOzKIK5YNa7mwcTx9Rf5agHkFnpSsuJ8yIJ0PUK2OsVwn6
jj1jKuiHZtP46hcNngQnUBHq103UM+g8EbriscKMeLqNeqfWmwx9V502D+9M
yCWzeotWFB1K0tW/t6iH0Fnpis8I6+rne9TLnVjvIvT/AxqyIj8=
       "], {{{
          EdgeForm[], 
          Directive[{
            Opacity[0.2], 
            Hue[0.67, 0.6, 0.6]}], 
          RGBColor[0, 1, 0], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJxFm3ccl1P7x8+5vyeEkGSUSlJGgyJRISVJdmZkj+z9ePB47JEySmVmhZTI
3jsjGZGRUp6KJDIqUTJ+n3efy+v3x3md66zrnHOdc655382PPn2/06qU0s+1
lIryj1S4V/CHyn/LKZ0qeD01nKK8qeraK/9OaSulNVX+r/rcrXSR0lsaf6bq
G6n/Gcqbqf061Y9VGqz0rtpvVD5O6Qal91Q+Uf3WUf8Bypuo/8mqH868Sq+q
va3q5ym1UVpD7UeRq/+RyhurfC7jVD5H+UYqD9C4m5ROUnpF439Q3TNqW6D8
L9XNV/6kyt8q/1PlhcqfV/ln5X+rPFP5QyrPUP67ytOUP6jy58qXqXyi0tDs
ecB/lvJblM5Uel3lP9Vvgvr/obxSOk5wfa3vWOUbqjxX6THBXyv/Q2NmK39E
5VnKl6u8RPlLKv/CoSh9qnS/yp8oX6r205VGKJ2m9Jq6nKJ8WDbdoNcy9XtV
/Zcqz0rXqv5BpYFKk9TeUW0/KG2jtJbad1C+WKmr0tqVx70m+PcYf5vSpSr/
Rn12/esqL4929vmGyn/Ffmdpjsui/b+C79CYn5Rfp3Redr831f539E+C31aq
lGqV84nAUd5W6fLo/7rGF8GTlFbivlbO31VaOcrfCOWVUb5CcFb+Vs3zgO+n
WNN3yrdQuj3ga5T+JXj7mt/Cdpyb+vdUvkxpF+6pyleoz31KlytN1JidVf+r
UjelBtBK9fcqXaL0djJu5vt39hy9uRtKuyk1VP8DlNfR/dhf+foq7wstVN6H
d6dyf+WrqXwY70rlPaGF0h5K66p8iPJV1H6w8g1UvlrzPKB0ldI7mu8u1hz0
fEt1zZV/yVsBr9ouVN2dShcovZl8l79Sfmnynf4q6r5UvmHyu31YaUi83y+j
nXfwH8FfK90quKNSC8E3x1jazoj6W+O9XBr04Qw6Z58H67gLXLEe6mk/R+nq
wM0clymdLXir7Dl4Dxcm86F7lC4OfsSdG6l0vtIbyXjAx1lPUHmSaHCPaDFA
+REq/6U0ROVOSncIvrtmngYvO1v51cEf4ZOPZPMfxoNnocq3wWOS18pc26rt
p8DHe+NcRnMX4ny4J6OULov7wrv8seZx9IdvPqR0ffBP7t39SlfG/eNdj1Ea
FO8b2rCGc7NpND/K1LeI87o56MZ51tM8k5VW501VHndb0Bv61Ff9FNbCm1L7
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
Ahc2JbYkOOH96HjodsiA/wMXUPRn
             "]], 
            Polygon[CompressedData["
1:eJwtkyssxmEUxt8jmEAxwcZsTKEQbKYoZhMoBJspBHP3ud8+fPhc5jZMMMEE
E0wwwQRzvxMkSZIkSZL8np0vnD3nOef8/+f65jb31HYnhRCykRTkEJnF8Awu
WghH4CC8DqyHj6J3ob8jyUgBvBtsw3cJ7iLT2B7BGWx7YD+8EqyBx9C30f+Q
UqQXvgVO4nsA55EJbLfgELZFsAdeAJbB4+jH6OnmNak21bgEfwGj8Bj4hWQh
XfAo2If/Jvi3+odil7GdKA+8AWyEz6Gfomea2+RTzCr8NbhPMdLXsJ2Bw/Am
sAm+r77hT4qDH4AD8Gqw1tynmGTzmWg2mlHc/Jtx+Bj4iWQgnfAhzQD/dWI3
2lGq+T/1b+VYMN9ZLDED9dqvfKAWnAeWwFc0a/gdOApfAyPwYrAcPgCOwa80
O/PcqkG1FJr7FPOBpCEd8IhiLPFN8BvRLbSb+xSj2Hzz3tSjeomY70Y70q6K
zHevG/gOXrNqVw+D5jcxDz8Hc8xnrtlrB+vwt0Rv6vEn+M3odnRDI+Y96/Z0
g7q1KWw7ug14OVgFn0LfRP8NPhPNRjMax3cf3KcY6VHz29UN65YrzGtTjapl
A36h3PBWsMX8beiNBPOcyq0aps3fzD8SgXGc
             "]]}]}, {}, {}, {}, {}}, {{
          Hue[0.67, 0.6, 0.6], 
          Line[CompressedData["
1:eJwl0T8oBFAAx/F3MthsNkVsFikDA5KI4QYiCcPRKQNlMCBJ8i9JQrqEJCFd
SmE4gxtQJAOLhUFKycBiko8Mn/d9v/H18mP9jX2REMIw+Rkh/N1n9NClQLPs
BT2xizTbXtaUXaw5dkLP7VLNtTf0wi7XQntbr+1KLbL39M6u0RI7qQ92vZbZ
R/poR7XKPtUnu0nr7DN9sVs1aqf1ze7QZvtSP+yYtts3+mX3aJd9rZ92XLvt
xcwQfhggyQLf9HHAPJ/0ss8c78TZZZZXYuwwzTOdbDPJI21sMcE9LWwyzi2N
rDPGFVHWGCVNAwlGSFHLKkMcU80KgxxSwRJ5eGqYciQj///8C0PeQ88=
           "]], 
          Line[CompressedData["
1:eJwl0s8rH3AYB/DPl68/xNK2JGlpaa2spihqQlltNWFsCEVRWtKSkCRpaUla
0lrSF4WD7YADyo8DDjjgYDvg4EeZg73G4dX789RzeT99EkvrCmojIYR2kuJC
iJdN0RBiZDJJIjO8ZJYk5snmJw9ZIJdFHrPMK1ZIZp1CNkhhi2K2SWWXN+yR
xgHvOOQJx5Txm3ROqOSUp5xTzQUZXFPHX55xSwMhIYTn8r3nmr6Xyn+UFeZ1
eWWukpXmfnsR+41ygj5uqGecXi6p4Qc9nPGB73Tzh3LG6OSIEkbpYJ+3fKOd
HV4zwmc2KWKYNlbJZ4hWlsjjK5/4RQ6DtDBHFl9oZooXDPAgeneO0KPvtN6P
5P8TdclY5P4//AM9fEta
           "]], 
          Line[CompressedData["
1:eJwt0TsoBWAAhuH/uE4sMiiFdAgJSW7ppFAGyq1IBqeEARkUmUwmk8lkMpkU
KSIWFgYMGDBgwIABA8ojhqe3b/svefGJzvFICGGWooQQUnQmKYR1Gtkgny2a
2SbKHq3sU8gBbRxSxBEdHFPCKT2cUcoFfVxSxjUD3FDBHYPcU8kjQzxRxQuj
vFLNO2N8UMsXk3xTT0JyCFOaqA064p7T7ruruR5gVId1R3M0rnHd1Czt1wFd
0wzt1l5d1TRt0y5d0VRt0XZd1ojGtFWX9JMamuxFfaOCmL2gzxRTZ8/rA/lU
2XN6Szblkb9/uyKTEntKz0mnwJ7Qk98zEbXH///5B7TdOtY=
           "]]}}}]}, {
     Frame -> True, 
      Method -> {"TransparentPolygonMesh" -> True, "AxesInFront" -> True}, 
      PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {Automatic, Automatic}}], {
     Placed[
     "R + B < 1", {0.7924783736545471, 0.5667562801868943}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.5979298228788*^9, 3.5979298822391853`*^9, {3.597929926290399*^9, 
   3.597929957601404*^9}, 3.5979300079521627`*^9, {3.597930040719385*^9, 
   3.597930122225048*^9}, 3.597941532014031*^9, 3.5979416205365667`*^9, 
   3.5979430205191097`*^9, {3.597943584918853*^9, 3.597943609314157*^9}, 
   3.5979436744151087`*^9, 3.5979449521724586`*^9, 
   3.597944987107996*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JLd9QEXjUZYhVPw/QwwQ2FqjHIzPx7l79KDH6g3bFuMmumwKxpX+pUv/pIsX
79OdO0+5T5P2ndeLAmKNTln/vHSJ7l+8SE/v3HEY7xPUvvN65leAGa7ILRs1
i/X2TdjoFnQYcFD26RWtcTY2UnBwKPXpE0mvv/4PuTwnp4wGDRpGd+/+EqT7
19j4Ghd1zvOnl1++TgMGxNPo0dNo/PiZ1KtXOJ0+/W5nvcjJk9eopGSnznlP
9lk6fPg8RUbGUmBgMIWFRVBiYqY4MLYKYTc59afrL79M8QMG0LTRo2nm+PEU
3qsXvXv6dLAeudcaG7mIs5tWgJzXNSSEevfoQVHh4dQ5KIhmJybSd2+LNkLO
ctdOnqSdJSWmcn50/vBhio2MpODAQIoIC6PMxETHdJAhm4ekRLmaqgd8/vwi
zdpFOf/Eib9R//4xdOPGD0ZjgcrKw1wkUJ939eo31KVLdzp69JLzlaravBUr
ttD+/X9psd7585/JZB0//qY44Ml5SUlztXzekL9Qkoy+gN9cvUrdu3ShS0eP
OozuXVtWrKC/7HeO7mi8tvdwZSWXDdITXJ6bS2ca5F6e/v3OO7QkNZV2FBcb
RT47f14m6s3jx7mhwNykJLpx+rT8lQQS5MUeoj3DcJqHgW25MflxgpqaHlJU
1GA6cuSCw9iCtO+0Z8+rlJGRJ1pM7XnVGfoAbZf0R5lJYUzsbqqrj9HEibOo
qKhOb+/iqwl8QqWl+6i+/pS26/8pVClDAfRHba8X018+iJZ7pWOa/7MmTqS6
oiLu3njhyBF6dc8eyssQLbq0byhF4m/3mjVUlpPj7KjoS09u3aJ9paV0qr6e
frp9O7SjstSeMUc95SgmZrjc4YWHR4m9O+foypUv6cKFL6i4eIdo63Xhi0A9
/vn5myk3t9zIUSeRNG39Q4f+yvaNZlnHjl2hwsJasUU51PLkS5u1I5cIt56n
TiJx2qp/PXSIV/XXY/mlFpQvLlwQG4smVftmTld2cjJtW7WKFmk7olHx8fTh
uXNGmq8cO0a1hYViy3KgXE0DubIY8lphyNVwkJQppqTs3fsneuONz7X6/yJF
REQ7jOMI2q2VljZQerrzaUCoaRvZuvUolZUdoOvXH3VWir0PNWh1OCddPuHk
l1S722Np243Y29F27f8h0dH0482bQabN4ejWrXSgrIweXb/euf0hRltKH7ex
bHmUuHnzR+3oHkJvvfUv4yhx6lRTq3CeOfN37ZgUJs9yjKOE2C2dO/eh/GWU
vXz5ARUU1LSY5218/37mDIVpxz1xNmQcJcR+SaubLY4STadOWR4lfrl7V54G
aGdWRnAfXL5MNQUF8lcwCPhUEHDFEeP7goBP0gN+8OA57fRspLZDyqLs7GJK
S1uqVdrn++iL9+37M40YMZmyslZQcnK2DLR2mtRbr7Znz35Ay5dXUXT0EBHH
XiCExtnQn/fto8kjRtCKrCy5iYtwamdDYfpi7avc2pPHjaOVc+ZQRV4enair
66PXzA/OnqWq5ctlhdUig4Ki+HIAtEUbTyrFrlQcBkWVMhqHCVfF1qxVIwfy
0zhxFvu2h01NsqoY76AW6sXmqOUa5lNRegSQvh9I2g9Q4fagGgBK8XUX/QCq
wR5Uf4BC9w/2AZTi+0K8Re0FKMW3oEQC1F6Aeg6gFF8jMwCg0C2ptqDkkigA
2AMAe9yFzdPdf28BuwEgCtizCFY0QKHbhx2AGghQuwBqF0BF24PaCVCKr8ga
BFA7AWoHQCm++CsGoNzeaXZBKb7OLBag6u1BxQEUeqKwHaAU3wcXD1B1AFUH
UHFqqMEAhR7T1AKU4rv7hgDUNoDaBlCKbyT0FlUDUIrvWUwAqBqAqgYoxRdV
DgUot0/0XFCKr99Eg6JtBagtAKX4UtHhAIWe3FYB1HAPKLlkBABUeQmQvnh6
rfhIAECPvisBwNM7ZF0WoUHjNgPUZoBSfDPuaIDaBFDyJcMt+j54CRgDAG6b
Kbj4oogaC1DlAFUGUIqvfEYD3aFGKBsBapwaSnavsW7l4gIYrwYw9xoyfEHt
eUoBaoIaCg2Stx6g1gOU4rvMJwMUare1DqAU39A+BaDWAtQa3oYS1QCJAICa
wJUAXxRRaJC/EoAqBqipaijZS9DoxNQKsBoApqkB0Oh9RQBVyHmZ4QEgl8xg
3cjYKqA7ictaHF/QkHwFAFAAAMlqgUkBqJUA1dzENlUNkMohQmaXAw8UAS0G
HtA9WAZQ+exBuhqgufc/MpsHPFAEtBj8QfcgF6ByASpDDTUboKxb2GepAbI4
WMjss8ADRcBcBrjtISGXzlMzO5/NWvf2WKBmtsUQVHq8rXuzLFQDLGTd1r11
FquZXcxmPfVGalHCe8CzDJgLAM29rZaqmc1hs1nAbHMfslw1s3kgjRkA0Nxb
Lt8DQC7JZ7XI2Cw2tsy5nvVBY7nT7AzZO6eVsRQ2tlLN9QLWmALMzhBTOWuV
mtlCVjsDmE1itavVzBaz2iRgNpHVlqiZXcNqE4HZyax2nZrZ9ax2MjA7kc2W
qpndwGonALPjOAgb1cyWs9mxwKzsqyxbdlWomd0sprLgSGB2OKutUjO7ldUO
A2aHsNpqNbPbWO1gYDaO1dapma1ntbHA7EBWu0PNbDaYJ2+h+AtjA3SUXKqj
5LDx/s5seGdPx4foP0zNAuTn8ePHsFENMjWWpfUF0sJYGrqqtZBm9Lu6d+8e
BQcHU1NTk0NhhE3DGmoJjeahluO/xnr+HD2HHBdJLhRh7AqCaTQEMeaJUrIB
KeoV9Ft55O16LVqmdJYNJ80fj+OW/oclOkSfJ3YRYr7IXVc97/pv+SvUZd7v
zY82pdfHnF6H1TCxPvo6Du18tfnUycoKanErfyz1VBa0AEUFY2NjW0FRy0Rz
WfPeKyHB+QTBzWCnsliO7vQz/wd2o/1n\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.597928787943981*^9, 3.5979288391689863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", "B"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigReduce", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.5979532943506317`*^9, 3.59795331914289*^9}, {
   3.597977208727274*^9, 3.5979772442866077`*^9}, 3.597977292629096*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"B", "+", "G", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"B", "-", 
         RowBox[{"2", " ", "G"}], "+", "R"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", 
        RowBox[{"2", " ", "G"}], "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.597953327094034*^9, 3.59797721404704*^9, 
  3.5979772463641157`*^9, 3.59797729393542*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"B", "+", "G", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SqrtBox["6"]}], " ", "B", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["6"], " ", "G", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{
       SqrtBox["6"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "B", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["2"], " ", "R", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       SqrtBox["6"], " ", "B", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["6"], " ", "G", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       SqrtBox["6"], " ", "R", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.597953327094034*^9, 3.59797721404704*^9, 
  3.5979772463641157`*^9, 3.597977293937827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", 
     RowBox[{"1", "-", "R"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", "G", ",", 
     RowBox[{"1", "-", "G"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"R", ",", 
     RowBox[{"1", "-", "R"}], ",", "B"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.597977358087915*^9, 3.59797735959902*^9}, {
  3.597977532959146*^9, 3.597977578951858*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "G"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "G"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"6", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "G"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977580143454*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "R"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"3", " ", "G"}], "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "G", "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "G", "+", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"3", " ", "G"}], "+", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977580862673*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", "B"}], 
    SqrtBox["3"]], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "B", "+", 
         RowBox[{"3", " ", "R"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      SqrtBox["6"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B", "-", "R"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "B", "+", 
        RowBox[{"3", " ", "R"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
     SqrtBox["6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.597977388362337*^9, 3.597977581559083*^9}]
}, Open  ]],

Cell["\<\
Apply the limits in Lxy to RGB. We have upper and lower limits on the values \
for Lxy. To Convert to RGB without stepping outside the cube.\
\>", "Text",
 CellChangeTimes->{{3.597978717013007*^9, 3.5979787283678427`*^9}, {
  3.597978880840163*^9, 3.5979789741689577`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iYAB", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"YAB", "[", "\[Theta]", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inYAB", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"nYAB", "[", "\[Theta]", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5979776649740143`*^9, 3.597977706839246*^9}, {
  3.598044567500454*^9, 3.598044577172422*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBPixel", "[", 
   RowBox[{"L_", ",", "x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", "  ", 
  
  RowBox[{"TrigFactor", "[", 
   RowBox[{
    RowBox[{"inYAB", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"L", ",", "x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597977743328272*^9, 3.597977779495315*^9}, {
   3.597977820751849*^9, 3.597977822810915*^9}, 3.5980445979157867`*^9, {
   3.5980451760369873`*^9, 3.598045178756207*^9}, {3.598045353472871*^9, 
   3.59804538203181*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "RGBPixel", " ", "]"}]], "Input",
 CellChangeTimes->{{3.597979432748526*^9, 3.5979794336527042`*^9}, {
  3.598045397726201*^9, 3.5980454042782288`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigFactor", "[", 
    RowBox[{"TrigExpand", "[", 
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "x", ",", "y", ",", "\[Theta]"}], "]"}], "]"}], "]"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597977841595653*^9, 3.597977852481071*^9}, 
   3.597977903715324*^9, {3.598045208540156*^9, 3.598045273797907*^9}, {
   3.5980454293127413`*^9, 3.5980454374686127`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "L"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "-", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "L"}], "+", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{"\[Theta]", ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}], "-", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
                FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}], ")"}]}]}], 
         ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "L"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "+", 
               RowBox[{"Mod", "[", 
                RowBox[{"\[Theta]", ",", 
                 FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"\[Theta]", ",", 
                  FractionBox["\[Pi]", "3"]}], "]"}]}], "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], ",", 
              FractionBox["\[Pi]", "3"]}], "]"}], "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.597977853614829*^9, 3.5979779048504143`*^9, {3.598045200911866*^9, 
   3.598045234839072*^9}, 3.5980452787389174`*^9, {3.598045415821414*^9, 
   3.598045442870038*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "a", ",", 
            RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "a", ",", "maxB", ",", "\[Theta]"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"maxL", "<", "L", "<", 
             RowBox[{"1", "-", "maxL"}]}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}]}]}], 
          "  ", "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", 
            RowBox[{"-", "maxA"}], ",", "b", ",", "\[Theta]"}], "]"}], ",", 
          RowBox[{"RGBPixel", "[", 
           RowBox[{"L", ",", "maxA", ",", "b", ",", "\[Theta]"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"maxL", "<", "L", "<", 
             RowBox[{"1", "-", "maxL"}]}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxB"}], "<", " ", "b", " ", "<", "maxB"}]}]}], 
          "  ", "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBPixel", "[", 
           RowBox[{"maxL", ",", "a", ",", "b", ",", "\[Theta]"}], "]"}], ",", 
          
          RowBox[{"RGBPixel", "[", 
           RowBox[{
            RowBox[{"1", "-", "maxL"}], ",", "a", ",", "b", ",", "\[Theta]"}],
            "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}], " ", "&&", 
            RowBox[{
             RowBox[{"-", "maxB"}], "<", " ", "b", " ", "<", "maxB"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxL", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxA", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"maxB", ",", "0", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.5979797718828173`*^9, {3.597979854170542*^9, 3.5979798629953623`*^9}, {
   3.598014804846116*^9, 3.598014824996009*^9}, {3.598015032571602*^9, 
   3.598015165900592*^9}, {3.598015380461362*^9, 3.59801544385277*^9}, {
   3.598015495760293*^9, 3.5980155168634567`*^9}, {3.598015638055956*^9, 
   3.59801566588317*^9}, {3.598015732382619*^9, 3.59801584624897*^9}, {
   3.598015878639686*^9, 3.5980159314447193`*^9}, {3.598015972914336*^9, 
   3.598016002282483*^9}, {3.598016272899495*^9, 3.598016290911916*^9}, {
   3.598016339208589*^9, 3.5980163914849052`*^9}, {3.598045474146287*^9, 
   3.5980455112236834`*^9}, {3.598046479847352*^9, 3.5980464893572187`*^9}, {
   3.5980468792846107`*^9, 3.59804693674479*^9}, {3.5980469799923697`*^9, 
   3.598046982551423*^9}, {3.59804704591216*^9, 3.5980470649288692`*^9}, {
   3.598047116516983*^9, 3.598047129110168*^9}, {3.598047162516781*^9, 
   3.5980471711163063`*^9}, 3.598047239242176*^9, {3.598047324465704*^9, 
   3.5980474766165047`*^9}, {3.598047950053569*^9, 3.598047952556129*^9}, {
   3.5980488806721573`*^9, 3.598048887088621*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`maxA$$ = 0.05, $CellContext`maxB$$ = 
    0.115, $CellContext`maxL$$ = 0.196, $CellContext`\[Theta]$$ = 
    4.322831491339556, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 2 Pi}, {
      Hold[$CellContext`maxL$$], 0, 1}, {
      Hold[$CellContext`maxA$$], 0, 0.5}, {
      Hold[$CellContext`maxB$$], 0, 0.5}}, Typeset`size$$ = {
    360., {193., 198.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$43283$$ = 
    0, $CellContext`maxL$43284$$ = 0, $CellContext`maxA$43285$$ = 
    0, $CellContext`maxB$43286$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`maxA$$ = 0, $CellContext`maxB$$ = 
        0, $CellContext`maxL$$ = 0, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$43283$$, 0], 
        Hold[$CellContext`maxL$$, $CellContext`maxL$43284$$, 0], 
        Hold[$CellContext`maxA$$, $CellContext`maxA$43285$$, 0], 
        Hold[$CellContext`maxB$$, $CellContext`maxB$43286$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`L, $CellContext`a, \
-$CellContext`maxB$$, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[$CellContext`L, $CellContext`a, \
$CellContext`maxB$$, $CellContext`\[Theta]$$]}, {$CellContext`L, 0, 
           1}, {$CellContext`a, -0.5, 0.5}, RegionFunction -> 
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[$CellContext`maxL$$ < $CellContext`L$ < 
             1 - $CellContext`maxL$$, -$CellContext`maxA$$ < $CellContext`a$ < \
$CellContext`maxA$$]], Mesh -> None, BoundaryStyle -> Red, 
          PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, Axes -> None], 
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`L, -$CellContext`maxA$$, \
$CellContext`b, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[$CellContext`L, $CellContext`maxA$$, \
$CellContext`b, $CellContext`\[Theta]$$]}, {$CellContext`L, 0, 
           1}, {$CellContext`b, -0.5, 0.5}, RegionFunction -> 
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[$CellContext`maxL$$ < $CellContext`L$ < 
             1 - $CellContext`maxL$$, -$CellContext`maxB$$ < $CellContext`b$ < \
$CellContext`maxB$$]], Mesh -> None, BoundaryStyle -> Red, 
          PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, Axes -> None], 
         ParametricPlot3D[{
           $CellContext`RGBPixel[$CellContext`maxL$$, $CellContext`a, \
$CellContext`b, $CellContext`\[Theta]$$], 
           $CellContext`RGBPixel[
           1 - $CellContext`maxL$$, $CellContext`a, $CellContext`b, \
$CellContext`\[Theta]$$]}, {$CellContext`a, -0.5, 0.5}, {$CellContext`b, -0.5,
            0.5}, RegionFunction -> 
          Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$, \
$CellContext`L$, $CellContext`a$, $CellContext`b$}, 
            
            And[-$CellContext`maxA$$ < $CellContext`a$ < $CellContext`maxA$$, \
-$CellContext`maxB$$ < $CellContext`b$ < $CellContext`maxB$$]], Mesh -> None, 
          BoundaryStyle -> Red, PlotRange -> {{0, 1}, {0, 1}, {0, 1}}, Axes -> 
          None]}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 2 
         Pi}, {$CellContext`maxL$$, 0, 1}, {$CellContext`maxA$$, 0, 
         0.5}, {$CellContext`maxB$$, 0, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {279., 284.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.5980151673462353`*^9, 3.598015393242544*^9, 3.5980155184864483`*^9, 
   3.598015666723971*^9, 3.598015848694175*^9, {3.598015904441922*^9, 
   3.598015914298191*^9}, 3.598016004878749*^9, 3.598016293026824*^9, 
   3.5980163402815933`*^9, 3.59804748421358*^9, 3.598047963182966*^9, 
   3.600427124500656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBPixel", "[", 
  RowBox[{"minL", ",", "maxA", ",", 
   RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598091175487315*^9, 3.598091198901683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.23041034586707043`", ",", 
   RowBox[{"-", "0.7531125207157321`"}], ",", "1.7227021748486624`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598091186844366*^9, 3.5980912000960617`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minL", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxA", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxB", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "a", ",", 
       RowBox[{"-", "maxB"}], ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"RGBPixel", "[", 
      RowBox[{"L", ",", "a", ",", "maxB", ",", "\[Theta]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z", ",", "L", ",", "a", ",", "b"}], "}"}],
       ",", 
      RowBox[{
       RowBox[{"minL", "<", "L", "<", 
        RowBox[{"1", "-", "minL"}]}], " ", "&&", 
       RowBox[{
        RowBox[{"-", "maxA"}], "<", " ", "a", " ", "<", "maxA"}]}]}], "  ", 
     "]"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.598048065998188*^9, 3.598048122090226*^9}, {
  3.598048200160014*^9, 3.5980482310366077`*^9}, {3.5980488449476433`*^9, 
  3.59804886272202*^9}, {3.598091063480205*^9, 3.5980910847977257`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
qSypPnAAfumrPjPlxGH+jo+r9qoRsJ2XxytE50kofcePXYly4/AssuxG3Yc5
WF5vb8xXSUJJB5WNFQbGYMFRPQjH5qMXcWlijcxBKNIqfuvM5nDRzF0y6x8R
MK8kJWk3x0GIf23zLEJnDfbp7U/lsSZgUbTMd76RgxAjeEDy5m62HyjdKZGy
Z3tD9J4tsj5D0IMXi9S+sQrrhQQTuN4TMOfLKbHiBkPQ734F5/diFf4eaHsz
HUjADi0R6ioPsTnrry2X2v4REN3mQrnK9uNN6c+vFeCHUUgfDavpJsHrybnt
gVpUeLj6TkiqgM3j4l+eqrH538rRjfK3joDZEnZI1CgMg8itMx42lSvgvMHv
fkMWAQs8/zGoxXIYhGbWC8tFr8B3etHLyXwC5rfIw/v4DAn0u1jBAv3LcKn5
rn09iYDd+PEm6r4wCS4ZKNB1163AtsmDV3/2ELBTX3c0utgOIn9v6dmmPUOQ
FiLpPdxGhV1XYm7aqg4irzc/9lm0D4KE9ddvwmNUuGXkvsXNbwRSWF7u3I1L
kHbgX07odiJmZEbYvmORBEEnJR3kzyxDflXniTAOIuaR+Ojl3n0jEFAxxrOw
YxmYGdsupvMSMWdDyrpGnlEoy2zz7zNbgsjgMoV3CkRMf73rp4qeEajazz8u
7L8ElolPd7ofIGJxQU6pp8/2oy6Lsu+N6n2gvrF5o+MDGtxguTfKzfShap82
cXJ8L2T365+IfUYDw8xrvDVaYyDeaGLfzPYd1oS0t8ldIqb5a0zIie0ZRGG8
5UrJInA/O0IwMyRit/E3/T2mRwH3pXy19PMinHJ02vbAjIhZpLXipRrG4MSr
rIfJXQswdn77spE/ETt50yRUJGYM1IiU7iH8IqRa9Y6c9CJiVV3xvyJRN0or
UXm0crwD2p77RSwK0sFf40f3i5vdKGLoPEU4sh3OmeCq5aTpoM6rwbVj4wSE
JivfiGJ7lnriY03xfCKmyFe/pdR/HNxm+y5XYQtgcPpltUQce51Ntb3rM8fB
xS2WGiSyAK8OVPWrpBIxPe4/yw/eT0DazZC7LkYsOLLBpXRnCxE7UABv7tpM
QGZ3/b/v3ixgSBz7zlFHxMjS3UVMhQ7kI/VTV+ZIE9gS5GWfZdMhKZg0MtTR
jhw1ytHp0Ebob/lxNa+cDvK3ZAhOTZPA7Sd0+Q7b7wKt2jaObuDApGwzeYXY
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
fRz+BuKDU/k=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwlk0doVFEUhs89GSUzGtSZYG8jsREbaqyJXYwF48xSdyZLy0qXuhQRERGR
ICIiIiIhSBAJIu409oaIiEgIEkRCLFiIJX7HH+aDb97533nn3Xtfcff+8j43
s2WQgTX8WQs38T0wAh8JbfhcyOOjYInpWsIdruAT4E8y+53kl+Eb/h0u4Vl4
gffDRfwwDOC/krJ5eIZ/hPP4XthI7w0uvwDD8JxrlqvwnGxfUu0g/MR/JPWK
Z2bIVkCNacZt+FZXNmaoxLOuXpGZhE+Ga/hqWI+vgwOmNXlI7244HWsV70xt
PCw1XXtM7T204mV4gL+DU6bMPfwNnMCnQxX3Dnf5SRiKD4GJpsx9sm+TavNg
AbX5rt5nYRpedM1yBj6T/QT87Ch8Rb5ADj8Gs8nOgs2mGe9Se5VUK0AX/hqO
m2Z4hPck9Y57BvG/SdnIbIlecAi/BdV4wTXr/3eOswK78HOwCW90ZWNNa/E5
cB0vQR2+GJrxG/HOsdew05SpibWCDrwR6vGVrrPaCcvxFS6PHk+YtTdprWKG
hdQWuXpHz3H4WNdet8NTsh+SZm2BVdQaXB5nciY+wzVrzDAVn+KaJc7MdrwJ
bpvWpITvgCOma6PxMa5nxTd0h2e9TNqr2KN/3iJlqA==
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmHncj2UWxn/PeYUINSNRRqjGTGZKMpMYhWLG1GSkRdOKLGVPlJSliKRM
GTUtRFlG9q3Z933f12yRNXntRKnr+pzv7zPvH9fn3Pd57vXs99Osz7Drh0ap
VHqzKJUqRMeIrhG+JJwrfFr4lNBUuJD+CKGxcIHQTDhLaChMF54UzhY+yZhP
MKYl8z8jzKBv+nXhc0Ib+m6fJzwlNIc+zbyW9N1uwdpNOF+TKuc9l/MOEz7O
OaYJTwhnMM/8+qzZjL2awDtTaCTUE05nPfMacNc6Ql3u07TK/IbMa1pl7NOc
+Ty+12Xd5sjK/JHI8iJ40+FbFs8gm0ac37KdKDwqHJG+vib6iHCrcLiU38x/
Q3Qd39weJ/QQTurbY6IflvJuU5DJEfhew7yp8GsIk4WaYEoV3uPw3tac8aJb
RffQfhc6gXZ30VnCV4Uv0u4KfQ6+7/qscAX954ucN1P4BvM6MO4KMBPeu9zd
+5+BrE6HTkNuvVjzFvaeyZpnI/dG6Lm2cBrrXor8vyC0pu9vIVQIQ4RaRdqT
5xV8q8P3ashpMjKvC+8U4X31DwgHkduWUspwp7BR2CQcF/YJ+4Vd8DYL7whv
MWc3PPfrsXZ17l8dfU1FdzXZ3+ueKOUZ32MfzzPP5+qidnvufbXQjr7vdqyU
c+6hXbCP530gDEIOtdjbvJN8810PCZOKtLcjfDPPtmd7GY9N9RXdILpd2FHK
9kbOvR/ZXVJkLHAMuLhIP3LsaQVtgd783bGhbZF+5rGXQ1txt0sYexXf2oFW
fHsW27NfPiBcJnQUOtH22p2hl2Mr3vNC7joJG2gDz7FnFOfx/AFCZSllav+e
iF1b1pXYQb8i5VGJDHZgL4exiT3Icjf9fVXk1wDbtW3WRz+22XIMtawOYme7
ke9O+o7Tjs+OvV2xiw7cx7ZtHdq3vlmkfzneOPY4PvUUbhduE9YWmV/GVtFB
W2Tcjv5o5PJ54XXhPuEc2ouLzD8LhaHCqcISeNb9UvqOqd8ShgsfY57zQWN0
2Z79WnOX9uirA/2yDZVt6mL01IL5rdDtpVXsqzXfrNs2fHsKPTve38+5Posd
dWDcg9jTlezRFnuYwfeWVWyrE/daxH0ug9cRnuORY9FyYRlynCPMLtJ23O4v
bJO+5osOLuzApdINwh3o6UbhTvovC3cL6xn/WpH+bWr/t5/PFV4p0n5fFe4V
jpaS5z1tq+bPY47HDxT2in+T6F3sd7PQm/4LtB2zVyEf33GlsIL+SmRnO7FN
uXbpJqxmzhjswXI/n3mjkJnlMxpd+I4vFRlvZkPtMwu4q/3E9rYA+V5fpC3f
ioxHojfb7lXo6XnO3p0z9WTeLdytF2t7zbINL+Wctnfb+gjW9rcLuMdSeJb/
fHTXj3P7zP3RcZk3B12/xD3Xl/5/T/Pvht+XdZchk1G0L4Iuh28bs/3Zp4bR
t70Nhz8MvfmOfejb985BdouYOwJ+Y2SwEDmMZq9RjFmCTBYjk/I6C9DLUOYO
Yc8X2bcvOnXOGIysBiEX26Vtz/5/NTozvU74SpH+7xjXhW/mXVtkjOjC2Fno
tivzrM+bGWtqu364yDjXg3ndGfvlIv3NNnFNkf52A3vcRH8maztGrGUt1+QP
FWnXbndivtezz9nH7F/zaB8lR9tWStx7Lncv+3BRZY7zzgDG2WcHMt68zpzP
+63mHI5X67ijbds+aR8r57J5nKEjZ+wGbwB7OW+4PjhJTnf94drkb3qQ3BOp
9/+K3htpe5tFB0X6+z9E/xOZl34hOiDSrn4vOjDSTqaL/iHSn34s+vPIWvCP
on+NrM13iA6OvMte0SGRsv2haP9Im3xDtF+kDF8W7R3pO+NEX4r0oZp6PO2O
rCePip6ItMVpor8M/EO0b6T8t4huj6xrV3iNSFntEn03siZ+U3RTZN2xT/RQ
ZH59J3Kcxzwt+vfI2DBJdGWkLTxj2UT600yvERkrLb8xyNByfRDZzohcy+tY
Hg8hkxe8Z2Q+Hyb6SGROn+WzR9rB+EhZWA4ee4Txz4lWRtrur0R/F/m28bn+
x9keF/12pI8+Kro40u583rc481TRH0X6uvfcyb6rRNdF1tdzRF+NrB9fE10U
WUO55rSNuT79jng/iKyF/eh9ONI3T5Xu9ke+OTZEyt0y/03kuX3mCo35deRb
IdT+SeQ748+R9mRbqib+nyLfbqeo/c/Ieumk6PzIWm5B5Pl8tu9Fnsnn+Wmk
jdo+J4jOjozlhyPP2oMYsBZ/W0PbtroKn7wSH1xFuzzOfjc3UkYT8F2PH4P/
+n3o9cfRfoRvXqcj/XX4+FjaHv92pB3bhj8UXRJZz6+J1I318m/R6hVZM29U
u0ZFvtu2RfqM/eUvkfKyrH4WKWvL+beRMrU8vcb6yHW8xtbIdQ5E+ob9wray
Ehl8P1JP1tFatYuKfPsssx9XZN3aR+1XIt8a/v7dyDH+vjpyzL8iY43jzFLR
1yPr+HmRerVOF0be33evpbnHIvP8e5GxwHHguOj7kbnpRdEPInPx85F+Yt16
7eWsfzByLa/j3OD4eQ3y74Yu/D44TM3v2Om3n9+Xt/G9J7pz27WKY9vYSJux
zpxjLEO/C/1WrME+5TeNY7Tfe84RjinOE46BzmHOgeWcZupcdTt7+rzOg+W8
6v8ern+bcQev3Rkb68h9/D46yTvGcc351bZhvbqWsm/2Ym/vWc6117FnN87u
N47/v/ifzVns6b5jh2sE5wjXK/4H5NrjTMY2gef63rW/c4brj/MZZ55rsPpV
xtZmvnl3cG/n7lrwvM9pnMnjHNec+45S917LHW5ELu5X8t47xtvtOH3/x2iE
nupwtwbouyH9eoxx3/nGtZfz4J3sUd6zM7pxfHE9tJe35An2c64bGanrA/wP
OME5/L/ANjElMnY7bjvfjo7c68nInOf9n4rMwZZl+X+Ez7idu1XyP+AD9nAO
HxWpI+fe+yPzr8/kusB7O3+OiDxzgQ4sb+fk4ZF52WdyfeO5riMeiNRjoI/a
rFWHfjXk6P5jkXnIupoYGYstp8mR+dV+4Fx9X6QefW7fzf53qMp/jici85bt
zv+WmqObLfhr+f/NO7y1XTc5djkv+/+Hx2ylPnctu42xh3nf70J21s9d6NY+
sQNd7uPtfoD+buZ5Tm/G2p/2ROY/+5fjlGtox5yNzPd6m5nvPV2Xr+Ccm+B5
3AbGWrcfAeZnkyM=
         "]], Polygon3DBox[CompressedData["
1:eJwl00tQjXEYx/H3faZFlixZNbVkWWPFspZlx7IxxjSmjtNxugghuqjkVnQZ
atyakCEZuQzSRAxdJmRyG5FBGrcTWdT3md/iO/P5957znv+tlNyCdfkWBMFq
SqJzDM5SAu8Jg2AMj1IajlEnPk/feb6Z8QgeppW4nm7hm7QUV9E4fk4NoT7z
BD+mFThKd/BtWoLzaQA/oGU4Qjdwn+ldyTSEH1EqrqVB/NDk5dSP75tcQ0/x
M9Pc/Dt38T3TM5/jBzxFR/EaOo3PmNY+wxpjuJK2hJpjHB8wzc3X0IZb6SOf
3cR4G642rcXX0IKbaZLnGxmfxKeoHE/xtwjeZXrm7/iCv1Ij40zaineb3u17
HsV7TXs/x7gMN1EZ4xzagU/QTryBSvERKsZrqQjXmfbez3Q7PkalOItK8CGK
4wwqxPsoDwf0G/+i9fi47xH+Rtmh5jzrd8P0Lp/TZdxtmqu/4xK+SAuMKxi/
whO0KtRvXsFXaX+oz1zHvabf9jPowhdM3/U7eg33mO6Gf+c/nqdc3Ex/8T+T
fc4v8QtKD3Unf+CfprX4Gj7jadNe+Z588rM1nYXfkUn8mg6Hesdb/MZ0d/xv
HbjddHf8jBP4j+ls/Eze43emvfUzKcYHTf9bvgeL/LGEZA==
         
         "]]}]}, {}, {}, {}, {}, {}}, {
     {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJwl0ndXjmEAx/H7qZ56QpGdESkjI6uo7BHZiqxIxwvgJRhFL4moZBMKGdlJ
mSEl2XzUH59zf8/vnPv64zpX6oFDRQdDQRDUUsf/3hYVBJ3iM3e5x2VO0kU3
93nAFar4w1+aechVThN2ViyP9GOucYZBtgSe6KfUU80w23Ce6edcp4YxtrG0
6BfcoJZU2yRa9UtucpZptgzadDsN1DHbNodX+jWNnGOBbSFv9FtucZ4ltqW8
0++5zQVW2/Lp0B+4w0U22DbyUX+iiUscdq9HOMoxyqngOCeopMh/WylkE1vY
TBnrWM8aCljLflayimWsYDmlLGIxOeSRyz6yyGYu85nHXmaRyXRmMoMSpjCV
NCaTzh4mMJFxpDCe3YwmmRGMYiS7SGIoiQxhMDsZwEDiiCfCDqKJISCKEMX8
cpe/+c5PfrDd3uv7jS98pYdTxDsiQhyxhIkhuv/ovjf/D6R/Wmg=
       "]]}, 
     {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1:eJwt0mlTT2EAxuFTofItfCUvLam/rKUFyb5kCZGtKIWiRJFsZS0iS1nKGtrL
ni0he1czvbjmd+aeM8/MeeZMCCVPTAoLgqCWAg9t+jc8CPZSwEpWkUIchexj
NWtIZTpHOEoGa5lPPCeoYh3rWcAMqqlhA5ksZCaXqWUjm0hjFtdpYDNZLGI2
TdxhC1tJZw4PeEg221jMXJ7xnO3sYAkJdNHNTnaxlERe84YcclnGPD7yid3s
YTlJfOM7eeSzgmQmudvJTGEqMUwjljhC/PHeL37zg58MMT4iCL7qIJ8Z4AvR
9n79wFve844o+0t9RQ999BJp79BOXtBOG+PsT7WVRzzhMWPtzdrCXe5zjzH2
29rIDW5xkwh7vV6jjqtcIdx+US9xjgucJ8x+Rs9yktOcIrAf10rKOUYF/zlM
GYcopYR/FHOQ/RRxgNDItzuulx666aKTDtpH//lhoqR9xw==
       "]]}}},
   VertexNormals->CompressedData["
1:eJzVW21M1lUUf1DQFAJLwWDEDBYfIl9iIEYlGQIhLyotM7NkWFSKqdOUMd+z
eERD3FhDdBCCxsqaPaaLBUpKolPmaGA2FYFQexFCHclLSt7D59/dfs/uX2x7
Pv12dv7nnnve7jnneSJtaco7Q2w228ihNtu9n+12pOeJM+FXolyqgtzGNH0X
VeBwxG6vv3YU4Xu84n5S+NulR7wU7tU2NU6HJ7etr1F47ZbX/RSe7X3aKfzd
a8mCz0js8lf4jbx2wcNaDggeXVs1VuH+heWCZ+fW1Sq8YnxK++h7+NSG1TE6
/JmFwwT3H9N+W+GH3FzlvE0RUaKHDb3ZQxT/CRF5TuGmzov4P5YaIfIXzZ7d
peRPzGmJ0eFLtt4V/LnFh/9UeMPcV43iSM6+pqpTCu+50Pazos/K8pvujF1Z
jXu3bhM5VxRtaFRytnU9P13nFyy91f6C9I/uC/FB9Kb0bPfIFLy1OfBhhe99
z1+LI383hSM52Tj5oOEovpm6RxRXTfkLos/Y86h8d21QrJzrYnqfNv7MOvya
4C/6RrooPLNnnVM46y8s/dlNHoLX7dop54o/3K/NUyw+WPdVXferfNfvha+u
K3xh+NIYHc7m8cHyL2SHLL6oIlj4V19oHKr4t64sGdS44bM6QfDLI1rE/lMK
sp3Cq9MKxP43l7v7Krz+l4q4+4GXfXrjmMK3zNk+UeEfZv72sjN2ZcoOra4r
TMlvtZwsPcrXqE5GeWpfS4Cctym0+B/1XZeTN52Kqxe73xf8r8+Lbyq893qV
ti5i86/V9EgPxvST/Ip897hjrHw3LGZynC6v2YO2yT0G73SI/+5fdSxOF08Q
fxRXWb2x9QCqN0ZNvSTf3bj+6HCF2yY0aumRnbP1v9V5gZUnxT7xpMKPlPv9
rvS86FKoti6yOp6YqtPQfbH6RPIjO5l80D5QJ8wpuqvoPdfNF3xL6l7hM7kq
tEHhk74P0eohMb1R8N3n7L2KftzGYK2cNWHLBLdNud6v6Gt+WKK1Z9bvfHIX
CH3QsWWein7evvFO0aPvorhtqq5m+0h9XfXiF8/mr7ys6DfZq7X9EMR/Upaf
8E89s8ZV0VeO/lJbl6L4ifij+MzWIez7EdXDvWlnhU/KW2seUnhNR5PWHlgc
+fWRvGqpJ0f5hoQq/PItt3iFb80JPK5w1/xbTyvc/U611JlH29pF/vldkT0S
96K9tX7UvMAmeP2uZtHnvBWVWnpTuF9Ti5z3R9dAb/VdR8AncTqc9UercbbP
g841WPaGcPR+QTiywx6Pq3JfWYmu8r62f5Y+UHeBPtu/OXmCl/Q3uCu88yl3
p3BT9mbKDk31863uQ6K4wfZLWXuz+l2MzmXqXmo+bhZ9Fq7PHCl56pv996Ue
zmi5Jvp8ZO0EqfM9v60zGh8Grf8D5EHxxGr7MYWjcyH7ZHFWHlNzt5l1i+Vc
H9WfkjiwYfiTTp3rQZtfIH+3+l6sxlHcRv71oOHIDtn4/3+5r82VXXJf04qW
D1P3ldh5XCs/qifZOGDK/ksr3hT+OTtibwn/rSe09+I9ZZXQJxzovqHwgORD
Wv0g/iwfVG8jOdl4juIkrKPIeQcbh5H8GRH1Us9fzd0XpPD4EbHad2XJjt2i
z4jO9r8V/sXMQtEnehew+yps3wzdL9s3Q+8dlt7q+MDGQzYPsnxMyWPqHlE8
RHtKqD+J+LBxmO3XsfTsO459z2aFD8xropfNkLh6x2uYU/EQyY/yPssf0aM4
yfL/YFyV2GHpOR+xw5f6irV1FPvOQnbO2gm7f2hqbydqYpLgY0IWC16SHzmQ
70Bfl91bMCU/ui/Eh51X0vMCco5p6n7ZvMPusyG9ofmmKXtm586m5visv8B6
jJwvI79DOLsfxc7Bkb+jOIbyJtI/u+/K2hXig+RHc2eEs/3eSVfekHlrR6r/
ecUnafkCmd+huT+iR99F+y2sfyF9st9l940RztafSP9obs7uIbB1HbsXgfbe
2f0HNr6x+yFs/wHRs3Ky9RW7f8Lqk60PWT2zfsTWD6bkZPdeUF5D9RKrB/Z+
WftE/Ry2/4DkRPEfyY/yOxs/WfnZ/QF2L5qNq6Zwtg5B+1TsXp+pfTakf+SP
SE42frJ9HtYfWT7InlGeRXxQnGf7pch+0HsW6RnJg/pFqB+Sk5Ak/FdGuj+u
6M87OrT9ZNSHQfTNh/4QvOzruYEKzz8dpu1Lm+rXmZrPmtqX6A7qFf6Vrvnd
in9emUesDjc1F2Pfa+w+DOKD6Nn3OOozsOc1Nd9n52IIR/c+y2Oa+KN3iEP8
8eDs29o8jvyRpUfysHMlFmf77aydoPiM9sTQ3iaalyF7M8Uf4Sg/svEQ5Rck
P/vuQ/KzcQPJw74LkF+we7mID7uHyc4fUf3D+h0rD6rrWPlN7XWw71D2vGgP
Ae0bWD0nRTjKR2jP0NT8mt2XRnKivMPqzdT+LZKH3X9j5+msH5mqJ03ZJ4qf
aB5h9T4kskN2jxq9y9h7R+9r9p2L7ATtP7B1C5s3Tf3fmeWDzmXqu/8BYlNK
AQ==
    "]],
  AutomaticImageSize->True,
  Axes->None,
  ImageSize->{444.65966533470583`, 474.59790713591946`},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{2.899404107470813, 1.1451785640846017`, 1.3160630220253555`},
  ViewVertical->{0.091899602664914, 0.6038081385488975, 
   0.7918144952273521}]], "Output",
 CellChangeTimes->{{3.5980484517528257`*^9, 3.5980484601713257`*^9}, 
   3.598048866814258*^9, 3.598091088823497*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Chromatic", " ", "Bins"}]], "Input",
 CellChangeTimes->{{3.598406243498595*^9, 3.598406247508294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    SqrtBox["6"], " ", 
    RowBox[{"YAB", "[", "0", "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.598270210680551*^9, 3.598270216034176*^9}, {
  3.5984045756904287`*^9, 3.598404604104712*^9}, {3.598404703437853*^9, 
  3.598404704120267*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox["2"], 
      SqrtBox["2"], 
      SqrtBox["2"]},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", 
       SqrtBox["3"]}], "0", 
      SqrtBox["3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.598270216472679*^9, 3.598271036527464*^9, 
  3.598404632338641*^9, 3.598404794619372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToMatlab", "[", 
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SqrtBox["3"], "0", "0"},
      {"0", 
       SqrtBox["6"], "0"},
      {"0", "0", 
       SqrtBox["2"]}
     }], "\[NoBreak]", ")"}], ".", 
   RowBox[{"YAB", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59840490457244*^9, 3.598405046458891*^9}}],

Cell[BoxData["\<\"[1,1,1;(-1),2,(-1);(-1),0,1];\\n\"\>"], "Output",
 CellChangeTimes->{3.5984050109125147`*^9, 3.598405050514153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"YABAxisRanges", "[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.598406375183096*^9, 3.598406379063979*^9}, 
   3.5984064544321747`*^9, {3.598406509357975*^9, 3.598406513956102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox["3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     SqrtBox[
      FractionBox["2", "3"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.598406455889097*^9, 3.598406516309086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"2", " ", 
   SqrtBox[
    FractionBox["2", "3"]]}], "]"}]], "Input",
 CellChangeTimes->{{3.598430265961665*^9, 3.5984302781670017`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SqrtBox[
   FractionBox["2", "3"]]}]], "Output",
 CellChangeTimes->{3.59843027984555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"256", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SqrtBox[
       FractionBox["2", "3"]]}], ",", 
     SqrtBox["2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598408978591464*^9, 3.5984090332021933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"418.04624943499573`", ",", "362.03867196751236`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.598409001429489*^9, 3.598409034077816*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"256", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "/", 
   RowBox[{"N", "[", 
    RowBox[{"256", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["2", "3"]]}], ",", 
       SqrtBox["2"]}], "}"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.598429572098235*^9, 3.598429585501897*^9}, {
  3.5984296220867033`*^9, 3.598429641484288*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.449489742783178`", ",", "1.414213562373095`"}], "}"}]], "Output",\

 CellChangeTimes->{3.598429643551237*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 D rotation Matrix", "Subtitle",
 CellChangeTimes->{{3.5954073303425417`*^9, 3.595407356913694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationMatrix2D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], " ", ")"}]}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.5986437535191727`*^9, 3.59864378335888*^9}, {
   3.5986451303419228`*^9, 3.5986451365932803`*^9}, {3.59864518711117*^9, 
   3.598645198160802*^9}, {3.598645264648605*^9, 3.5986452697118945`*^9}, 
   3.600343654868698*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RotationMatrix2DScale", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], " ", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotationMatrix2D", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.600342920258679*^9, 3.600343651565379*^9, {3.600344314209228*^9, 
   3.600344330491984*^9}, {3.600354623198207*^9, 3.60035462358183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"TrigFactor", "[", 
   RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.5986437411664667`*^9, 3.5986437425835476`*^9}, {
  3.598643792143382*^9, 3.598643848902629*^9}, {3.5986454240877237`*^9, 
  3.598645424214731*^9}, {3.6003427816717*^9, 3.6003428253940363`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         FractionBox["\[Pi]", "4"], "+", 
         RowBox[{"Mod", "[", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5986437434855995`*^9, 3.5986438567310762`*^9, 
  3.5986454248507676`*^9, 3.600342785684965*^9, 3.600342825918029*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"minMax2D", " ", "=", " ", 
   RowBox[{
    RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5986445409262104`*^9, 3.5986446091511126`*^9}, {
  3.5986447833430758`*^9, 3.5986448052793303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["minMax2D"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "+", 
           RowBox[{"Mod", "[", 
            RowBox[{"\[Theta]", ",", 
             FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", 
          RowBox[{"Mod", "[", 
           RowBox[{"\[Theta]", ",", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.598644643763092*^9, 3.5986452087274065`*^9, 
  3.598645316644579*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"minMax2D", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986446984432197`*^9, 3.598644809435568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{
   RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}], ".", "RGBCube"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5986408397825165`*^9, 3.5986408800968227`*^9}, {
  3.5986409680308523`*^9, 3.598640974670232*^9}, {3.5986411305271463`*^9, 
  3.5986411342983623`*^9}}],

Cell["\<\
{{0, 1, 1, 0, 0, 0, 1, 1}, {0, 0, Cos[\[Theta]], Cos[\[Theta]], Cos[\[Theta]] \
+ Sin[\[Theta]], Sin[\[Theta]], Sin[\[Theta]], Cos[\[Theta]] + Sin[\[Theta]]}, 
 {0, 0, -Sin[\[Theta]], -Sin[\[Theta]], Cos[\[Theta]] - Sin[\[Theta]], Cos[\
\[Theta]], Cos[\[Theta]], Cos[\[Theta]] - Sin[\[Theta]]}}\
\>", "Output",
 CellChangeTimes->{3.598640746793198*^9, 3.5986408493910666`*^9, 
  3.5986408821929426`*^9, 3.5986409278245525`*^9, 3.5986409751612597`*^9, 
  3.5986411352524166`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TrigFactor", "[", 
  RowBox[{"Union", "[", 
   RowBox[{"minMax2D", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TrigFactor", "[", 
  RowBox[{"Union", "[", 
   RowBox[{"minMax2D", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5986411449839735`*^9, 3.5986411817190742`*^9}, {
  3.598643893601185*^9, 3.598643905351857*^9}, {3.5986440481600256`*^9, 
  3.598644079814836*^9}, {3.598644634919586*^9, 3.5986446634402175`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986411497802477`*^9, 3.5986411821020966`*^9, 
  3.5986439109941797`*^9, 3.598644080597881*^9, 3.5986446641352572`*^9, 
  3.5986448155039153`*^9, 3.598645220461077*^9, 3.598645298297529*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"3", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"1", "/", "4"}]], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["\[Pi]", "4"], "+", 
      RowBox[{"Mod", "[", 
       RowBox[{"\[Theta]", ",", 
        FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986411497802477`*^9, 3.5986411821020966`*^9, 
  3.5986439109941797`*^9, 3.598644080597881*^9, 3.5986446641352572`*^9, 
  3.5986448155039153`*^9, 3.598645220461077*^9, 3.5986452983245306`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"TrigFactor", "[", 
    RowBox[{"Union", "[", 
     RowBox[{"minMax2D", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598641017189664*^9, 3.5986410239340496`*^9}, {
   3.5986410661424637`*^9, 3.598641113399167*^9}, 3.598641161150898*^9, {
   3.598644002551417*^9, 3.598644004903551*^9}, {3.5986443492472467`*^9, 
   3.598644355014577*^9}, 3.5986448839958324`*^9, 3.598645235976965*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], 
     LineBox[{{-3.1415925253615216`, -1.0000000000000002`}, \
{-3.1261762269324227`, -0.9999999999999999}, {-3.110759928503324, -1.}, \
{-3.0799273316451266`, -1.}, {-3.0182621379287315`, -1.}, \
{-2.8845578654095836`, -1.0000000000000002`}, {-2.759713948540342, -1.}, \
{-2.637318973742252, -1.}, {-2.5045501138578046`, -1.}, \
{-2.3806416096232637`, -1.}, {-2.246359220302365, -1.}, {-2.114525773052618, \
-0.9999999999999998}, {-1.9915526814527773`, -0.9999999999999999}, \
{-1.858205704766579, -0.9999999999999998}, {-1.733719083730287, \
-0.9999999999999999}, {-1.6116814047651467`, -0.9999999999999999}, \
{-1.5727998935382574`, -0.9999999999999998}}], 
     LineBox[{{-1.4792698407136486`, -1.}, {-1.355718632312057, \
-0.9999999999999998}, {-1.2217935388241077`, -1.}, {-1.09031738740731, \
-0.9999999999999999}, {-1.0290094895238644`, -1.}, {-0.9677015916404187, \
-1.0000000000000002`}, {-0.9012067512137942, -0.9999999999999998}, \
{-0.8347119107871697, -1.}, {-0.7105825855838271, -1.}, {-0.5760793752941268, \
-0.9999999999999999}, {-0.4440251070755782, -1.}, {-0.3208311945069359, \
-0.9999999999999998}, {-0.18726339685193602`, -0.9999999999999999}, \
{-0.06255595484684248, -1.}, {-0.002003566743360822, -0.9999999999999998}}], 
     LineBox[{{0.05970254508709937, -0.9999999999999999}, {
      0.1923349301073989, -1.}, {0.3161069594777921, -0.9999999999999998}, {
      0.45025287393454294`, -1.}, {0.5819498463201421, -0.9999999999999998}, {
      0.7047864630558349, -1.}, {0.8379969648778853, -0.9999999999999999}, {
      0.9623471110500293, -1.}, {1.0842483151510218`, -1.}, {
      1.216523404338372, -1.}, {1.3399381378758155`, -0.9999999999999999}, {
      1.4737267564996168`, -0.9999999999999998}, {1.5687927600515357`, -1.}}],
      LineBox[{{1.5986550194735119`, -0.9999999999999999}, {
      1.7211343403762551`, -0.9999999999999999}, {
      1.8539875463653561`, -0.9999999999999999}, {
      1.9779803967045506`, -0.9999999999999999}, {2.112347132130103, -1.}, {
      2.2442649254845035`, -1.}, {2.3673223631889977`, -1.}, {
      2.5007536859798494`, -0.9999999999999998}, {2.6253246531207948`, -1.}, {
      2.7474466781905886`, -0.9999999999999998}, {2.87994258834674, -1.}, {
      3.003578142852985, -0.9999999999999999}, {
      3.072585334107253, -1.0000000000000002`}, {3.1415925253615216`, -1.}}], 
     LineBox[CompressedData["
1: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
qnrMnE9ZEnBsiYxnP/J//hc3hE5m
      "]], LineBox[CompressedData["
1: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
uWmZ0omD6Cmri2Hz/9//BatJ1cU=
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
Qnma2yUo/DDW1cj5f/8L2ICbjg==
      "]], LineBox[CompressedData["
1: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
      "]], 
     LineBox[{{-3.1415925253615216`, 
      1.0000000000000002`}, {-3.1261762269324227`, 
      0.9999999999999999}, {-3.110759928503324, 1.}, {-3.0799273316451266`, 
      1.}, {-3.0182621379287315`, 1.}, {-2.8845578654095836`, 
      1.0000000000000002`}, {-2.759713948540342, 1.}, {-2.637318973742252, 
      1.}, {-2.5045501138578046`, 1.}, {-2.3806416096232637`, 
      1.}, {-2.246359220302365, 1.}, {-2.114525773052618, 
      0.9999999999999998}, {-1.9915526814527773`, 
      0.9999999999999999}, {-1.858205704766579, 
      0.9999999999999998}, {-1.733719083730287, 
      0.9999999999999999}, {-1.6116814047651467`, 
      0.9999999999999999}, {-1.5727998935382574`, 0.9999999999999998}}], 
     LineBox[{{-1.4792698407136486`, 1.}, {-1.355718632312057, 
      0.9999999999999998}, {-1.2217935388241077`, 1.}, {-1.09031738740731, 
      0.9999999999999999}, {-1.0290094895238644`, 1.}, {-0.9677015916404187, 
      1.0000000000000002`}, {-0.9012067512137942, 
      0.9999999999999998}, {-0.8347119107871697, 1.}, {-0.7105825855838271, 
      1.}, {-0.5760793752941268, 0.9999999999999999}, {-0.4440251070755782, 
      1.}, {-0.3208311945069359, 0.9999999999999998}, {-0.18726339685193602`, 
      0.9999999999999999}, {-0.06255595484684248, 1.}, {-0.002003566743360822,
       0.9999999999999998}}], 
     LineBox[{{0.05970254508709937, 0.9999999999999999}, {0.1923349301073989, 
      1.}, {0.3161069594777921, 0.9999999999999998}, {0.45025287393454294`, 
      1.}, {0.5819498463201421, 0.9999999999999998}, {0.7047864630558349, 
      1.}, {0.8379969648778853, 0.9999999999999999}, {0.9623471110500293, 
      1.}, {1.0842483151510218`, 1.}, {1.216523404338372, 1.}, {
      1.3399381378758155`, 0.9999999999999999}, {1.4737267564996168`, 
      0.9999999999999998}, {1.5687927600515357`, 1.}}], 
     LineBox[{{1.5986550194735119`, 0.9999999999999999}, {1.7211343403762551`,
       0.9999999999999999}, {1.8539875463653561`, 0.9999999999999999}, {
      1.9779803967045506`, 0.9999999999999999}, {2.112347132130103, 1.}, {
      2.2442649254845035`, 1.}, {2.3673223631889977`, 1.}, {
      2.5007536859798494`, 0.9999999999999998}, {2.6253246531207948`, 1.}, {
      2.7474466781905886`, 0.9999999999999998}, {2.87994258834674, 1.}, {
      3.003578142852985, 0.9999999999999999}, {3.072585334107253, 
      1.0000000000000002`}, {3.1415925253615216`, 1.}}]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.0000000000000002`, 
     1.0000000000000002`}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.0000000000000002`, 1.0000000000000002`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5986411863163376`*^9, 3.59864400541158*^9, 3.598644356063637*^9, 
   3.5986448858199368`*^9, 3.5986452382420945`*^9, {3.598645302349761*^9, 
   3.5986453275222006`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SqrtBox["2"]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", 
        RowBox[{"Mod", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.598645025657935*^9, 3.59864505615368*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
FMHPs7EZgdz/938BWdMixA==
      "]], LineBox[CompressedData["
1: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
+A==
      "]], LineBox[CompressedData["
1:eJxl13k4Fe3/B3BKWr4SJUoLqexSSkR8SpIkKhRKJEsJrSoRUQlR9i1bEi04
PCTpyUciKkRZSkQnjnOObc4y4+jR02+ev39/zDXX65o/Zu573u/7nlnlfvqA
5wwxMTEWffx3zrq0k7Mv8zi4lZWqfphL4L5S5waT+2dBbbryeqosge35C+Xt
LgRCDVs4x20pgY+tPTdWPLgGK/mxFWtWEci1eP3NNPYG/BNScGNIncBTxoHa
9m4xYH54NPqwIYFdGT4+E2vioFTe+5XMNgKp1LSaiqUJcG3dtFTdLgINEoRe
MDMFLoUpTi85RGBVRNFz+64syHfoZ6UGEOiqbfHbPr4Exkx0zZaOEbg1reAO
lcsAWfckD2mSQKnwmTLWjqVw5KzK63+nCeSMHb8/5l0GhVHvldqleJjXsKZ+
/a1yqHgqrb9Vm4dyAQVznzc8h55Vv9o1fHg4zbF/f2xVLfRLCsrsmDz8Yeno
4J/dBDkZCrf83vDRdCj4WEtfE6y8ab645B0fM8Lu+2mveAe6epFzuB/5eKCa
e5N77x3IbDZcYt/Lxzqtq5Ve6e+Bx68qI4R8zJPOU3BNagYTfXaw1VoB6nHJ
UbWdbZDieUHnYrgA3QznnO/2aIOvkQUhypECvBOhOBVxow3EVbZLvo0VIFcF
ZrHetIFhtlr5jHQB5h2OXJFv1g6RQjMXM4YAF7Uo2ihv+wQhpr11X3sEKGQA
Y4lxBwQ2mye6rhNis5bxwjMuHbBks69bz0YhPijcHNAY2gFqucFHbLcI8UCO
jvHF+g6YNJX9pmYuxLI7yxo/7+2E0TUBbxOchOjvN/n9jlsXNBFz/9hcF+Kw
JkN6VsQXOGhzOvXgJyHWFDw5e+TRF1jYveqQXLcQU1QKOsrff4F/d9XIN38T
ooViVob7gq+g+GRXnMaQEPPn3latTfsKNm1iuzInhejG9jINetoDvZd+3HNd
RmLPw5X+vLZeiFVOn+VwlMRKyaIDj/i9oJlt9MzEncRE7y0GrnJ9sDGoOkDZ
i0RrDXuxlkN9AI2Sazv8SKwpikp49L0P/mjMURIGk3i/XFjpOvoddINbUxdn
kBgiF35PXrofrk7FdGdnkegcsOBai24/VJ5hKKjcJ3GhgeZu4/P94NxonCz/
iMQb1a7f5H/1g139XZ/nz0iscBv6w7o+AEU7You6P5KoIqt9ri5pAJZ6G4aJ
fSYx7vW5wayHAzBueGnX6i4S/VTE3tk3DkD41c0PD/aSqDqomFA37weofGuM
vcAmMc1735rs+B/QaazsFPOHxCD/l5YOOUxgmNW6qWpQaAakhzSDCV1yfvXu
WhTOk9ENa6xhgp4RryVdh8K0srwXW74zYbW+S9vkBgorhVGaK1f8hPP2y2+c
N6KQf8VRajjjJxydbbT5pBWF1XsS1HOf/IR//WdV21pTGLa82dyp+idUGT/7
tt6GQpkauPrh609Y9RefYu6ncJ242jhjySDoF4Rfk3Si0OcW+fFyyiAYNqqH
WXlRqOeoO7qhYBBk8nIZPd4UTqmfnDPybBBS7h8M8DxJYeT73m0unYOwe7V4
g48vhQXz68u2yw3BwKj+qU3nKPT//rvl1+oh0LgZtDv9PIX6DANu+cYhyPLS
+Ft0gcL6fU9VVO2GoIE45VJ4icIfiQmJ8xKG4OVgSsSbYAofeTQz3twfglQ3
5T/TVyk8oy/ZHFw2BE5z4+ZuCKXw365AiYm2IWiqmvoUGUbhcsVjAZ8XsCDw
p+r6yZsUDnIz4mOUWPBpbM76WbcofPqyo3inLgvejOfh/EgKjVwsWc9tWCDz
WCxWOppCx1zdQ5mxLMh2efG1NZZC4ezvxx5ns+BiMbm+/g6FcadjfCsZLHBn
ZSuX36XwnSknrK2dBeLRmk1X4yn0KkiN6WOyYM7f0aFOCRTOkLZI5QpYwPG0
a12XSN+vL69IQn4Y1Mp1NrxNorDLfP9zWbVh0C/6YB6ZTOG5oj+vVxoOQ04T
d3xHCv28QUe6DZ2HYdGKr7Mepf43PvkZftnD8HLO4i2rMyisCquXusIYBqae
zT9ltO055xRu1Q5DkEn8AaN7FMZWfdS+zxyG8Il7aJBJoaZyiEGJYBgkHizr
LKL99pa22UsJNmy0XRy6LIuez4NRhzpV2eBX+evuEO2MGgN3pgEbEhcWU9uy
KdysyvKdsGRD0WMvXjLtT7FJl6ad2LD88IJrg7T9SbPwuafYIPM1Lk87h86z
Cy9GPpgNYY+6HP1pF9TnpK6OZcO2Va15j2mbadvkrc9mg8jP69p32v2J00Um
DDasj4njSeVSGPzPk+dWtWxwsAZqE+0lx53qDrWzoXq/952DtCvez27xYLIh
a+GfF2dp79Or7D4rYIPal38vR9AeTfdghkhw4GyN24ck2pHii8ZuL+ZARIVy
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
/j9IXt8B
      "]], LineBox[CompressedData["
1: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
L/y0GAw+/g8bffeX
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxl13k4VG0bAPBxzswgQlReoSjeFtq+NsnrtmVJdkXaLIW8pKgoeUspFVmy
lOxRCUlFSDq3iooKJaRE26tomWHm2ML3fH9/f8w11+86cz1zP+e5l3M0PQMd
d1IcDucV+fzve52VnOmopjSGPP57NocjgDVlhwVSM6Xxl8KDlo+SAtDV7MuY
PkMa/1y5KbtGXgByw4+HlipK44lbOWHBswTQnB9R7EtJY+78lZPzDQXgKiVW
af0ohTZrfEWOhwXg8/itoCRXCl9n3Km9JBJA5Nprmd7aUhjUomNd2y4EjD5k
P0tTCltMVPWXdQvhd7M11a4mhcre6rLpPUII3vZzp9VUKVRX+mC/jRWCZ8iy
hbq0FNbN/Xv2ZaV+gGvVVcJuSbSeOK2ob9MPI7Iv2w+nS2LJZ7XOoHv9sLdl
RDFRSRJvbJV+fOvMAKQ42rklyUtitoN6mmf8ANxrys1JlpFEnTK92MkpA8B/
vn7JBVoSB4q7GpxzBiC9NtMmY4CPF4VXw/PLB+DJHZNTV1/xseOpMNLr0wDM
TD0zVpXIxxu/Um/OXCUCM+Uus+o4PmrRm2oWG4hgV/KymPvRfMwptqhdYyyC
0oR3M2qO8/Hx2qI8M2sRWJ1ZpFcXzMdh17xMle0i2Bf2MqjJiY+Hz/L8G0+I
oH7rjK+flfgYpsmZ5tkoArssAxiR52Oz+2+tylciaOneliIvS9bv4K6SaRdB
p1eumT6Xj+v+Ut6a3S0CwS7dnDgRD2VUYpNihSJQPmDopv+ah1bGfzQeVBTD
jljPZ3EpPHz+Mjsv0l4M3xoj51w+x0PvP17K6DuLYfeUq4fuxvJwKMVkY6+L
GEKS+uZ9OclDR81NCWu2i+HMxX0n9EPI7x2+RmUHiKHkyknDLy489PnP4J3g
02IYu19Qoq/CwzeqPe6rq8XwrGOx7OhUHh78bNIQjWJIZ0t9qhR46F8hr9T+
UAwGi5iZBlI8fIdrV22rF8OhjFcxfw1ycdLkExUabWJgw377Gr3morOeQlv4
LzHUnY94xGnmYt/Ba0UB/WJIvs3XqHnGxRPalxxcxGJY3qfQZvyIiy5mfvw/
RsUQ7Ka91vQ2F/cbP+Ta8VkQ6NlqmidwMSTj4eVzqiyg86vD/LNc9Ph9TnHW
TBbi9ri2153iYrJkoMllDRYW5XvGWRzl4n8+7/+aqc1CgHLImGUgF6vSDfUt
FrPQK856Y23Dxclhkdv+Nmbh7hTtFbJWXGw6G12QaMrC6YUF8c/MuOj3Xe5G
2VoW5u0stbAx4KKrk1bXv1YseLc8KbPV4eKHYM2GMQcWPt0SJjhIc/FTu8h5
zJ2FdP7IMTceF9dSeqJLnixsdKP2eUlwcUlBlZLpDhaeSCht3D9Mo+P3781B
PiwU2y+fkfqNxm3zZxrFB7Dgk2cgc+kLjUceHGuVDmRBY8jsd8EHGm/9VO0N
38NCYtaG9/fe0HiRORK1IZiF0J8HLnU/pfGdi1fCg1AWlpocSfxWS+N5rUpJ
hUNkv8lRkf01NJYbxA65hLGw9a8L3ty7NHoF7LdsC2fBJKZywbwCGgtzqi8k
HmNhtKtGdekVGnPVznSUHmehdFm9rP4lGot3hSQ1RbIw923HT+uLNP47KStw
8CQLsgt+3wo8Q+Pc8PYqKpqF2nBuXuhJGitVXMsHif9plk2OOEZjPiWc1xPD
gjBUPSTxEI0rXkQGlMWy0PrYcE25H43UVNUD8udYiFe10EVvGuM3mKi1E1sF
2qk/9aTRdO/LlWmJLNyb7j7R4Ubj887dTxSSWcjZGfFwfB2NX31KXCvPs+BW
ebpU0oJG1xe6GRsusDB18rnLCqY01tdXOH8nPll6KWr2GhJvvb+a9EUWjKQK
Q3VW0SjXbqsbRzy8+fau5ctIPOdKi+XTWPCnH1mb69D4UyN2EiedBW2XZwZ2
c2n06637FEj8vqBloescGidZTV7cQXxh/N1Mj1k0mmtYfDfMYMHB8Yu8nyqN
vSWbVTOJJ135wQlWpnFW6rJ7g8SPhsXCMCWyXkvFC+tMFlbm8FvOyhDzDll+
ItZv3PvUWJLGRXbXlHSzWDAce3dfTNF4v03GdTexiY5l6bVxCquPxk4rIDbf
dPva1hEK30/WWN9FvC5qZtYUlsIerZujk7NZsC07nVQrpPCuzXKtlcSOn0Sn
D/6gcEN/Rq0LscsU9yMLv1HYsu1zVxDxFmjY9+EzhSE1E0FRxO4BK/2Suym8
sqD3n2TiHWk5263eUdgbk0VnEPs+ld0w1kbh73vqEpnE/oMh626+ovDO3h0h
F4j3aH+CnY0Uaprt944h3udku0KlgcJdN5xeHCQOjahc8LyOxKvAu+FOfPiG
lkbEAwqn5cdLGRMf7YybtuI+hYkpEx0ziCNlRid9qyTrdW/58yfZ76nV3pyM
Mgqz/Mp67xLH+DSL7W9SyBtXnhdBHJ9s0Me9TqGnWfJ7I+Kkh1e7K/IpfP0U
5EbI/b4gVGz1z6Mw5rdOeRFx+qx/GjSyKSzT3fPGlTjb5hu2pFF4PEZr/zg5
v7ww5zunzlOoscTrTAZx/jWm0CCRwsuTLVVWEhe1LcgRxJL4xwSaT0h+lPBS
UvLOUOhcEZ7nRFzp4R8he4zCoY/1yi4k3+7HtR3AcAoXL26RaiT5+KDaxH/f
QQrrOE77jIjrVVRc3u2hMDTbpUo+lYUXFpHr4/0prHddcT6A5PfL/b+MzXzJ
+fnp/XxE6qGjuVa3aDuF6prBcu4pJF8nlsx230yhV9WU9lxSPx8XpitPdaHQ
MS1X/UMS6Reng6jDthS61h1XtyT1NmI8q936LwpbDZvZx3EsjAeeeT6hR+F3
xwtX2kj9UpniB7eXUzhYZdnSfZbk90jDdVVdcj5mkQVdpP5Vb4Ue75tBoanj
lXVxUaSfdX8KzZpOoYRMn9CP9A8tObvdTooUvnSMUjE6wYKun/amKmkKFew1
+1pJPzKY/XJR9JAEFq1icu6QfpWtJLPcSSSB1zW/FO44zALNM1utKpDAP4Tr
98uS/lbfU2Za2COBSZ2eFlakH7peT3VtaJXAitizAyFBJN/0PI7JlEngdvX7
T67tZKF9/sWoVyUS2O9xfXDAi4U1qq9i0ookMMKv4Psq0r+pcbPzOnkSKLe7
esH1bSR/Hs4rsk6UwFe3VvBsXMj52gpeR++VwCUdsfmeFiwoGM1/6xQggQ4m
3ANWZH4EL/XsVt1F/j9CTnEBmS/6U1t6C90lUKkIKtoNyTx4Uz7RYEfinSb1
om8FC593HJkvu0gC1y/cU/RtNgtqYXLhMb0c3PM5echySAy78uqVM/7lYIPC
Su90Mj/vPD956/pHDrZdzDveS+arg8ZEz4sODro8ON104IcYTtb+cpzSwMHc
OZK1dh/F8Eu+eV5KIQcTDqXepBvE8CAvsSXLn4Mja89dCr0gBvkXdoElvhzM
MFjpPSdZDFsGZSbV7OCg6nKO8EmCGAatIuHjFg7WGJlv50aLQffXvgItG3Jd
/1KZQTiZ76s3Hr22kIP3frC8UncxNKUvdfXunGBy7N5sejhHDJy8wJTOlgkm
YPZQRNAsMSwpvN7i/GyCeb4q/6qqqhjiK+c7mFZNMHLSxYLN5PnHvlVznUbq
BDM8sD49iUPWk1c06HCeYNT2O4X0vBVB07H+WbbPxhnBhGWEWqwIGn1v96yo
GmMiw16fVvowAC+7Bu0Nb48x7ZuibG+8HYDWjQZ3zQvHmKEjFX+atw7AO7Pa
GJe0MaY2f3D6zoYB6NVoW3owbIzpe1qn5ls2ANw3I2H31owxdlSc4PipAdC3
MlEwvfebCdRZF6emMwBX5jfr2VePMqkH3ptqefaD79ybNUfLRpnjPh6+Nzf3
wwLthHU3r48yvpYTuvob+qFYw2GLYuYo05l6J93Qsh/KlZuPtPwzyrgJQo2V
FvXDE15znavRKFPt0zn+fUgIfR+anD0ejjD2bqeCA6KFUNxV0plQNcI09iYW
7o0Uwp7OeO8Ht0eYSG1e+d5wIYja7UPn5I0wbzNrbXcGkuf1xqa0L5EjTKHN
zZIZTkKQu9/0cZf5CFNdyqtkVISw5GLTnqCnw4wtc+jLeK4ATq0/QA3jMDOq
bpPZmSaA7nHVpCMVw8yzv7YVlycKIM7Lpzzm6jADJZ6dW48L4Kfu+NiVE8NM
zWvz8iBPAZh35cYtDB9m5p1y9dN1E0BmgpVm6b5hxiJnetQHBwHYsElmNV7D
jJ5vD9/QWABFjE70W+NhxuO2rQeS9xVuULOa5+phxn9iYe4GZQFs0Qop/rpk
mCm5ddDjXzkBlLaqGQXOG2Z+nIzLDOL/v/8Lb7i5NQ==
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
A60WbAE=
      "]], LineBox[CompressedData["
1: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

      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {-1.414213444225312, 
     1.414213444225312}}, {{-3.141592653589793, 
    3.141592653589793}, {-1.414213444225312, 1.414213444225312}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5986450593648634`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationMatrixX", "[", "\[Theta]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5986412884891815`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"square", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"squareShift", "[", "\[Theta]_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.600344083412917*^9, 3.6003440955285482`*^9}, {
   3.60034417060178*^9, 3.6003442069835787`*^9}, {3.600346171687635*^9, 
   3.6003463080391197`*^9}, 3.6003463726154947`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyCube", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix2DScale", "[", "\[Theta]", "]"}], 
      RowBox[{
       RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], ".", "square"}]}], 
     " ", "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}]}],
     " ", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.596032403095932*^9, 3.5960324253912687`*^9}, {
   3.596032460461591*^9, 3.596032462451202*^9}, {3.59734294706007*^9, 
   3.597342949132189*^9}, {3.6003435296766787`*^9, 3.600343604426983*^9}, {
   3.6003439742808123`*^9, 3.6003440029027157`*^9}, {3.600344053928721*^9, 
   3.600344059640087*^9}, 3.600344194683984*^9, {3.60034609735738*^9, 
   3.600346098401417*^9}, {3.600346315800701*^9, 3.600346321220726*^9}, {
   3.600346387165134*^9, 3.600346389427198*^9}, {3.6003522180066423`*^9, 
   3.600352241126309*^9}, {3.6003544960416803`*^9, 3.600354497577633*^9}, {
   3.600354589559607*^9, 3.6003545985110703`*^9}, {3.600354913217334*^9, 
   3.600354917368333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "^", "2"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{
           RowBox[{"xyCube", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"VertexColors", "\[Rule]", 
            RowBox[{"MapThread", "[", 
             RowBox[{"RGBColor", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "RGBCube", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "]"}], 
                "]"}], "]"}]}], "]"}]}]}], "]"}], ",", "Black", ",", 
         RowBox[{"Rectangle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], " ", ",", "1.5"}], "}"}]}], "}"}]}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59603528082524*^9, 3.596035374167285*^9}, {
   3.596035477195263*^9, 3.596035480095965*^9}, {3.596035520869375*^9, 
   3.596035525916095*^9}, {3.596036085005292*^9, 3.59603610268393*^9}, {
   3.596036235184937*^9, 3.596036267474069*^9}, {3.596036320159943*^9, 
   3.596036373246657*^9}, {3.5960364581198053`*^9, 3.596036469904462*^9}, 
   3.59603653045776*^9, {3.5960369326584473`*^9, 3.5960369422065563`*^9}, {
   3.59603699108624*^9, 3.59603700306532*^9}, {3.5960388897583647`*^9, 
   3.596038990712243*^9}, {3.596039154902692*^9, 3.596039162303257*^9}, {
   3.596039217732134*^9, 3.596039244576934*^9}, {3.597139999631431*^9, 
   3.5971400340473995`*^9}, {3.5971400691684084`*^9, 3.5971400704054794`*^9}, 
   3.59734299916105*^9, {3.5973430308648634`*^9, 3.597343042741543*^9}, {
   3.5973431225271063`*^9, 3.59734313867903*^9}, 3.5973431790783405`*^9, {
   3.5973432425659723`*^9, 3.597343244014055*^9}, {3.597343658742776*^9, 
   3.597343671238491*^9}, {3.6003439223507853`*^9, 3.600343948218164*^9}, {
   3.6003442534600973`*^9, 3.60034426719639*^9}, {3.600346410540168*^9, 
   3.600346412684066*^9}, {3.600346534425886*^9, 3.600346537712839*^9}, {
   3.600354644267932*^9, 3.600354647259665*^9}, {3.6003546784861937`*^9, 
   3.600354734877804*^9}, {3.6003548451462193`*^9, 3.600354848311805*^9}, {
   3.6003549851265497`*^9, 3.600354997685006*^9}, {3.600367949927966*^9, 
   3.600368037883992*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.772831792783089, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-1, 2] Pi, Rational[1, 2] 
      Pi}}, Typeset`size$$ = {346., {88., 92.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$29847$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$29847$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> {$CellContext`\[Theta]$$, Sin[$CellContext`\[Theta]$$]^2, 
        Graphics[{Blue, 
          Polygon[
           $CellContext`xyCube[$CellContext`\[Theta]$$], VertexColors -> 
           MapThread[RGBColor, 
             Transpose[
              Part[
               Transpose[$CellContext`RGBCube], {2, 3, 4, 5}]]]], Black, 
          Rectangle[{0, 0}, {1, 1}]}, 
         PlotRange -> {{-0.5, 1.5}, {-0.5, 1.5}}]}, 
      "Specifications" :> {{{$CellContext`\[Theta]$$, 0}, Rational[-1, 2] Pi, 
         Rational[1, 2] Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{391., {132., 137.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.600343935184498*^9, 3.6003439497245207`*^9}, 
   3.600344006790689*^9, 3.600344268979837*^9, 3.600346414309067*^9, 
   3.6003465389105377`*^9, {3.600354629743751*^9, 3.6003546477167883`*^9}, 
   3.600354702984207*^9, 3.600354736496788*^9, 3.600354849450473*^9, 
   3.6003549983709173`*^9, {3.600367972165619*^9, 3.6003679864675694`*^9}, {
   3.600368016796001*^9, 3.600368038490889*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YABAxisRanges", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.600344630955681*^9, 3.600344636201605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SqrtBox["3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox["3", "2"]], "2"]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["6"]}]]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox[
        FractionBox["3", "2"]], "2"], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["6"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.600344636682317*^9}]
}, Open  ]],

Cell[BoxData["RotationMatrix2DScale"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nYABPolygon", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.600343463221168*^9, 3.600343471099443*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.600343463821347*^9, 3.6003434720298347`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBCube", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.600343579412168*^9, 3.600343584757565*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.600343586225819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xyCube", "[", 
  RowBox[{"Pi", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.600343617130801*^9, 3.600343630176508*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.600343618883486*^9, 3.600343631870562*^9}, 
   3.6003436635926847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"y", "/", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x", "-", 
      RowBox[{"y", " ", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600372591760247*^9, 3.600372640299088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.600372641848178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"x", "/", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"y", "-", 
      RowBox[{"x", " ", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600373511830359*^9, 3.6003735218432713`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6003735278716908`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix2D", "[", "\[Theta]", "]"}], " ", ".", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], " ", "+", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.600374145172369*^9, 3.600374189763999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"y", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"y", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.600374151877935*^9, 3.6003741905461807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"theta", " ", "=", " ", 
   RowBox[{"-", "0.4823"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.3329", ",", "0.4249"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix2D", "[", "theta", "]"}], " ", ".", " ", "c"}], " ",
   "+", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"Sin", "[", "theta", "]"}]}], 
   "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.600376416728251*^9, 3.600376416729993*^9}, {
  3.6003764590451736`*^9, 3.600376499924885*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0978499731503932`", ",", "0.06701884836963562`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.600376461927857*^9, 3.6003765010141153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationMatrix2D", "[", "theta", "]"}]], "Input",
 CellChangeTimes->{{3.600376432078725*^9, 3.600376468429953*^9}, 
   3.600376585435693*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.8859304855114132`", ",", 
     RowBox[{"-", "0.46381804065981697`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46381804065981697`", ",", "0.8859304855114132`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.600376586345952*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RotationMatrix2D", "[", "theta", "]"}], " ", ".", " ", 
    RowBox[{"{", 
     RowBox[{"0.3329", ",", "0.4249"}], "}"}]}], " ", "+", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.600376660411536*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0978499731503932`", ",", "0.06701884836963562`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6003766613073673`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partitioning elipse", "Subtitle",
 CellChangeTimes->{{3.60763009984058*^9, 3.607630133270916*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ellipse", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pt", ",", "\[Lambda]", ",", "\[Mu]"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"\[Mu]", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], "/", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pt", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "-", 
           RowBox[{"\[Mu]", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}], "/", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], "<=", "1"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{"pt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "<=", " ", "1"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"solidCube", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "pt", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"0", "<=", 
      RowBox[{"pt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "<=", " ", "1"}], "&&", " ", 
     RowBox[{
      RowBox[{"-", "0.5"}], "<=", 
      RowBox[{"pt", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "<=", " ", "0.5"}], " ", "&&", 
     " ", 
     RowBox[{
      RowBox[{"-", "0.5"}], "<=", 
      RowBox[{"pt", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", "<=", " ", "0.5"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.607660779375629*^9, 3.60766078042344*^9}, {
   3.607661197575878*^9, 3.60766126255846*^9}, {3.6076613084366503`*^9, 
   3.607661317047838*^9}, {3.6076613957296124`*^9, 3.6076614416083183`*^9}, {
   3.607661485443677*^9, 3.607661491287751*^9}, {3.607661571289977*^9, 
   3.607661592487504*^9}, {3.607661822845697*^9, 3.607661830866578*^9}, {
   3.607665800574992*^9, 3.607665811494162*^9}, {3.607668733672604*^9, 
   3.607668744154439*^9}, {3.607668789433322*^9, 3.607668812764832*^9}, {
   3.6076718577762003`*^9, 3.6076718582293787`*^9}, {3.607671899120504*^9, 
   3.6076719388529253`*^9}, {3.607674809373747*^9, 3.607674812073956*^9}, {
   3.607674858322173*^9, 3.6076748752235126`*^9}, {3.607675153400296*^9, 
   3.607675158946013*^9}, {3.607675285211774*^9, 3.607675310039748*^9}, 
   3.6076880121316442`*^9, {3.607688179064522*^9, 3.6076882775356827`*^9}, {
   3.607691105595088*^9, 3.607691109229968*^9}}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pt", ",", "\[Lambda]", ",", "\[Mu]"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "\[Mu]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ")"}], "2"], 
       SuperscriptBox[
        RowBox[{
        "\[Lambda]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "pt", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "-", 
          RowBox[{
          "\[Mu]", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ")"}], "2"], 
       SuperscriptBox[
        RowBox[{
        "\[Lambda]", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "2"]]}], "\[LessEqual]", "1"}], "&&", 
    RowBox[{
     RowBox[{"pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[LessEqual]", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.607670287822179*^9, 3.6076719415792227`*^9, 
  3.607674812583994*^9, 3.6076751613660307`*^9, 3.607675345170082*^9, 
  3.607688012636643*^9, 3.607688291302752*^9, 3.607690877994837*^9, 
  3.607691161916996*^9}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", "pt", "}"}], ",", 
   RowBox[{
    RowBox[{"0", "\[LessEqual]", 
     RowBox[{"pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[LessEqual]", "1"}], "&&", 
    RowBox[{
     RowBox[{"-", "0.5`"}], "\[LessEqual]", 
     RowBox[{"pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "\[LessEqual]", "0.5`"}], "&&", 
    RowBox[{
     RowBox[{"-", "0.5`"}], "\[LessEqual]", 
     RowBox[{"pt", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "\[LessEqual]", "0.5`"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.607670287822179*^9, 3.6076719415792227`*^9, 
  3.607674812583994*^9, 3.6076751613660307`*^9, 3.607675345170082*^9, 
  3.607688012636643*^9, 3.607688291302752*^9, 3.607690877994837*^9, 
  3.6076911619207773`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "2"], 
      SuperscriptBox["a", "2"]], "+", 
     FractionBox[
      SuperscriptBox["y", "2"], 
      SuperscriptBox["b", "2"]]}], "<", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.607668823866118*^9, 3.607668827883903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellipse", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"l", ",", "x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6076618358364*^9, 3.607661847445236*^9}, {
  3.6076688322923203`*^9, 3.607668838778808*^9}, {3.60767194934297*^9, 
  3.607671949556098*^9}, {3.607675170499021*^9, 3.607675173887665*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "l"}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}]}], "\[LessEqual]", 
   "1"}], "&&", 
  RowBox[{"y", "\[LessEqual]", 
   SqrtBox["3"]}]}]], "Output",
 CellChangeTimes->{
  3.6076616969940023`*^9, 3.607661848782484*^9, 3.6076688395392103`*^9, {
   3.607670272343584*^9, 3.607670291832038*^9}, 3.607671950731586*^9, 
   3.607675175691687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"solidCube", "[", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["uT", "1"], ",", 
      SubscriptBox["uT", "2"], ",", 
      SubscriptBox["uT", "3"]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "0.7"}], ",", "0.7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6076883150697927`*^9, 3.607688324373137*^9}, {
  3.607691132796961*^9, 3.607691155494835*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnUGqHVmXnW9WdeyWp1Aegl3glmB5DDUANwr7x7hhewZ21wMwOAsbNIQC
t7KV2VRANX4oNW6AwOJJFFJSiBxB/b56euuc2N/eC6U6j/vlyn3jrrPiRMSJ
Eyf+5V//l7/6D392u93+67+43f788fd//fj130/6w9d/t/c/357/vf/5b/7H
V/7P5c/+a70/+/9jneePP56tjjn1f/n87++b3pz6v3n+fDS9OfUvn5vefPbh
dpt96L75c6ivWX8E/dH0//qbD01vPtc/Q/2z6V/+e9Obh3Zfercrf7f5ajfo
mRN/Zh6WDu2OPDXOdoS+bT/bxZz+V/2ZfFDwYen9O+mbOX0zp2/m9G19hm/Y
rxqnb9wPZ340Tt+q/kw+KPiw9P499M2cvpnTN3P6tvyCb+hfGqdv7I9mfjRO
36r+TD4o+LD03u7QPzXfzOmbOX1bvsA39LON0zf2yzM/GqdvVX8mHxR8QH/o
fzwO3m70zZy+mc/Hu8fvh2/m8/Fr/wv6tv3zced2m48v1vM4snxQ8IE+f/d4
SD19Y39AHvKmkLft96xv2x/yppA3hbyJvsEH6I/g2xF8O4JvR/DtCL4dwbcj
+HYE347g2xF8O4JvR/DtaL65Ln0zp2/m9M2cvq3thm84D2ucvvG8beZH4/St
6s/kQ8vrnLcz5O0MeTtD3s6QtzPk7Qx5O0PezpC3M+TtDHk7Q97OkLez+WYd
fTOfjwvvm2/m83HhffMN29c4fePvmXm7Hmm+VX27vmjfAx9af0ffzO0POc9D
V3u8+EPO84j6ve06LvbL7OfMw/VXyyl+b+vfeV2I67LGqz+b83x85a/4sznP
p+r37vMF6NtxiP29Ofuzqj8b/44/7TjH7wdvxz/qeX3B4yL1PK/m8XL246em
t7/Ug6fcsX7I6Xfbpx2Pqefxgsfpuf7Z9OwPA2/bF/LfrtfNQ/7b9Rb298ZD
/uP5R/I35L8dr/B723kM9yfsL43bH3L7086HXvyZc/BT+N593QD9783Tzzyv
qfqz8e/4087n+D3g7TyPevYPPP+jnv0DzwupZ//A80Xq2T+k8b90XEr9ccpp
ap/A2/noXP9sevYPgbfvC/lv43bmIf9t3AX7e+Mh//E8O/WnyceQf54/tv7h
R/ju/05uf8jtDznGz1r/MH/vGv9o/cPMj8ax37b+Ifze5M/i6Ad+Dnzp2T8E
vvTsHwJfevYPgeN37f4hcNZn+7f+ofJ2vtn6B/Nw/Gn5rXVaHlv/gHZsevYP
yAPvO7X+gTzkn+PHrX+Yv7flXyH/PK9t/cOsb/lffvzp+d//a/2DOfaXxu0P
uf0htz/k9mf+3tst6DXzo3H7M+vPxr/jz+L+/fQNfOnZPwS+9OwfAl969g+B
43ft/iFw1leor1l/BP3R9OwfAkf9M9Q/m579Q+DMw2p/8pB/hfwr5F8h/6sd
gr5tZ8i/Qv4V8o/riw/h+uJDuL7Y3P6Q1/Orzev51eb1/Irf6/OrptfMj8br
+RX1Z+Pf8Wdx9g+BLz37h8CXfr6+aHzp5+uLxvG7eH3ROOsr1Nes5/VF40s/
X180jvo8T2yc7dj07B+QB1xfbB7yj+uLzUP+FfKP64umb9sZ8o/rC+pb/qsf
f/iH1j+YY39pvOwHF17yfuEl1xde8tu+9yWnXa+ZH42XfDX92fh3/Fmc/UPg
S8/+IfClZ/8Q+NKzfwgcv2v3D4GzvkJ9zfoj6I+mZ/8QOOqfof7Z9OwfAmce
avtfeMi/Qv4V8q+Q/9oOXd+2M+RfIf8K+cf9i8/h/sXn1j+Q2x9y+0Nex283
r+O3/F6P3za9Zn40XsetqD8b/44/i7N/CHzp2T8EvvTz/YvGl579Q+D4Xbx/
0TjrK9TXrOf9i8aXfh4/bhz1OZ7UONux6dk/IA+4f7G525k85F8h/6t95u9t
+V9+z7zlXyH/y6fwe/V3z//+sfUP5thfGrc/5PaH3P6Q25/5e2+3oNfMj8bt
z6w/G/+OP4v799M38KVn/xD40rN/CHzp2T8Ejt+1+4fAWV+hvmb9EfRH07N/
CBz1z1D/bHr2D4EzD6v9yUP+FfKvkH+F/K92CPq2nSH/CvlXyD/mifzW+gdz
7C+N2x9y+0Ne58lubn/m7/W/ptfMj8brfSzqz8a/48/i7B8CX3r2D4EvPfuH
wJee/UPg+F27fwic9RXqa9ZzXknjSz/fZ24c9XnfqXG2Y9ODMw+r/clD/hXy
r5B/hfyvdgj6tp0h/wr5V8j/8uP5f7vk33/J7QO5fSAv8/0v3D7M3/syX7vr
23baB/Iyn6Dpz/R7F6/tvX0wpw/l88UHc/pgTh/q924foG/bSR/M6UPVn+n3
Ll7zvX0wpw/l91988Gf6YE4f6vduH6Bv20kfzOlD1Z/p9y7O51/I6QOfcyGn
D3zOZf7e7QPnX878aJw+8DmX8HsXr/3X9sGcPpTfc/HBnD7U66ufGqcP0Lft
pA/m9KHqz/R70W/4H/vJ/RwKOX0wn/vJ/RzK/L3sJ/f82pmzn9zzaWY9+8n1
e+lPPQ5ceMhD7ScuPORBIQ/V165v2xnyoJAHhTy042Y9HtOHI/hwBB+O4MMR
fDiCD0fw4Qg+HMGHI/hwNB84T5CcPnDeHzl94Dy++Xu3D5yXN/OjcfrA+XTh
98KfM+ThDHk4Qx7OkIcz5OEMeThDHs6QhzPk4Qx5OJsP/kwfzOlD+f/7+WTz
wTycTzYfoG/bGc4nmw9V384n199/9ZX/+d/qL24//LN/ezmvNvdn/3fq7Q+5
/SG3P+T2Z96e2y3o2/bbH3L7M+vP5IOCD4v799Mf8KW3L9SDL739oh586e0j
9eD4Xbcb9eCsr1Bfs/4I+qPp3U7Ug6P+GeqfTe92nX/v+6b3Z+4X5iH/qz3J
Q/4V8r/aIejbdob8K+RfIf+1//jhl/n+3Q9vAv+F41RLP/Nd336yfuVbb5+p
r3zry/XERV/51pfz7ou+cvrzcn7a/DFv9RXqN//L+U7TH01fzgsu+spZ/wz1
z5SHpmd+0O4KeVh6tzfzM/OmV9Cv+s4H68+86RX0q/54v/Whn3nTK+hXfeeP
9Wfe9Ap6tBfu5672Im96BT23X2H7FbZfYfs11z9CffKmV9Cv+uP95Yd+5k2v
oMf2n2H7yZteQc/9sdWfedNz/231/TkcL8C3/sdv29v0lW996P/Btz70/wr9
/9o/qA/9fx2faL+39f8rv6F+8zP0/+BbH/p/hf5/5WWu3/p/nCe09v12v+/2
x3aeYM7zAerd7uRuX/Jy3/PC3V7z9rzc9+z6tv32mbzc92z6M/mwOI+D5v79
9Ad86Xn8Cnzpx/v+nS89jy+B43fhvn/nrK9QX7P+CPqj6cf7/p2j/hnqn03P
/jNw5mG1P3nIv0L+FfKvkP/VDkHftjPkXyH/CvlH//A29A/3wN+GfuMe+K5f
/bwHvvXV53vgW1/9vwe+9bVd7oHTH7cX/TFv9RXqN/9r+1J/NH1t93vgrH+G
+mfKQ9MzP3P/2fKw9HO/eg+86RX0q/7cD98Db3oF/ao/99v3wJteQb/qz/38
PfCmV9CjvXhcuAfe9Ap6br/C9itsv8L2a67P48498KZX0K/683HqHnjTK+ix
/Tyu3QNvegU998dWf+ZNz/231ffncLwA3/rQ/4Nvfej/wbc+9P8K/b9C/6/Q
/+N4zd/b+n+F/l+h/1fo/xX6f4X+X6H/V+j/Ffp/nCe09n3h78J5wrtwPrD1
td03r+27eW3HzWt7cXvcLk3ftr/6vHn1k/oz+bD4fBx8F453jS/9fPxqfOnn
41HjSz8fXxrH7+LxonHWV6ivWc/+vPGln/vnxlGf/W3jbMemn/vJd9xfmE/0
e5uH/CvkXyH/6Jeavm1nyL9C/hXy3/zAfvGSo6fA37d+w/qZt3UoWn3uT+Z1
v3kK/LJuYNlvngLncyk/NT33p+qD9xv6g+f8Lv1YqN/8r/sN9UfT1/3mKXDW
P0P9s+lrTloe2v5T//+Wh7ZfuZ71M296BX3bP1l/5k2voG/7OevPvOkV9K2/
YP2ZN72CvvU7rD/zplfQt/4rbL9Yf94fmr71g3N98r5OXtC3/pT1Z97X2Qr6
1i/P20/e9Ar61L+zf2715+NB06fvYf/5O/f7p8DTfvwUeNovnwJP+9lT4Gm/
4e/93n7Q6n8n19R/L6dPgafcsf73ctTa9+XzRx4XXnwL6x489PN5Qlg/4VK/
5iSsn3DR15yEdRUu+pqTsN7CRV9zEtZhaP44J2F9hl5foX7zv+YkrOdw0dec
hHUeWv0z1D+bvuYkrAvR87D0M/8YzhPCOhJdr6Bf9efzhLDuRNcr6Ff9+Twh
rFPR9Qr6VX8+TwjrWnS9gh7txfOEsA5G1yvouf1i/Zk3Pbdfc32eJ4R1Nrpe
Qb/qz+cJYV2OrlfQY/t5nhDW8eh6BT33x1Z/5k3P/bfV9+dwvADf+tD/g299
6P/Btz70/wr9v0L/r9D/I+9hfZJen/2nQv+v0P8r9P8K/b9C/6/Q/yv0/2j/
vi7Kt8+feFz42Xw+H9j62u6b1/bdvLbj5rW9uD1ul6Zv21993rz6Sf2ZfFh8
Pg5+Cse7xpd+Pn41vvTz8ajxpZ+PL43jd/F40TjrK9TXrGd/3vjSz/1z46jP
/rZxtmPTz/3kygPaf/OQf4X8K+RfIf9oh6Zv2xnyr5B/hfzDj19D/9DXRbF+
7jf6+iqsX/3s66tQX33u665QX/3v67FQX9ulr9My++P26uu3hPoK9Zv/tX37
ei/U13bv68DM9c9Q/2z6mpO+boz1c//Z15Oxfu5X+zozQa+gX/XnfrivSxP0
CvpVf+63+zo2Qa+gX/Xnfr6vexP0Cnq0F48LfZ2coFfQc/vF+jNvem6/5vo8
7vR1eIJeQb/qz8epvm5P0Cvosf08rvV1foJeQc/9sdWfedNz/231/TkcL8C3
PvT/4Fsf+n/wrQ/9v0L/r9D/K/T/yHtfvyjUZ/+p0P8r9P8K/b9C/6/Q/yv0
/wr9P9q/r5v07fMXHhd+Np/PB7a+tvvmtX03r+24eW0vbo/bpenb9lefN69+
Un8mHxafj4NfwvGu8aWfj1+NL/18PGp86efjS+P4XTxeNM76CvU169mfN770
c//cOOqzv22c7dj0cz+58oD23zzkXyH/CvlXyD/aoenbdob8K+RfIf/Lj+v7
H//v7d3qH/z95vaTevtDbn/Ip/dgfuX2Z96e+h7Mi75tv/0hX+sxjPoz+aDg
Q33/4+2+fDP/pz/96U//7fa2+Wm9/TS3nj5bT5+tJ7ee/ltPbj3bxfrx/ZsP
PdvLevLqz27H6g/e17nrK9Rv/rPdq/5oeubBevJa/wz1z5SHpmeukAeFPKw6
//758x9brsyZH3PmxJx5MGe7m7N96/bsdoS+bT/bxZz+V/2ZfFDwYen/57PP
b9p++tfPul+an9ZzP7WePltPn60nt57+W09uPdvFenLr2V7Wk1d/djtWfzZH
fYX6zX+2e9UfTc88WE9e65+h/pny0PTMFfKgkIdV5989f/7blitz5secOTFn
HszZ7uZs37o9ux2hb9vPdjGn/1V/Jh8UfMB7gV+/4n76n7/pRT+t535qPX22
nj5bT249/bee3Hq2i/Xze5lfv2J7WU9e/dntWP3he5xXfYX6zX+2e9Xzvc+v
XzEP1pPX+meoz/dErzw0PXOFPCjkYdX5T9/235Ur8//z9c/tTcub9cyb9cyb
9cyV9eTWM1fWk1vPXFlPbj1zZT159WfnqvqzOeor1G/+M1dVfzQ9c2U9ea1/
hvpnykPTM2/Ig0IeVp3/+Pz5jy1X5syPOXNizjyYs93N2b51e3Y7Qt+2n+1i
Tv+r/kw+KPiw9H/2UP33y3Oc5v/72ed789N67qfW02fr6bP15NbTf+vJrWe7
WE9uPdvLevLqz27H6s/mqK9Qv/nPdq/6o+mZB+vJa/0z1D9THpqeuUIeFPKw
6vybb9f7LVfmzI85c2LOPJiz3c3ZvnV7djtC37af7WJO/6v+TD4o+LC+h+NF
gS/9PB5ytPGQoFfQL87r4sCXfr7uO9p1X9Ar6Bfn+X/gS4/zmaXn+W3QK+gX
n89njnY+E/QK+sV5XAt86ed++2j9dtAr6Bfn/ht4WUf1mufA63o5lzybM89B
r6BfnHkOfOmZZ3PmOegV9Iszz4FjndmdZ3PmOegV9Iszz+bMc9Ar6BdnngNf
eubZnHkOegX94sxz4Ou9z8xz4EvPPJszz0GvoF+ceQ586Zlnc+Y56BX0izPP
gS8982zOPAe9gn5x5tmceQ56Bf3izHPgS888mzPPQa+gX5x5Dry8J/qa58Dr
e6IveTZnnoNeQb848xz40jPP5sxz0CvoF2eeA1965tmceQ56Bf3izLM58xz0
CvrFmefAl555Nmeeg15BvzjzHPhLf/4hnG80vvTz+caHcL7R9Ar6xefzjcaX
fj7f+BDON5peQb/4fL7R+NLP5xsfwvlG0yvoF5/PNz6E842mV9AvPp9vNL70
8/nGh3C+0fQK+sXn843Gv/19ed/uNc+BLz3zbM48B72CfnHmOfClZ57Nmeeg
V9AvzjwHvvTMsznzHPQK+sWZZ3PmOegV9Iszz4EvPfNszjwHvYJ+ceY58Jfr
x89hfKPxpZ/HNz6H8Y2mV9AvPo9vNL708/jG5zC+0fQK+sXn8Y3Gl34e3/gc
xjeaXkG/+Dy+8TmMbzS9gn7xeXyj8aWfxzc+h/GNplfQLz6PbzT+bT2cl/eZ
XvMc+NIzz+bMc9Ar6BdnngNfeubZnHkOegX94sxz4EvPPJszz0GvoF+ceTZn
noNeQb848xz40jPP5sxz0CvoF2eeA3/x8beW58CXnnk2Z56DXkG/OPMc+NIz
z+bMc9Ar6BdnngNfeubZnHkOegX94syzOfMc9Ar6xZnnwJeeeTZnnoNeQb84
8xx4eT/XdV4u+XP3jveRXeffkk/vI7vOv52/t76P7Dr/duZH4x6XnPVn+r31
/VyXebbmnGdLPf3hvFnq6RvnzVJPPzlvlnr6zHmz8+/d/nPebKivUL/5yfbi
vFnq2Y6cNzvXP0P9M7Vv05NzHiw525fzXcnZXpzvOn/v9p/zXWd+NE7fON81
/N7FOa/VnPNaqac/nKdKPX3jPFXq6SfnqVJPnzlPdf6923/OUw31Feo3P9le
nKdKPduR81Tn+meof6b2bXpyzjslZ/tyfik524vzS+fv3f5zfunMj8bpG+eX
ht+7+LfPex6pOeeRUk9/OC+UevrGeaHU00/OC6WePnNe6Px7t/+cFxrqK9Rv
frK9OC+UerYj54XO9c9Qn++p3PNCQ/suznme5pznST3bnfM2qWe7c94m9Wx3
ztuknu3OeZvz793tznmbob5C/eYn253zNqlnu3Pe5lz/DPXP1L5NT855mORs
X863JGd7cb7l/L3bf863nPnROH3jfMvwexfnvEpzzquknv5wniT19I3zJKmn
n5wnST195jzJ+fdu/zlPMtRXqN/8ZHtxniT1bEfOk5zrn6H+mdq36ck575Gc
7cv5jeRsL85vnL93+8/5jTM/GqdvnN8Yfm95z+zX69DpPbMXXt8z+7h+od7X
L+P7Z7deQb+4z/9ZB3zpfd5Ivc8byaFX0C/u8y7WAcd7dV+/ot7H6/l9u0uv
oF/c/T/ruP8nh15Bv7j7T9YBX3rvd9R7vyOHXkG/uHPLOuDfcvbDL/N9q5f3
S3be9Ar6VX+8z/Xg430uv3ey6d8EfauvUF+hvkL9VWe8j/bQz7zpFfSr/njf
7cHH+26POrP+TdC3+gr1Feor1F91xvt6D/3Mm15Bv+p7f2ed8T7geq8o9W+C
vtVXqK9QX6H+qjPeZ3zw8T7jo86sfxP0rb5CfYX6CvVXnfE+5kM/86ZX0K/6
433PBx/vez7qzPo3Qd/qK9RXqK9Qf9UZ76s+9DNvegX9y3tJ/jjfh+186dl/
mo/3YbteQb/4eB+286Uf78M++HgftusV9IuP92E7X3r2D+bjfdiuV9AvPt6H
ffDxPmzXK+gXH+/Ddr70433YBx/vw3a9gn7x8T5s5+v9XHOe74E3vYJ+1Z/z
/zbk/x7096Bv9RXqK9RXqL/qzPvXPfCmV9Cv+vP++Dbsj/egvwd9q69QX6G+
Qv1VZ97f74E3vYJ+1Z/7h7ehf7gH/T3oW32F+gr1FeqvOnP/8zb0P/egvwd9
q69QX6G+Qv1VZ+7f7oE3vYJ+1Z/7w7ehP7wH/T3oW32F+gr1FeqvOnN/ew+8
6RX06z1ocz/c+NLP/ee70H82vYJ+8bnfa3zp5/7qXeivml5Bv/jczzS+9HP/
8C70D02voF983n/fhf236RX0i8/7XeNLP+8v78L+0vQK+sXnnDe+/o7zzF/e
P9V50yvo6/k756U/+Dgv3e+lavqnoG/1Feor1Feov+qM894f+pk3vYJ+1R/n
yT/4OE/+UWfWPwV9q69QX6G+Qv1VZ5yH/9DPvOkV9Ks++wfzcd7+eu8Y9U9B
3+or1Feor1B//R2fC3jw8bmAR51Z/xT0rb5CfYX6CvXX3/G5g4d+5k2voF9/
x+cUHnx8TuFRZ9Y/BX2rr1Bfob5C/fV3fA7ioZ950yvoX/5+DP1weD6o6xX0
q/7c334M/W14zugWnjPq9RXqK9RXqL/qzP1weF6p6xX0q/7c334M/W147ukW
nnvq9RXqK9RXqL/qzP1weH6q6xX0q/7c334M/W14DusWnsPq9RXqK9RXqL/q
zP3tx9Dfhue8buE5r15fob5CfYX6q87cD4fnxbpeQb/qz/3tx9DfhufObuG5
s15fob5CfYX6q87cD4fn17peQf/y91Pohxtf+rn//BT6z6ZX0C8+93uNL/3c
X30K/VXTK+gXn/uZxpd+7h8+hf6h6RX0i8/776ew/za9gn7xeb9rfOnn/eVT
2F+aXkG/+Jzzxl/+/hry3J93C3oF/ao/5//XkP/+3Jz5rG/1Feor1Feov+rM
+1d//i7oFfSr/rw//hr2x/4cn/msb/UV6ivUV6i/6sz7e38eMOgV9Kv+3D/8
GvqH/lyh+axv9RXqK9RXqL/qzP3Pr6H/6c8tms/6Vl+hvkJ9hfqrzty/9ecf
g15Bv+rP/eGvoT/sz1Gaz/pWX6G+Qn2F+qvO3N/25zGDXkH/8vdL6IcbX/q5
//wS+s+mV9AvPvd7jS/93F99Cf1V0yvoF5/7mcaXfu4fvoT+oekV9IvP+++X
sP82vYJ+8Xm/a3zp5/3lS9hfml5Bv/ic88axTvW39VCuz0f6/1/PX0LvnJLz
uT3XsZ58PXeIOnwuzfr13Bv06/ktcD4v5Tp8vsp8Pe+FOnweyPr1vBH0zik5
n1NxHevJ13M2qLOewwDncw+uw+ckzNdzG6jDef3Wr+cGoF/z38E539x1OD/d
fM2XRx3Op7Z+zdd+0T//5x/Plltz5tacOTRn3syZN3Pmx5w5MWdOzNnu5mx3
c7ajOdvLnO1lTv/N6fNfPv/7++azOX02p8/m9NmcPpvTZ3P6bE6fzemzOX02
p8/m9NmcPpvTZ3P67OcQ6LM5fTanz+b02Zw+m9Nnc/psTp/N6bM5fTanz+b0
2Zw+m9Nnc/rs5zroszl9NqfP5vTZnD6b02dz+mxOn83pszl9NqfP5vTZnD6b
02dz+nx7+TefV9xu83nF7TafJ9xu8/nA7TafD9xu8/H9dpuP4/7H4/jtNh+X
b7f5uHy7zcfZ220+nt5u8/H0dpuPj7dbyLNCnhXyrJBnhTwr5Fkhzwp53s8Z
g4c8K+RZIc8KeVbIs0KeNft8BJ+P4PMRfD6Cz0fw+Qg+H8HnI/h8BJ+P4PMR
fD6Cz0fw+Qg+H81nPxdHn83pszl9NqfP5vTZnD6b02dz+mxOn83pszl95rrd
5PSZ63CTz3k+Q57PkOcz5PkMeT5Dns+Q5zPk+Qx5PkOez5DnM+T5DHk+Q57P
kOez+fxtu983n83D9XXz2TxcFzefzcN1bvPZfD4Ovm8+m4fr0+azebiubD6b
h+vE9tzty3ViW//JPIxLtPWHzMO4RFuvxTyMP7T1RcztM3kYN2jrH5iHcYD2
vL55uB5vz4ub8znmF45xpCOM/xxt/Iec6w+Zc50bc65zY871Wsyrz0cbbyHn
uhHmXDfCnOsfmPM5e3M+Z28efG7rls15PkKej5DnI+T5CHk+Qp6PkOcj5PkI
eT5Cno+Q5yPk+Qh5PlqefVxknsntMznXFWOeybkOE/NMznWGmGdyrlvDPJNz
XRPmmZzrQDDP5MHntt4e80wefG7rkzHP5MHntp4T80wefG7rxzDP5MHntt4G
80yOdS9ansntMznWHWx5Jsc6bS3P5Fjfq+WZHOtatTyTY92jlmdyrBPT8kwe
fOY6ly3P5MFnrgvY8kwefOY6ai3P5MFnri/V8kwefOZ6PC3P5PbZ76Fgnsnt
M7l9JrfP5PaZ3D6T22dy+0xun8ntM7l9JrfP5PaZ3D6TB58VfFbwWcFnBZ8V
fFbwWcFnBZ8VfFbwWcFnBZ8VfFbwGecbH8L5xoeWZ/J6HPzQ8kxej4MfWp7J
63HwQ8szeT0Ofmh5Jq/HwQ8tz+T1OPih5Zk8+Kzgs4LPCj4r+Kzgs4LPCj4r
+Kzgs4LPCj4r+Kzgs4LPdX7BH/6h5ZncPpOXeS4XXuazXHiZn3LhZX7KhZd5
KBdun8nLvJILL/NELrzME7nwMh/kwsv8jgsv8zsuPPis4LOCzwo+K/is4LOC
zwo+K/is4LOCzwo+K/is4LOCzxjf+NzyTF6vuzev192b1+vuzet19+b1unvz
et29eb3u3rxed29er7s3r9fdm9fr7s3rdffm9bp78+Czgs8KPiv4rOCzgs8K
Piv4rOCzgs8KPiv4rOCzgs8KPq88Pz+P/Hf/2PJMbp/J7TO5fSa3z+T2mdw+
k9tncvtMbp/J7TO5fSa3z+T2mTz4rOCzgs8KPiv4rOCzgs8KPiv4rOCzgs8K
Piv4rOCzgs9Y//K3lmdy+0xe1+n/reWZvK5r/lvLM3ld5/u3lmfyug70by3P
5HWd4N9ansnruqq/tTyTB58VfFbwWcFnBZ8VfFbwWcHnlWfy4LOCzwo+K/is
4LOCz3U92rVO+M4zuX0mL+/9uPDyHokLL+9JuPDynoQLL+vuX7h9Ji/ryl94
WXf8wsu64xde1rG+8LJO84WXdZovnD4/HyYv80XJ6bM5fTanz+b02Zw+m9Nn
c/psTp/N6bM5fTanz+b02Zw+m9Pn57+X+aLk9NmcPpvTZ3P6bE6fzemzOX02
p8/m9NmcPpvTZ3P6bE6fzekz54uS02fOFyWnz5wvSk6fOV+UnD5zvig5feZ8
UXL6zPmi5PSZ80XNX+6HN5/N6bM5fTanz+b02Zw+m9Nnc/psTp/N6bM5fTan
z+b02Zw+m8/HwT1flHw+Du75ouTzcXDPFyWfj4N7vij5fBzc80XJ5+Pgni9K
Ph8H93xR8vk4uOeLwn+FPCvkWSHPCnlWyLNCnhXyvM7ryEOeFfKskGeFPCvk
WSHP7bzO8w5mn4/g8xF8PoLPR/D5CD4fwecj+HwEn4/g8xF8PoLPR/D5CD4f
zWfOFyWnz5wvSk6fOV+UnD5zvig5feZ8UXL6zPmi5PSZ80XJ6TPni1b/z5Dn
M+T5DHk+Q57PkOcz5PkMeT5Dns+Q5zPk+Qx5PkOez5DnM+T5TNeDzWfzcD3Y
fDYP14PNZ/NwPdh8Np+Pg++bz+bherD5bB6uB5vP5uF6cPns91D4vRT2mdw+
k9tncvtMbp/J7TO5fSa3z+T2mdw+k9tncvtMbp/J7TN58FnBZwWfFXxW8FnB
ZwWfFXxW8FnBZwWfFXxW8FnBZwWf632rH35p46Lf+JvAf2njpeTlPssPb4L+
TdDvOuW+zEVf+daX+zUXXu7XXOpU/Zug33XK/Z2LvvKtdx7Iy32fS52qfxP0
u065T3Th5T7RpU7Vvwn6XafcV7roK9/6cr/pwsv9pkudqn8T9LtOze2bwPe6
DCHPCnlWyLNCnhXyrJBnhTwr5Fkhzwp5VsizQp4V8qyQZ4U8K+RZIc8KeVbI
s0KeFfKskGeFPCvkWSHPCnlWyLNCnhXyXO/DXtYNKfcHL9w5JC/3By+83B+8
8HJ/8MLL/cELL/cHL9ztTl7uD154uT944eX+4IWX+4MXXu4PXni5P3jhwWcF
nxV8VvBZwWcFnxV8VvBZwWcFnxV8VvBZwWcFnxV8Rp7fhjzfA38bcv425Pwe
9Peg33Vqe90D3/rajpvXdrwH/T3od53a7vfAt77mYfOah3vQ34N+16n52bzm
5x7096DfdWre7oFvfc3h5jWH96C/B/2uU3N7D3yvuxTyrJBnhTwr5Fkhzwp5
VsizQp4V8qyQZ4U8K+RZIc8KeVbIs0KeFfKskGeFPCvkWSHPCnlWyLNCnhXy
rJBnhTwr5Fkhz+B7XbCaW7wHbuVw85rDzWveNq/52bzmZ/Oak81ru29e233z
2o6b13bcvLbX5tX/zav/mwefFXxW8FnBZwWfFXxW8FnBZwWfFXxW8FnBZwWf
FXxW8Dm9R6XOM789Bb719p+8rrP4FPRPQb/r1PUXnwLf+vCekDqP/VKn6p+C
ftep6y8+Bb71zgN5XWfxKeifgn7XCe/NqPPnL3Wq/inod526/uJT4Fsf3lNR
5+Ff6lT9U9DvOjW3T4EvvUKeFfKskGeFPCvk+Xe+h+cp8K3/fe+9eQr6p6Df
dUKef+97bFr/xjohz7/3PTOtP2SdkOff+R6Yp8C3/ve9d+Up6J+CftcJeQb/
GPrh8HzQRV/zuXnNZ3ie6BaeJ7rUqbkNzxld9DWfm9d8hueSbuG5pEudmtvw
vNJFX/O5ec1neL7pFp5vutSp+dy85jM8D3ULz0Nd6tTchuekLvqaz81rPsNz
VbfwXNWlTs1teN5q6xXyrJBnhTwr5Fkhzwp5VsizQp4V8qyQZ4U8K+RZIc8K
eVbIs0KeFfKskGeFPCvkWSHPCnlWyLNCnhXyrJBnhTwr5Fkhz+CfQj+8ec3h
5jWHm9e8bV7zs3nNz+Y1J5vXdt+8tvvmtR03r+24eW2vzav/m1f/Nw8+K/is
4LOCzwo+K/is4LOCzwo+K/is4LOCzwo+K/is4DPy/GvIc3/ejfrq/+bV//58
HHnV7zq1vfpzc9TXdty8tmN/zo686ned2u79+Tvqax42r3noz+uRV/2uU/Oz
ec1Pf76PvOp3nZq3/twf9TWHm9cc9ucEyat+16m57c8PQq+QZ4U8K+RZIc8K
eVbIs0KeFfKskGeFPCvkWSHPCnlWyLNCnhXyrJBnhTwr5Fkhzwp5VsizQp4V
8qyQZ4U8K+RZIc8KeQb/EvrhzWsON6853LzmbfOan81rfjavOdm8tvvmtd03
r+24eW3HzWt7bV7937z6v3nwWcFnBZ8VfFbwWcFnBZ8VfFbwWcFnBZ8VfFbw
WcFnBZ/HdYm9jgzXJV7zkG73xqd1ib/yaV3ir3xal/grn9Yl/sqndYn387p1
XeKvfFqX+Cuf1iX+yqd1ib/yaV3ir3xal/grn9Yl/srHdYlv9+bzdV2eKy/z
t273xul/mdd10ZuP6xs/dGwv68Z1jx/6cd3jB2c7ug715uM6yY86bHfrx/WT
13PaWD/5wZmH+vz21puP6y0/6ozrLT848+M61JuP6zM/6jBv1o/rNj/047rN
D84cug715uM6z486zK315Nd1o665LfMFLzk0Zw7NmTd/Zn7MmR9z5qQ+n7/b
3Zztbs52NGc7mrO9zOm/Of03p8/XdbiuPl/X4bryMs/y4r85/S/zLy96c+pd
h+1lPbn1bEd/Zjv6M/Xm1FvHdreOvK7LsPNgzjzU9Rq23px612F+zJkf16He
nHrXYd6sJ7eeOTRnDl2HenPqXYe5tZ78uk7cNbdlXu8lh+bMoTnzZs78mDM/
5sxJXY9jt7s5292c7WjOdjRne5nTf3P6bz6vz/9t3b2rz9d1967cevpvTv/L
POmL3nxe5//1K7aX9fP6/69fzev/v37FdnQd6s3n9wW8fsV2t35+j4DXYeF7
BF6/Yh7q+ixbbz6/d+D1q/m9A69fMT/+/6k3n99T8PoV82b9/P6C16/m9xe8
fsUcug715vP7Dl6/Ym6tJ7+uC3nN7XVdyCsv8+8v+TRnPsu8/IvenHrXYW6t
J7ee+TRnPl2HenPqXYe5tZ68rhO082nOfNb1g7benHrXYT79mfn0Z+rNqbeO
ubWO3Hrm05z5dB3qzal3HebWevLruqXX3JbnPS45NGcOzZk3c+bHnPkxZ07q
+lC73c3Z7uZsR3O2oznby5/pvzn9N6fP13Vgrz5f14G98vKczMV/c/pfnp+5
6M2pdx22l/Xk1rMdzdmOrkO9OfWuw3a3nryuC7bzYM481PXCtt6cetdhfsyZ
H9eh3px612HerCe3njn0Z+bQn6k3p9465tY68ut60Nfclue1Ljk0Zw7NmTdz
5sec+TFnTuq6e7vdzdnu5mxHc7ajOdvLnP6b03/zaf2N67goOdcr4Lgo+bT+
xnVclHxaf+M6Lkpun8mn9Teu46Lk0/ob13FR8mn9jeu4KPm4/sZlXNSc46LU
03+Oi7IO9RwXZR22F8dFqR/X97iMi7IO9RwXZR22O8dFqWceOC7KOtRzXJR1
xnVFLuOirEM9x0VZh3njuCj14/okl3FR1qGe46Ksw9xyXNSc46LkzCHHRcmZ
N46LkjM/HBclZ7tzXJSc7chxUXK2F8dFyek/x0XNOS5qznFR6uk/x0VZh3qO
i7IO24vjotSzHTkuyjrUc1yUddjuHBelnnnguCjrUM9xUdZhfjguyjrUc1yU
dZg3jotSzxxyXJR1qOe4KOswtxwXNee4KDlzyHFRcuaN46LkzA/HRcnZ7hwX
JWc7clyUnO3FcVFy+s9xUXNvN33muCj19N+c/nNclHxez2qPi1I/r3O1x0XJ
2Y4cFyWf18Xa46LUz+tl7XFRcuaB46Lk8/pae1yUnPnhuCj5vB7XHhelfl6n
a4+LkjOHHBcln9f12uOi1JNzXNSc46LUM58cF2Ud6jkuyjrMLcdFqWc+OS7K
OtRzXJR1mFuOi1LPfHJclHWo57go6zCfHBdlHeo5Lso6zC3HRalnPjkuyjrU
c1yUdZhbjouac1yUnDnkuCg588ZxUXLmh+Oi5Gx3jouSsx05LkrO9uK4KDn9
57ioOcdFzTkuSj3957go61DPcVHWYXtxXJR6tiPHRVmHeo6Lsg7bneOi1DMP
HBdlHeo5Lso6zA/HRVmHeo6Lsg7zxnFR6plDjouyDvUcF2Ud5pbjouYcFyVn
DjkuSs68cVyUnPnhuCg5253jouRsR46LkrO9OC5KTv85Lvr/AaWCbuQ=
   "], {{
     {EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{683, 2, 684}, {726, 153, 715}, {529, 572, 530}, {682, 
         561, 550}, {695, 23, 694}, {562, 519, 518}, {551, 672, 549}, {714, 
         142, 716}}], Polygon3DBox[CompressedData["
1:eJxM3QW0bVX5/vHNjXPP3vucfQQFaWkpSenu7lKRRkIQUEFBkRQFJKS7GxFB
UBBR6Q5RRFJCSkA6BfH/fO47f2P8x2Bx57PmXHPNlXuf/X7n8866/Z4b7zGu
0+l8c6zTmZB/j+h2Oil2fp2V7/c7nZOjZ4heaWKnc9Vop3NS9HTRK0T/KvpH
0ZOir0z7N9P+wOj81/lV9FvR+0WkaeeX0a9HHxqdfzpXRb+TwmHR6aZzdfS7
0d+PNp5f5H//jl4xG4+PviL6N9nR2tGfj74u+rfR60dPH3199HXR52X72aLX
zPrfp+PTomeKXiX6mugzomeOXjX6N9FnRn8herXo30afHT1L9OrR10efGj1j
9MrRv44+N3rW6DWib4i+PHq+6C2i740+OnrK6Gsyng8z/guiZ49eK/V/SP2F
0XNFrxf9p+iLoueO3ij6luhLoueJ3iT69ujfpp9poqdtx3xp6udNebPU35X6
Y6M/G31t6j7K/v4UvWz0nql/OfU3Ry8XvVf0K9H3Rq8RfUj0/6L/GL1M9B7R
L0X/Onqh6O2in4jePv/OEf279P+7nN+rUr9g9DZZ/2jqr4leNHqn6Cej745e
Pfqg6I+jd86/X4y+Idv/PtvfmPqlo7+V9S+k/lfRC0RvFf236BOip47+Tdp/
nOO5P3rN6B+nftyg03kgeq3on0RPjD4i/y4f/Ye0/1P6/0Xq54/+atY/kP6W
H+p0Po3eOjfRAsM5x6lfMXrv1L+W+lujV47eN/qN6H3y75ejb0x/f0h/d6R+
1ej9s/691P8y+kvRW0b/JfrP0WtHHx49nPHcFb1a9AHRH6b+2/l34ejfp78b
09/tqV8l+gdZ/3bqj8m/K0X/MfU3p/4vqd8g+tis76W/ib20jX44esvoR1O/
SfQJ0Z+J/nv0xtHHR49F/zN6q+jzor8Q/bfojaKPix6Nfjb669HnRM8Y/XD0
htE/jx6Jfjx60+gTo6eKfib6a9FnRE8X/Xz01tEXRM8W/XT0FtGneC6jn4ze
LPqk6M9FPxW9efTJ0VNHvxi9TfRF0XNGvxm9q/sreunoN6J3dv2jl4j+V/R2
0ZdFzx99Vf79SvTNOV+353y9lvodvF+yfpHUz5rr/Y/o7+Z6L5jr/Wrqt/c+
Sf2CqT8z/64ffVO2vzXbv5T6baMvyfq5U/9b5zn6ltTfmfq3U/9N1y/rl0v9
69E7er9FLxb9XvTu0X+KXiX6w+g9om+NXjv6nejd3J/RK0afmn/X0T7935L+
30/9txxP1q+e+v9E7xl9e/R60ffk32/oL+3vTvte7ocfRf8967dN/adpv3f0
A9GbRo+k/oDoR6O3j34w/+4SfVu2vzfbPxb9Hf1H3xf932z/7ei7s36TtJ8i
238/+qHoLaInRf8w+m/RW0X/L+2/F/3n6M2iu6nfP/qR6G2ix0XvG/0X1yl6
QvR+0X+N/lr0tdl+sehdop/K/f9U/t0n+o6M5/6MZ9q0PyL6taz/QdoPog+N
fiZ65+jPRf80+uXo70ZPGX1Y9PPR34p+KP2vF310dDf6M6n/cfRz0d+Mni76
yOjXo38UPRp9cPST0TtGTxN9ePQr0d+PniH6Z9FvRh8U/dnon0S/GL1X9Pv5
95DouzL+hzL+j7P/vaLvzPoNU/9W/j2QTv2Dqf9t6heP3jXrn87xXxe9hM/f
6Geifxe9ZPRu0c9FL5L9net6ZPvxI3k3RZ/n/EZPjD447XObd56O/mz0wqk/
x/WJHhc9Z/RJ0Z+kvyMzni9Gnxz93+ijomePPjH64+jDo+eNPjX6f9HHRh+Q
/vNIdZ5Kf1Omv7lTf0r0p6k/OvULRp8d/aAP7dTPFn1Civ9J/U9Tb+Oj3F+p
/0uO/8fpL006z0Z/Pu1/2p28Weef0dOlsGkqH4ieO8/vitGbRT8YPW/0KtHf
iv4getPor0dvHH1/9FzRy0UvFX2h+zX99aKXiL7A+zN6OHrf7G8Kz090P3rD
1N8XPUe2Xyr6Z6k37BdSP1P0D7v1veiJ6NHoxdP+fPdz9KSR6kd/vqM85pnK
cob3d5Z7Ul4g7c/yfKb8v3yezR99ZvT90f+NfmNcfbb7jP93yp/L+fqD05YO
P/I8RP8pumcHudAToq9J8e20fSz1O3qPRr8T/UT0OhOrP/3+LfrX0V81vmz/
jvdHtr/O9Un9C9HrZjx3R8+c+oVyPN/xHo3+IPXPpn5c2l8c/Xj0w9HD0b+J
fj/6mej1sv090bNk+0Wz/QbR90bPFr149NrRd0XPGP2l6BNzPj8X/Wq2/2L0
O56r6LHUT8rxHZf6qaL/lfrZUz9fr86n8/pJztcxqf9M9EvRs6Z+j9R/GL1Z
tt8qeuaM79boqaJH0t996X+n6EnRH2e8a6X9ndHTR8+b9tOn/c3Rg+iJw7Ve
/e2uScqPe8+k3E95itRPkfZHR382ejR6r/T3UfTm0dukv92i34/eJPpr0d+M
fi964+ivRi+df5/q1GfUMinPkv7+kvJCKY+lv7HoG6JXiZ4xes1sf1X0UtGb
ZfsF8+8lnbomtlm6V9r6NVL/pfx7UfTpWT7vmUj9ZSkvkvLaqZ8//b8QvXL0
DOl/mdRfGr1w9JqpXz36V9FLRm8SvUX0n6Pnj149eoFs/1L0qtEzZftFov8V
vXr0rNFTRd8YvVr0F6K/kO2Pi/4w5/HHebCGUn9t9HKp/2zqZ0r9z91v3qOp
XzH1/TxQ33M/pX7G1B+T+vdSf3Dql4++PHrR1K+T8cyV9s9GLx89ddrPHf3P
6BWjPx+9ePSr0WtGzxk9W/TT0ctGTxk9En199ErR00WPj/51uzafie5G/zZ6
hehpom/I/bdU9O4Zzz/zfl4x4/lF9JdTv17Gs0r0L6MXj94wep/oT6K/Gr1j
9Nfy70M+77JskPIOqX/c+z7lH6b+u9EfR38levvoL2T/t0WvFz1/9r+h5zj6
rSzrp7xs6t9Ied2U50v9Ltn+3eiNorfI9ttFP+bzJvr70Tv3anv9bO55j/5P
9BbR20XPmP5uiV4nep70t2Pqn4j+VvSPRup7lXvXPfztlHdK/ZMp75nywamf
Jfr46I9yfg7L9fpq9MPR26R+59RPl/5vil4req70v1Lqr4heLHr91E+T+j9G
rxE9e+pXS/2V0UtEb5z6LaP/Fr1d9G7RW0f/Pfob0d+OXjLb/zt67egvZvuv
pP6v0VtGfyP120Q/Gr1z9HdHar16z+BWPlNS/0jKO6T8rdTPkf6eif5+9GLp
7yHfJ3J/HpcPhSVz/R/2fSD6hOhlor+Y9s+l/Q/Tfpm0nzf6+egDo1eKXj16
LO0PiF4heono13xeRG8ZvWr0aOp/4NmOXjt6yuhDPH/RX4p+Me0P9bxHfzn6
leifeT9Ebx49Xdof730UvWn056OP8T6KXjf6s9E/8fxELxT9crb/qfvX/RU9
deqP9PxHLx39eupPcH9EH5PjnTP1l0efkvNzRPRs0RdGHx19tuc+eqYsp6f8
k9TPkvK5Kf809culvzfT3ynuh/R3eOpnTf350Uf6/I2ePfri6J9HX5N//9ep
v+GuTfmo1M+R+ktTPsHzlP5miD7ZvZj+fp76uaKviD499cdFfzH6yuizok+I
njv6quhzo6/Ov//1eZrljJS/16v92e95vi+k/zXS/s/Rh6X/H6R+XPR13rOp
/1H0hOjfRV8avX/0+Ojrvafdn9l+ieib3K/Zfr/UTxH92+gLU39g9MToG6Iv
930ueij699FXRH892887RR37rtl+5eiR6Jvdn9ErRPei/xT9zehDsv2k6Buj
f5ntfxw9HP2H6F9Fb5/2S0XfEr2n5yt6EH1r9F7R34leJfq+6AOj14/+XPTd
0ft5H0QvE32b583nU/Rnom/3PHn/RC8XfUf0PtHrRE8VfadzG31Yr+4P98mP
fT6mfoXou7yfUv99Xw6jfxN9vu93qZ8m+l7vn9TvEb1S9D3el9GbRU8bfX/0
QdF7R68W/YD3kec/evroB6MPjb4+/W8ZvVKe10l5XrdM/YzRD7lXU39B6teJ
fjj6Kt9XoueLfjr6T9EXR68X/Uj0NdGXRW8Q/Wj0b6MvjF43+m/RV0dfHr1h
9GPR10VfEb1R9OPRv4u+Mnrj6Ceif+9+jN40+qnoP0ZfEr1+9N+jr43+h/dy
9MxZ/uqapn6TlJ9M+caRGqfxumeeTfmk1M+f8j9Tvjn1p0R/KfqF6NujT41e
IPql6DujT49eMPpf0fdGnxu9aPRb0X+PPj/6y9HvRD8RfU70ItFvRP8t+ozo
haJfjb4/eoec36Wj/2csOb8f5N/FoxfL8l7K26Z+yZQ/TvnY1G81VPXaHeF+
jt45elyu12mev+jNo59L/eHRB0V/I/rT6BOj94/eIfo/3kfRfxxf+1q8PSM7
pX7ZlMenvzNSf5e/X6Pnj/63v1/y7/ej93GOUz487XdLuZfyRWl/VPS3ogfR
v4zeNXr56EnR5/k+GL1y9Fj0r7yPoveMnir62ujvRq8a/dno30R/L3r16M9H
/z569+gVo/vRl0SfHP3d6Omjb4o+Pvrb0dNE/877JHrN6Bmib46+uVfjdxz/
yPHc4u/x6Dmin42+zd/j0XNFPx99e/QPoueOfin6Pr8fRC8U/W70/dEHRi8S
/UH0PdE/il4g+q3oO6N/6H6LfmWknhvPz1pZ/pLyg6k/KOUvp/4/3ufRX4le
Jvq//j7Lv1tMUdd0qZR/kuPZNeWhlM/N8SyWfzeLXjvLF5yzbP/VlJdLeQq/
V/Zqe/18nP7+6vcAn3/RS/v9NPpr0StEj/f7bPv88vxd7++VrN8+erss6znH
qd825XVS/rzfazOek6K3jn7S/ZT6bRxf9GdT/+PU7xK9ZfTfU/+H1G8dvUb0
lH4/Tv0h0UtH35b6c6NPiP5a9N+ifxr9zehtop+KPiB6x+hNou+N/uFQjc84
b48+PfrY6I2j744+OHqn6C2iH4q+OPqU6O1d7+hro8+J/k70J9GXR58WvVP0
v6KvjD4j+pvRb/p8j94jeufoV6Ovij4reo/o96KPjN49eofof/p7LXqv6N3c
D9EnRn8nek/3i+c1/14QfV6W76V8Sur3Tvm7rn/qn/H3evT+0TPlfP0z+uLo
g6Jnj366V9vrZ3q/z2f749wv0X/O9s+l/qLoA6JnSf0L/h6KPiR6ruh/+34Z
fVT04tGv+r4efWT0otGPRR8RfXL0itGv+Psi+vDohaL/Hn149EnRy0e/7O+p
6J9Ef8n9lH8PdmxZvp/yI6n/aconprxc6p+IPjL6lOiVo3+W78Ur5CPu4/z9
+lL+Hj026w+dou6RnzumXmnrl0j7J6N/Fn1q9Cp+r/d7QPS5Pr/yt8g50cdH
nxM9FH2690L0DVnOSPnM1P885bPc/6k/LfqYVidQc5u/l6MvjB6N/m30lW0s
/8v5/X32v1X0auqz/39EHxV9WvRq0Tf6vSL67OiJ2f786BNd7+hu9PXRv48+
0/MafVH0ydEXRI9Ev+jvz+gfR8+T/m7x93j0+dH91F8afWr0RdFj0VdEnx59
iecv+lZ/r/h8c76ifxV9ZvRl0dNE/zr67OhfRE8X/UD03dGXe76jx/fzzoi+
Nnrd7P++1N8ZfWn01Kn/S/S90VdEzxD9m+hzo38ZPaNAV7Z/KPrX0Wtl+wnR
D0f/Jnq96Cmi/xJ9TfTa0Vfl3wej789ypWegV9r61VM/lPZ/i/5t9AbRw9GP
RF8XvVH0u2l/TfTt0dtFv+H3AZ9t3qPR3bT/e/T10RtH96Mfjf5d9KbRN/jc
cn6z/Mpnjs+pKeqa/yHlT/29n/LVKa+R9q/3ql67zaI/ib4++sHob0e/Hf3r
6Fujt4p+K/rq6Jujt4x+L/ra6Dujd4j+IPo30XdH7xz9UfRvo++N3s3vn9Ff
j17F/RP9n+jrnK/ob0XflfN/e/TF3q85/4/4PSL6Ee+L6Mf9HuH9Hj1v9A1+
j4j+e/Sc7rfot6Jf8TxFXzdUz8pfo78Q/Qd/f0Y/ET1f9JN+P4j+R/SC0c/5
ezv6xehlou+JviP6Vc9D9B3+Xo9+yfMffZO/d6Ofjl44+hl/n0Y/530U/Ur0
O9Gvuz+i74++K/qN6HXEJnP9Po2e4PfqHP8M0R9Hf5r6vaNfS/v3ot92v6T9
n6PviX7H/RL9ZvQH0e9Hbx791+j7oj9wv3TruB2/d8ZDE6pf/X+U5T8pP5z2
j6f8x5RnFjvN/v8bPc7v89n/jNGfRAvyfj961uj/RQ/5XS96NsFev71GHxo9
R/QUfpv1+3D0Z7wfNMnn8Vt5H86V+nGpH/F7deoHqf+dv/+y7rXUP+/vx/Q/
T+p39fxl3Qypm1t8wG+10TNFzxu9W/S7/t6NnkVcJ/pv/n7O9l8Qj4h+O3rI
765+J40ezf6fTP3U0cdn/58VB52izoE2w+n/C2k/f8p7Oh/5d8roqcZVn2PZ
/qm0nSblE7P9SL+2189xjjf6H9Gfjz7J50n2/3b0fOIX6e9Zf29Hf9HvltHr
p/3ixpf9njzIZ030ltHrOhfRh0Z/PXr96Jej14n+svFEnzCo39j91v6c35lT
fsLvBel/dvGj9P8fvw+kbo7o7aL/4feI1M8ZvYPf6tPPrH7Hjv529KN+L0j9
rOJB0R/6vSD1s4n/RH/q94foucSt/Jab8Tyd9tNGn+J8Rj8TPV30qdFTRz8b
PX306dFrRi/qfnENU948y7Lj6hwvmfJmWZZJ+TNZlkh5+Ww3MeX/pI9FU14q
674Y/eWUz01/S0fPHb1Y9HmjtV79nFkWEdNL/bz6SvnCtv9F9J/j/nnO37LR
80QvnvoLUr9G9ELRy0Vf6X2X4/0w+144+nvd2s727in31iB69pQXEucSu832
S0ePGVPKr6bNu9n+S+JJqX89+v3oBf3uHP35tHkueoboM7O/6aOfj54p+pzo
aaP/GT1j9Fnez/4eTt9bZdnQ793tfE6Z8nGDup+W8HwZU8obZllSbMP5SHm9
dr/1syyY8trtfuq65/t1fy3m+c3ypZQ3zrJUygPnPOUVssznWmU8F2c8B0V/
LXrt7P+57H//6K9Erx79ePT20atGzxP9m+jdo9d1bqJvjf6mfeo7+ubobaNX
ETuIvjp66+iVXc/oXw7q/BrP56PPiN60ne9po88c1P3k/pku+uzobzlm1zf6
tugN2vmZOvqU6I3a+Zkm+rToraJXEpvAGkRPn3/X8HxmecffZqnfwPFn/V2p
3zt6o+ilo++NXrn9Pvxi1s2Y53HV9vvmy95R/h5pv3cclffhhvn+NWXO42PR
D2T5OO/g94dqX/a5YPpcOMua4+oZ9Cx+I/tb3bXJ+t9nf7u6htGLRt8UvWf0
+u53bEP0Tv3aXj9/iN45ei33QvQfo3eIXi16vujrxEPz73Lj6p3q3bpFv7T1
56R+S8yO2Ez0JdE/jd42etPofzt/+XfXcfXO9u7+epbvOhfiY+nvsLTfJuVN
sv7VtP9x9NbRG0e/Er2vd0D0iliJ6P28I6JXjn44+ofRW0SvGv1o9An92p/9
fhS9T/Qm0ctG3xf9vehNo5ePfmBQ+7E/7zDvspNTv1vK22X9/1J/YvQ3o7cR
6x1UP/rzDvUuXWZSPXuewY+i123Py2ez/sS0/45nLnqp6Lujv+aZ8dkRfVH0
V7zTomfCMom/Rn81es3of0T/LHqH6C2i34o+Mnr76M2j34w+Pnrn6C2jP4w+
OnrH6K9EvxN9bPQ3or8a/V70z6N3iv4aFiH68OjtojeLfl08RszSeHMfXpLn
ebXoBZ2/6CuiV41eIHqZ6F9Enxf9neg9s/3UY7nXo38YfXD0l6KvjN4/+tDo
BaPHTapr7x74tnso9d9O+VspT5n6X0T/IPrA6Hmiz47eK3q36LHoi6K/F/19
n/vRV0X/KPqw6EWjL4jeJ3qf6Omiv5t/9x5X3xF8Vzi/X9r6z6f+suj9on8U
PWf0DdGHRR8bvXz0jdE/if559IrRv44+KPrI6MWjr44+MPqI6MWiX4i+aFyd
Q+fSevW+Q/gu8ZusOyTlo1JeKu2H8u/M0Qdk+WnK16b+4JR/lvKSqf9T9OHR
x0evEn199I+jj4leNvoP0T+NPi56pejrog+NPjp6mejnoy8cV+9o7+pLs+yb
8g99TqX+4ujvR+/ne070Ce7b6Nl8BnhHpv7olE8XO079ndHHRp8dvXH0HdHH
RJ8ZvWH0n6NPjv5F9A7Rt0YfFX1q9NrRd0f/PPrc6M2j740+Lvr86K9FX55/
TxpXn6E+S29O/c9SPjnl1VP/YL/qtds++r7o46Mv9G6JfiD6hOiLo7eN/kv0
KdFXRH8j+m/Rp0VfGb1L9NPR542r7wy+OzyR5ayUf536PVL/aPQZ0VdF7xb9
ePSZ0VdHfyv6xPx75Lj6zuS700390tavmvqXoi/2fvbOSvmvWU5N+Zep3yn1
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
Pa+eW9/3zdcx/8N8CfMvMP5Yf8ez52i947zrzOeZY7Seccz6Q+3Zv775pfxo
Yt79o8V345Mf9b5M3e+Gan7KY96X3WL8bf9wq//TUM03edb7MnomjPiEmk+A
d7eNbc0nmEN5qPjpJ6Pn7hZPjZd+xvuzW33oC9+/ULfmEJhL8GSrNwfBXATj
+2K35s+Yz/NU9DzdWpTNNzB/4emh4sGf9z6Ovnuo5qf82/soeuks/5pQ8xmW
TXmxLC9MqPkJ5heYE2NujO2X7Nb8GvN9tNH29qGaT6EPfb0wVDz6a9ErRq+V
5a0JNb/A/ARzGsxteNn7tVtzGsxtcPyLdmtMxmY+w6rGNlR885vun27NkTBX
Qv9rdGu+jfk49mFfeGj887vuh+ijPKMTK353TMrrZ917E2o+w4bdmuNgroP2
m6T8xlDx2B96HqO/m23+5905seZLPDhU83n0sX6b32MuzkfRm3VrUTb3wXwJ
/9L/nVBzI/7Xq/k+U+C9R2v+jvky9vHdxoNj0T+J/kq35liYa/Fh07axrfkT
+6Zs/pD5QeOj94v+SZb+xJr/cHjKE/s1H6jrd8bRaqPthDb/Yly/5i9NjN5/
tBZl8y8OGK35TeYjTYo+cLTmF5g/8XK7H6xTN9zma5hzYu7Jm+38T+rX/CNj
MjZjMBbzN348WvOTzDcajT5itBblQZu/0evX/CPX0LXkH8hPcMPoP47W/CTv
PpzzsaN13pw/TP9UE4v5x/7P3Hh3czCw9ZPG1ZwKTDo23XyLE0ZrG31hpfWF
Uceqf77Nx8C0Y9vNRzh5tBh4LPx0bX4Chh3Ljrc/Y7TmIJiLMHWbv4HZx+7P
2Hh8zDx23vyF00ZrToK5Cfj8s0drTojvJt55jsF8GvOVZmnzTTDjeG7zKcxH
+ftQzV8yn+Lr3gVDNV/IfIrto/8rfjGu5ofs2C3GGGs8Z5vP8UH0NONqfsfW
bX6R+UHmb5ivYv6R+Utzt/kZLw3V/CPzWXb3rhiq+VHmz+zSLeYT+7lgm5+A
0cbrmn9jfsqk1M8yruYv7BE9vvGr5rN8sz1Lni9z3DxD/x6q+UjmQ3ynW/6R
3U75M/JXnLvF682v+OVoMYxYxkXb/Arzn8w3WqzN7zC/yVylRdr8ipn6NT/J
fI3zR2u+kvlTS7T5G7P0a36S+QkXRc/er/lI+L1LR6sf/ZkDZa7InP2aj4Rv
vny05jeZz7RUm98wV+MHlm38M97Avbt8mx9i3Ma/cFv3m8ZIQoKwe/wuJ3bK
X5OfJn9MrwV+lPwpf9ItP05+lNdFH9Qt/0z+lddG/6Bb/pv8Ka8erWfI/T9V
4x2O7JYfJb/K340WQ8hHkkcUtvDn3fJb5E95o2cXkzeu5rPs3S0/S/6S/DT5
XfLYxBpiDtedWH6N/Dj5cvK3xEhqo2699ox71vlb8rvkz8GPg18BvwP+mvw5
N039bak/vVv+nJtH3zla69Txu+SHyX9zttRv7Vny3SrLxhPLL/PW0drGtvw4
7x4tv0/+nl+Jvif6nG75d349+qHR6kNf/Cz5T1qnjh/lX0drG9vyk+TveVa3
/EG/Fn1/9Pnd8vfcNvrvo7Uo8898LOXLuuUPys/t2dHy/5y7U/53/DL5g87R
KZ/Nx0drUd5hYvlv8tzEfs7ZKa8vzKh1yt9oYzAWfpQPjhbziVWdq1Ms6NXd
8vPk//mv0fIXnbdTfnP85y7ult8oP7p/jJaf6fyd8jfiP3dFt/wu+XU+H31l
t/w6+YW+GH1Kt/xRXQPXgp8nf1D+o/xE+V2u2in/Sf6SmFW+mt+dWCzrq2nz
/Ynlv8mPk58of8Dvt7oPshw4sfxE+WnaFtuKcdXHb7rlp7dfyq+P1qLMX/PN
0fpO6LshP873nZ9u+Y8eHP2f0fLb4+dkH/bFn48f3w+j3xqtRZn/J79O29iW
f+onxtMt/9RDoz8dLUaZD6l53thl/qv8SfmUThpUG235mQJx+a/yaz0seopB
Lcr8Tfmd3tQt/9afRk8YlD8rP1G+ovxcrVPHf3RoUAwxthhjjC02Fmwxxvhn
bQzGcuTE8ivFbGOJV+wUy80fdeVO+Y/yT7ytW36l/EH7g5ofbj6378i+K9/Z
Lb9T/qOD5u+5bfRN0SsPyr91rU75f/ID5Ze6Tqd8MPmFPtgt/1T+odMMyo+U
X+n50TNH39ct/1d+op8dFMONBV+3U+wMD0/s+XrRp3tmu+Vnem7KMwyqD33x
K+WHap06/qgzDYr51odtseD8I/mvnp3ytKl/pFv+qhdGzzqoRZl/6ewp/6Nb
/qdXRi8cPV+WyyeW3+iXBuXPyq/14ug5BrUo8xvlf/pYt/xWL43+4qAWZX6n
8wxqDMbCr5X/6hPd8le1D/vCsPNB5fOHbV8g666YWH6o/E75sfJfvaLVGaOx
8i9ddFD+rfxU+ap+eVCL8tUTy9/0nm75BfODnXJQ+8LSY+rtk9/t6p3yo+U/
u3iW6yeWnyv/1qWy3DCx/FOXSfm5bvnTWqduNdd0YvmlrjEov1n+tPrQFz9b
frM3Ri87qEWZnyo/VveYe41/Kv/VV7rl93pb9FrRL3fLP9Y+7OuFbvnP/jF6
hUEtyvxbVxrUNrblv7rOoPxjd0j7O6LXHZQ/7a6d8j/lt8qT1VyCnTrlNaiN
tvw/+bf+u1t+sXdFbzCoRZnf6kaD8pP9Rqd8XjcelOesuQjmJFzb1qm7d2L5
s2L0tVGH3cegY/cx/Nh0cwaMyVjMJXirW/61/Fw3H5Sf7W6d8mfl7/put/xr
+bN+dVB+tt/qlN8wv9YPuuVny//169Efdcuflt/r1oPyj+Uny1eW3ywPV2w8
Rv6JicWkm8tgTgNWfXyv/GBfSHn3tP+kW/6z/Gq3G9ScAH3Y1lwB/rb8Zp9O
eYdB+dPyl/1n9K6D6kNf/Fj3GNQ6dfxg+b3axrb8Y/m7mlzC3/bZ6J0GtSjz
h91lUH61/JZfit5zUH66/Fsn+7hG7+eaTiz/WP6038nyr4nlF7t3yt9zz0ws
/9p9Ux7qlX+uNtryy+Xfqw999Xvl1/tG9P6D8qM9tFN+iPwOrVPHf/aAQY3J
2Pjf8p81JmN7e2L50/KYNRfgoE55a5qDYZ2yuRnmdJh7cXCn5nqM9coflz/j
oYPiuz+YVD7I2G9+tz/tlD8sP9fP98qfl3/sz6Kn7pVfLn/ZIwY1f+Dvk8qX
3dyCqXrll8sP9ieD8vc9slP+sfxnp++Vvy6/2WMGxfhj6TH15hpg4LHwmPon
W9/Ydoy7ffDnPSplk3741ZqDYu7J0Z2am/JkY/Sfan093eY3mPOA7cdrvzGp
fKGx4a+2+QgrdWruAOYee29OAbb/n43/NyeAV/jzbZ0ylt8cCaw/nvPllId7
5Y/snnBvWGeOgrkJ2vInPqxTfon8Md9o8wPW79SYMOhYdIw9PhQTj43H2L87
qRYM/nut7oPGn2PcXUMeJ35r9ZsrLx/MPZYUU/pJ403x/Lt0ij3myYm1fqZT
3ofjh4tHxSTzajYnAEuPqR8eLiYLm2WOAVbVOnMOzDXQFt+OjcJImXuAgcfc
4pmx+ZhuzDdPSaw3hso+7QtbxaMTS44p532LKcegX9wp1hxzrY06LDYm3DEY
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
5RfF3+/4QV1z155HHi8ynnO8uXhy8aL7er/8yvgHnjQo/zJ+afzN+Anu2C+/
MH5oZ/n9b6i8xHiCzTip/MTWaH3zS9umX/5r/NBOjd6uX/5t/NZOH9Q2vMB4
g+mLvxg/sZmz7txBeabxTptDHDTl3frl90ZfPigPMdvP2Nrv0i//slmiLxyU
JxZvLP1dMCh/M/5ws0VfPCg/OX5l/N74v/HU4q01S6vnz8Z/a36/cQ3Kb47/
21xtPDzLeJfp77KU9+iXX9rc0VcNymOO15z2v0p5r375vc3rN9lBxajFTsVQ
xa551PGqs/01g4pRi32LgYtd84fbOG0XSv2Ng/qXdr94nni48XJboNX/qF9+
YPzbbh+UJxtvNsfzu0Ft41nkDacvnnC8yXiU8Xj7Qb/80fjr3eL3w3758/Gr
u3NQ/mn8+fjh8d/jl8YfjR8cf7jv98t/jZ/cnwbl78ePkp8Zv7tD+uVHye/u
nkH5v/ETWyX6r4PyXOOZtpzfeQflX8kvjW8afzzPiGPfuK37eKi82HiyLde2
sz2vNXU8A3kHztuuJ784/nErtP6/2y//PefvhkF5vPF6U//nlH/SL3+6laIf
GpSnHG+5ldp4j+iXv9pqfnsclMccrznH88ignmPvah5Zl04qPzb+bGv4HSb1
R/XLf20tv0EOysONlxv9zKA8EXkjruN3xEH5s/FjW69p/nX85vjh8b87pl/+
bdo/G31cv/zeNvC74qA8QXmD2v7FQb2zvbt5QW7kHdAvPzt+fK8NyuOOFx+P
PN53/ON2GVdt/zUoT1Heohs0fXLzN+IPx8/v1OaHxH/ujeitJ5XXHihhiknl
B8fbjc8fP7rTmr8S/zp+dWc0/xz+dG9Hn9Uvfzf+dO8Oyu+NHxx/On51xmV8
Pj8c27n98pvjd/fBoDzMeJnt7x0zVmPg9cbjzdh85th2lzYm/m/84bZ1Tw3K
I9D4t276wn75y20f/Wn07/rlB3eQZ3qsPAB5Adr+v4PyCOQVqH2n+dHxcvtO
9DRj5bfGX26X6CH+Zv3yt/tmdG+sPKN4R+2YZfxYeVDxotK+m/IV/fLT2z16
MFaeQ7yHbD86Vp54vPHUf2asPKp4Ve3U9verfvnj7RX9uebPx49vj9ae5x7v
PfqzKV/SL384208YK08/3n57tePxGeuzlnffd9rieH1eqps4qbzueN7tPakW
XnsTWh2/PP5530t52rHy4Ptuazdt8/fjR7djO5/X9MsPb9/oGcfKH49/3g+i
Z47+bb/87lz/2cbK84/3n/5nGCtPO9522s86Vp6BvAP3bdvzy+Ond0C7f3hI
8pJcrT3PPAF5A6r/4ljNB+XXdkn0Ns0fkP/ej6MXiP5jv/z6fhK9yFh5IPJC
PKTV39IvPzz+fkuMlcchr0P313xj5ZHIK1F/Czf/vyPS/vDoL4+VhyCvOR5z
vAX56/Hn4yfIL5D/HL88/oT8CHki8kb8SdteP/rzfcb3ndv75d/HL3Dp5ufH
34+/4DLNb4+f3ynOyVh9B7KtPngF3tUvPz9+icul/p5++fnxS1yh+fvx5+NP
yD/x/n758/EzXHmsxuB7Fu9DY+Pfd2Lrm98hz0Degad5Z6Z80qTy1uO1128L
r0CegOpWbZ58J7XxPtQv/z/brzVWHoK8BB3Pmin/vl/+jq7P/M0vkD/fGW1/
PGt513q/Pzkoj0Neh2dl2WisPBB5IZ6TZdOU/94vv8DzojcbKw9CXoTul+2a
/yA/v3Pa9o/1y0/wguivjpUnIm9E239lrDwNeRte5B2V8mX2Na6+b/g+yT+Q
vqz1z5+Qf6H2W46VpyJvxQuato3PMJ9dtuGxyBuZZyBPxVf75d/Hj9B85xf7
5V/I/1DOaP6C/BL5O/JffKZffoX8FXds/oX8Cfkb8lv8Z7/8J/kt7hz9cL/8
F52/DcbKn5JfJn9Dfow8JnlNOv/rj5V/Ib9Afoz8Fl/ul58h/8Xdx8pvkP8h
H0T+ib6DOTfntHX4O/za9C0+gofDV2GwMGz4NfzUFzsVv7SIM07m3iYVv4SX
ER8U78Pb4GswPpgc3AR+AieBzZic83hcxQvFG63DC4j5a4vzwnthurBd+hRL
/EPbl5ikOCBGBasi/i/ev0un4rP4HfzL+i1eOZk/GleMDcbHgvfBAd3U+sAX
iA+e1WK84oR3tr7FkcWTxYzFjnEH+ANMAbZAPF98+cAW88cfiPfv0+KHYnZi
d2L4D7RtxP8xAvqyTvz5kE61tQ/xWjFc+xa/5YF3WovpilfzIjy2xQ95nPE6
u6bF/8SLeXjxjOIVp55PnxiYWBheCK+CccEciSmLLc/ZKf7xsdafmLLYMqYO
Wydm/GRbxJ7xVOp41PGqEx8U7xNzFHvUD7889fJqigk/39bx0hN/1FYcWnyb
p51ciNrykhNTto0+e229vp5p9de1+KUYtj5syyvumda/mLbYtviy2DM+Cn/G
g4yvvrjym63Me06M2TpxaPFtHnNyIYoxizXje/BVr7XjFRMXG8cY4X7EnMWe
X2l92JZXoDngU7XfM/0+awy4s5fa2MSzBSd5CvJaM76hFg8V33ytje/3Lf5q
H2LdO3Vq386nc+1aYQ1sIzbquPQlDi5ezsNNLsqPWv9i4mLj4qXiszzmeM3x
sOu1+Kh4qnie2DheBT9j3edaP9rKEcqbSUxcnNo6dfrGTtgGeyMmqC9xweG2
P7kNxcjFyg9qPAzPO33qS+xbPF18/qZOeZ982vqwLe88nlDGK2Yvdm/7qVr8
VbzWIi6rT3Xi5cu2eKv46/95zN3e4rXi9WL5eIl3GyOCFRHDVyeOL75/S6dy
Q/baOuWZ2ngGLR48bevfeMT8xf7do+5VMXmxefF//MBtnfLGwwBgAU5vvAYe
AH9wbXuexfeXb/Fd8WCL2LCYvzp8Bj6EZyKvRPsQ36ft+/12T7gXXG8xX7Ff
MXuxe/ese1ecZfq2rNLuT3VituKsYu6ztW1WbvFgfeEFVm3xYvFhvMBq7f4b
a/u0bzF69574/lrt+rqe+lyzxWvtS7x/9RbfFT+2iCVjANTZxr0we+tLfH/t
Fg8Q7+Vp9b0WLxV/FZ/nEfdWi++KN6/Trqf7S7x/3Rb/Fc+1iCuI86sT/1+v
XS/XG0+xYounz9XuAffCPK0tvkK86vp2PYyHTxoGAAuAD+AZd0e7/mL6YvvP
NP5DvJ9vFs8ZXluLtuPBDOACMDhYHDwrvpXHmTbqsAP0D1q8Wnx26aYxAlgB
/ADWQR5F3mkYDnE1TMTKrQ5vwONLG+vE+l/sVFtMCbYEM4E/0P8BLR4tPi4G
LRYttyc/LpwFHoGH1ZptvfaYBBwCRuHAFt/Do+AX8A083Xhfrdr6sC2vLUwA
NgBfgvcQ0xZ3lsuTvyuPr5+0eLT4tXXqMAnYBLwDfoFnF28v8fjb2/jsDwOB
hXi58S6O4ZAWD598bE1jIlZr+zyyxduNxZiwKBiH9du+jQdTYQz4BuyDvJJy
HeALxPOXafHeyR7F48tzTBvxffF48dpvtPE4h84dloMHmTyluAisBWYGOzM5
F+pwMRHYCHkkeasp4yvkWLBOTFlsWa7Ubds2xzYeQ188vXidYSqwFfTxLb4u
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
iq+xDc5uo9aX75b4PB4zvmPi4/B+PGN4t+Dp8HAvt+cP/4ZXcz+6fzBN2CYM
HZYOn4fHw1y93Z4Zzw4mbut2vpwffBi+zTo8GA8hbfGFrpFrwytHn/g5DJZ9
4cfwfO7PJ9o97D7F5Bkb3g6vh/GZnP+xW7wcpgPbgdfD32Fo8DIW7AyGT53v
DOYWYM59l8DP4d3cL+6f34+W9wMPiGO7xcfh31wv4xXDF8vH1WH38E88L/7T
zqd1+D4MgLb4Jx4bYoxijfbhXsXs2bc+nYtvtX35G8B1wsxh5+T4klcs3U/O
/YW3w1OJ+Yr94gnxeGLiYuN4PTzl++3+er1fucJySTo/7FZOrvfFyLuVq0tZ
bqxBp9bJMSaXmI9mucfe7Vdup5Hon3YrR9lbmIRu5S7DyGJl8cz4Z3VyleXU
Tm7jGPBh7jfHJkeZMRmL3GVyctmHvuXqkiNN7jA5xOROk1NKbrRep3JNycn2
kRh7t3K18RDhK5Imk71F1Mm1JueaNjw8eIHwBOHt4ZyJnX+7ncurRsuLJP91
9uuWBwmvEZ4jvEl4jlzDk6FbXiT8PXh98APh7aOOl0uKk9vwBOEtwmOEVwiP
F14lXjO8X347Wl4nPE8O65YHiXvOvcab5KbmH8Iz6ORueZhcz2eoW94mPFH0
YVteKep4pfBM0YYnhT5sy6vi4ebvMWunvET4ffw5y9nd8ga5o/mN8CQ5rVv+
GvdlObNb3h/3NH8RHiW8RfDReOdX2vPJf0QftuVlIkee3Hly6Mmdd1vzK+GZ
wfvkz82/Y5ZOjeGR5kcyW/R53do3/xEeJsbwePMXmb1T3iE8X1wz14oXDP8R
fdiWNwmPET4gc3XKe4THh9/Y/LbG+wOThZ3CUGG1eJQ8k+XSbnmX/HO0vEB4
gvyiW54gvEzm65RXCI8OPhz8OHh32Ja3CI8RffAM0YdteYm8MFpeIjxFftkt
T5KXHUO3vEr+3fxAeIBc2y2PC94lPEx4X/Ac0YdteZHwGOFFskCnvEf0xXuE
B4k++YHoU1+8QsYPyl+D58afov/b/Dx4gtzYLb+Qd7Jc1y1vuY+a/wiPkBu6
VccPhEeINvxAtFHHW4S/hz71xRuEZ0Yvy63d8tLg78H/g2cI74+3ml8JDxPe
I/w8jNHYeH/w6+DvwQOElwhPDj4dK3bKq0PfvDpW7tQ+eKzw6lilU94rPBaW
zPJst7wXeDTw6litU94NPB0+k+Xubnk9KPNyWL1T66YflP8ET4y/dMvjYzTL
Hd3y/phqUN4Qa6T+3m55dFinzLuDxwdvDx4fvD/4b+hTX7w6+Fvw3uDfwXuD
RwivjzU75R0y9aC8Q9aKfqBbfh78O3h88AqZZVD+HjxD/tYtf4uFsjzVLW8O
HhnzZnm8W94Z/Dtsoy1vD34c/Dx4fPDqmGtQ/hw8Ox7tlh+Hdcq8Oj5ofjI8
B3nH6JtfBw8P+3BueN2s2qlzZCy8N3hwGBMPDt4dPDx4c/Db4MfBQ4QXB88L
3g78H3hhuHa8MHhiuIbXjVSuBTkXjuqVHwYvDZ4avDL4WSyPA+2W1wXPh82y
vNktL4hVB+WXsW3avxS95qC8MbaL/le3/DT4YfDI4OXCD0Mbdbw1+Fvwx9i+
U94Y6w/K72KH6Ne65VfB32LHTnlb8NywT/vixcEzg0/Fzp3y0uCHoQ/b8sow
Vt4au3ZqzDwqeFfwsOBd8ZVBeVfwsHinW54V1inzsuBZwcuCpwUvCx4VW2X5
sFveFebY8K7gYWHujTreFnt0qs2Wg/K+4IHxfrf8JPhD8IzgPbHtoObqmLPz
ceq/MSh/CR4V/+uWBwYvC54WvDF2G5QfBc+Kcb3yuNCHbXlf8J/Qh219qPOr
4H3BP4P3BU8cz4B7n1cOvwt96ouXxpGD8l44PO2n6ZWHAC+HH3fKW4DnxLez
TOyVFwUPgn2yTOqVN4E6fhI8L7ThScGrgGcBr4ofDsqrgmdFr1d+FNYp867g
UcFH4uBOeVfom9cFzwv7OGRQXhaHRg965VfBz4LnBW8NnhPaqONFcdigvBAO
S/2UvfKMsE6ZlwQPisleEp3ypjh80Lwpoj/XK08J3hRHdMpr4uhBeU3wnJiu
V54VzplzNdnLYlB92JaXhWeHvwzPGc8QTwp92JZXhRyj/80yU69yj8pBet+4
ypkqNyl/Dn4kPE54ifCk4G3xs055VchhKlepnKVym+pLLlM5TfXpi6Vcp3Ke
ztKrnLzWKcvVKyevXL1y9srVO3GkcqfKoTpnr3K0yrUq56rcrXKuaqNOLlY5
T+U+fdZ3kpHKuTpejoBe5WIdHqlcr3K+zt2rHK/WKcv9OhipHKRyj8pnqg85
SuUm1bccq3KVylkqF6scrnLFyhkrt6ucp3KXymEqF6qcp3Jxysn5+ZRnHKnc
nnJ8Ti/XwEjlS5RjcX5jHKkcoXKDyi+qjZyeM7RtZxmpXKRyks48UoucoV9o
dXKQyi0qx+is7RjkZpUzdtD6lEtUTlH7kgPua1nW61VuOPkb5WaU/1HuRzlH
5Y2UP1Iu0vnbmI1V7kv5KeW+lANTLsuFRypfpZyWC/Yqh51cc/d2Kred/JXa
qJPrcomRymd3buoX6VXOwXXkNelVLkI5GZfJ8uVe5WpcaaTyKV6Q9kv0qk6+
xfM61UYORm3Uyc0on6DcjBd2KvehnJHyOsrvKJeknJFrZvlqr3JJytcoF+T5
ncoVKYek3JJyTMotqa3ck3JQ2sZY5ZqUc9KY5X90TI5FrlU5FeVSlFNRrkU5
HNfPsk2vcjsqy70oB6N1G45Urkc5H7frVY5H65TlfpRTUe5HOSDlWtxkpHIt
yrm4Y6/yA8oPKoeo3K9yNGqjTu5GORPlUbyzU7kU5UzcIsvavcqlKEej3I5y
PMrdKCeg3Ip3dypXoLZyL97VqW3cO3IH3tOpe4iHks8Yny28lbYaqVyG96V+
w17l+JKLS04uub/kDNzGPnqVS3D7kco1KOfgZr3KOSi34AOdykW4x0jl9JPL
b6+2rdyI93eqDzkH9WFbuQjlXJSLUE5CuRjlaJKrSU5Auf3k/JO7Tg67b7c+
5faTE9C+5OCSy0tOL7m55OySu0tOwF1GKsef3GxytO09UoucePu0OjnEDrOP
XuUWk6NQDj35+OQ6lCNPbjw58vYdqUXOt/1anRxwcsHJaSiXnhyDcg3KkXjA
SI1BzrFd29iskwPxwNb2uJHK1yWH2B69Gov8gnIOGpN8g3IJykcoF6H8anKf
yYEm99rPRirfmhxsu/UqZ5p1ynKpyUnpGru2clXKDya3mhxrcpd598q1Lue6
d7CcbnJbyXEl15v8Y2c4Z73KDacs95sccNbJqSb3mhxscq3JiXWSc9CrXFly
mslfJqecXGdymsmDJh+aXGcXjVRuOTnmTo2+dKRytcnZdkavcrppo06ut/NH
KjeaHGkn9SpnnHXKcsnJ+aYP28oFd/lI5YKTE07uVTnD5DaT40wuMTnI5N2S
f0tuMjm+bKOt3F9ytMn9JQeY3G2/HKncbXK4ndurnGHWKcsldny7pq6lXGJy
fsktJseYXGDOjdxicow5R3KsXe0+7FXuNWW50eRIs+7akcp1JufZEb3KaWad
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
G7ZbLcvqbVloXHlyqFshy/zj6vieb33qe+Usq7Rz4LhXzLJSv57vC9vvmX5/
te5L4+p4tOWZwetD/6+1Y3bsy7WxrZplwXF1PMa7Rr9yW13e2tvnAuPqeIwF
34afS5eT+SQ8HR5OuBv/hefD4/lKj1fj8cILhicM7xeeI87hK+1c4O3wb/ln
Mn+G38PH4dnwYBgwLBiGDksn3iqeenaLv1mH70uXk9uK0YnVicOK7eLr8H35
WjCZd9MnjgwX+EFrI34rnmdb8VnxWPEk8TrMGnYNd4fNw+/h7/CTeDvr8GB4
OG1tI9Ynxqsv8dJHXM8WjxOjE6sTgxWLFa8V7xXPEz8T7xWvvaDF48R7xX/F
58QDea7wYjm/3Y+2EXsb3/pyTbBjr7drJb4sHnFui4/Zp/it+KCxiNmK3eIn
8Zf2Ia4oxmzfYqhiqXhJPKNrhAN8q1078d9H3R+pX7pXnj8rZbmvX15AyryB
eARZpw9s5GjrG2OJoxRzFnvGbOI0xXjFesV5xY9/mf5X6VVcWjz68ujle7WN
2LdTri/biBXjK/Ulfi0efFn0cr2KL4tF56N7Mo85S9uHvlftVfxaPP0XqV+x
VzFw+7SvFXoV0xbb9nMsXnPeFKYfXzFksWTxY/Hmq1K/Zq/qZ2zxQ/FHTCdu
U8xbPFr8Wnz7ytSv1qt1YtX4Qm3FU8VLr2jjMQZjEYcVOxYjFytfybnvVbxb
LH11v731qiw+/qtOrVvA7+cjLaY9UjFzsXM8KR71S228YvTaiIGLhU/TKd7R
PsV3nR9jEd8Vv3V97N9YxP+Nd6W2v5lbPFW8Vcxd3HRR/bRlthYvV7dQ9Cwt
vir+ql5bMXSx9OWzLDdScfBlW532YvDaLN76ExNerLWda3zFzJdp28/d4qvi
r0tHLzVSMewl2/ZztPit+P1STYvZa7Ni217MXOxcPF283P21bK+WZXoVN1e3
qvPc4rHis6tEzzu+YvortXrrlMXynSNxZtfBuVuonT/MAfbAPYslxki4lx2D
OPBy7djsY7O2H32L54vXX97u/xXb/h9s8WV8gPj+pe35Xb2NF0OAJaAXSPmh
Fk8+un3eiJH+v6LuPdiusj7j+D7JWYhr5RwRL1VUxICINCISLhbqBZyKqCgQ
Y8JNZCyVsRqdCibGJAYSkhCSFFGq1RFvI6jcg0DCRWppRhxHtIBADElDQEWG
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
f7Ij8xv/A6PyJzko4/FY4bVyaNbDU4W3ijkeybpm5vlqo453jv7y9Jw2Kj8T
13NtVx4tvFpoIugQ/Ob229vzv7krfxJ+Jae38gcny+OD1wePEl4lb26fD89x
S1d+Jere0cqbuvIn4VeiXlu+FLxd1L99sjxZjkqd+XhWaPOWjMfD5Yi0vbUr
jxd9jMnn5O0Z68h2vHWyPFr+Jv2/35X/Cf+Ut6bMM0abo7M+HjC8YPjL8Gfh
jwKq4e/Cv4UfCv+SY1r5B115xPB5mdWOH3blEcMr5tiU+aXwQ/F96PuK/w//
IPXG0JdXDM38E1nXkVmP8fmx8HMxvjxD8g3xX7Em3iqzs1ZzPJV1GZt/DL8Y
fh38VPjH8H/hh8K/g/8Mvxn+LfxfPMvtXXm+nJY1uL/zRrU2+n5+MvxP+K3w
e+EHw++EXwr/Gf4x/FT4q3yolXd05THDa4YnC98UvjS8a3iiTGbe03OOfw1/
Fm2NyYuFp8ypaWO85aPqa/wHu/JT4Qfzt1n/slH5tfCrkcdJPqdpqb+vKw8a
XjQfSX8eNnxneKTwSvl4+3xGjoe78p9RN6+Vf9mVP8uuafdQVx4zvGY+lnoe
KbxSPGNeUU/nb6E+vF7MayzPhNfN3DyreVmTtXw485vD2Lxu5mc9PGjOzHzm
Xzkqvxi/8R/pyh/Gb3/PiO8NTwbPbkHG0JdXzsK054nDG2dxO37TlScOHxxM
NDZajkS5Epe2c4925XHD64ZnDO8Y/ZZMlt8Mvx5+LfxWlqT9eaNqy9+Gnw0/
gOmp19dcvHeML0/WmlH5yfCE4Q3DI4dXjjH5CKzKXDxq+Mrw2OG1w6+HHw+/
GX41zvEL4kejLX8c/jn8Y/jF0PPQ79Az0RvRONEx0fzQ/vDb4a/DL4bfDP0Q
fRC9E30RzxjeMTx01uV+un+rR+XP4xx/HP4w2roG/j78bVybNfCu4dlzXuak
L6J/shb6IXog+il6Kn474EP5w/jN0AvRE9FT0VfRRNFG0QjRCulDi0WDZCx6
G9odeiB6MH5K/Ij48fDroTeiJ6KnoreiH5IbWf5l+igaKloqmjLaMnofWiF6
Jfom5+iN6Km0pR+iD5LjWC5jeiV6N/oyei2aFdoVeit6LBojWiN6KvoqY9JO
XZK5aLBosWiW6I3oX+RSls9ZLmbnaJHos7SlQ6JfkkP5Q0NpqGipaJDW56Dd
oZ9SR6NEq0SfRX9FZ0S/JIfyR4bSH9Ei0WvRX9Er0f/IkSz3Mr0T/ZScz3Iv
ewb0XfRtng1NlDVZi9zQNEzmMLZczHRR9E5yMn90qDlovWiezE0TRRtFL0jv
5RnRxtGIeXb0SMbQV+5m+izarg8OlWuazoq+So7ofxhKk0ObQ09EX0Q/RQ91
VO4nfRW9lxzDcjnTJ70+12t8mivaKzm0T8s1uBa6Jlonmi5zmkuuYvqqmdkP
1qPNIbneeVmztdNAmYue6qDcz7/PNbgWGi1j0WcdmOdrf9FL/VWuz/Ogx6FV
OmeoXMg+0+/IoXxO1mRtNFO0UzQ7tDv0XvRfND60PvRh9GR+A/n3QfpLv43o
u+RxPi73h77s4OwXz9+Yh+b+mcuYtGW3Zy4aLFosejL6MvoiOaDlg5brmQaL
FotejZ6MTot+S87pVUPpueiN5HiWi5peirZv7VC5lN0ze+37uZf0XcbQV+5n
Oiv6LTmdzxtKk0aHRoNFi0VDRktGA/aMPou2i55OW+dot+jbtKUHox+TU1qu
aBoucxhbrmh6MHouOZ7lgqYrow+TE/r8odZOPyantGug+aL9on+jh3PQxtEw
qqMfM4a+ckXTY83J9azONbpWGi5aLvozejM5peWCpv+anfvp/tGHvSf3037x
HUk7e32+O+nPZmX/eD6eCa0fDZ1nRdNG2ybnN72fOd+b+2Et9F9zc31rsift
Q5o0c9OvHZ/74/nR1NHW0Qd+KvfQvaQhMxbNlxzNcjP/Me/67nl/vSf0ZSfk
/rrf2tOK0bvRv9GDywUtf7Rc0fRetGIXD/X3nkacVpy+jt5OHb2XnMXa8FeV
Z/r03E9j0tY9lbXRzNHO0aDRj9GU0ZbR49HL0YzRjtHb0d+5Dvp0Oau/MdQ1
OeezXNX0aX+X3yNyTdNE0UbRy9HP0ZfRnl06VC5pGjtaO5oy2jKaQDo8GrVn
9Ge0Zt8eKlf1AdFq3TxUbmN19HByWmvjGmjh6P1cmzFp1+j7zGVuejY5r62B
foveTU5ruajNSftG72ctNH20fTRuu2Zu+jY5lq3BOVow/rXa0pjRmslBLfc2
oQf9nxzecknTj9HKXTFULmx6P7mm5ae+OvfQvaTJ2y3H/PRXRw9HK3ftULmm
aQTPzPOwP+j46AfltF4/lKbPOZ+vyZ6xL2ju/HakF6RnW5z1GpueTk5rc9DU
fTL7yfrp7egR5cCW+5qGb3Huv+dNc/fp3F/Pix6Qnk5OY7mp6fbo/+S43jCU
HpC+T85sua9p7s7K87A/aBhpGeVw5w9M32cMfeVCdy/p7+QQvyJ7xD6gEbQW
Oj96QDnTbxhK73dOrvfK7EH7gCbQ3M4ZhyZQ2xkZQ1+5mWkal2W+y/Md7nvw
d/luoDekd5RzW65smhI6Ehq5k6MvW5P7+908E8/m4Gjhjoj+SH/7+5Do0dxv
bd8cfcrK3E96w9V53vYPveDa3M/rsmZrp+uj/TOmfXt45qL/+8fcn43ZU547
XaGx6BfX5Xl5PvRRcmGfm+ujqaOto2+kT6Q3pG+U41ruanpFua/lw5a7m8aR
1vGnQ+XCpvmj/aOBpIWkpz0x3//+XjhHK0mPp61rOD/7ybXRQNJC0mfSW9I4
0jrSQ9LvWRNdJA3i0Zn7T/rJKbUG+kDaxDuHygVNn0gvKCe03Njq6Cfl4NbG
M6SFpA/7cfagvfjXuZf0iLSP9JP0lDSWdJQ0hnNy0C7SZ6qjQaRFlGOc3oyG
kZbx7qFyd9NU0lZuGSrXuzr6STm7taFbpLeU4/veodrSZ8q5rQ+9I/2mHPFy
c9Nv0k/K8S03N82jMfSV+5umk7aT/ol+lJ7y0twvz49+8Or035w1WgedI+2j
Z+q+0mzSbtI3Xpn1up/0jFfk/rrfnrHfBjTUnj292OW53/YPjSitKD0s/awx
L8v+Mpc5r8r135NrcC00jtZqDs+NhtLc9HzX5H64n54R7etxeXb0kOtz/9wf
ekR5u7+S+/f/bsn9cQ==
         "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
      Line3DBox[CompressedData["
1:eJwl0UdSAlEYhdEHBlTchFtyCc6c6MLMAVGCEhQUFQHDLsw5e/5y8NW53W/w
uqqnZuan5zIppVktZFNaVCGX0jaLoUp2mRVWuRvZddbY5L4adpuH8Wwfs8VT
duO93WeHJ/rKO+M3f9S1f3nGNJlSRj07yz6HOKyBPcJRnds5XnCM47q0J3gV
36CBO4/Y45nacT8P2IkzNe1WvFPdbnCPtVBVu8IyS9yJ7C0WQ3369gI/+K5N
+40bfOWL1u1nPmnNfuQqH3ivFfuOy7zljZbs6/z///kDh6tPwQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0VErg2EcxuH/jDZtI43WCC201kiUKEqUL+AjOHPCh5VGo7VGo7VGaITm
enPw67oPnnqet7dydnl6kYqIczXGIm51lYl4ZYM3+rBb/GKHD/q1e0ylIwZ8
0YQ95Kcm7RELTGcjxjVj5zjHsmr5iAXWua5Fe5PL3OK2KvYOV7jLPa3Z+zxQ
1T5kjUc8Vt0+4QZLKrizyCwzmrZTzPHHG7+Vsd/5prTd58g3PrGbnLHbHPKO
zeSsfc0B+6q6s8fV5L16tivscin5Pj3a8yyrY5fY5iyLatkzvOcUC2raufz/
//kDRTk0ug==
       "]], Line3DBox[CompressedData["
1:eJwl0V8rQ2EAx/HHwTY6jdashfxZaC2WIkWRIi/AS3DnhjcrsVhr2WItsRAL
+Ty5+Pb5XZzOeZ7O8tnl6cVICOFcjSSEG6VpCHec4rSadoEtzrCktl3mA+c4
r669yCU92hX2uMo19e0qn/mi62wIb7xnU592m998Yk9h1PMc4zs/lLN/+KvU
TnLOyQlOqmjnWWZdJ765zmMeqWYfssoD7sfz2Xvc1Yq9wwq3uRXvZG9yIb6T
G/HOdo2zLCn1zQIzHFfeDvFMHDrrlzL2gK9K7H68h/t22dHQbsV7ssFbDeyr
7P//+QNbfTNP
       "]], Line3DBox[CompressedData["
1:eJwl0bdOA0EARdFBNBSWyDmabEAi5xydjb04YJMNDQ38f8dZUVyd16xmRpts
/0Y/HSGEb613hrCh7q4QTtjLPp3Zg7zgMEd0ZY/zhpOc0p2d5Kwy9gJzXOKy
CvYqSyyrngihwgYfFdlNPrDFJ1XtZ9b4wlfV7Te+q2F/xN+zzU817S+2eK81
Zxa5wpTy9iKznOec0vYMp3VrT/CaYxzVpT3Ecw6wX6d2D495pJozD1mN36AD
O+I+KyxrL74TS9q1i9xhgXlt2zluMcuMNu104v///AFP6B5r
       "]], 
      Line3DBox[CompressedData["
1:eJwl0eFGQ2EAx+E3fenDbqILSIoiKYqkKBpFpmXLrJk2WVmZlZmVWZmVlalM
kiRJd9jz6sPP83ecc17OGc+Wk6WREEJBqdEQ9jQxFsIppzitc3uOdS5wUQ17
hS2ucV1te4tJ3dq77MV3Mq2+neOAL2omQhiyxSu92m2+scMbvdtdfrDHO33a
fT7oyx7wm0981o895G+8prwzH5llRvd2il3ucFsde5MburZX2eQyl3Rpz7PG
Wc6oak+ywmM1nFnmBes6smss8oxVFewTVpSPzzHHUrxfB3aRGR7Ge7Qfv1vi
///8ASWlNDM=
       "]], Line3DBox[CompressedData["
1:eJwl0VErQ2EAx+FXbnbhS/gCUhRJUSRFEYok1qy1aW1aLNZircVarMViibUk
SZJ8Qs+bi1/P/+Kc857OGU0VNwpDIYSc9odD2FNmJIQkczxSys4zzSKPlbFL
zPKU5Xitfc6K8naVBV6yFu+z6yzxROOJEM44xWlV7VnWuMBFNexlNrnGdd3Y
29xRJ74zuzxkWj07y2f+auDMH/b5om/7iV/s8VGfdpf3+rA7fGebt3qzW3xl
k9ca2A324/Pid3PmA5M80J29yza3uKmWvcoVXdlLrHOec7qwZ1jhJCdUtscS
///nDzIRNMY=
       "]], Line3DBox[CompressedData["
1:eJwl0UVSQ0EARdGmmDDIJtgSS2AWJMFdgu4Ddw0khAR3d5e1cLoY3Dpv1v1/
V1anq1JlIYSksuUhbChZEcI+a1mnQzvNYzaySad2K8/Zzg5d2t3s0bXdz1sO
cFD39ggf+azVRAgvXOO6Xu0s3+I9uKl3O8cP5rmlT7vAbX3ZRX6zxB392Lv8
5ZNGnfnAYQ7pzs7whn3s1ZXdxU5d2G08YwubdWI38Igp1uvAruFePE8r8Xwu
c0kle5FFLnA+3tme46wK9kz8Jk5zSnl7kjlOcDz+B3ss8f8+fxSzSrc=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0dEqA2AcxuFvjVgmSdKStCRJkuRGXIIzJ1yGRFESRUkURVESRa0pUaIo
UdJojdZotEZL4ikHv5737F/flxweGxqNhBBGlImG8KTx2hAqnOSUfuxZRqpC
mOeCqu1lxrjKNdXbm9xSo73LZu7zQAk7xTYm9RAPoYMZPqrTzrKLOT6r286z
hwW+qtcu8l19don9LPNTA3aFg2xX2s1WHvFQLfYem7jDbTXYG1xXnb3CGi5x
UVF7jr/eYobT+rYn+MWy7t0s8Y63+rBvWOQ1r/RmX/JCBfuceZ7xVC/2CXM8
ZlpZOxX//58/YFVFmg==
       "]], Line3DBox[CompressedData["
1:eJwl0VErw1Ecx+GDpX9rSZIkCUmSJMkL8RLcueFtSFEkRZEURVEkRVkLKVIU
KZJYi7VYrMVakqdcfHq+d786p214bGi0IoQwonRVCE9KJULI8JgnerFPmeUZ
z5WzL/jGS14pb1/zRh/2LQu8472K9gO/WNJEFMIPpzmjEAthjjEuckmRvcIE
17mhWnubO6q399jIQybVbB+xlYMquznAEr/VbxfZxwI/1Wvn+a4eO8duZvmq
LjvDTqb5rA77ke1sUcrNJh5wXw32Luu4xU3V2GtcVdxeZjUXOK9Ke5a/3mWK
kyrb49H///wBO35FLg==
       "]], Line3DBox[CompressedData["
1:eJwl0e9HA0AAx+GbRj9skSJZZJGiSJFMkiRJkkqSJJVkUpNJkiRJkv6qpCiS
okiKoiiSokjpSS8+nu+7O3fJyczAfCSEkFZzNISU9vJC6OcBDzVkn3CEZzzX
mH3FCd7wVtP2Ax+Vtl84xze+a8H+4iKXVRYPYYUJlmvVruAak6zUul3FDVaz
Rpt2Leu0Zddzmw1s1I7dxF0u6duZWX7yQxn7lbN85pNm7Hveacq+5jgveaFR
+5TDPOaRBu199rFXpc7sYQmL1W0XsYuFjKvTLmC+OuxctjPKHLXZEbbyJ+bu
avl7t9j///wCjhw2Tw==
       "]], Line3DBox[CompressedData["
1:eJwl0VErhFEYhdFD6KsZkSIpIlIUKZIkSZIkaZIkSZOENDRJkiRJkvwqKYqk
KJKiKIqkKBKWXDytfffWORXJuUQqI4QwrdasEFr0FQ+hjT8MuSG025nsYDZz
1GlH7GKMcXXbecxXj13AXhaySH12Mfs5oP0ohEEe8VjD9ilHecFLjdvXnOAd
7zVlP/FZs/Yr5/nBTy3Y31zirprd3GETG7VtN3CL9azTpl3LGm3Y1VxnFSu1
ZpdzlWUs1YpdwmUu/r2bm2m+800p+4UzfOSDJu1b3ihpX3GM5zzTiH3CIR7y
QAl7L/r/n193LDXj
       "]], Line3DBox[CompressedData["
1:eJwl0TVSg2EUhtEvEEgC/LhDwypwd4fACuhoyFJwd3d3NgdnhuKZ83a3uA1z
mfRCLIQwr8V4CEv6TYawx1gqhCwd2Dk8YoJJndj5PGPEQl3YJSzVlV3BG1ax
Wnd2HR/4pIEohGcOckgv9jBfOcJRvdljfOc4J/RhT3JKn/Y0v5jmjL7tWf7w
UfVu3rOWNbq1K3nNcpbp0i5mkc7tAp4yjykd27k8ZJzZ2rcDd7mjfje32cde
bdk93GQ3u7Rhd7JD63Y719jGVq3aLVxhM5u0bDdG///5A1SbLPM=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0W1HhEEAhtFZtbLySD8g2SiSokiKothIipZspOiFStokRYoURYp+UJIk
SZIkSZIkSZIkSVInfbic+9MMM8nByXQ2FkIY01ZuCNsqSoRwziRLdGmX85qV
rNKtXct71rNBj3YzW/Rst/GVHezUu93NT35rOgrhhzOcVSwewhxzOM8Fxe1F
5nGJy0rYK1xVvr3GiOvcUIG9yUJ+OT/jzg+m2aU3u50vbGVKT3YTG/Vg1/GO
NazWjV3BK5axVBd2Mc94qil3njDLCR3b4zziKEd0aA9zSAf2APfZzz7t2b3c
ZQ8z2vl7t+j/f34BvCE4xQ==
       "]], Line3DBox[CompressedData["
1:eJwl0WErA1AYhuFDIxOSHyCiSIoiKWrKiqQICSlaUZNMUpYiRZEiP0iSJEmS
JEmSJEmSJElyyYe76/n21jmliVTPVEYIIamdSAjb6s8PYZeDHNKePcx9jnBU
B3aChxzjuI7sJCd0bE/yhClO69Se4RnPVRIN4ZIVrNS1Xc1b1rFe93YjHxlj
i57tNrbr1e7kO3vZp097gN8sygphy81CbnJDBfY687jGVeXaK1xWjr3EbC5y
QRF7nplMc07BnuWPO19/7+bmB7vZpTe7gy+Ms1VPdjOb9GA38I61rNGNXcUr
lrNMF3Zx9P9/fgFGOThZ
       "]], Line3DBox[CompressedData["
1:eJwl0TVSA2AUhdGfgoIiFW6B4BbcbRF0OAQIBEnwfeDurmvkzFB8c273ihdL
ZMbSWSGElHKzQ8jTeE4IlZzklKrsWdZwngnV2Uts4DJX1GSvcV0tdoat3OK2
2u09drJb95EQevjAR/XaT+zjM1/Ub79ygG9816D9wU8N2V8c5jd/NGL/cpRd
2nezg7vcUZu9yTjT3FCzvcqUGu0k67nIBdXac6zmDKcVsydYwaju3CznLW9U
Zl+zlFe8VIl9wXMV22cs4ilPVGgfs4BHPFS+fRD5/88f5jgrbQ==
       "]]}, {
      Line3DBox[CompressedData["
1:eJwl0TcyhVEcxuE/RiqunGdw7wKEFbhy7HQMjcZQ0LMAoZJdcQvylSthA8JC
WACPUfzmeatzznxfamp+dC4nIqaVzo+4Kozo5BvflVsQUVoUkWQLW9Vhz3CC
S1zWgv3EZ2XsH2bZWBzRpHd7jF8sc+5aSUQ517mhCnuTldzitqrsHVZzlxnV
2HvcV619wDoe8kj19jEb+O2ucXd+MMlmXdvBPb5644sW7VWuaNKeZZrtbFPq
783M46dzPzTiG2U5zMdExBAfeK9B+44DvOWN+u1rZtX3953Zy0teqMc+ZzfP
eKou+yTx/19+Aa+eNDA=
       "]], Line3DBox[CompressedData["
1:eJwl0UsrRHEcx+HfhMGCkqWkMaZJkiTZylrSJMllkpSF8AbkDUiylRIlShSl
cSlRIreiNG55F7L2yOLT892c/zn9T2piLjebiIgp9ZZFFMoj+vjKd5UmI2oq
IhrZzg5129PMc5FLmrdveKtVO1EZccwU0yraI/xmnXPXqyPqucFNNdhbTHGb
O0rbu8xwj/vK2gc8VLN9xBYWeKxW+4xt/PGuMe98Y5YZndolXOOjb73Xgr3C
ZY3bM+xhFzvVZNcyyS/nfmrSHZ1wgh9Vnvu7MxaVt184ymc+adh+5IOG7DsO
8obXGrCvmOMlL9Rvn1f9/5dfqH84Iw==
       "]], Line3DBox[CompressedData["
1:eJwl0UsrRHEcx+EfGZfFWMhSYoxpkiRJtrKWkCS3kGzEK5A3IMlWSpEiRZHc
SpEal0aRGORdyNZTFp+e7+b8/6dz6qcW+ueLImJWPYmI07KIXr7zQ4nSiKry
iAa2sV1d9hwnuMwVLdo53mvdLq6IOGOKab3Zo/xhjXM3KyNqucVt1dk7THGX
e0rb+8zwgIfK2kc8VpN9wmae8Vwt9iVb+euucXcWmGVGF3YJN5j3ro9aste4
qkl7nt3sZIca7WqW8du5X5rxjc45zc+k51jguybsV47xhc8asZ+Y17D9wCHe
MadB+5YDvOG1+uyr5P9/+QMIbjie
       "]], Line3DBox[CompressedData["
1:eJwl0bkyQ1EAx+GjSCRFdPQahmjskih5AS/AxIxdLp6AZ7CUPIiE2LfCUlqT
2D0Bnc8ofvP9m3vunXOb89FIoS6EMKmJWAjb9TafWFEiHkJjIoQWZpjVkB0x
z1Wuadm+5JU27VgyhCLb2K5be5Tf7HRuqSGELu5wV912mT3c47567QP28ZBH
6rePeaIB+5QZnvFcWfuCOf5415h33rGDaZXsOLd441uvtWJvcF3j9gKHOcic
Wu0mJllzblVL7qjIRX6lPMNPfiiy31ngG181b7/wWXN2jbOssqKZvzvnNB/5
oCn7PvX/X34BiMc9nA==
       "]], Line3DBox[CompressedData["
1:eJwl0ckqxWEcx+GfDAdhK0s7KUm2ZjqdJMkdGGJHkiRJpiQXIEnJfRguQJQh
Y0fhhESJEiFPWXx6vqv3/fd/y3uHu4eyImJQo7kRW4mIMd4yo8K8iNL8iArW
s1FJe4T9XOGqZu0jnmjDThREbLOK1bqye/jFOufulUQ0cJ8HarIP2cJjnqjN
PmOSF7xUyk7zWu32DTt4x4w67Qd28dtdfe5Ms5Y12rULuMlz33qqeXudaxqw
R5liK5tVaZexiI/Ovdeyf7TDJSbct8gcZmvBzuIcf4sjfjRjf/FT0/YHp/jO
N03ar5zgC581bj8V/7/LH2m9PpI=
       "]], Line3DBox[CompressedData["
1:eJwl0csqxGEcx+EfNWPQWMvOUkqSrTNJkriEiWZHaZIkySnJBUhSch8OF6CI
nDIhckqRIoV4ZPHp+a7e9+3/r8wM9w8VRERWuUTEZlHEKG94q9JkRHkqooqN
bFanPcJBLnNFM/Yhj7Rup4ojtljDWuXtDD/Z4Nzdsogm7nFfLfYB23jEY3XY
p+zkOfPqsi95pW77mj1/b+Wdeu0H9vHbXQPuvGA967Rjl3CDZ956ojl7javK
2jl2sZ2tqrYrmOajc++15Bttc5Ep9y0wyYTm7ULOMviTjpi2v/ipKfuDk3zn
mybsV47zhc8as5/S///lF4HkPg4=
       "]], Line3DBox[CompressedData["
1:eJwl0bcyhFEcxuG/Qlx2ZQWNnlK4AWHoVg6VGamh4hKo5FwJw4VYlyEMrbBy
qPAYxW+et/rOme/Uj82mZ3IiYlJLuRGn+RHLvOO9knkRtQURDWxju7rsOU5x
nwdasM95oWM7URiRYRObdW2P85tp371NRvTwjvfqtR/Yxywf1W8/cYDPfNGg
/co3DdnvHOYHPzVif3GUP86acOYNW9miM7uYJ7xy10st2kc81LQ9z252skON
dh1TzP7dU3v+UYa7rHHeDqtZpW27klusYLk27TKWasNOcZ1JlmjNLuYqEyzS
il2Y/H+XX4egORY=
       "]], Line3DBox[CompressedData["
1:eJwl0csqxGEcx+HfTI0hzKCUyGFKFCXKRpK1nMpeQprGabKSO5BLkCSHMSTJ
LTjchpzWkixE8ZTFp+e7et+3/z+3UJxZT0REXrupiJt0xB7f+K66iojWyog+
jnFcE/Yml3nEE23bD3xUya6tirjlEIf1ZOcZzpzVVyZijt/80bz9y0UmshFJ
Ldkp5plmpQp2NWu0Yme5xno2qGg3coNJFdz54u5RjujezrLMV2991o59xlOt
2luc4jQn1W+3s4GfzvzQtW90xysOevclB9ivC7uP5+xlj8p2N7tUsjt5zBw7
dGi38YAtbNa+3ZT5/y9/UwgxFQ==
       "]], Line3DBox[CompressedData["
1:eJwl0csqxGEcx+HfhGGUQSOlnKUompCNJGs55QKkScg5K7kDuQRJchhDktyC
w23IaS3JQpFHFp+e7+p93/7/ltza1GoiIua1WxJxUxqxxze+qzoZ0VgWkeUI
RzVmb3KJRzzRtv3AR+XtdCrilgMc1JO9wIQzp/WVjpjhN3+Us6MyYpZFLNac
neQCUyzXol3BtJbtKq4ywxqt27Xc+DtHi+58cfcwh3RvV7HAV2991o59xlOt
2Fuc4CTH1WM3M8NPZ37o2je64xX7vf+SfezVhZ3lObvZpYLdyQ7l7XYes42t
OrSbeMAG1mvfrkv//5dfl/QwkQ==
       "]], Line3DBox[CompressedData["
1:eJwl0UkrhWEch+G/4mBDIqKERFEiJEpkOKFkOJK9jYUMJUmnkyTZyAcxJCVJ
kiRTPochWUtSrrK4u36r53mHmtml1GJWRMzpNCfiPjfijF/8VkkioiYvopWT
nNKEneYiD3ikXfuV79q3i/IjHtjHAb3Y88x25orKCiNWWc4KrdmVXGcVq5W2
a5lhHeu1YTewUZt2E7fYzBZt223cYUIL7nxz9xCTerKLechPz/qhPfuEx1q2
M0xxhtNqt2tZyl9n/ujZN3rkE1MF3pXjHNOdPcpbjnBYN3aSg7q2+3nFXvbo
0u7mBbvYqXO7o+D/v/wBhJw0Cw==
       "]], Line3DBox[CompressedData["
1:eJwl0UsrhGEch+G/xRg2o0QUKZOiSDmlSDmFSBkjWdvYyKQkaZokyUY+iENS
kiRJcsrncEjWkuQqi7vrt3qe91A/n5teKoqIBZ0mIu6TEWf84rcqiyPSJREd
nOaMMnaeOR7wSLv2K9+1b5eXRjxwkMN6sReZcOaKqssiVlnDWq3ZdVxnPdPK
2w0ssJFN2rCb2aJNu5VbbGO7tu1O7jCpJXe+uXuMI3qyK3jIT8/6oT37hMda
tgvMco6z6rIbWMVfZ/7o2Td65BOzKe/KDKd0Z0/ylhMc1409yhFd20O84gD7
dWn38YK97NG53Z36/y9/5Hw0hg==
       "]], Line3DBox[CompressedData["
1:eJwl0bkyg1EcxuF/zCBpomIoFdyB2PfKUpkEsdPoMFwArT3hPigsNyH23SVQ
WG6AZ0bxm+etzvnmO/ULyyNLiYhY1FV5xEVlxDV/GcmI2oqIBmaY54Sy9jpX
ecJTFexPfunIrk5FlDjAQb3by0w6d1NNVRFbzLBZ23YLd9jKNu3a7dxjBzu1
b3exWwW7h0X2sk8Hdj8PmdKKOz/cPcwhXdo1POaPb/1W0T7nmdbsDeY4xUk1
242sYxkTevOPSs5/5UI64oXznNOzPcsnznBaj/YUJ/VgT/CeeY7rzh7jLUeZ
042dTf+/yx/vLDaH
       "]], Line3DBox[CompressedData["
1:eJwl0UsrhGEcxuG/xCCNpcjGSr6BrEWJHKaQyCkkMo3DlCjJN9AkSZIkS9lI
8hEc9pIkSU5pkuxcZfHrulfP8/Y+taPp7tmCiJjUbVHEZSLijoUlEUWqLo6o
YwMHOaQee40LPOWZNuw8v3VsV5ZGXLGdHXqzMyxzfk5NFRGbbGaLtuxWbrON
7dqxO7nLbqa0Z/ewV/t2Pw84wEEd2sM8Yrnm3fnh7hS7dGNX8YS/vvVHOfuC
58ra6+zjGEfUaNezhqVMKO8fXTv/i6vJiE+ucFnv9hJfmeWiXuw5ZvRsp/nE
GU7r0Z7iAyc4rnt7LPn/Ln+oTTp6
       "]], Line3DBox[CompressedData["
1:eJwl0UsrhGEcxuG/YpwytiILO/kGslakBhMh5dTUSBliRIok30CTJEmSLGUj
yUdw2EuSJDklSVausvh13avneXufhrGpdK4oIrK6KYm4KI24ZXFZREJ1iYhG
NnOII+qzVznHE55q3f7it47smvKIS6bYpVd7hpXOL6i1OmKDbWzXpt3BLabY
qW27mzvsYa927X4OaM8e5D6HOKwDe5SHrFLene/u7mFa13Ytj/nrW39UsM95
pnl7jQPMcEwtdhPrWcEyfflHV87/5Eoy4oPLXNKbvcgXLnBez3aes3qyp/nI
HCf1YE/wnuPM6s7OJP/f5Q8IPDr1
       "]], Line3DBox[CompressedData["
1:eJwl0ckug1EcxuF/F6agvQBCrLkEbkJiCLvSwdTaEJbmmR33YB5qbbgDdSMs
zG15Eotfnnd1zpfvdKWL/YVEROT0Vhfx1BDxzubGiBZ11Ed0s5cZZjVir3GB
d7zXof3Dikp2W1NEmQMc1Is9x6Tzj5VORZxwjOM6tTM8Y5Y5ndt5XnCCk7q0
pzitK3uG1yywqBt7liWmNO/OV3cPc0jPdjtvWfOtVR3Zj3zQor3OUeaZU5/d
w04m2aqEXXZ+8CAZ8euf7XNPNXuXVe5wWxV7i5v6sTf4zXWu6cte5SdXuKwP
eyn5/y5/sVw99Q==
       "]]}, {Line3DBox[CompressedData["
1:eJwl0Tkwg1EYhtFPGRJKa6MUNYba2hpCHSQdhbU16BnU1t5Wk1Az6Am1tbaO
k1E8c97q3vvP35ydGpysiIi8FhIRr1UR8zxIRWzyjAXt23c84TNfdGEnqiNu
Wcd6Pdrt7NC7PcRfjnFcqcqIRTbx212tbElGpDVgZ5jnEpe1Yh9yj/cs6dyu
d3+DHuxe/nCaM2p07jY7WVK2JuKaPexW0W7jEetYq13707s+tG4/cZlXvNSs
fcpc+WxuacReZT/TWnNnkhkO682bOnhT/lbv/tKxXWRBG/YO55jjhEbtPnYx
yark/3/5AyE/PG4=
       "]], Line3DBox[CompressedData["
1:eJwl0TssQ2EcxuG/UfUy03YwY5WGnTJKpLoSKQsTjdgkZSbYq+xus6jugl2q
s7jsUvU0hl+edzrfd84ZXd5c2BiIiIp2ByM+hyJ2eJmKOOU9H3Rhv/KWH/xS
y06kI144wpw6doFT+rYX2eMqK0onIvaYZ9dZ4xxLRkxo3i5xjTUeaN++4jnb
7OjBzjo/rzd7lr/cYlU5z61zim2tZCKeWOSMmvYkr5nlsBp2171+dGy/s8Yn
Pmrbvuu/Axusa8k+5BzHdOTMFMss9b+ROxX4zJ57d3Vjt9jUiX3GKtdZUdku
cpoZppL//+UPqN89Fg==
       "]], Line3DBox[CompressedData["
1:eJwl0TssQ2EcxuG/kVZrpm1iL6s0tbttBqGjCGVgoxGbpMwEe5XdbRZtdym7
lFlcdilPY/jleafzfeec0eWt+c2+iFjTXn/EZyJil1eDEWd8YFOX9gvv+MEv
texEKuKZI8zqzS6wqG97gTEQscqy0vY+c+w6a4z5ZMS45uxFrrPKQx3Y17xg
h29q2hnn5/RqT/OX26wo67k1FtnRSjqizRlOqWFP8IYZDqtud93rRyf2O6ts
81E79n3vHVhnTUv2EWeZ17EzUyxxsfeN3KnAJwa77n5rt9jQqX3OCjdYVsme
4SSHmEr+/5c/egI7fw==
       "]], Line3DBox[CompressedData["
1:eJwl0b0uQ3Ecx+FfbSjFruUCvIwidQFak0WoSSLSElaVMEm8rAQ7rd3bLNG6
gNYu1CpRN1BPY/jk+ebk5PzPyRlf21ncTkTEhg56I376I/Z5NxBxxRrrurXf
+cQ2f7vX7eRgxBvTzKhlZzmnX3uJib6IIksasg+797LjrElOJSOmtWAvs8QT
nurYvmeVLX6pZmecP6ZPe57hWWXuKW1fM8sPraciGswzpxd7hg9Mc1QVO9jx
bhf2N4/YZEO79jOLrLKiFfuMeU7o3JkprrKgtnebZZM9TOjRfvUNdV3aNyxz
i5sq2DnOcYTDyf//8gdLPDkp
       "]], Line3DBox[CompressedData["
1:eJwl0T0oxHEcx/HvuQw4T8l8d+wkk0RmjsEkDykD5eJmJBkUyUbYccyeZsVh
dszykE0hu1cZ3r0+2+/775+dKgzPJyJiRqtVEV81ESs8rY3YZ4l3Orafeckf
/qpk19ZFPDLDFr3ZvezTjz3CiuqIPOfUaK8xw0hFtLODnRq0R5nnJre0YZ+x
yHd+6MbOer9Vr3Y/E+5e4rLS9gF7+KLp+ogHDjGna7uL58wyrSM7yYR27U83
rvOJZS3YV5zlCYsas7eZY5t2vNnASU7o223dLLOSSV3Y977hVnv2IRdZ4JzG
7QH2splNqf//8gcQjzfT
       "]], Line3DBox[CompressedData["
1:eJwl0T0oxHEcx/GvcymcE8l8h51kksjMUTZ5SJYb6JiRZFAkG2HHMXuaFYfZ
MctDNoXMXmV49/psv++/f3Z6bqRQERF5rVZHfNVGrPC0LmKfJd7p2H7mJX/4
q5KdTkc8MstWvdl97NePPcrKmohZFtRorzHLilREBzvZpSF7jLPc5JY27DMW
+c4P3dgt3m/Tqz3AhLuXuKyMfcBevihfH/HAYeZ0bXfznC3M6MhOMqFd+9ON
63xiWQv2FWd4wqLG7W3m2K4dbzZwipP6dlsPy6xiUhf2vW+41Z59yEXOs6AJ
e5B9bGZT6v+//AFkPzg6
       "]], Line3DBox[CompressedData["
1:eJwl0Tkox3Ecx+GP+/YvBlbnzMAiEat7FIqFwb1SFKUYmAi7e3XNCmF1rUIx
KcToKcOr5719P79+JQNjXaNJETGo+ayIz5yIOR7mRWzyitfas594yh/+6tJO
5Efcs5wVerWb2Kxvu5up2RFjHFehvcBSJudGVLOGtWq3ezjCZa5oyT7iLt/4
rgu7wvuVerFbmOLuGc6qxN5iA581lIi4ZSc7dG7X8ZjlLNOOnc40rdsfblzk
Ix80ZZ9xmAfcV6+9yjZWac2bBRxgv77cVs87ZjJDJ/aNb7jWhr3NaU5yQn12
KxtZzKLc///yB+vTOOE=
       "]], Line3DBox[CompressedData["
1:eJwl0Tsoh2EYh+FHSH/nYpEJOY0sUhIlm0OyCUWSAUk2BkkUiwyE3SnZnGaF
ctiQbMIgg0LJ4irD3fXb3ufrK+ob7RhJiohBzSUiPjMiZnmQFbHBS15r137i
CX/4qws7NzvinmWs0KvdxGZ9211MTY8Y47jy7XmWMDkzopo1rFW73c0RLnFZ
i/Yhd/jGd53b5d6v1IvdwhR3T3NGxfYmG/isoZyIW3ayQ2d2HY9YzlJt2wmm
ac3+cOMCH/mgSfuUw9znnnrsFbaxSqvezOMA+/XltnreMYMJHds3vuFK6/YW
pzjBcfXarWxkIQsy///LH3OCOYk=
       "]], Line3DBox[CompressedData["
1:eJwl0T8o7XEcx+GPQhwHKRZZRNdhZJGSKNm4l2w3JFGGc0qyMUiiWGRw4+7+
pbu5mBXKnw3JJgwyKJQMnjK8et7b9/PrVzmY6U5nRcSI5vIjXgsiZrlbGPGX
pzzXtn3HA37wUyd2SVHENWtYq0e7nR16t38zNxExxnGV2fOsZnYyooGNbNIv
u48ZLnFZi/Z/bvGJzzq2U96v04PdyRx3T3NGVfY6W3mv0eKIS/ayR0d2M/eY
4g9t2gnmadV+ceMCb3mjSfuQaf7jjvrtFf5kvf54s5TDHNKb21p4xSQT2rcv
fMOZ1uwNTnGC4xqwu9jGCpYnv//LF8cyOfA=
       "]], Line3DBox[CompressedData["
1:eJwl0TsohnEYxuHHgBw+SrFJioGPiU0kFlnwDbLIYZEUFsnCJCE2ibA7DbI4
zQqLw4JBFmGSFBZxleHXdW//5+0t7R9JDadFxIDmsyI+cyJmeZCI2OAlr7Vr
P/GEP/zVhV2QF3HPSlbp1W5hq77tbmZmR4xxXEX2HMuZnhtRyzrWK2X3cJRL
XNaifcgdvvFd53bS+9V6sduY4e5pzqjM3mQTnzWUH3HLLnbqzG7gEZOs0Lad
YI7W7A83LvCRD5q0TznCfe6p115hB2u06s1CDnJAX25r5B3zmdCxfeMbrrRu
b3GKExxXn93OZpawOPf/v/wBYCk6rQ==
       "]], Line3DBox[CompressedData["
1:eJwl0TsohnEYxuHH4vj5KMUmBganiU0kFlkcBlmEhSSHRbIwSYhNIuxOgyxO
s8LisGCQRZgkhUWuMvy67u3/vL3FfSPtwykR0a+FjIivrIg5HmZHbPKKN9qz
n3nKX0Yy4tLO4wPLWak3u5kt+rG7mZ4ZMc4JFdjzLGVqIqKGtaxTh93DMS5z
RUv2EXf5zg9d2BVuqNKr3co0d89wViX2Fhv5oqGciDt2sVPndj2PWcEy7dhJ
JrRuf7pxkU981JR9xlEecF+99irbWa01b+ZzkAP6dlsD75nLpE7sW99wrQ17
m9Oc5IT67DY2sYiFif//8gdFOToV
       "]], Line3DBox[CompressedData["
1:eJwl0SssxXEYx+H3KBx3ZqMSSA6F6sxoBJdEMATBbTSXQGRu1WXobonglm1o
CEgEQ8SG5NmEz55v+73//cv7RttHEhExoKVkxHdOxCKP8yK2ecNbHdgvPGci
PyJD13YJH5lijd7tFrbq1+5hMjtigpMqsxdYxczciHo2MK1Ou5fjXOWaVuwT
7vODn7qya9xSqze7jVnunuO8Ku0dNvFVwwUR9+xmly7tNE+ZYrX27EIWaNP+
cuMyn/mkGfuCYzziofrsdXawThveLOUQB/XjtkY+sJhFOrPvfMOttuxdznKa
U+q329nMCpbn/v+XP1oxOb0=
       "]], Line3DBox[CompressedData["
1:eJwl0T0oxHEcx/GvpByHJMUoiY2jmC8xSodNEsrkrhglsUrczIXd0yZ5mhVG
D2GThBVh8SrDu9dn+33//RvGcplsUURMKp+I+C6PWOFRRcQWr3mrffuFZyyu
jCjRlV3LR7axXe92H/v1a4+yrCxilnOqt5fZwtJkRBfT7NaQPcYZrrGgvH3M
PX7wS5d2yi0derMzTLh7ictqtrfZw1dlqyLuOcJhXdhpnjDFVu3aNazWhv3p
xlU+80kL9jmnecgDjdvrHGSnCt6sY45T+nFbNx9Yyxqd2ne+4Uab9g4XOc85
TdgD7GUTG5P//+UP4dE6ZQ==
       "]], Line3DBox[CompressedData["
1:eJwl0TsoxXEYx+FXSR0OSifFpiQ2t2LWiVGum+SW7VCMOolV4sycsLttktus
MLqETRJWhMFThk/Pd/u9//41o1O9mYKImFQuEfFdErHCo9KILV7zVvv2C89Y
WBZRpCu7ko9sYove7W726NceYUlxxByzqraX2cBEMqKdHUxr0B7jLNeYV84+
5h4/+KVLu9ktrXqz+1js7iUuq97eZidfNVUecc9hDunC7uAJm9moXTvFCm3Y
n25c5TOftGCfc4aHPNC4vc4BtinvzSpOM6Mft6X5wEqmdGrf+YYbbdo7XOQ8
s5qw+9nFOtYm///LHzWQOsw=
       "]], Line3DBox[CompressedData["
1:eJwl0TcsxHEYx+HXpNxh4oTJpKxKmEWZ1RVRNi3M6n7izE7ZtVWfJZjVFcGs
Jh4xfPJ8t//7y79ycLxzLCciRrWaH/GViMjwqDBii9e80b79zDPmFkXk6cpO
8YH1bNCb3cku/diDTBZEzHJOFXaatSxIRjSzlW3qs4c4wyzXlbGPuccPfurS
bnBLo17tbibcneayauxttvNFE8URdxxgvy7sFp6wnnXatUtZog373Y0rfOKj
Fu1zTvOQBxq219jLJmV9s5xTnNT339t4zzKmdGrfesONNu0dLnGB8xqxe9jB
alYl///LL70kO3M=
       "]]}}},
   VertexNormals->CompressedData["
1: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
w6TiYT1Pw3ouaP6WbFzzt9LgxcrfLg/gM23P36Tihd6nlwfoCuUh0+08wGIz
D0Cft/MhF9l5gAlmHoAutPMhs+18wnVmPoHYX9xxwAMBHvzjdi/ZU9U2T7Li
1s8sazhg/tXBffug6x2AIz9S/9qe8vovWXu++Ei7Dmm5o08H9+33AD3vUT3H
uT2J6a9UzxqfE9mexPRXquedQM87Vc9xbk9i+tsb6PlwoOe9QM97Vc9xbk9i
+tsP6Lmf5s9pak9i+ivNN3YBPe9SPce5PYnpL8o3emu+kab2JKa/RwA9Ozh9
e9eTh/e7bRN96/o7dy1tXO39ud/VX6s+7R0P4NI6odJ6o8Wuoyqtr1rsuqti
ftz959B7n2i/uk7WPRLXdQ3YJ6zg/l5qdXiD0SGtsvoEOLFOL7G6tTr24zHn
z3yeIHy3EJf63yvE3fNyf8fl9hfWr0xbXcuk4sK6pVrPNICHtNUxTCourGOr
9SsDeEgbP0nFhddd9ZBwPCw9lKv9xca7el9kE85PUvFCrzuPq/9kx18z7Th0
oh1v8vwKz4fzceXG+wlx1w/3d0Zuf2nbsNc++8YnNni3N73Uq3rnc96xD98x
d+t3Gj2AS+vMSuvVFrvubdraE/v+vm51uMLokI6x+gQ4nbGu9tn/PX2CN/yR
xslt8y3dlw/8Tds86tReFacc97PW2tP/dm11G37VV9b9oQ0//eD2lHXsK409
rHcprbMprY8prcsprddZK2wPsIf1WKV1WqX1W6V1XRH+DGjnX0B7gD0Be8i/
tI6qVD/SuqsQL7L+gf/Q9I/aL22P9P5C+l8Nzvu08Poi/QP/BPzTcBsPJ5l4
SJ+28XOSjYeVJh7SlTZ+AnsC9n4+outkEtmexPQ3rPcm0PpzpPMirUsv9vWK
i36Un875jzs/cW9/4vkpMN4GxmF9DyhV7UlMf/sAnfcRvgeE8hC0XrdI+XbZ
40mJ26P8hOs/7vzEvf2J5wetG0f5Bnp/DeUbzcL43KzxuZjtUX7C9R93fuLe
/sTz01cYn/vqeFDbk6D+VgCdVwj1jN53Qzov0ntwZY8nJW6P8hOu/7jzE/f2
J54fFG/R/g8oDrv7QkxYfPfMc9fW0YYjzm9+xavzpt7yyHn9xjZ5AJfWJZHW
Nyl23RZpPZdi13kR8zNCVrfFA/ao/ktodWRQf5Ef1N9LrA53Gx1SjdUnwGlP
f7NP5uCZZp/Qu7aZ+iGV280+mXfYfULHPWDqh/A+pbyPLZ8f4bx/ae5+tZlM
C8CRH6m9tD0Il/opV3uS2t8dVp+DrD6fMPqkq6w+51l9zjT6JK6Pw8fn1skp
+nMscfhsh0/eZ1d5DhdXnkuDK8+lwZXn0uDKc2lw5bk0uPJcGrxQns9XnruE
uzx/z/LsjLuJx93OuIn4OMXz4844kXic6MxjEM9jOONN30+LEEd+koo7427i
cTf/n3+XcvfNMp/o3JdxwXme2n0vHO1PZv2Q60fx/Dh6/5717O73Zv1ERidx
wVnP7n4GaF896ycyOokLjvaNUD2Hi6ueS4MH6VnzjXBw1vMRmm8UFQ/KN3ap
nkPBWc99ND4XFWc9VwA9u/suWz+R0Ulc8KB8A/AcGZ3EBdd8ozQ4yjf+aPnf
p3oOBWc9g7zO26l6DgVnPfcG8RnwHBmdxAVnPTPPzW+b/S9/daSpS/HiqaYO
g7PvuM97WHhVzPEswPdaPpdYPvcYPl2eCfDsX6+w8E7uixwZPAtwh2dinpv6
mO+Dui9v38d2+JmGZ6dOi3+9OotXhYRLz5sFeE1IuHveRsvnQMvnlYZPQu9n
m2/RiXdxwdH7mspzuLjyXBq8UJ53K89dwpXn0uDKc2lw5bk0uPJcGrxQnvcq
z13C0fvHzniQTj/4eNA/rrN4SHVZxecNqT4qxN3z8njwZMtnpR0PnmfrUMy3
dSnmvWXqpXA9C657wX4Uz4+fwXVnLJ8rDZ8uzwR4JuBfcQd3eCbm+f5nzX7+
Q+y+//9YbOqirP2C2c+/xu77f/MLpi4K1yPgegbsvx7gXDeB6xkE4kI/qD0I
l7ZH6qdc7Ulqf++z+hxs9bnf6JPWWH1mrT4fM/p09UxAzwT07N8v9QB32hmM
C/2g9iBc2h6pn3K1J6n9dfRMQM/EeubjdJ1MuLiukykNLl1nruvPFY8CjuKD
dD2/riNVPAq4tA6t5hvh4hw3+oK40azxIRRcui5X8w3Fo4Cjdc5B+QbQs45f
FC8rLq1XHzQe1DxE8XLiYY8HNT4rXk6c47D73qu+11YaXPftKQ0e9B69jgcV
jyIeNB5E+xWg8aDOPyteThy9X+zmIRsXmjoUN9xq6lKs7WbqpXA9C657wceH
hVPM8REAb7B8zrJ8vm34dHkmwLN/ncLCKeb4CIA7PBPzXHHO3Fn3vLvDO3HR
XVv+SS97T1w/serL/V/2brH7vo7J2T83k1E8P97D8tnf8tlg+IT7P+u+0IpH
AUf7aet+5qXBpTwr/4pHAde4UV5c44biccTDihuqZ8WjgOtzsLx4V+OG1glS
PEq6RXWXetr5pQvN/BIts/N1bM/Hu/4VPzh+qMPnRjtfd87YUfVHj22ih3q/
e+ycNXXef+4Y8sKrXp2H1sd0Fi/0fQzpep0g3F3PHfT7nBR3zzvK8vmg5fOT
89v5hPt96T5gikcBR/vG6P51pcGlPOu+SYpHAe9q3FDddg2X8qz8Kx4FPKy4
oXpWPAq4PgfLi3c1bjQr/4pHSLcuzvsVfMPOL9WZ+SXi+TrpvhJRxd19GYLe
X5Xirv+zLZ+rLZ+fsvN1/wcliD7Q
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{335.32923682056884`, 342.30603020895904`},
  Method->{},
  PlotRange->{{-0.2, 1.2}, {-0.7, 0.7}, {-0.7, 0.7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-2.9922650674009343`, -1.1011002297191017`, 1.1331054895836585`},
  ViewVertical->{-0.2717247017152088, -0.09214940589843719, 
   0.9579531165304208}]], "Output",
 CellChangeTimes->{
  3.607688326048057*^9, {3.6076911574028997`*^9, 3.6076911646456738`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"ellipse", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.2", ",", "0.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.607661498317518*^9, 3.607661531169304*^9}, {
   3.6076615814124193`*^9, 3.607661588180605*^9}, 3.607661646839848*^9, {
   3.60766185505315*^9, 3.607661875545556*^9}, {3.6076702425658493`*^9, 
   3.607670261994596*^9}, {3.607670305083414*^9, 3.607670313070137*^9}, {
   3.6076719543740063`*^9, 3.607671960116695*^9}, {3.607672005296732*^9, 
   3.607672096774103*^9}, {3.60767472229517*^9, 3.607674752329772*^9}, {
   3.607674846707466*^9, 3.607674850936017*^9}, {3.607675337500431*^9, 
   3.607675340564662*^9}, 3.607688026497945*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzFnQ3MLetV148oNVoag4o2iCaFqzWacNWEQqDlJUBQEpsSLSExQoWg+EFB
k1ZNTNVYtMEgloPGFNNgAgjlI2xfvbdcUnmnUy3TtIXp3GmZMlPYjDfbfWdP
hw0aDQkFz97n/N9nz/9Zv5570pO4Q3h7/3fd9exnrd/ztfYze7/sm779L/31
T7tz584vvuTOnd957+/dJ7763v9dX/2b+39v/u3p7/M/diP9mdf3T7/+x56+
uWMv0t2P6/pn+f+lp+85+vpnbt764J/170mXH+ny8xdP/+MPyr68tSd97ae8
Wr2f//rUTXf6+/r3r99PoMuPdI9nf9K/us7spd+N+v3G/3Yb/z9x+tN8z839
/668jR/p7ifOT3nr/6dOb/vvbG48P6RTPh/28jyu9TLTPZ5n3r7kJx687+bW
nnS9pMvPT5/s+795c3bff+TWnnS9pHu+zvrv/oXY/kJX/4fTv/iC993G33W3
9/y+1fh6YfFN7cR6menO+Xq8NZnu8ZH+1En/lo9m9rFe3o/DU5XFJ+luH8en
hPjknEmP41NCfEqITwnxKSE+5f04vDyPg+tq734c0vh13e09Pmv9OtM9PtI9
Pmu9zHT3tx7PKT5fdRJ+831ZfEiXn9M/3f2TH8n8u/5fTvKzKQ7y47rsz3H/
n/VtfGRPuvrzd09v8xVvsfWNdY+zdI/zWjd+X9lc+TxJuvyc4/oZ78/8u35+
vaG+/e9W/i90mb7z1Nw/aMzv9ZXrev326fV5z16t55XrK9dlf14vP/PZq/U4
u76K9RL2M2W2n5Hu+w3pvn9Y2V/sB7zd9fqe8rZe38tsfZfu6+/q/V+sd9J9
/fJ2tR5Jj9ejMpu317rPz2U2j0mP56sSxnWZjWvp8fgtYTyW2XhcxSEbF2U2
Llb2Gf9lxrP0mOcy47O3+Vd8Snc+pTuf0p3Plf0Fn96u+JTufEp3PqU7n6v3
f8GndOfT2xWf0p1P18XnWk98ui4+pTuf0p1Ptxef0p1P6c6ndOdzFYcLPt1e
fK7sL/iU7nxKdz77y3ay+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB
+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bOB+bPJ+FzFIZs/m4zP
lX02fzYwfzYwfzYZn+q38ynd+ZTufEp3Plf2F3x6u+JTuvMp3fmU7nyu3v8F
n9KdT29XfEp3Pl0Xn2s98em6+JTufEp3Pt1efEp3PqU7n867+FzF4YJPtxef
K/sLPqU7n9Kdz9X6kK3vPazvPazvPazvPazvPazvPazvPazvPazvPazvPazv
PazvPazvPazvPazvPazvPazvPazvPazvPazvPazvPazvPazvPazvfcbnyj5b
33tY33tY3/uMz/v/1TbjU3pc191CnXYLddct1FG3GZ/SnU/pcZ1zC3XLLdQJ
t1D322Z8So/rctuMz7Xudaptxqf0uG6zzfh0e/EpPa5jbDM+pTufqzhc8On2
6/rAFuoAWzjvb+Fcv4X95wj7zxH2nyPsP0fYf46w/xxh/znC/nOE/ecI+88R
9p8j7D/HjE/p8f5zhP3nCPvPEfafI+w/R9h/jrD/HGH/OcL+c4T95wj7zzHj
c2Wf7T9H2H+OsP8cMz7Pf+4+l/Ep3fmU7nxKdz5X9hd8erviU7rzKd35lO58
rt7/BZ/SnU9vV3xKdz5dF59rPfHpuviU7nxKdz7dXnxKdz6lO5/Snc9VHC74
dHvxubK/4FO68ynd+ZTufN7v9w7ORzs4H+3gfLSD89EOzkc7OB/t4Hy0g/PR
Ds5HOzgf7eB8tMv4lB6fj3YZn2vdz0e7jE/p8floB+ejHZyPdnA+2sH5aAfn
ox2cj3YZnyv77Hy0g/PRDs5Hu4zPc/+eeD7jU7rzKd35lO58ruwv+PR2xad0
51O68ynd+Vy9/ws+pTuf3q74lO58ui4+13ri03XxKd35lO58ur34lO58Snc+
pTufqzi80upYF/bic2V/wad051O68ynd+bx/bjrA+f0A5/cDnN8PcH4/wPn9
kPEp3fmUHp/fD3B+P8D5/QDn90PGp/T4/H7I+Fzrfn4/ZHxKj8/vBzi/H+D8
foDz+wHO7wc4vx/g/H7I+FzZZ+f3A5zfD3B+P2R8nrv99MczPqU7n9KdT+nO
58r+gk9vV3xKdz6lO5/Snc/V+7/gU7rz6e2KT+nOp+vic60nPl0Xn9KdT+nO
p9uLT+nOp3TnU7rzuYrDBZ9uLz5X9hd8Snc+pTuf0p3P+//VEepLR6gvJXvX
47pTsnc9rke5fdLjOlWyJ138S3f+pcf1q2TvelzXcvtc97jpf3l81nqZ6d7f
uJ6W7F2P62zJ/pPqt/W3I9Tfku5xW+vXme7xke7xWetlpnt8/PMq172/cf3w
mM0/rsf99XtuR3vf3l+/5+a699fvuSU97m8J/fX65xHqn0n3/sb31o72/lJ/
43trrpeZ7v2N760doU57zOZ56XGd9gh12iPUaY/2PlJ/pXt/17qN96zee8zW
i5V9Vu89Qr33CPXeI6wXfJ+c7oHTve6H3dNez9t8f/gF3QcO7vfSvVa/zxnz
w/cY4/g/eGV55Ht9FH+6d0f392I+8/uT0um+Jd1fjefD/B61vy+/90735Ok5
BVp/aT9D9g9b932f8MnXu3xdoPnzcc0zj2dcP2Q+Ceaf859gnqF5leZhWndo
/VUPfR9C+xnaF9H+kPaZtF+lfXI8H27AfgPcbtBP/H428P430N8N8L8B/jcw
jjYQ5w3kZQN53MD42gAPGxh3G+BqA+NxA3xugOcNjN8NjN8NjN8NjK8NjMcN
jLsNzAMbmAc2MA8UwGcBfBbAZwF8FsBnAXwWwGcBfBbAZwF8FsBnAXwWwGcB
fBbAZwF8FsBnAXwWwGcBfBbAZwF8FsBnAXwWwGcBfBbAZwF8VsBnBXxWwGcF
fFbAZwV8VsBnBXxWwGcFfFbAZwV8VsBnBXxWwGcFfFbAZwV8VsBnBXxWwGcF
fFbAZwV8VsBnBXxWwGcFfNbAZw181sBnDXzWwGcNfNbAZw181sBnDXzWwGcN
fNbAZw181sBnDXzWwGcNfNbAZw181sBnDXzWwGcNfNbAZw181sBnDXy2wGcL
fLbAZwt8tsBnC3y2wGcLfLbAZwt8tsBnC3y2wGcLfLbAZwt8tsBnC3y2wGcL
fLbAZwt8tsBnC3y2wGcLfLbAZwt8dsBnB3x2wGcHfHbAZwd8dsBnB3x2wGcH
fHbAZwd8dsBnB3x2wGcHfHbAZwd8dsBnB3x2wGcHfHbAZwd8dsBnB3x2wGcH
fA7A5wB8DsDnAHwOwOcAfA7A5wB8DsDnAHwOwOcAfA7A5wB8DsDnAHwOwOcA
fA7A5wB8DsDnAHwOwOcAfA7A5wB8DsDnAHzm966lx3zm97Glx3zm97Hd/5rP
/N61dL2zNZ/5fexVvzI+8/vY7n/NZ34f2/U1n/l9bNfXfOb3saXHfOb3saXH
fOb3saXHfOb3sd1+zWd+H1t6zGd+H1t6zGd+71p6zGd+H1t6zGd+H9v9r/nM
711L1ztb85nfx171K+Mzv4/t/td85vexXV/zmd/Hdn3NZ34fW3rMZ34fW3rM
Z34fW3rMZ34f2+3XfOb3saXHfOb3saXHfOb3rqXHfOb3saXHfOb3sd3/ms/8
3rV0vbM1n/l97FW/Mj7z+9juf81nfh/b9TWf+X1s19d85vexpcd85vexpcd8
5vexpcd85vex3X7NZ34fW3rMZ34fW3rM5x743AOfe+BzD3zugc898LkHPvfA
5x743AOfe+BzD3zugc898LkHPvfA5x743AOfe+BzD3zugc898LkHPvfA5x74
3AOfe+BzD3xOwOcEfE7A5wR8TsDnBHxOwOcEfE7A5wR8TsDnBHxOwOcEfE7A
5wR8TsDnBHxOwOcEfE7A5wR8TsDnBHxOwOcEfE7A5wR8zsDnDHzOwOcMfM7A
5wx8zsDnDHzOwOcMfM7A5wx8zsDnDHzOwOcMfM7A5wx8zsDnDHzOwOcMfM7A
5wx8zsDnDHzOwOcMfC7A5wJ8LsDnAnwuwOcCfC7A5wJ8LsDnAnwuwOcCfC7A
5wJ8LsDnAnwuwOcCfC7A5wJ8LsDnAnwuwOcCfC7A5wJ8LsDnAs/7X99/f791
ffMDP/qyH3/VN//wLacP0+/YS7rfY1zrZaav7/mm9/PazTd86bu+4+cze+my
//TTv/yyd9x84Ju+/1s//Fk/dSP9taf/8bvedvN7vu8LXvLk88Xt+3V76Q+z
93uVsndd9h4f2bsue4+b7F1f25dgX2b2fk9V9q7Lfs1bspfu8f+Gf/yjf/nN
v5Z02b/4X72n/qLP+HDmX/buX/by80/Pb/BVVx+79+fb3pS+n/mlpz+//rbz
uP79f/y9t/q3nEF/x/3x/oGfvY23+5HufqQ/zI/fa5Uf1+XH9bWfa/BzDX6u
Mz937CU/rsuP6/LjvMmP6/Lj+tpPCX5K8FNmfpxP+XFdflyXH+dZflyXH9fl
Z71eJD+uy4905/m8LL/4F271Sz9/5JeTLj+ndebj1134fk5+ovdz8uPvR37k
/2WnP1/8n8+c/7En0/djf/fp79ueOev/4tOS/pun9eX/3pz15cPpfrj7ke5+
pD/Mj48X+XFdflxf+7kGP9fg5zrzc8de8uO6/LguPz5e5Md1+XF97acEPyX4
KTM/Pl7kx3X5cV1+fLzIj+vy47r8+DiSH9flx8eX/Jw4f9k3f/RWl5+T/uFX
J11+Tvp3fuFHs/cjP/5+5Mffj/zI/3l/+Kffc+b8FS9L36/+rae3/Vfee9b/
0O9N69fnnf78y/ed92v/59ffc8uh+5HufqQ/zI+PF/lxXX5cX/u5Bj/X4Oc6
83PHXvLjuvy4Lj8+XuTHdflxfe2nBD8l+CkzPz5e5Md1+XFdfny8yI/r8uO6
/Pg4kh/X5cfHl/x86TfevPNX/0daR+Tnt7/3P3XPHNP6JT/vfu8P/MabP/GR
7P3Ij78f+fH3Iz/y/4unN/jMB660b5f+Pedz9c9fVbbPd3vpD7N3bmUvXe2e
/3zXh666z/5E+4Vf8h9v7UmX/zv2kn/X5cd1+XGe5cd1+XF97acEPyX4KTM/
zrP8uH4bHzsPSn/dF/3Z1/yH//Vzmb3ratf5V7vSnZ/P/cxP//zuVencIfun
Pv+Hvvy1n2gy/7J3/7K/+yAefo52fX2eLeE8W2bnWbdfn7/K7PwlPT5PlXCe
KrPzlPtZ72NL2MeW2T5Werz/LGH/WWb7T/ezXvdLWPfLbN2XHq/XJazXZbZe
u5/1PFnCPFlm86T0eH4rs/lNus8zrmu8uP81/2XGf/9gXDrProtn6c6zdOfZ
7cWz24tn6c6zdOdZuvPsfsSz+xHP7kc8S3eepTvP0p1n9yOe3Y94dj/iWbrz
LN15lu48ux/x7H7Es/sRz9KdZ+nOs3Tn2XXx7P7Fs/tfz88NzM8NzM8NzM8N
zM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8N
zM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM8NzM9NxrP26c6z6+JZuvMs
3Xl2e/Hs9uJZuvMs3XmW7jy7H/HsfsSz+xHP0p1n6c6zdOfZ/Yhn9yOe3Y94
lu48S3eepTvP7kc8ux/x7H7Es3TnWbrzLN15dl08u3/x7P7X+40e9hs97Dd6
2G/0sN/oYb/Rw36jh/1GD/uNHvYbPew3ethv9LDf6GG/0cN+o4f9Rg/7jR72
Gz3sN3rYb/Sw3+hhv9HDfqOH/UYP+40e9hs97Dd62G/0sN/oYb/Rw/lxC5+3
buFzz23Gs/T488ptxrPbrz+P22Y8S48/F9vC52vbjGf3I57dz/pzjW3Gs/T4
c4QtfB6xzXh2P+v67RbqwNuMZ+lx3XUL9dttxrP7Wde7tlA322Y8S4/rV1uo
R22hrrLNeHb/6/3zCPvnEfbPI+yfR9g/j7B/HmH/PML+eYT98wj75xH2zyPs
n0fYP4+wfx5h/zzC/nmE/fMI++cR9s8j7J9H2D+PsH8eYf88wv55hP3zCPvn
EfbPI+yfR9g/j7B/HjOez/Ld5zKeXRfP0p1n6c6z24tntxfP0p1n6c6zdOfZ
/Yhn9yOe3Y94lu48S3eepTvP7kc8ux/x7H7Es3TnWbrzLN15dj/i2f2IZ/cj
nqU7z9KdZ+nOs+vi2f2LZ/e/Pg/u4Dy4g/PgDs6DOzgP7uA8uIPz4A7Ogzs4
D+7gPLiD8+AOzoM7OA/u4Dy4g/PgDs6DOzgP7uA8uIPz4A7Ogzs4D+7gPLiD
8+AOzoM7OA/u4Dy4g/PgDs6Du4xn978+D+4yns+YP/F8xrPr4lm68yzdeXZ7
8ez24lm68yzdeZbuPLsf8ex+xLP7Ec/SnWfpzrN059n9iGf3I57dj3iW7jxL
d56lO8/uRzy7H/HsfsSzdOdZuvMs3Xl2XTy7f/Hs/tf1jQPUNw5Q3zhAfeMA
9Y0D1DcOUN84QH3jAPWNA9Q3DlDfOEB94wD1jQPUNw5Q3zhAfeMA9Y0D1DcO
UN84QH3jAPWNA9Q3DhnP7mdd3zhAfeMA9Y0D1DcOUN84ZDy7/3V945DxfJ62
n/54xrPr4lm68yzdeXZ78ez24lm68yzdeZbuPLsf8ex+xLP7Ec/SnWfpzrN0
59n9iGf3I57dj3iW7jxLd56lO8/uRzy7H/HsfsSzdOdZuvMs3Xl2XTy7f/Hs
/tf1uiPU65J+Z/VK+vpejetlpvv308b1wCPUA49QD0z2/v3D8fMLyd77FT+/
kOy9v/HzC25fgn2Z2Xt84ucXkv39c36T2bse10uPUC89Qr30CPXSI9RLkx//
vuj4OYLkx/X4OQL3cw1+rjM/nt/4OYLkx/X4OYLkx/X4OQL3U4KfEvyUmR/n
JH6OIPlxPX6OIPlxPX6O4LhaRy6/1zp+jiD5cT2utx+h3n6EevsR6u1HqLcf
od6e/Dif8b395Mf1+N6++7kGP9eZH+czvref/Lge39tPflyP7+27nxL8lOCn
zPw4n/G9/eTH9fjefvLjenxvP/lxPuN7+8mP6/HnNUf4vOYIn9cc4fOaI3xe
c4TPa5If5zO+J5/8hN//n92Tdz/X4Oc68+N8xvfkkx/X43vyyY/r8T1591OC
nxL8lJkf5zO+J5/8uB7fk09+XI/vySc/zmd8Tz75cT3+vO8In/cd4fO+I3ze
d4TP+5K98+P31aX7/tn9OD/xvfTkx/X4Xnry47r8uB7fS3c/JfgpMz/OT3wv
/SI+oK8/P03+nSu/f+72689bj3j//GHPZftz0y/0eVvpn+pzhdI/1eenpH+q
z4lIf6H39qXH+X34cxwv9LmSx/U81+N67vJxPR/9aM/X8/n6Uc+5j+tc9rj2
w49rH/Ko8z/N5w+br17Y/PP41rXHtd97XOegR60DxPPtBnjeoH3M+QY438D7
3MD73MC42MC42MC42ECcNxDnDcR5A+NrA+NrA+NrA/xsgJ8N8LOBcbqBcbqB
cbqBcbGBcbGBcbGB8b6B8b6B8b6B8b6B8b6B8V4AzwXwXADPBfBcAM8F8FwA
zwXwXADPBfBcAM8F8FwAzwXwXADPBfBcAM8F8FwAzwXwXADPBfBcAM8F8FwA
zwXwXADPBfBcAM8F8FwBzxXwXAHPFfBcAc8V8FwBzxXwXAHPFfBcAc8V8FwB
zxXwXAHPFfBcAc8V8FwBzxXwXAHPFfBcAc8V8FwBzxXwXAHPFfBcAc8V8FwD
zzXwXAPPNfBcA8818FwDzzXwXAPPNfBcA8818FwDzzXwXAPPNfBcA8818FwD
zzXwXAPPNfBcA8818FwDzzXwXAPPNfBcA8818NwCzy3w3ALPLfDcAs8t8NwC
zy3w3ALPLfDcAs8t8NwCzy3w3ALPLfDcAs8t8NwCzy3w3ALPLfDcAs8t8NwC
zy3w3ALPLfDcAs8t8NwBzx3w3AHPHfDcAc8d8NwBzx3w3AHPHfDcAc8d8NwB
zx3w3AHPHfDcAc8d8NwBzx3w3AHPHfDcAc8d8NwBzx3w3AHPHfDcAc8d8DwA
zwPwPADPA/A8AM8D8DwAzwPwPADPA/A8AM8D8DwAzwPwPADPA/A8AM8D8DwA
zwPwPADPA/A8AM8D8DwAzwPwPADPA/A8AM8D8Jw/v+b6muf8+TXpMc/582tu
v+Y5f35Nesxz/vya+1nznD+/5n7WPOfPr0mPec6fX3M/a57z59fcz5rn/Pk1
6THP+fNr7mfNc/78mvtZ85w/vyY95jl/fs31Nc/582vuf81z/vya62ue8+fX
pMc858+vuf2a5/z5Nekxz/nza+5nzXP+/Jr7WfOcP78mPeY5f37N/ax5zp9f
cz9rnvPn16THPOfPr7mfNc/582vuZ81z/vya9Jjn/Pk119c858+vuf81z/nz
a66vec6fX5Me85w/v+b2a57z59ekxzznz6+5nzXP+fNr7mfNc/78mvSY5/z5
Nfez5jl/fs39rHnOn1+THvOcP7/mftY858+vuZ81z/nza9JjnvPn11xf85w/
v+b+1zzvgec98LwHnvfA8x543gPPe+B5Dzzvgec98LwHnvfA8x543gPPe+B5
Dzzvgec98LwHnvfA8x543gPPe+B5Dzzvgec98LwHnvfA8x543gPPE/A8Ac8T
8DwBzxPwPAHPE/A8Ac8T8DwBzxPwPAHPE/A8Ac8T8DwBzxPwPAHPE/A8Ac8T
8DwBzxPwPAHPE/A8Ac8T8DwBzxPwPAHPM/A8A88z8DwDzzPwPAPPM/A8A88z
8DwDzzPwPAPPM/A8A88z8DwDzzPwPAPPM/A8A88z8DwDzzPwPAPPM/A8A88z
8DwDzzPwPAPPC/C8AM8L8LwAzwvwvADPC/C8AM8L8LwAzwvwvADPC/C8AM8L
8LwAzwvwvADPC/C8AM8L8LwAzwvwvADPC/C8AM8L8LwAzwvwvGQ83z07uL56
5Tv/aPNX//v1zZ86/WPzIw/837lDuu67k/7XTo6/8i23399++l2zr/vBd978
71N+Xvd9t+2efn/tJS9+5ub8+1wv3VzJj9tLJ3u16/bSZa92T7/H9ve/7Jmb
f/2AI+mn3417w2c/c3PO53e9+9aP20sne7Xr9tJlfxmHz3n7O+8/p/nq967e
z69sn7o5/07aS96/isOl/eX7iezVrttLJ/vzdPDB9LtgT37Ha778Te8af+b8
+3VvTPeZSdeL9Jef3P7tm0w//17e809luvOml3hz3XnQy/nRy/Oll+dXL4+n
Xoqn4vbBv/G1L3r1V/zEzW+d3s9XpfvwpOul+LtO9uf388Ptbbt3nvyHr/us
dzz3M597+sfb3we89yL9wct1PTfieZTueXzrxTi7zKN0z6N0z6N0z6N0z6N0
z6N0z6N0z6N0HxfSPS/SPS8r//fy4noc5xLiXEKcS4hzCXEuIc4lxLmEOJcQ
5xLiXEKcS4hzCXEuIc4lxLnM4qznjjye0j2e0j2e0j2e0j2e0j2e0j2e0j2e
0j2e0j2e0j2e0j2eK/8X88mfv/vE+77zNXUWH9dl/7Ff+5WXf+IvNFl8SL//
3zVZ3KR73KR73KT7Oju+6GvGF93TPT6ky4+vy6d/94Fv/NCVr4+/486d4sNv
qLN4ur00t5ef0zb1R55KcZB+b1/377/29z2bxcHtpbu9/JzMfvJznr3y/c+p
+0/+gWcz3txeutvLzxc/+fZ/93NPNRmfrt99MD59nyk93jeW2b5ReryvK7N9
3aWffN9VZvsu6b7Pke7ruHRfZ6XH46XMxot05/PWf8hhmXEoPeaqzLiSHnNS
ZpxI9/z2D+YRz690z690z690z690z++ln8v8Xtpf5le651e651e651e651e6
51e65/fWv+VXuudXuudXuudXuudXuudXejx+Gxi/DYzfBsZvA+O3gfHbwPht
YPw2MH4bGL8NjN8Gxm8D47eB8dvA+G1g/DYwfhsYvw2M3wbGb5Pl95z2/iNZ
fqV7fqV7fqV7fqV7fi/9XOb30v4yv9I9v9I9v9I9v9I9v9I9v9I9v7f+Lb/S
Pb/SPb/SPb/SPb/SPb/S4/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5
h/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5h/m5h33XFup72yy/0uM62zbL
r/S4DrbN8ntpn9eptlBf2kL9ZAv1jS2cU7ZwHtnCuWCb5Vd6vM/fZvmVHu/b
t1l+pcf78C2svyOsvyOsvyOsvyOsvyOsvyOsvyOsvyOsvyOsvyOsvyOsvyOs
vyOsvyOsvyOsvyOsvyOsvyOsvyOsv2OW37N897ksv9I9v9I9v9I9v9I9v5d+
LvN7aX+ZX+meX+meX+meX+meX+meX+me31v/ll/pnl/pnl/pnl/pnl/pnl/p
8f5qB/urHeyvdrC/2sH+agf7qx3sr3awv9rB/moH+6sd7K92sL/awf5qB/ur
HeyvdrC/2sH+agf7qx3sr3awv9pl+T2n/Ynns/xK9/xK9/xK9/xK9/xe+rnM
76X9ZX6le36le36le36le36le36le35v/Vt+pXt+pXt+pXt+pXt+pXt+pcf7
5wPsnw+wfz7A/vkA++cD7J8PsH8+wP75APvnA+yfD7B/PsD++QD75wPsnw+w
fz7A/vkA++cD7J8PsH8+wP75kOX3PKyf/niWX+meX+meX+meX+me30s/l/m9
tL/Mr3TPr3TPr3TPr3TPr3TPr3TP761/y690z690z690z690z690z6/0+Hx0
vHrjS3/2n7zl3U/drM8Fx6v4nkPS3T4+Tx3hPJX8uL3fW5Aen7+OcP5Kftze
7yFcvs/8vHaE81ry4/bxvYLj1cu//c/86sc+mO4VuL3r8XnwePt5guv3uLrz
rj/84zfrc1+yX3/el3Sy97xL97xL9zxK9zxK97xI97xI9zhL9zjH5+Vk73GW
Tvbrz1WPcO5O9q7H9weS7nmJ7w8k3fMS3x9Iuuclvj+QdM9LfH8g6Z6X+P5A
0j3+8f0B838R//j+gHS/P5D0OM5+fyDpcZz9/kDS4zj7/YGkx3H2+wNJj+Ps
9weSHsfZ7w+Y/yzOfn/gePu9pR7P+P5A0j2e8f2BpHs84/sDSfd4xvcHku7x
jO8PJN3jGd8fMP8X8fzQL/df/8++7UNZHM7b6+xz/6R7f6V7f6V7f+P6XrL3
OPg+RHpcxztCHe8Idbwjfj4e70Me/T7ko95XfNT7hPE6/knus8F9M7p3QfGJ
45zfQ5Ae5zG/FyE95pPvN9J+I663834mrlcfoV79/4tPHken/5/XyY9QJ+f9
A+1bHnVf+qj75Efbt28gvxvws0E/8fvcwPvcQBw2EIcN7Lc3wOEG4r+BfG2A
zw1wsgFuN8DtBrjdALcb4LaAfBWQrwLyVUC+CshXAfkqIF8F5KuAfBWQrwLy
VUC+CshXAfkqIF8F5KuAfBWQrwryVUG+KshXBfmqIF8V5KuCfFWQrwryVUG+
KshXBfmqIF8V5KuCfFWQrwryVUG+ashXDfmqIV815KuGfNWQrxryVUO+ashX
DfmqIV815KuGfNWQrxryVUO+ashXDflqIV8t5KuFfLWQrxby1UK+WshXC/lq
IV8t5KuFfLWQrxby1UK+WshXC/lqIV8t5KuDfHWQrw7y1UG+OshXB/nqIF8d
5KuDfHWQrw7y1UG+OshXB/nqIF8d5KuDfHWQrwHyNUC+BsjXAPkaIF8D5GuA
fA2QrwHyNUC+BsjXAPkaIF8D5GuAfA2QrwHyNUC+8vsz0uN85fdnpMf5yu/P
XPrJ85Xfn5Ee5yu/VyM9zld+r0Z6nK/8/oz0OF/5fRjpcb7y+zDS43zl92Gk
x/nK78NIj/OV34e59JPnK78PIz3OV35PRnqcr/yejPQ4X/l9GOlxvvL7LdLj
fOX3W6TH+crvt0iP85Xfb5Ee5yu/33LpJ89Xfr9Fepyv/N6L9Dhf+b0X6XG+
8vst0uN85fdVpMf5yu+rSI/ztYd87SFfe8jXHvK1h3ztIV97yNce8rWHfO0h
X3vI1x7ytYd87SFfe8jXHvK1h3ztIV8T5GuCfE2QrwnyNUG+JsjXBPmaIF8T
5GuCfE2QrwnyNUG+JsjXBPmaIF8T5GuCfM2QrxnyNUO+ZsjXDPmaIV8z5GuG
fM2QrxnyNUO+ZsjXDPmaIV8z5GuGfM2QrxnytUC+FsjXAvlaIF8L5GuBfC2Q
rwXytUC+FsjXAvlaIF8L5GuBfC2QrwXytUC+FrgPfw33efLP12RPn2e5Lnv/
3OfWz70/v/E133/jz5XHnxPdv49yaS8///xeP7/3A2+/8efZXZf9m/7c3/uh
f/SeKvveANdl/9xX/vSr3/K33pc9F++67E95/Yo3fzB7Xt512dPnaK7L/gfH
O6/4pe/+YPb8vuv37cssv9LjfJWQrzLLl/Q4zmUWZ+lx3MosbtLjOJRZHPoH
n6N7f6V7f6V7f2/trb/Svb/Svb/Svb/Svb/Svb/S4/w2kN8G8ttAfhvIbwP5
bSC/DeS3gfw2kN8m6+85DP1Hsv5K9/5K9/7e2lt/pXt/pXt/pXt/pXt/pXt/
pcc898BzDzz3wHMPPPfAcw8898BzDzz3wHMP89gW1qMtrDtbuMe4hfVlC+vF
FtaFLcz/W5jntzCfb2H8jjB+8/qV9Hj8jjB+Rxi/I4zfEcbvCON3hPE7Zv09
y3efy/or3fsr3ft7a2/9le79le79le79le79le79lR7PVzuYr/L6ifR4vtrB
fLWD+WoH89UO5qsdzFc7mK92WX/PYXji+ay/0r2/0r2/t/bWX+neX+neX+ne
X+neX+neX+nx/HyA+fkA8/MB5ucDzM8HmJ8PMD8fYH4+wPx8gPn5kPX3nPan
P571V7r3V7r399be+ivd+yvd+yvd+yvd+yvd+ys9Xo/4flq8vhxhfTnC+nKE
9eUI68uj3387/f9HuW9G5wv6fks6f9G5ifzH7zP/3ifp9L1YdP6i7+Oi8yDl
l55/ofuN5Id4oLzTfWDilrgiPun+W9zfDfR3A/3dQLsbiMMG3v8G4rOBcbGB
uG1gXGxgXGwgzgXEp4D4FBCfAuJTQHwKiE8B8SkgPgXEp4D4FBCfAuJTQXwq
iE8F8akgPhXEp4L4VBCfCuJTQXwqiE8F8akgPjXEp4b41BCfGuJTQ3xqiE8N
8akhPjXEp4b41BCfGuLTQnxaiE8L8WkhPi3Ep4X4tBCfFuLTQnxaiE8L8Wkh
Ph3Ep4P4dBCfDuLTQXw6iE8H8ekgPh3Ep4P4dBCfDuIzQHwGiM8A8RkgPgPE
Z4D4DBCfAeIzQHwGiM8A8RkgPnn9QXocn7zOID2OT15nkB7HJ68zSI/jk9cf
pMfxyb+vRnocn7xeIT2OT16XkB7HJ69LSI/jk9clpMfxyesV0uP45N/3Ij2O
T17fkB7HJ69jSI/jk9cxpMfxyesY0uP45PUN6XF88u9LkR7HZw/x2UN89hCf
PcRnD/HZQ3z2EJ89xGcP8dlDfPYQnz3EZ4L4TBCfCeIzQXwmiM8E8ZkgPhPE
Z4L4TBCfCeIzQXxmiM8M8ZkhPjPEZ4b4zBCfGeIzQ3xmiM8M8ZkhPjPEZ4H4
LBCfBeKzQHwWiM8C8VkgPgvEZ4H4LBCfBeKzYN1Gv7PjdRLp/ryndH/eU7o/
TyrdnyeV7s+lSvfnWPU7Pl6f0e/4eD1HutvLj9eppHsc5Mftpbu9/HjcpHvc
5Mftpbu9/HicpXuc5cftpbu9/HhepHte5MftpVMevY4n3et48uP20sneOdfv
MXkdT7/H5Lp+j8l1+XHepDtv8u/20t1e7bq9dLdXu86ndOdT7bq9dLdXu24v
3e3VrvMs3XlWu24v3e3VrttLd3u16/xLd/7VrttLd3u16/bS3V7t+niR7uNF
7bq9dLdXu24v3e3Vro8v6T6+1K7bS3d7tev20t1+FZ+L8buKw4W+6m8w3v3z
BflxXX5c1++m+Tyg301zXb+b5rr8+LiW7uNa/t1euturXbeX7vZq18e1dB/X
atftpbu92nV76W6vdn1cS/dxrXbdXrrbq123l+72atfHtXQf12rX7aW7vdp1
e+lur3Z9XEv3ca123V6626tdt5fu9mrXx7V0H9dq1+2lu73adXvpbr+Kz8U8
sIrDhb7q74UuPz4PyI/r8uO6ft/Q5wH9vqHrsvfxK93Hr/y4vXS31+8nur10
t1e7Pn6l+/hVu24v3e3VrttLd3u16+NXuo9ftev20t1e7bq9dLdXuz5+pfv4
VbtuL93t1a7bS3d7tevjV7qPX7Xr9tLdXu26vXS3V7s+fqX7+FW7bi/d7dWu
20t3+1V8Lsb7Kg4X+qq/F7r8+HiXH9f1+6E+7qT7uNPvirouex8v0n28yI/b
S3f7k3z6/VPX5T/43qez7uNC/t1euturXbeX7vZq18eFdB8Xatftpbu92nV7
6W6vdn1cSPdxoXbdXrrbq123l+72atfHhXQfF2rX7aW7/aq/F/dD4jpS0v37
oOI6UtL9+6biOlLS/fus4jrS8SquIx2v4jpS0t0+riMl3eMQ15GS7vZxHSnp
Hre4jpR0t4/rSEn3OMd1pKS7fVxHSrrnJa4jJZ3y6PfW4jpS8uP2cR3J3s8F
53Ed6XgV15GOV3EdKflx3uI6UvLv9nEdKbXr9nEdKbXrfMZ1pNSu28d1pNSu
28d1pNSu8xzXkVK7bh/XkVK7bh/XkVK7zn9cR0rtun1cR0rtun1cR0rt+niJ
60ipXbeP60ipXbeP60ipXR9fcR0ptev2cR0ptev2cR3J4nMxfuM6kvU3GO9+
TzKuIyU/rsd1pONVXEc6XsV1pOTHx3VcR0r+3T6uI6V23T6uI6V2fVzHdaTU
rtvHdaTUrtvHdaTUro/ruI6U2nX7uI6U2nX7uI6U2vVxHdeRUrtuH9eRUrtu
H9eRUrs+ruM6UmrX7eM6UmrX7eM6UmrXx3VcR0rtun1cR0rtun1cR7L4XMwD
cR3J+nuhx3Wk5Mf1uI50vIrrSMeruI6U7H38xnWk5Mft4zrS8SquIyXd7eM6
UtJ9/MZ1pKS7fVxHSrrbx3WkpPv4jetISXf7uI6UdLeP60hJ9/Eb15GS7vZx
HSnpbh/XkZLu4zeuIyXd7eM6UtLdPq4jJd3Hb1xHSrrbx3WkpLt9XEeyOFzo
cR0p+fHxHteRzt9HHdSRku7jLq4jJXsfL3EdKflx+7iOdLyK60jJf/A920Ed
Kfl3+7iOlNp1+7iOlNr1cRHXkVK7bh/XkVK7bh/XkVK7Pi7iOlJq1+3jOlJq
1+3jOlJq18dFXEdK7bp9XEey/t4bF/8P2ISxng==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxF3XWcdVX1BvD7zntjZu7QAlJKKkgYgAgiISANklLS3d0tLSEp3Y2CKCGK
ioKCCNiBgYBISiOKGL/nO2u/n98fZ2avs/fZJ+45e6/1rGetPd/2+2y490in
07lyrNPp5v+Fw/r/oezsjXc6T0R4IvIDkT8w6HR+EfnxyN+LPGfk3412Ot9p
8m5pf3fqvxf5+5HnUR/5j5F/EHneyHfl/zcifzvbd1J+Kcf/LuXvprxrjr8/
7e+P/MPIi6T9g/n/Q+fP9qOU38j1fST7H9Zvjl0/8v9S99fU/Sfl72T/9yPf
H3mBtPtz2jwa+aeR90r/L6b+uciPRv5Y6p+J/GTrezH95v9DkR/J9ljKq6XP
v6T845RfT/mp9PdY5J9F3if9rZ59f4v888h/T/md1L8c+ZeRD0j9fyK/GvnX
kQ+J/G7kVyL/KvJBkV/L+f8e+Q+RP5HzPxb5l639UpH/NlrPW/0Raf926v8Z
+YnIK6T+5dG6Pvf/b9eX/3+O/HS2Z+xL+3+l/GTKq6b9HyL/KfKfI68c+e0c
/2K7n33T/69T/4fIf4r8ydT/Jf+f6tQzejrlkV76bOW1Uv9Ut87nvKvrP/39
OPJPIu8xXr+j3/NH2R5K+fHUP9ie52t+uxz/buT/RN4px//P79ipc/zXO5Pz
vXdKlXdN/UJ5Tz8Yebqpnc4l6X+ByB+IPBH5osgzRB6P/Franxx5ushjkV+N
fGLkDXLO0cgvR54ykbap70f+W+TjUz9z5Okjvxn5i5H/1q3f7/XIG+b8W+b4
BVM/lvNNl+PfzP28kPqXUn9M2s+U44dTqv2pkf/enq/+j4v8bP4/E/n5bC+m
PN6r9u5n3/T/gRz/ocgzRL4s7T+f8y0aeabI0+d8H0j790fuRd477UfyvxO5
m62f8nja7Jn9/bTrpq9Btl7qBqk7O/29muv5aw55Luc+KvJ7Uj9T6mdJ/RWR
R3Pc1MgvpP6z6ee/af9G2v828mGpn5r2U1I/Ne3PijxlrL6/KZFHPc/8H7j+
ds0fTP1iKc+c8uVpP9ae92jkcyPPF3mhyMPIXx6v98D78N9snezbPPc/15Tq
fyz9vy/t52/Hn5f2Gw3rXH/3bqZ+zchv5tDHI7/t/cr1vxX595EPT/v35bi5
037ebPOn/LH0t0LKC6Z8fernaf2Tr4u8U/pYKfJCkedI/x9t7VeKfHfq54o8
X+QFIl8T+WN5fh+JPFvkw/P8PpP6LVr7b6Z+zcifj7xK5G9H3jHtt4m8XeSH
036L1B8ceSty6peNvErkRSJ/NfJhuZ5DI38+8kdzPduk/vDI20b+aeq3i3xE
6+/n3p/Ih0XeJvKjkVeJvHnkLSM/GHmZyJ+OvHDkWyKvmuv5ZOT5Ip+e61m4
V9+b858Zebm0/0zkRSPflva75HpWj7x45DlzPXtF3ijyspHni7xI2i/T5Hkj
zzpWv+c8kd8TeY78nz3ynNnmTnmFnG8pcson5Xxzee5Tagywb7Ycc1r2L2hc
SF+zZ5snde9P3VW5nqUjrxz5g5FvivyJtPuY4yMfm+N2GNb1OP+s6WueXp3f
dXwh9bNHnjXy7JGPirxa+/38Hj9Of5vm/8aRN8u2Rcrbp/7olHdI+Zep/9RY
3f8mkRdL/xvk//qRN8y2sW82/e+a8nop35X+1428duR1I38j8vI5fs3Ia0e+
P/0dkuvdp/W3ePrbJ/JWkVeOvFDkw3P8nvqP/IMcv3mvzue834u8WOTF2/d9
YOSZIs8SedbIhzj/WL1/q2mf852T/1+JfGO2M1PeKO3XTXn9lO9J+43yf4PI
n23nPDD1u5NTvjf1a6e/rSOvGvk76W/X1O/U7udrvodevc/O95XInx2r+l0i
/zrt90j9LpF38/6m/ojc7zGRd/Kt5n5PT/0JkXeP/KvUnxP5pMh7Rv595K3z
f0u/Rztmv9TvlvIeKf+W/pJx4KfGszZG7JDzH5v6nfWX8x+b9gdE3jzyQ2m/
Xuq3j7x65O+nfr9h9b1m5A/kek5K++Pa9T+W9p/O/xWn1DehzYo5fpOUP5fy
D3P8EjnmR2m3bY5bKXXrZ9sx9Wv5/VK/Va+e7ccjX5t274n8nsj/yrVuFXnO
yLNF/nfk7SN/MOMb/W21/Hlvjl88cj/y6vSzyF+JfHTkYyOvFPnWyMdFPiHy
KpF/3i39y/i4TPpbYHRyOul8JvLsqX/B+G78ijxb5DNSv1XqV4n8nshLRk6T
zhqR5zb+pL89Im8Q+aZcyLdyHzNHXjvylZF/m/bfjPytpu/Nlue5Y+S1Ir8v
8qmp3yLypyPPPF7/yetlW8GclD7+nev5ZMqXpPxS+l8gdZ+NfH2/dEq/rd94
UtfM9dzb9Ms5cn+/Sv93Rf5m5B3T/5NNP/yG5xv5sci3Rv5a5K0j/3S09FV9
bRP5Z5HviHxn5G0jf32kdEU6460pPzFasv1bpH6F3N+v2v3uHPk3qb8n8r2R
d4n8y1zfr5s8V9Nr6U+3uf+m//0+8n1Nv/5u6u9r+vSCqf9m5O+2+vdF/nrk
b9GvvQ+RH2/6HH18PvpL5J0irxP5mjyvS9P/7u35zZf+f5znOY/nHfmq1K+e
7Z953ktFPiXlWXP8x1K/TOSzI6+V7R3va+QzU16OHuh96NRvNEPafzjlDVP+
Supf991EXpp+FflDeT6XRj4+8qfNJ2m/V+SNIt+W+iUjfzLyxpG/HvnyXO+B
kQ+mH6f9iak/NfI+kR9N/bKR1468fOQvR94//0+PfEa2A1I+0HWm/MVs+7mG
bsn2/zLtd4+8d+R9I/+sX/3ob4Vsy6a8bvb9K/f7iZTPS/nR3M9MqfsI/dL1
5X6mjtS7OmOu7/hc7yad+n5mivxR31GpbJM21ro538Ypr5jyxTl+Xe9F5G3a
N7jcaPXv93o/eyPyDO17mTfyLyLfGflu40HkbdPHeMofps+mPHVY7ZeIPJH6
dUbre/F7zhB5tbR5OxfzschfSPlV+vJI3c90qX8q8hvm+8ij9NfIf59S/U0f
+S+R34y8GF028p8jv05fiNyP/E7u752c713fD3us2R/ssw9GfiDyDzplX34o
8s0jZeux+W7xTaf++pRvdP2p/8pI2RJsiptSfrBbsv0zpP7iyFdHvtagGPn7
zR68IfJY5Du79f1dyc7I/X672avXRZ6a+isjXxv5etcf+cuRL2vj5Z/T/sjI
J0U+JfLT/bJ/v9vO97nc72WpvybyqZH/avxL/TmRz4u8Tuq/HfnLkS/220d+
JPLtkb8cea3ID4zW9et/tcj3Rr4w8kWR1/P9R74o8iXGwsiv5P9LndJ56cAG
Y/bkP1I+I/XT90q/J2+a+3kz1/eP1L8TeXP6fd6P9fL/+ex/LX3PkuNnTPu3
fTfuJ8efGvmLec+npv5bkW+KfFbkkchHpP3Nkb8U+YW0Pz/9XJn+r6bH5/6X
GtZ4f3nkjVN/X465OPKlkTeM/IPRer5+j00iXzVS2MA32jO6f7TGB8dvmvrz
0v/lka+I/K/0f0jkEyKfFPlPkY+PfErk0yI/H/nE/L+iU8/86JGyQZ/ulM3K
Nv39aI3d7P7d0/9fu1Wv3eJ5Lm81+w5+sHezn56N/MhI2bdPR364yeznZyL/
rFN4wP7jhW8Y/38zUvYHncNv5Tejizyf+l90Cg842PcV+eedwg8OHK/fhb3G
noZ7/GW05jbH7gfPGK3543cjZZ/9LO1/0yl77eNpv0ae/2vt/Iem/ifd+rbg
Kh8dFMbBFn2mPYM3Rku2f8+0vyD/v+b7ynZOymd1ayw9K+W/5/k+PFr12q2R
9qek/rTIp0d+JfXXRL7OeOs9jXxb2h/bxvtV0/7M/L/Rt9z6hMM82SnMwTX+
aLTObW7dzHwb+UvtWj4T+avdOtZYMUvDH/we5u/N6T+p/2rkcyO/lfMfHPn4
yF+I/MfIX8r/m40P5gjjSZv/fa+r5/ibulWv3etpf0zkkyPvpW3kRfP+L0sf
ob+n/fb5Pj4X+VORb871LJ3nf3uOmT3lF1P+9WjpIHSPnegX2b9j2m5H5+2V
znGHua5Tugi8iY5CN/n8eH2j3gnvAizMO+jd8I54Nz+ZfT825w4Kr3o12xIp
P5t9q6Z8df5flW2QfaPZloo++mj+n5hzHzWsa7on/d3dqWv927BwvjtyzDLD
0lnoFnQMugydBPYHo6Kr0OnoWnQuut6ROeYL6fsn6WPJnGvJyLelr1kjv5Dy
z0dLp6JLbTdeGBesyxhmLHs3bdZJ2276WG9YeNxzOX7dQeF9L4zWN+TbOaRt
sDMYmrp/DgtXg1uuPKxvkK5L5/Vtwm+88951+KBvyLfjG/Jt7TBeuiKd8Zej
tZlzzbU7tGs295qD3cvro/Ub+W3eHFafxg5jiHOtmH0/zbUsPSh84q1h4ZCP
ZN/yKX+vjY/09RVz7HfaeH9M5E9FXmRY88FRkX8+LP1tt8h7RF6y6ffe7118
35Hn8/wj7+ZbSnn7kdItdmn7fI/Gz91T/pjvKfIxkXeiQ7B3c107NPnevO+P
pY/f5P++xvm0/XzT930P9/dLx9ov8r6d0r1O65b+pfyL1B8a+cR2vff1Swfb
R32ndLAPpv+zUj4o5UfZWk0fpN/9OO0vyzkPaPWPpP6KyAdFPiTy0rneL6X9
uZEP8xv3632/vo1HL/ZLb6Q/Hprt8JF699l+bEDfwIHduv/jzA3Gr/R/WOQj
Ii+T/q+LfHjkIyMvO17z+wVNXi7y9yNf0o5fOfJzozWmG8vhvYsOaz4yL/3C
79f0DfPVM/2a765s85nx0Zx1RKd+Q8cc1/Rd4+lz/Zo/L2/jGXvua6P1fE9u
+sMRbbyijzyV9hf4/lv9E5GPbvMlJ8CP+jWHwYJh3OY2+KU50NwH74bXzZvt
xvHCV2ywFhieuq+xcacW5gf7gynBlmC0sFrb/HSG8arrjRVOSQ/537DKsMv1
mm4Co4RVTmKOsBU6yUg9Y8/a90FHohut376Ps+k4uZc/DQszg13BsGDH2tCd
fFOO1QedhC6ib98fHYtutUHb6Cq+SXV0FLqHZ+7Z63PBbF8Zr3PBhz+Y6z9j
UHjh3NnOaTjMNqmbJfIpkVeKvP2w8MXVUr5lUHgOjBBWCGOETd4e+cNTCxOC
DcGDF0n7swaFt304+5bIdvV44Y82WOSnplQdDHPB1h/s8vomwzhhqfZ9JNu1
49UWpgfbg0HDoheH344V7jb7RJU/3SsMzr73ThROCJfeYlgYHCzOnGhu9L6f
ywbI7/HEsHQ4uqF33Lv+p9Hy4zxrXB/WnGuuNmebix8arTnc3P17c1vbp/yH
bH/M9na/vvuFU15zvHRpOvVP0m7tyBe2+fTRyL9NmzfS/mZz6LDGmzNSfjP7
Hk95y/HCAmACfEefyr5HU7/koPw7vmG6Gp3Nt+0b8y35pujufD50NzrcX0dr
zr6jfU/mcn3CCGADzqUNnZGu6NhfDeu7NE4uMKwxwFhgjDZW35Lt5mwrjNf8
8GTa/Lt914sPy8Zwv8YkYxOb5JqR8tGxVf6SNjPmXh5K++WGpSPBGmAOf2i/
BQwC9uA3+Wi2WyLPFPmvwxoDjA8vdmpseD773pO6W+ECw3rmdEK6oN/ippRv
zLb8eM1frtncBpNyL34TNhDbx29lzDR2GoPNRTYY1kqtzhhnrDPHmevMbwfB
OPo1ns6f9/HGQb2j3tUTmj7Knn8kbU7ulu1P13s58iV0lk7hHexp9vG8kdcf
KTxki27Nr+Sr0/5zI4VtwDg2TfmnDc+Ad12X+j27NfepuyPy4elv3cibm+9y
fWdG3jrytua69H/aaOFp20ReaLzwAnjAlpEXiDzPsOY7x38/5W3T/56dwlNu
TP+bjBQ2AaPYLOX9U39Iyp+no6V+i5HCzmBoW6f8A/ZYv3CHE0cLY4BFwCRg
D29OLXwH/nJL2s3erf6d5/bIt+a5XpkDrobf5/hdsm8m7z8cJPJl+T995Om8
gylfnfYXp/0l/EP0tPwmF0W+NPI/cn+75/iZ0/YafoDUP5f6f6R+yZHCJ27M
8ZdHvlK/qf8Pf8tIye/4hnL8YKTwqDNS3jrb6EjhSyenvHPDc+BHt/ZLJ6Qb
0nHpuoekvwvT/8Xp75+Rd0ybGUfq+oZpe03Of2nqL+d/ijz7sHQnz+pbKV+c
fTt3Ct+Ez8w0rN/7U3TClD+b49cxluf4C9kDkT/q/iJfEnlTcx18LfLlg9IP
4ZdwTPYCHZQuSueme3847T9sLE/78/lnxgrfN0eYKz6Z+iUjL80fkvpPpn6N
KTUnm5uXy/9PmEuyrTC15ghzxYop30l/6Jbu7/nMNqh+9PdxmJd3Hd46pXyS
fD5r9Wpucn7z3DL5v/SU8uHAsF8CDtNlss2a/l/mPxwp/HiWyLN6pzuFX9+T
8kwN74OvfSm/xfN0gymFj8HPNsu+/khhcef2C2OEB787pbBH+9X3Rgq7u5JO
MVK/xx0pL92tb1fbC3L8sen/qzn23Fzr3+gWafMf/pXU3z0sHA+eNzJSWPTZ
7ft1P/Dw8yNv1ym8fY7IG6b/zTp1/KXp/+WphX/CR0+LfNFo6dNrRp7HXMWW
6BR+PhdbIu0nWv3lab9bt/RjevJP6Wtj5Z/hp3kx7feOfGbDX14ZLzvNWG/M
Ny+Yk65qsrngooZPwbv+16/x2lxpzjMfsbPZ22x6GDY7m719XqdsfOP8bSmf
P1LzrnnY3Hxm9t+Rvr6R7exOzeHmcjasudecZG66p+nLZOO9OcZcY443r98+
Wvr/2an/Xerujnx+p+Z088nkfNTqzdfGceM5DJeNzr6Ez8PL6H+PtvObg83F
5nP4DPye/fmjbuGNcMfpB4UpwgJu7hSm+MPROt9XU34m7W/sFl4Bt3itX5gF
POT0tg8OAY+4sfV5Xbf60+9wUPb5g60/8+kVDR+BT/YGpQ/QHdiU2zX7ga7B
BmVv0skfa/cDK2A3/iTy7SM1D3+r+QfglyOR72v4KvyUvU+noluZ88398Al4
G9yNfgZzg5Vd0fax4dnydDa6GzyaPwe+DB/uDWvugGvfOixMO6fsTIzUPng1
fwJ8GV788NSaX43vJ+T5LTxa/ir48iD1S43W+7+45xV51VS+NaXkY1O+0bxj
7PBsU94n7/+5U2queTXt9418XuTzI7/GFhkt/xR8eizy/hHOT/2XU/9G5Ovz
/32+Rb97yndkPLs69demPCe7Le0viHxh5LfSfsqw/G3w7a+y7/t1Pa5rnrT/
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
c7075f9X6SU590/Gi0Pqnd6SbyT7HkzdMWlz6LDKOLB7Tal9t2ffOebsbFcN
y85h73gmbMtHBsUNxhE+oVdt8eY2bcdsMFb83v3ozMay/N+Dvptt35SPSJt5
RwpvnTHXf+hYfR9XNPzTfbrf66eUDbpg+rjJGJZz7Z3reSft58jxX2v23H3e
Ee+a73FYbWF2OL2OOa79Xtr/D/6aNrPCNLSZqJggNj7MGFfUb4P3h+fnN7pn
vDiwOLirp6/bBsVtxXHdxbsyLHwYTrxW+nsjbWYYKXwYHgy7x6XgP4Lhs+vZ
975Zx/yXD3Gk8Fh47UH9st8967nZ0pHnH6nnMz5aY9cfI7/dqTHs1H7xGPFG
/za1MDn7lGF1d6T9Ovm/c863Z87/9ci3Z1sbjmuMzvkPSt0hafP4eNWt4Vud
Um02Hyv+/qHZ94fx4gTi0uHUbdUvjrc+9YX7vX/a7Zv2B2Y7OOXLs++slA8y
vqXddYPCXeGvK3q3I19tTk55y2wn9esc+v68ZzFRbdTtMSx88Jx2PX/M9Vwx
KOwZBr1s2nxtWLw/vM+xlL/eMGIc9xXGCkM/qfUNWz9srMYn78NnJ4pThFuE
44TripeCj8KfxI+EU4VX9EzkV0Zr7sDreapTcwgOEy7TS+a30eIs4V+IOXkl
9Wulz5e7xZf4x7BikpbL9qtuxSopLzsoHq19dENYP8yfjuhbh5XDzH3zMPbL
sm3SK+ydLYfr9aNO2XT4InjQr6a89rD6xq3CsXIOdfgjYkq0ef9E/UZ+G/7c
Owf1Dnl39urVbwXbh/H7zRZJ++/SmVLefVgcWL4KPovNYdtsgLQ/LuXbUn5g
vGIOvCMbmouGNV8YL5ZNX98aVCyBmIL90+e3B7VP+YBecfa/mW3DXnH5N0of
+6XtATnmt+n7O4Pi9uP4f65Xz+bSbBv36hn5tmHXMGzfuGt3jLbu4b5Bcf/F
ABzaq3PdnW2DXp1TTIBrci1iBRbNNd9Ph0l5z2Fx4XHjceRx4g9oeNuR2fcU
X9+w8LzDIn8qx145qHfYu7tcr2IoPHPPWmzFwhM15hhrDmjvNuwRBukd36/h
f0ek/Gf+tdanvrYd1tiAG7tAp8YI9yI2Q4yGe/Js+HL4dDwj9yKuQ3yHezq9
X7+p33KLbMul/2fS5ujUbZxzf39Qz8yzOgxeMVH7lA8alk/IHGVu4ivi0zq9
9cXXtXW3+NpsMnYEzjwuMI4vru97s30uba5I3beHNYeZy+hpf0rbrcYqfsjz
fML41eZP+tU7Oe+XehVfQZ96O/JpkY83d0V+bVDxSfsbr9p44j3z7onH+F3q
z2j6k/iNX7fvwFi6a+RfDArHoWvQOfaZWr+TuQEHBxeHHmHuNIfSTcRHbJvy
9lMrPoM+dnzrT7zIyTn+qCnFocOlO7fpi+I9/tCes3dTfMgTkS/oVbwIfebf
3tVezZ10sf8NKh7kyMhHN/0SJ+jYpm++NKiYErquZ0pPEB+yXTu/+J9PtHdB
DA7fGT3T3HVu+w3oAEc3/fDFQcUPuf5jm75ofr+8PW/65s5jpa/R256H/zZ9
hn765qCu2/Vf03TM63rlX9Xfy6k/YVj+TffzTI7fdqzixXxfT9N1xio+zPfw
5HjpHHRTOipdxJxEV3QN5qrdx0q2/3fjhcHB4tggbBE2GluNjcYuE5Mo1o69
we6Yc6xk+780XrYJW0gMltg/8VzvS7k7teILYV6wLzYYu4jNpL3j2C0wsE7r
m20Dx4L9wcxgZ7Awto+YQjGq4kjFkrEfXSO7R712sDPxjmxlNrP4T3OQuYjN
yHZkk7JN2ZhsTZxr8YfsZXazOcHcwKZmW4s/ZItqj099Ua+er+f81KD09DPa
eGycMMbv2571b8ZLvz+zfW/GazYUW2qHplvu2fRx+sjvx0sn3at9W3+lO4xV
fJ94rO+Ol13u/sxpy7Zx3NhPJzCuwn1hxWxWtqv4ULY+mx+fnM3Odjenmdtg
rrBXz4vdD6OD1bFZ2alw00lsdaTsZjoYXUx/sARxxGJ9vTPs/I+PlW+Aj+Be
7+Owvn86K911s27522FMsCY2KlsVxgXr4p8Vb7FV81dcO1r8PfyKD0Teq1tc
Q5gSbAkH8gudwsf0gQ8CG4OR4UPiceBzwOPgcvz9O3UK88Kv5FxyP3RM3NVD
eqW/+3b+NGicjE75cHEoLmj+Yv6exdJ+3mHxoZ0PNndh8wfz7ywR+bzR8o/z
33xovPwCv2/no9tePVpcRtyOBceLD3lwu3/8keubzJ+CnwgDdK94hZ8cL24O
/xA+KY7Ozc0fhW+KYwSDdO94nb/N8/pm88fiQ35ivPy+/L34l3ihOJV8xXzG
uJZ3jZZs/8fHizeKrwkD/WbD5dZozxb2eeRo46uMFJbpvtzfgW0ffuNJbf7D
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
97T+5GCXG9694ZThkrnHTds1u1bPHk4I18IlwT2WY1uubTnD5RZ37zgjuCKe
gRzoOCV8VnJpyzm/bPu95GaHOepTX7jYcjR+ql2v3Pd0HLoODBeWC1OELdJp
6DYwO9gd3BLOinOMewwThY3CX/do9il8UEwHrjbOtlifZZvs95fb3bE4sjBd
fcAAYYEwX9ivMiwTJvyzdg54Ls6tc4uJ5sfiz5ILHo8Y5xXmCnuln53S8Fh4
Lo6xNupgv/BeeC2OLH62a3aPv2n3greN4wszhgvTGemJMFxYLnzypIYvw4M/
OVGxC2IYdhurmBmcRLgq7FWMl1gvMVlis8R4ia0SYyWXupgsnFkcW7nfYeiw
dDkk5ZIUE3FQ+97kascJx2We5DQPK4clzi5MGDYMXz2x6W/0Ybg17BzGClc9
ve1Tdi83NL0JJutYeO/JTb+jL9rojm+1Om3pWjBnx6ijJ8J4tfGs6NZwWs+M
Tk9vh3PD1j1zz9iz9VtM1/RNOZV27tdmjDe2q/Mbwub/0X5bMS9iX3CmxWJd
z37pl95I1xRTJpZMzIbYDRg/HJ5dwLagQ9Il2RVsD3WwenaANmLGzm6/p9iU
1SdKFlN21Fjp31c3vBs+vVo7n/ddrAKdle7KxmBrnNL2KbNFxIzhfOOEi/Vn
o7A76ND0ZjaPfcp0aTEnYk/EJL2Z8++We9216f10+9mavcB+YY+wS9he72l6
+7QYPHxpsWK+sd0afu/bw9nE3cR/Pr89a74SNpxnLqZIbJEYLLGKzr1LsxNc
A5wedj99s0tuGFaOEDo73X2Ddv1+D7F+npljtPUs/Xa7N7vCbzjtHmZt9zZL
szfkzHLvYtzEgMmHsme/dC+5ReQYoYPN18Y/4621LxaYqPHO/LbyWOF/OGub
NX+ZGAK4JFxXbIGcVvhDO3WK+ypPolwmcprIY4vzAoeAg+DCyGlkHQA8VrmO
5DSyDgHeq1xHynIlbdepfdrKfbR9p46REw1P1zoDcqXh8G7V8HhcVjYMWwYu
yBeKz3pAzv/tfvF/5WzDj1mg03K5jVd8xI6d4vaKid8n7e/uF7/UuXCD5WBz
ThwJXAk+a75r/uYFzLOD4pcf3TgMz3cqbyxOA27DC53Kk8l/PZb2GwyKT2HN
H23UyZeHE4EbgWOBa3FUk5/tVP7eY9o59C1fLE4IPA1+hztiDaMTGo/E2kbW
GHLNrtXaQ2Ke4XJwSPx0ayCd1Pz81kbCacfV5uPn68dJx03n0+fb1xZ3BCfA
MdNipvn54aFy1OEZW6dB7jo5r6w7gacsF9YC7ffCwZbLTo4aPhS+E7lr5LjB
Y8Y7lvtGzhrvlHdJLhscrxXhwv3ifskBJx7HGgRyw+FQyUcoXyNulfyL+BIn
dYobvHrzz/BXySUjfyJ+H36WfJN8NXJJ4TDz2cgpJVchnrJcU/jkm6T/y/oV
C61O3iscZm1wBPnN4XC4g/IR4o/gZ8oHihOCI3Vew9PkLJP73xoacplNW9NC
PrG/jVUONPuU5UaTQ38yV1Gn1taQA8k+ZbmRxADLicSPIDZ4tta/54377tlu
1/A+z9hvhUMt/5/fzG/Ff8P/7TfD6cfFx2F3UjmS5Pm3jojcSXL4L9L8PdYa
seaH3G1yuL04Vjnd7FOW600OJ8doK7eTnE/il8UnyQUlZ5R4SHxEuaScS+6n
3M7kOflLxDh/q/kjxIjhUONOi7UTE4Kb5PvBhRKPAWeHE+OzyKP584Y/41ZN
8pu6lb9TrKH8to+07w1XaY8mP9yp/JfyWcvng98qX6Z80GIlxEyIDRHjaI02
OLjYR/mm5Z7Gs7LWm7L8oDhX9slBIofKzxreB/8T4zgtthG/Tj5r+brFSsoT
LH8oDhcul3za8rGIr5Sv+qDWRp215A5o9+xerT0nZwscWu4+uVzktZbL/ZFO
5R3dq+1TlosULxOnG5dbHB2Opn3KYuus2WPtHjn+5PoTIy1WGicRN9EaODjm
OHjWgnIMbjeOt75wFnAXxLyKfVXGbcAlt4+tw++PO87mkWdYvmz5V+U9F2N8
O32wX7HH8o9qo04+VTHkX236iFh358BFxydwbjlEcOJx4cUGsvFxo3Ck2P7y
sMpzJ9+dvKVyoskdz78rV5qceNqokyvPmmV4c3ht1jKzppo4Jjw4a62pw63D
edPmvPa+8ofjOlrjDO8P71C+ZJwr3CscQVxBa9jZpyxXMs4U7hTOHe6d+IGV
c92nDor/ZA08bdTJRTx5LVPbenBjxaeUj3ifQfGpcLpwr3CwcClxuHC5cMJw
JXGscKcmOVRj/5+zCW8SXuPaxxqe4h7EX/V6lY8dP1R+dfHAYp7EPsm5J3e9
HK9y8SnLNSjnoH1bt+ft+5PbTo5C/PKrO5W7UM45/Fr5iOSik3NIfnv5aOUi
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
/g/iR6vH
        "]]]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwV0TtP02EYBfCHWrRKNR2aAIuXBAZiIdFBJW3xMjgYrMaCxgQWPgAMjMbJ
rt5axU+gKwlDU9NqYmtggKTRyXiZiJFEcda4+PsPJ+e85znPefv+e2pp5dZy
KiIKcADqRyNyByOeDEVcz0SM8Sr4+0DEV/gCi9mIjnBGpid/Rv4ZXcY/zWfw
gkxb5hC/ZD+vp4gbhyNaMnV8zu7HwYjHMjWz28n9eMvecXobp81y9DT/kt59
u1eS++y/pp/jppyqaOE/7j2fjjiW7EGR/ss7Qu+Yr9Iv6Ms6Plu6Ye8m3IU5
2TvJGT/Q+8ZvG5F5JP+ePkl3cdO973BFrio/i3/z9uAHvJWb0t+wt6anJ3uC
NwxV2Tz/A68r28dlHRfhGjw1O223LduBSbrOG/f+IX/UGM46j+rpe8uE+a6e
Ap533vDGlPk39/7if8IXZK/qPosfmq3za/xXsEm/xPeT72uefMh7dIn+p+8/
IoRB3g==
         "]], Polygon3DBox[CompressedData["
1:eJw1mwm41eMWxvfunH3s7fz/3Uu5UlFJJUUDFRlShiu6lEQZuorMGijlumSI
jJUmmeco0hyleR5UNI8iUjKEixRx35/1ep7Wc771zf9vWOtd77er1rnbxV3L
ZDKZ04oymWL9LZdmMucrcbbSvfOZzMmSskovUPktSSZTV7r+ZeZIvzaJPMoW
Sroq3UfSW3K6Kp0h6an0hyorzxjSL5BUUXqx8m5XWVmNl0p6Kf+OfNQ5TOWr
i6JtZ+mNpFfTnNZLP0/6UdIXqbx7EkKa/m5Teq+kvuo2VZ1bVPc35iL9TOnd
pH8r/TjpJ0u/UfrhGvsi6edIv1P6IMlAyb2S+yS7VL+Wypuo/Hrpn0nfLumi
9HWuc7HKrspE2zLqLyvpofRtkgNJzIGxu+ejrLn6a56JOj+q7Hjpp0i/OR99
HyO9cSbG2Cp9i+Qapa+V7Fd6n+RWpbtKBudjbObQT+k9SXwj33aTpHwae8pe
9pE8LnlMco+kbz76Zm1ZY8ZYJ/0o6SdJ7yT9yyTWgG+/QfKG0r9qrX+TjFL6
ccknSn8qGZDEmeBszJVcp/QVkssljdS2seRSpSeqTP8ytfNRNlnKwZmoc1kS
dSg7TtJe6UkqP0jl9aRfKX2G9JmSjux1PtrSRwfpp0ovl4kzdJr7oC190HeZ
0hibObRLYk5ansyUophrN59nzvwp+eiTOTA2Y60uaD2yWmPJRqWf9PdvkwxU
+gnJx0pvlTym9AjJU5JhkuGSwUm0oe6gJM4063+0ZKPSQ5JYS/p80m0/U3p7
UfSxphBzYOxNkqHK+1xldTXfDvmQ9vnoZ6hliMcc7Pt6s6SJ7zbpeWqvZfkz
7wb2WtJA6YasnRbnbM2thcpvz8ecmQtzor9zlVc5E3mUnS29UibW41HpV0tm
KT1b0jmJvG3+Ps4ONqKC6q8rCttxg+czX3JTEnNgbuRR1os1UHqt5A7bG9qu
l/xH6YeSWHv24GGlW6h9RbXfIr1fEnWou0HyX+6V55dTnTr5mO+/JTWUrpmP
teA8Y/NYk2vdhrrYwoM0ucMzcSY5m7ShL/q82rYQW8Z5xCYyhy0+H8y1p8v5
Jr7tTNU5QnU3Sr8nCSG9SXJvEkJ6s+R+pfNp7BF701PygOvTR/N8nC/uNHcZ
W7pa6Sraz6qStUovV9tTSnQWJMuUnis5UemGktlKD5UMkQyTDJesl6yTbJBs
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
Hbw=
         "]], Polygon3DBox[CompressedData["
1:eJwt0l9ozXEYx/GHHetwzln726SJs0YUaiORzRYlTCbhyp9yz5QrF65Mrvw7
aNfKvXLB7Jyp2U4UNVtkyR3iwrX8KbxO33Px7vt8P8/neZ7v7/v7Fs+OHj2/
NCJ6sAx3cxFfl0R8w7bGiJlCRHV5xEf7L9hMq9Au5iNeN0QU1XRjOBsxz/eZ
5xM28j3lu0Y/nIk4hGF00NZgxrAbZq0VFzGm9qG6Cqpy3bQrak/oPWZtsW/F
aXNPIau2bP5JcdD36n1EOILL2aQN0Vr5/vL8Q8mM53pP44k5d2p7vmksiHvr
33tLTYu4HW0o0R7IV9XMYkH9dtovPXeZcdC4QZwz9x39LRb5v/O+ty7a9+sz
gN24p/8Ab4eaNlQa0jfdpM/rPYc39RlThXTfJbktap+Jy9jQmO54E27Lzanv
cpbVWIU87QPfoPwQ9mCc9oOvT36fuQdwyTl2okn82DkmkOG7wDeaT7lmuf3W
lbXzONf1XPpfV9Ek3pFJPXvxM5/exkt9XuAVVvD8ofXLN+fSvf3GffUT9f/Q
p/fWQnoPs2ZM0ssYlzvDO6VPp3PkPNZ1zrI+m9YePJI7ztOu97HaO8AIOvX6
D/NEWXs=
         "]]}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0FdOQmEUReED4hXUSTgWRWxYEETscQA4HXsbmF3sYu/tS3xYWXvv5Py5
uV2LS6V6KiJq2MtF3Cv7fIAH+ZCP8Cgf8wme5J4k4lR+lhv8wnnbSkdEL7/q
Z/Y3Luh96Me7PsCDGMKHXuRhrLod4U/bF0blNdsYf+sb8jpK+o9+7v1fvuBI
R1zxJVLyDV8jLbdg0924u1tbRt/WK/oWl7nVlmBS3rFVeQJttmmeQg1ZfY5n
MYOc3vRmOy/ou27n+c7Wacv4tGVbd/L/f/8AXlU1Mw==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0MdOQlEYReEfNCRqxIa9YiE+jzOHYsMGduwvA4pt4KvZu/AlDlbW3vve
cwYnmy/NFRMRMY/Hloj2ZEQa1baIfCrikhe5w/bkeycv6ctYQZe+ygWsoVtf
5w1cObvJPbYMtuSarcjP7uq1Xesl/UXv0/vxKr9hQH7nDwzKnzzEXzzM2859
yz8Y0Xf1G/ft8Kg+hgP51rbPexi3HXEZh5jQT/kEx8jqv+6b5HP9ztkzntL/
7NN8b7uwzcjRGlG35+SknMCs3MxNePC4Ff8vpP7ftwHJRyq2
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L1KQnEcxvFfKihaIXqglyEQdMglG1Ihg6ao6AUyFImWLqAuIJoaCgqK
LsUpqDuooboQa6jmPlHDl+/zPOf8/xxO5ehk73gsIgao5iIKqYgpOVuIeEhH
5PiRy7ZlzxN+0V/xhpr+yV/4xqI+nYmYwbizs7xi2/w9LxdtHT5115atpK/q
Z/ru/3dcydc4kG/4FofyHff4nLu849yFfIm+vq8n7uvyhr6Gtjxpa3ETHVvC
ZZTQ0D989ztGqOrb7qvws5539onn9HV7kTO2e9uE3LQtIS83eAFZuc7z8Fqk
vD9M//3fH6xvIFE=
       "]], Line3DBox[CompressedData["
1:eJwl0Esuw3EYheGPpBJxX4KRpEpiAxKWYGZqASxCoklFWy01NjCWiAjCpBqm
WhXRMnIb0As20EcM3rznnOb75Z9OrqwtrfZFxDLWByOm+iM2OI0jP2R4E8dy
lnM4kcuJiIJ8Ku9zmau23FBEjSv6gf2a23oHXdzqwwMRIxhFQ0/yNLbdpvjF
9ooFec+2yC29JO9iXv/UH7z/xc/c5SduoiM3+BFt+QM77ubc1WzvelGf1Qs8
w2+2JibkvG2cx1C1/fruH3zjRr/nOu5w9ve2N8+5omfdXnHJdmE7xJbtMvH/
//YAGks8sg==
       "]]}, {}, {}, {Line3DBox[CompressedData["
1:eJwl0EdSxEAMRmHZbk+AU3Aa0hCKHVsOAAefzGRP4lOxePX0q6Wutu++fj6+
q4j4xG4QMeYVHm8jpiXiiWf8q3dxvuRlZqywyz3e45DIZ75gZPfKx9xF00a8
6hWuhs703uRWruXwkIKeuo9WPeAheuobrrnhKufslZxDk7Pyu/v6fHbdCbX6
Ra/iQJf9fBO6fLe85Q3W2Mrhvg0t5Ge78zyTr75/wQ96E715fqveCTP1kTtM
1QfeY6K+Nz8u///3Dw8QORU=
       "]], Line3DBox[CompressedData["
1:eJwl0EkyQ2EYheGPKhdJ9M3cUE8kiL5bgZmpBbAEfR+ijXYLesLyPFUGb73n
nFvfP7hdq+vLa1URsYKaVERPdcQwXtIRW0nEK2/zoK3B9yHe0/dxgLx+wkWc
Yky/4Eu8u73igm0Kt/Kn7Y6/eNr2zfd6s7dn9AW0ym1YlNu5A0tyJ89xC8/y
g7uK+x/M60/6r/zIk/oEyvKH7YavMW475xLOMKof8xEOkdObvD/Cu/qb2x3O
6o32Ac7wpq1fTssp9Mn1XIdeuZYTdMvP3thI/v/vH73nJBw=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdSgmEURNGnAwa4ALOIeSNGVBQjGMsF6IpMmBHMCbPowjyWg1u3u6n3
1V+kN7Zym3URkUdjMmKoPmICzw0Ru4mIF97jjC3l93E+0A9xhGn9jEs4x4x+
yVd4c3vNc7ZF3Msftgf+5Lztix/1Lm8X9FX0yL1Yk/u4H+vyAC9zNy/xk7ua
+2+s/H2z/iNXeUGfx538brvlG8zaLriCMnL6KZ/gGFN62vtZLuqvbvd5Uu+0
j3EH79hG5Xa5DSNyK7dgWG7mJgzKVW9sJ/7/31/HeSyW
       "]], 
      Line3DBox[CompressedData["
1:eJwl0DdWA0EQRdGCQAGsghDv7TLIFCIQHgnvd4Y3QhgBwrMcbh2Cd97/NdPd
09NRqk5XWiKiiM62iFJrxBLu2iPOChF1PucFs0HPF/lKv8YN1vQ63+MBVf2Z
X7Jb+8obZtv4kJ/MPrnBO/kuf+kj9t7VDzEmj+NInuBJHMtTvM+jvMffeU6e
gQP9V2/KP7ylb+JdfjR7y2dYN2vkd+Qclbwr13CLVX3Y/it8mfey9oKX9SHz
eR7gU7Oy3C/3YU7u5R7Myt3chRm5Zo+Twv///QPRCzUQ
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdSQlEYROFfBgx0Fa7DjJgdOXPqAnQFqJgDmNO2FBOIOeeEjv0sBqdO
d7+6t269+qGRgeGaiBhEQ23EaCJiGnt1ESfJiAKXedLW7vsUn+sXuMS8fst3
uMei/swvOHD2lfO2FXzKR7YvPuZVW5G/9U53r+lb6JZ7sC33ch925H7e4C5e
54pzpf93YlP/1cvyDy/rS/iQD23v/Iac7Ykf8YAF/YavcYU5vcP9s3ym7zt7
yjN62j7BKS7ZsnKb3IpxuYWbMSY3cSMy8q47isnq//0D2p09ig==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0NdRQmEUReED6kVBRcUGLMiECGLggQKwHnPOObRjjh2YlW/GhzVr782c
f+YyUJ8tNlIRUcVgNmI+HbGG61zERxJxw5+8Yhv3+yr/6L/4w5bekoloRRt2
9A7O4s5tjvdsh8jLD7YefuQj2xP36hPePtbPMSlP4UKe5hlcyjU+5SqfcJ+7
Z/cvONP79Ve5wAf6Prrle1sXd2LX1s4ZJNjW05xCYFOveH+Dv33frdsvXtfL
9mUu8bttSR6Ti1iUR3kEC/IwD2FOvvLGW/L//zYBGxExGQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdSQmEUROGrE6p0bA6IOSsuxZkjFBMGwM2ZMEdURN2GOeAC/KocnDrd
/er+g5fKFmcLdRExh0xDxE59xBFeGiNaEhGv3MoHtlXfD7lD70QXzvQU96IP
F/oQD+Pd7Qhf2W4wIX/aJvmLb23fPKWve/tOf8CmnMejXOAinuQtvucNrvC0
ux/3NVT1Gf1XTnNZv8a4/GEb41Fc2gZ5AP0413s4iW6c6mveP+F2/c1tGx/r
OXuJV7jZti8vy0vYkxc5i115geexLT97oynx/3//AANZMJw=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0Mcyg3EYhfGXTWZwE7kGXfTeEsbO1gUw0UV3h0H0TvStTvjNWDzznHO+
ef+LLzkxNTZZFhHjyFZEbJdHHOK1MqI2EfHGdbxvW/L9gBv1JqRwqrdxOzpw
rvdwLz7c9vGl7QZD8pdtmL+5aPvhtL7i7Vv9EWvyOp7kDd7Es7zF97zKd5xx
V3L/iwd9VI+qiBG+1q8wKH/6PsD9uLB1cxc6caa3cguacaIve/+YG/R3t/V8
pOfse7zINbaCvCDPY1ee41nsyDM8jbz84o3qxP///QNtezgX
       "]], 
      Line3DBox[CompressedData["
1:eJwl0FdSAmEUROE7M8AgsgmXBEbMYk64CCMq5m2KAQNmvyoeTp3upu4/VYw0
9+qtJCIa2K9EdNOIV6TViNE8IuMx7tnO/P7Ck/oUGvjQ53geC/jSl3kFRber
/GOLLGJTzm1bXObENsTb+oW3U72EK/kauXzDtyjLd1zgS854x13F/TCKekuv
yrv855u/2JBLtnVew7etyUtYxKc+yzOYRl/veP+dJ/SC23F+08/tz3zKdduT
3JZP8Cgf8xEe5EM+wL2ceKOWD/7ffyJtLKU=
       "]], Line3DBox[CompressedData["
1:eJwl0MdSQlEQRdG2HFAiIIiIWVG+yJlTP0DMAQxgTlOzgvk7Xbcc7Nrn9K3u
evVqy43Flb6IWMJdNiLbH1FCIRexlokY4vVkszfvRd7St7GDit7ifRygqnf4
GCW7JzxuNoULuWx2ySM8bVbhK/3d7Rl9Hp/yFxbkb/5BXf7lOf7gWb62N2q/
ipp+q4/JNzypT+BcHjY749P0btbmIxymfb3Je9hN36X33C/zpl60u5Fu6F3z
Ar/yqllefpGfkZOf+BGD8gPfY0DOu9HI/P/fP7OtIjI=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdOgmEUheFrHJAQN4AdsXdU7G0NzJy6AF2JXbGj2Cj2hi7PJ3Hw5j3n
/Lnf4E+vb+Y3GiJiDeVkRG9jxAiamyJ2EhEtvMtDtlffh/lAP8QRsvopn+Ec
k/oVX6PNbYlztlncyx22B+7kOVuay/qHt+f1ZXzJ31iR6/yDVfmXF/mTF7ji
rst9Bkt6Te+WqzyjT+NObrfd8g2mbEW+xAUm9BM+RgHj+rv3x3hfb3W7x6P6
m32QX3jbNiA/y0/olx+5hj65yhX0yClvbCX+/+8fvT8qrA==
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdSAlEUheFrOaDKYhMOzHEL5ogBI+rIBejCDCCYCJIEUVfl98rBX/85
t9991d2j17f5m6GIKKA6ErE8HLGF8WzEQyZigh95w6zj+SY/6WVUkNPf+B1V
7Osf3MSU3RYfmh3jU54x6/Esn5jNcV/vuftUv8CXPMCl/M0/uJJ/+Zz7fJbO
2Zu3v4BCOqsvygM+0vPoytNmHW7jwKzBddSwp7/yC56xm97T/Ttc0iftFnk7
3WW+zm2+N1uTW3ITq+m7uYEVuc41LMlj7rjL/P/fP8bRMyY=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0ElOQmEQReEiDkiMm3AJ9g2swpkDO8AewV63qALSqLT2yjr8/jg4OffW
e1XJe9OF6lolExHreJiM2JyI2MXslJ6NmOMaF806npf4UW+ihUP9mV/QxbE+
5BEW7L7yidkpPuUlsy9e5jOzFf5O+26f69foyX3cyAMe4lYe8SV3+YJ/7K3a
z+FKH+t5+ZeregUf8qLZO7+hnG5yHz0c6U/cQRsH6Xvc3+eGPm+3znvpPfMC
t/nebEduyU1sp//CDWzJda5hQ55x4y77/3//ANBjO6A=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0MdOQlEYReEfMIEYX8IHwYZtzMypD6BjO/befT1RsdAEu1jRzzhYWXvv
m3NOcrvHJ/MTiYgYw2lnxHQqYhE9XRHVdEQv13jBdu17gRt6E3dY1Z/4GS9Y
19/5A/3OfvKmbQc/cs4WmYhB3rUNcUKvuHtPP0JNruNYvuUGTuQmH3CV9znp
3LDzIzjUO/RROcXb+hba3hywffMXNmxv3MIr1vRHfsA9VvSy+5f/3tb7nK3z
kn5jn+crrtjm5Eu5hFn5gs8xI59xEVNy1h3l9P///QUBnz8f
       "]], 
      Line3DBox[CompressedData["
1:eJwl0EdSQmEUROFrWeITMOeIuBsjiE6cugBdjTkrimLcmTkH+KocnDrd/er+
g5dfXi2tNETEEu7TEeuNEXuYykY0JxHTnPCO7d33Xc7oWbTiSO/kLnTjRO/n
Acy6HeRT2zlG5YJtjIt8YZvnnP7l7ap+gx/5F7fyH9dwJ0cm4oq/9Used1dy
v4BrfUJflPNc0c8wIs/ZhnkIZVsf96IHx3oHt6MNh/qn9w84rc+4beF9/cO+
zW+csm3Jr/ILNuVnfsKG/MgPWJMnvdGU/P/fOjXTLbM=
       "]]}, {
      Line3DBox[{952, 950, 3163, 3162, 949, 3161, 3160, 948, 3159, 3158, 947, 
       3157, 946}], 
      Line3DBox[{956, 3165, 3166, 958, 3169, 3170, 960, 3173, 3174, 962, 3177,
        3178, 964, 3181, 3182, 966, 3185, 3186, 968, 3187, 972}], 
      Line3DBox[{971, 967, 3184, 3183, 965, 3180, 3179, 963, 3176, 3175, 961, 
       3172, 3171, 959, 3168, 3167, 957, 3164, 955}], 
      Line3DBox[{978, 3190, 981, 3195, 3196, 984, 3201, 3202, 987, 3207, 3208,
        990, 3213, 3214, 993, 3219, 3220, 996, 3225, 3226, 999, 3229, 1002, 
       3232, 1008}], 
      Line3DBox[{1006, 3230, 1000, 3227, 997, 3222, 3221, 994, 3216, 3215, 
       991, 3210, 3209, 988, 3204, 3203, 985, 3198, 3197, 982, 3192, 3191, 
       979, 3188, 976}], 
      Line3DBox[{1014, 3235, 1017, 3240, 3241, 1020, 3246, 3247, 1023, 3252, 
       3253, 1026, 3258, 3259, 1029, 3264, 3265, 1032, 3270, 3271, 1035, 3274,
        1038, 3277, 1044}], 
      Line3DBox[{1042, 3275, 1036, 3272, 1033, 3267, 3266, 1030, 3261, 3260, 
       1027, 3255, 3254, 1024, 3249, 3248, 1021, 3243, 3242, 1018, 3237, 3236,
        1015, 3233, 1012}], 
      Line3DBox[{1050, 1053, 3284, 3285, 1056, 3290, 3291, 1059, 3296, 3297, 
       1062, 3302, 3303, 1065, 3308, 3309, 1068, 3314, 3315, 1071, 3318, 1074,
        1080}], 
      Line3DBox[{1078, 3319, 1072, 3316, 1069, 3311, 3310, 1066, 3305, 3304, 
       1063, 3299, 3298, 1060, 3293, 3292, 1057, 3287, 3286, 1054, 3281, 3280,
        1051, 3278, 1048}], 
      Line3DBox[{1107, 3351, 1103, 3348, 3347, 1098, 3342, 3341, 1095, 3336, 
       3335, 1092, 3330, 3329, 1089, 3325, 3324, 1085, 3322, 3321, 1083}], 
      Line3DBox[{1490, 3382, 1488, 3381, 3380, 1486, 3377, 3376, 1484, 3373, 
       3372, 1482, 3369, 3368, 1480, 3365, 3364, 1478, 3361, 3360, 1476}], 
      Line3DBox[{1491, 3383, 1494, 3386, 3387, 1497, 3392, 3393, 1500, 3398, 
       3399, 1503, 3404, 3405, 1506, 3410, 3411, 1509, 3416, 3417, 1512, 3422,
        1515, 3425, 1518}], 
      Line3DBox[{1520, 3427, 1517, 3424, 1514, 3421, 3420, 1511, 3415, 3414, 
       1508, 3409, 3408, 1505, 3403, 3402, 1502, 3397, 3396, 1499, 3391, 3390,
        1496, 3385, 1493}], 
      Line3DBox[{1521, 3428, 1524, 3431, 3432, 1527, 3437, 3438, 1530, 3443, 
       3444, 1533, 3449, 3450, 1536, 3455, 3456, 1539, 3461, 3462, 1542, 3467,
        1545, 3470, 1548}], 
      Line3DBox[{1550, 3472, 1547, 3469, 1544, 3466, 3465, 1541, 3460, 3459, 
       1538, 3454, 3453, 1535, 3448, 3447, 1532, 3442, 3441, 1529, 3436, 3435,
        1526, 3430, 1523}], 
      Line3DBox[{1551, 3473, 1554, 3475, 3476, 1557, 3481, 3482, 1560, 3487, 
       3488, 1563, 3493, 3494, 1566, 3499, 3500, 1569, 3505, 3506, 1572, 3511,
        1575, 3514, 1578}], 
      Line3DBox[{1580, 1577, 3513, 1574, 3510, 3509, 1571, 3504, 3503, 1568, 
       3498, 3497, 1565, 3492, 3491, 1562, 3486, 3485, 1559, 3480, 3479, 1556,
        1553}], 
      Line3DBox[{1581, 3516, 3517, 1583, 3519, 3520, 1586, 3524, 3525, 1589, 
       3530, 3531, 1592, 3536, 3537, 1595, 3542, 3543, 1599, 3546, 1601}], 
      Line3DBox[{1598, 1597, 3541, 3540, 1594, 3535, 3534, 1591, 3529, 3528, 
       1588, 3523, 1585}], 
      Line3DBox[{1602, 1600, 3545, 3544, 1596, 3539, 3538, 1593, 3533, 3532, 
       1590, 3527, 3526, 1587, 3522, 3521, 1584, 3518, 1582}], 
      Line3DBox[{1606, 1668, 970, 1698, 1114, 1728, 1144, 1758, 1174, 1788, 
       1204, 1818, 1234, 1848, 1264, 1878, 1294, 1908, 1324, 1938, 1354, 1968,
        1384, 1998, 1414, 2028, 1444, 2058, 1661}], 
      Line3DBox[{1609, 1674, 1005, 1704, 1120, 1734, 1150, 1764, 1180, 1794, 
       1210, 1824, 1240, 1854, 1270, 1884, 1300, 1914, 1330, 1944, 1360, 1974,
        1390, 2004, 1420, 2034, 1450, 2064, 1659}], 
      Line3DBox[{1612, 1680, 1041, 1710, 1126, 1740, 1156, 1770, 1186, 1800, 
       1216, 1830, 1246, 1860, 1276, 1890, 1306, 1920, 1336, 1950, 1366, 1980,
        1396, 2010, 1426, 2040, 1456, 2070, 1656}], 
      Line3DBox[{1615, 1686, 1077, 1716, 1132, 1746, 1162, 1776, 1192, 1806, 
       1222, 1836, 1252, 1866, 1282, 1896, 1312, 1926, 1342, 1956, 1372, 1986,
        1402, 2016, 1432, 2046, 1462, 2076, 1653}], 
      Line3DBox[{1617, 1692, 1106, 1722, 1138, 1752, 1168, 1782, 1198, 1812, 
       1228, 1842, 1258, 1872, 1288, 1902, 1318, 1932, 1348, 1962, 1378, 1992,
        1408, 2022, 1438, 2052, 1468, 2082, 1650}], 
      Line3DBox[{1618, 1690, 1101, 1720, 1136, 1750, 1166, 1780, 1196, 1810, 
       1226, 1840, 1256, 1870, 1286, 1900, 1316, 1930, 1346, 1960, 1376, 1990,
        1406, 2020, 1436, 2050, 1466, 2080, 1648}], 
      Line3DBox[{1620, 1687, 1081, 1717, 1133, 1747, 1163, 1777, 1193, 1807, 
       1223, 1837, 1253, 1867, 1283, 1897, 1313, 1927, 1343, 1957, 1373, 1987,
        1403, 2017, 1433, 2047, 1463, 2077, 1645}], 
      Line3DBox[{1622, 1681, 1045, 1711, 1127, 1741, 1157, 1771, 1187, 1801, 
       1217, 1831, 1247, 1861, 1277, 1891, 1307, 1921, 1337, 1951, 1367, 1981,
        1397, 2011, 1427, 2041, 1457, 2071, 1642}], 
      Line3DBox[{1625, 1675, 1009, 1705, 1121, 1735, 1151, 1765, 1181, 1795, 
       1211, 1825, 1241, 1855, 1271, 1885, 1301, 1915, 1331, 1945, 1361, 1975,
        1391, 2005, 1421, 2035, 1451, 2065, 1639}], 
      Line3DBox[{1628, 1669, 973, 1699, 1115, 1729, 1145, 1759, 1175, 1789, 
       1205, 1819, 1235, 1849, 1265, 1879, 1295, 1909, 1325, 1939, 1355, 1969,
        1385, 1999, 1415, 2029, 1445, 2059, 1636}], 
      Line3DBox[{1635, 2056, 1442, 2026, 1412, 1996, 1382, 1966, 1352, 1936, 
       1322, 1906, 1292, 1876, 1262, 1846, 1232, 1816, 1202, 1786, 1172, 1756,
        1142, 1726, 1112, 1696, 954, 1666, 1632}], 
      Line3DBox[{1638, 2061, 1447, 2031, 1417, 2001, 1387, 1971, 1357, 1941, 
       1327, 1911, 1297, 1881, 1267, 1851, 1237, 1821, 1207, 1791, 1177, 1761,
        1147, 1731, 1117, 1701, 975, 1671, 1630}], 
      Line3DBox[{1641, 2067, 1453, 2037, 1423, 2007, 1393, 1977, 1363, 1947, 
       1333, 1917, 1303, 1887, 1273, 1857, 1243, 1827, 1213, 1797, 1183, 1767,
        1153, 1737, 1123, 1707, 1011, 1677, 1627}], 
      Line3DBox[{1644, 2073, 1459, 2043, 1429, 2013, 1399, 1983, 1369, 1953, 
       1339, 1923, 1309, 1893, 1279, 1863, 1249, 1833, 1219, 1803, 1189, 1773,
        1159, 1743, 1129, 1713, 1047, 1683, 1624}], 
      Line3DBox[{1649, 2081, 1467, 2051, 1437, 2021, 1407, 1991, 1377, 1961, 
       1347, 1931, 1317, 1901, 1287, 1871, 1257, 1841, 1227, 1811, 1197, 1781,
        1167, 1751, 1137, 1721, 1105, 1691, 1616}], 
      Line3DBox[{1651, 2074, 1460, 2044, 1430, 2014, 1400, 1984, 1370, 1954, 
       1340, 1924, 1310, 1894, 1280, 1864, 1250, 1834, 1220, 1804, 1190, 1774,
        1160, 1744, 1130, 1714, 1075, 1684, 1613}], 
      Line3DBox[{1654, 2068, 1454, 2038, 1424, 2008, 1394, 1978, 1364, 1948, 
       1334, 1918, 1304, 1888, 1274, 1858, 1244, 1828, 1214, 1798, 1184, 1768,
        1154, 1738, 1124, 1708, 1039, 1678, 1610}], 
      Line3DBox[{1657, 2062, 1448, 2032, 1418, 2002, 1388, 1972, 1358, 1942, 
       1328, 1912, 1298, 1882, 1268, 1852, 1238, 1822, 1208, 1792, 1178, 1762,
        1148, 1732, 1118, 1702, 1003, 1672, 1607}], 
      Line3DBox[{1660, 2057, 1443, 2027, 1413, 1997, 1383, 1967, 1353, 1937, 
       1323, 1907, 1293, 1877, 1263, 1847, 1233, 1817, 1203, 1787, 1173, 1757,
        1143, 1727, 1113, 1697, 969, 1667, 1605}], 
      Line3DBox[{1662, 2054, 1440, 2024, 1410, 1994, 1380, 1964, 1350, 1934, 
       1320, 1904, 1290, 1874, 1260, 1844, 1230, 1814, 1200, 1784, 1170, 1754,
        1140, 1724, 1110, 1694, 951, 1664, 1604}], 
      Line3DBox[{977, 3189, 980, 3193, 3194, 983, 3199, 3200, 986, 3205, 3206,
        989, 3211, 3212, 992, 3217, 3218, 995, 3223, 3224, 998, 3228, 1001, 
       3231, 1007}], 
      Line3DBox[{1013, 3234, 1016, 3238, 3239, 1019, 3244, 3245, 1022, 3250, 
       3251, 1025, 3256, 3257, 1028, 3262, 3263, 1031, 3268, 3269, 1034, 3273,
        1037, 3276, 1043}], 
      Line3DBox[{1049, 3279, 1052, 3282, 3283, 1055, 3288, 3289, 1058, 3294, 
       3295, 1061, 3300, 3301, 1064, 3306, 3307, 1067, 3312, 3313, 1070, 3317,
        1073, 3320, 1079}], 
      Line3DBox[{1084, 3323, 1086, 3326, 3327, 1090, 3331, 3332, 1093, 3337, 
       3338, 1096, 3343, 3344, 1099, 3349, 3350, 1104, 1108}], 
      Line3DBox[{1088, 3328, 1091, 3333, 3334, 1094, 3339, 3340, 1097, 3345, 
       3346, 1100, 1102}], 
      Line3DBox[{1469, 3352, 1470, 3353, 3354, 1471, 3355, 3356, 1472, 3357, 
       3358, 1473, 1474}], 
      Line3DBox[{1475, 3359, 1477, 3362, 3363, 1479, 3366, 3367, 1481, 3370, 
       3371, 1483, 3374, 3375, 1485, 3378, 3379, 1487, 1489}], 
      Line3DBox[{1492, 3384, 1495, 3388, 3389, 1498, 3394, 3395, 1501, 3400, 
       3401, 1504, 3406, 3407, 1507, 3412, 3413, 1510, 3418, 3419, 1513, 3423,
        1516, 3426, 1519}], 
      Line3DBox[{1522, 3429, 1525, 3433, 3434, 1528, 3439, 3440, 1531, 3445, 
       3446, 1534, 3451, 3452, 1537, 3457, 3458, 1540, 3463, 3464, 1543, 3468,
        1546, 3471, 1549}], 
      Line3DBox[{1552, 3474, 1555, 3477, 3478, 1558, 3483, 3484, 1561, 3489, 
       3490, 1564, 3495, 3496, 1567, 3501, 3502, 1570, 3507, 3508, 1573, 3512,
        1576, 3515, 1579}], 
      Line3DBox[{1603, 1663, 945, 1693, 1109, 1723, 1139, 1753, 1169, 1783, 
       1199, 1813, 1229, 1843, 1259, 1873, 1289, 1903, 1319, 1933, 1349, 1963,
        1379, 1993, 1409, 2023, 1439, 2053, 1633}], 
      Line3DBox[{1608, 1673, 1004, 1703, 1119, 1733, 1149, 1763, 1179, 1793, 
       1209, 1823, 1239, 1853, 1269, 1883, 1299, 1913, 1329, 1943, 1359, 1973,
        1389, 2003, 1419, 2033, 1449, 2063, 1658}], 
      Line3DBox[{1611, 1679, 1040, 1709, 1125, 1739, 1155, 1769, 1185, 1799, 
       1215, 1829, 1245, 1859, 1275, 1889, 1305, 1919, 1335, 1949, 1365, 1979,
        1395, 2009, 1425, 2039, 1455, 2069, 1655}], 
      Line3DBox[{1614, 1685, 1076, 1715, 1131, 1745, 1161, 1775, 1191, 1805, 
       1221, 1835, 1251, 1865, 1281, 1895, 1311, 1925, 1341, 1955, 1371, 1985,
        1401, 2015, 1431, 2045, 1461, 2075, 1652}], 
      Line3DBox[{1619, 1689, 1087, 1719, 1135, 1749, 1165, 1779, 1195, 1809, 
       1225, 1839, 1255, 1869, 1285, 1899, 1315, 1929, 1345, 1959, 1375, 1989,
        1405, 2019, 1435, 2049, 1465, 2079, 1647}], 
      Line3DBox[{1621, 1688, 1082, 1718, 1134, 1748, 1164, 1778, 1194, 1808, 
       1224, 1838, 1254, 1868, 1284, 1898, 1314, 1928, 1344, 1958, 1374, 1988,
        1404, 2018, 1434, 2048, 1464, 2078, 1646}], 
      Line3DBox[{1623, 1682, 1046, 1712, 1128, 1742, 1158, 1772, 1188, 1802, 
       1218, 1832, 1248, 1862, 1278, 1892, 1308, 1922, 1338, 1952, 1368, 1982,
        1398, 2012, 1428, 2042, 1458, 2072, 1643}], 
      Line3DBox[{1626, 1676, 1010, 1706, 1122, 1736, 1152, 1766, 1182, 1796, 
       1212, 1826, 1242, 1856, 1272, 1886, 1302, 1916, 1332, 1946, 1362, 1976,
        1392, 2006, 1422, 2036, 1452, 2066, 1640}], 
      Line3DBox[{1629, 1670, 974, 1700, 1116, 1730, 1146, 1760, 1176, 1790, 
       1206, 1820, 1236, 1850, 1266, 1880, 1296, 1910, 1326, 1940, 1356, 1970,
        1386, 2000, 1416, 2030, 1446, 2060, 1637}], 
      Line3DBox[{1631, 1665, 953, 1695, 1111, 1725, 1141, 1755, 1171, 1785, 
       1201, 1815, 1231, 1845, 1261, 1875, 1291, 1905, 1321, 1935, 1351, 1965,
        1381, 1995, 1411, 2025, 1441, 2055, 1634}]}, {
      Line3DBox[{2084, 2085, 3167, 3169, 2111, 3197, 3199, 3201, 2130, 3242, 
       3244, 3246, 2145, 3286, 3288, 3290, 2159, 3324, 3326, 2834}], 
      Line3DBox[{2089, 3158, 2091, 3171, 3173, 2113, 3203, 3205, 3207, 2132, 
       3248, 3250, 3252, 2147, 3292, 3294, 3296, 2161, 3329, 3331, 3333, 2174,
        2187}], 
      Line3DBox[{2095, 3160, 2097, 3175, 3177, 2115, 3209, 3211, 3213, 2134, 
       3254, 3256, 3258, 2149, 3298, 3300, 3302, 2163, 3335, 3337, 3339, 2176,
        2191}], 
      Line3DBox[{2101, 3162, 2103, 3179, 3181, 2117, 3215, 3217, 3219, 2136, 
       3260, 3262, 3264, 2151, 3304, 3306, 3308, 2165, 3341, 3343, 3345, 2180,
        2194}], 
      Line3DBox[{2107, 2108, 3188, 3189, 3190, 2127, 3233, 3234, 3235, 2142, 
       3278, 3279, 2828}], 
      Line3DBox[{2120, 3184, 3186, 2122, 3222, 3224, 3226, 2139, 3267, 3269, 
       3271, 2154, 3311, 3313, 3315, 2168, 3348, 3350, 2184}], 
      Line3DBox[{2125, 2126, 3230, 3231, 3232, 2141, 3275, 3276, 3277, 2156, 
       3319, 3320, 2830}], 
      Line3DBox[{2171, 3323, 3322, 2158, 3285, 3283, 3281, 2144, 3241, 3239, 
       3237, 2129, 3196, 3194, 3192, 2110, 3166, 3164, 2823}], 
      Line3DBox[{2173, 3328, 3327, 3325, 2160, 3291, 3289, 3287, 2146, 3247, 
       3245, 3243, 2131, 3202, 3200, 3198, 2112, 3170, 3168, 2086, 3157, 
       2818}], Line3DBox[{2179, 3346, 3344, 3342, 2166, 3309, 3307, 3305, 
       2152, 3265, 3263, 3261, 2137, 3220, 3218, 3216, 2118, 3182, 3180, 2104,
        3163, 2102}], 
      Line3DBox[{2188, 2175, 3334, 3332, 3330, 2162, 3297, 3295, 3293, 2148, 
       3253, 3251, 3249, 2133, 3208, 3206, 3204, 2114, 3174, 3172, 2092, 3159,
        2090}], 
      Line3DBox[{2192, 2177, 3340, 3338, 3336, 2164, 3303, 3301, 3299, 2150, 
       3259, 3257, 3255, 2135, 3214, 3212, 3210, 2116, 3178, 3176, 2098, 3161,
        2096}], 
      Line3DBox[{2435, 3352, 2437, 3363, 3365, 2458, 3393, 3395, 3397, 2475, 
       3438, 3440, 3442, 2490, 3482, 3484, 3486, 2504, 3520, 3522, 3523, 
       2964}], Line3DBox[{2439, 3354, 2441, 3367, 3369, 2460, 3399, 3401, 
       3403, 2477, 3444, 3446, 3448, 2492, 3488, 3490, 3492, 2506, 3525, 3527,
        3529, 2516, 2522}], 
      Line3DBox[{2443, 3356, 2445, 3371, 3373, 2462, 3405, 3407, 3409, 2479, 
       3450, 3452, 3454, 2494, 3494, 3496, 3498, 2508, 3531, 3533, 3535, 2518,
        2524}], 
      Line3DBox[{2447, 3358, 2449, 3375, 3377, 2464, 3411, 3413, 3415, 2481, 
       3456, 3458, 3460, 2496, 3500, 3502, 3504, 2510, 3537, 3539, 3541, 
       2519}], Line3DBox[{2450, 2451, 3378, 3380, 2466, 3416, 3418, 3420, 
       2482, 3461, 3463, 3465, 2497, 3505, 3507, 3509, 2511, 3542, 3544, 
       2965}], Line3DBox[{2452, 2453, 3383, 3384, 3385, 2471, 3428, 3429, 
       3430, 2486, 3473, 3474, 2960}], 
      Line3DBox[{2454, 3359, 3361, 2456, 3387, 3389, 3391, 2473, 3432, 3434, 
       3436, 2488, 3476, 3478, 3480, 2502, 3517, 3518, 2963}], 
      Line3DBox[{2465, 3379, 3381, 2467, 3417, 3419, 3421, 2483, 3462, 3464, 
       3466, 2498, 3506, 3508, 3510, 2512, 3543, 3545, 2966}], 
      Line3DBox[{2469, 2470, 3425, 3426, 3427, 2485, 3470, 3471, 3472, 2500, 
       3514, 3515, 2961}], 
      Line3DBox[{2514, 3521, 3519, 2503, 3485, 3483, 3481, 2489, 3441, 3439, 
       3437, 2474, 3396, 3394, 3392, 2457, 3364, 3362, 2436, 2957}], 
      Line3DBox[{2521, 2515, 3528, 3526, 3524, 2505, 3491, 3489, 3487, 2491, 
       3447, 3445, 3443, 2476, 3402, 3400, 3398, 2459, 3368, 3366, 2440, 3353,
        2438}], 
      Line3DBox[{2523, 2517, 3534, 3532, 3530, 2507, 3497, 3495, 3493, 2493, 
       3453, 3451, 3449, 2478, 3408, 3406, 3404, 2461, 3372, 3370, 2444, 3355,
        2442}], 
      Line3DBox[{2525, 2520, 3540, 3538, 3536, 2509, 3503, 3501, 3499, 2495, 
       3459, 3457, 3455, 2480, 3414, 3412, 3410, 2463, 3376, 3374, 2448, 3357,
        2446}], 
      Line3DBox[{2526, 2989, 2817, 3001, 2837, 3013, 2847, 3025, 2857, 3037, 
       2867, 3049, 2877, 3061, 2887, 3073, 2897, 3085, 2907, 3097, 2917, 3109,
        2927, 3121, 2937, 3133, 2947, 3145, 2979}], 
      Line3DBox[{2528, 2567, 2088, 2585, 2197, 2603, 2217, 2621, 2237, 2639, 
       2257, 2657, 2277, 2675, 2297, 2693, 2317, 2711, 2337, 2729, 2357, 2747,
        2377, 2765, 2397, 2783, 2417, 2801, 2564}], 
      Line3DBox[{2530, 2569, 2094, 2587, 2199, 2605, 2219, 2623, 2239, 2641, 
       2259, 2659, 2279, 2677, 2299, 2695, 2319, 2713, 2339, 2731, 2359, 2749,
        2379, 2767, 2399, 2785, 2419, 2803, 2562}], 
      Line3DBox[{2532, 2571, 2100, 2589, 2201, 2607, 2221, 2625, 2241, 2643, 
       2261, 2661, 2281, 2679, 2301, 2697, 2321, 2715, 2341, 2733, 2361, 2751,
        2381, 2769, 2401, 2787, 2421, 2805, 2560}], 
      Line3DBox[{2533, 2572, 2819, 2590, 2838, 2608, 2848, 2626, 2858, 2644, 
       2868, 2662, 2878, 2680, 2888, 2698, 2898, 2716, 2908, 2734, 2918, 2752,
        2928, 2770, 2938, 2788, 2948, 2806, 2988}], 
      Line3DBox[{2534, 2574, 2119, 2592, 2203, 2610, 2223, 2628, 2243, 2646, 
       2263, 2664, 2283, 2682, 2303, 2700, 2323, 2718, 2343, 2736, 2363, 2754,
        2383, 2772, 2403, 2790, 2423, 2808, 2558}], 
      Line3DBox[{2535, 2575, 2124, 2593, 2204, 2611, 2224, 2629, 2244, 2647, 
       2264, 2665, 2284, 2683, 2304, 2701, 2324, 2719, 2344, 2737, 2364, 2755,
        2384, 2773, 2404, 2791, 2424, 2809, 2557}], 
      Line3DBox[{2536, 2577, 2178, 2595, 2207, 2613, 2227, 2631, 2247, 2649, 
       2267, 2667, 2287, 2685, 2307, 2703, 2327, 2721, 2347, 2739, 2367, 2757,
        2387, 2775, 2407, 2793, 2427, 2811, 2554}], 
      Line3DBox[{2537, 2582, 2193, 2600, 2214, 2618, 2234, 2636, 2254, 2654, 
       2274, 2672, 2294, 2690, 2314, 2708, 2334, 2726, 2354, 2744, 2374, 2762,
        2394, 2780, 2414, 2798, 2434, 2816, 2553}], 
      Line3DBox[{2538, 2580, 2189, 2598, 2212, 2616, 2232, 2634, 2252, 2652, 
       2272, 2670, 2292, 2688, 2312, 2706, 2332, 2724, 2352, 2742, 2372, 2760,
        2392, 2778, 2412, 2796, 2432, 2814, 2551}], 
      Line3DBox[{2540, 2578, 2185, 2596, 2210, 2614, 2230, 2632, 2250, 2650, 
       2270, 2668, 2290, 2686, 2310, 2704, 2330, 2722, 2350, 2740, 2370, 2758,
        2390, 2776, 2410, 2794, 2430, 2812, 2549}], 
      Line3DBox[{2542, 2997, 2833, 3009, 2845, 3021, 2855, 3033, 2865, 3045, 
       2875, 3057, 2885, 3069, 2895, 3081, 2905, 3093, 2915, 3105, 2925, 3117,
        2935, 3129, 2945, 3141, 2955, 3153, 2984}], 
      Line3DBox[{2543, 2573, 2106, 2591, 2202, 2609, 2222, 2627, 2242, 2645, 
       2262, 2663, 2282, 2681, 2302, 2699, 2322, 2717, 2342, 2735, 2362, 2753,
        2382, 2771, 2402, 2789, 2422, 2807, 2546}], 
      Line3DBox[{2544, 2990, 2821, 3002, 2839, 3014, 2849, 3026, 2859, 3038, 
       2869, 3050, 2879, 3062, 2889, 3074, 2899, 3086, 2909, 3098, 2919, 3110,
        2929, 3122, 2939, 3134, 2949, 3146, 2980}], 
      Line3DBox[{2545, 2799, 2415, 2781, 2395, 2763, 2375, 2745, 2355, 2727, 
       2335, 2709, 2315, 2691, 2295, 2673, 2275, 2655, 2255, 2637, 2235, 2619,
        2215, 2601, 2195, 2583, 2083, 2565, 2968}], 
      Line3DBox[{2547, 3152, 2425, 3140, 2405, 3128, 2385, 3116, 2365, 3104, 
       2345, 3092, 2325, 3080, 2305, 3068, 2285, 3056, 2265, 3044, 2245, 3032,
        2225, 3020, 2205, 3008, 2170, 2996, 2976}], 
      Line3DBox[{2548, 2810, 2426, 2792, 2406, 2774, 2386, 2756, 2366, 2738, 
       2346, 2720, 2326, 2702, 2306, 2684, 2286, 2666, 2266, 2648, 2246, 2630,
        2226, 2612, 2206, 2594, 2172, 2576, 2974}], 
      Line3DBox[{2550, 2813, 2431, 2795, 2411, 2777, 2391, 2759, 2371, 2741, 
       2351, 2723, 2331, 2705, 2311, 2687, 2291, 2669, 2271, 2651, 2251, 2633,
        2231, 2615, 2211, 2597, 2186, 2579, 2541}], 
      Line3DBox[{2552, 2815, 2433, 2797, 2413, 2779, 2393, 2761, 2373, 2743, 
       2353, 2725, 2333, 2707, 2313, 2689, 2293, 2671, 2273, 2653, 2253, 2635,
        2233, 2617, 2213, 2599, 2190, 2581, 2539}], 
      Line3DBox[{2556, 3155, 2429, 3143, 2409, 3131, 2389, 3119, 2369, 3107, 
       2349, 3095, 2329, 3083, 2309, 3071, 2289, 3059, 2269, 3047, 2249, 3035,
        2229, 3023, 2209, 3011, 2182, 2999, 2973}], 
      Line3DBox[{2559, 2804, 2420, 2786, 2400, 2768, 2380, 2750, 2360, 2732, 
       2340, 2714, 2320, 2696, 2300, 2678, 2280, 2660, 2260, 2642, 2240, 2624,
        2220, 2606, 2200, 2588, 2099, 2570, 2531}], 
      Line3DBox[{2561, 2802, 2418, 2784, 2398, 2766, 2378, 2748, 2358, 2730, 
       2338, 2712, 2318, 2694, 2298, 2676, 2278, 2658, 2258, 2640, 2238, 2622,
        2218, 2604, 2198, 2586, 2093, 2568, 2529}], 
      Line3DBox[{2563, 2800, 2416, 2782, 2396, 2764, 2376, 2746, 2356, 2728, 
       2336, 2710, 2316, 2692, 2296, 2674, 2276, 2656, 2256, 2638, 2236, 2620,
        2216, 2602, 2196, 2584, 2087, 2566, 2527}], 
      Line3DBox[{2820, 2105, 3183, 3185, 2121, 3221, 3223, 3225, 2138, 3266, 
       3268, 3270, 2153, 3310, 3312, 3314, 2167, 3347, 3349, 2183}], 
      Line3DBox[{2824, 3165, 2109, 3191, 3193, 3195, 2128, 3236, 3238, 3240, 
       2143, 3280, 3282, 3284, 2157, 3321, 2832}], 
      Line3DBox[{2826, 3187, 2123, 3227, 3228, 3229, 2140, 3272, 3273, 3274, 
       2155, 3316, 3317, 3318, 2169, 3351, 2836}], 
      Line3DBox[{2958, 3360, 2455, 3386, 3388, 3390, 2472, 3431, 3433, 3435, 
       2487, 3475, 3477, 3479, 2501, 3516, 2962}], 
      Line3DBox[{2959, 3382, 2468, 3422, 3423, 3424, 2484, 3467, 3468, 3469, 
       2499, 3511, 3512, 3513, 2513, 3546, 2967}], 
      Line3DBox[{2969, 2992, 2825, 3004, 2841, 3016, 2851, 3028, 2861, 3040, 
       2871, 3052, 2881, 3064, 2891, 3076, 2901, 3088, 2911, 3100, 2921, 3112,
        2931, 3124, 2941, 3136, 2951, 3148, 2987}], 
      Line3DBox[{2970, 2994, 2829, 3006, 2843, 3018, 2853, 3030, 2863, 3042, 
       2873, 3054, 2883, 3066, 2893, 3078, 2903, 3090, 2913, 3102, 2923, 3114,
        2933, 3126, 2943, 3138, 2953, 3150, 2986}], 
      Line3DBox[{2971, 3000, 2835, 3012, 2846, 3024, 2856, 3036, 2866, 3048, 
       2876, 3060, 2886, 3072, 2896, 3084, 2906, 3096, 2916, 3108, 2926, 3120,
        2936, 3132, 2946, 3144, 2956, 3156, 2985}], 
      Line3DBox[{2972, 2998, 2181, 3010, 2208, 3022, 2228, 3034, 2248, 3046, 
       2268, 3058, 2288, 3070, 2308, 3082, 2328, 3094, 2348, 3106, 2368, 3118,
        2388, 3130, 2408, 3142, 2428, 3154, 2555}], 
      Line3DBox[{2975, 2995, 2831, 3007, 2844, 3019, 2854, 3031, 2864, 3043, 
       2874, 3055, 2884, 3067, 2894, 3079, 2904, 3091, 2914, 3103, 2924, 3115,
        2934, 3127, 2944, 3139, 2954, 3151, 2983}], 
      Line3DBox[{2977, 2993, 2827, 3005, 2842, 3017, 2852, 3029, 2862, 3041, 
       2872, 3053, 2882, 3065, 2892, 3077, 2902, 3089, 2912, 3101, 2922, 3113,
        2932, 3125, 2942, 3137, 2952, 3149, 2982}], 
      Line3DBox[{2978, 2991, 2822, 3003, 2840, 3015, 2850, 3027, 2860, 3039, 
       2870, 3051, 2880, 3063, 2890, 3075, 2900, 3087, 2910, 3099, 2920, 3111,
        2930, 3123, 2940, 3135, 2950, 3147, 2981}]}}},
   VertexNormals->CompressedData["
1:eJztnXl4T9fWxw8RhKIlCDXTFiURpYZbPe01S8xDzY2xGi06UK/r6kTvNaem
9q2p1JSiXPNQThI3ZhdRoipKjJmDGGrK9Tx3n+S139/37rPOb5+cX+L4cz3n
OX57r89e017rpOrAkV2G5FcU5UwxRfFSsv9N8o3xHZaZomnVP+oyr80pTZev
HNgi9VC9NE25s3JW8/mHmTxdU8A/1+/Bzx9Sf7j819Q0bXfAppdCd6wXPI/f
80zk9KPfnE7TQjcVHvKe73bV7Hvm3D306qEHqdqtNyPeWXP9qOn3zC0x9fCr
ESlajU+HP7j5dazgPYpy9eiw7V6R8drB3iFDNqUkZD3XaVbyjrubr2nV7zX8
9HK3Syb3B/+/z4/yH3cjIFnrdabCRu/gc5LfL+93flG+xPGjo5O05e2Ptfce
cd60Xurf2Nq81bir2stjSvxl9O7Lpt/zTaLW/3zFeK3c/Zh+G0MSTb9nRZ8/
CvnfOah9N3TyuRfbpHno/ru9LtP703h785KPHp5QW/898MPiQ1PzzP6U230i
RVkXoyaPvzvpxfmppvcn6NbmBxP/95J6fcb+VhfGX8sz+1P51OulG4+5qFYI
KH/k0NAEVZdntK/RfUj7a2rXmISVHx+/ZHrfCrTcNuFCzQS14uslf8+396LQ
T30w3OvB8mXJapPKvl3KTz6b9VwP36vRVRenqrXeeNj61JwYm/dfUaLKH+85
cUiqmp7RdnPLfL9k7VvQxPA945qkqe2UwHfL5z9set8GzYk70NM/Wa20Im7e
H53PCf3awxEVDjUanKZ+PM/rQEbsfqPxgLrUUDygKB8PbVm/xJk0deD/JB+p
tGBb1npp8QyKQ1BcgeIE5Pep/h35ZeQHs/1a7Sf8GvJTyO8gu60ojVzaYUXx
c2nHkF2inmt0TqnnkXousjmv+ATniGfErXw+dzl8kvh07Wcxn1VM8lkB8Nk0
l/MZQeRTA3wOd5PPa4DPjozPFwCfvQ3yGegyL8B8hgM+V1nMZyXA503GZzei
/eT57MX4LA/4vAH47AD4rMzxmcn47AL4XMfxM5rx2YtoP/MT+RzB8TmX8ZkB
+KxO5JNqP1cA+8nz+S3j08+g/VxJ5LMs4DNYkv30FtjPPwE+y3F8HmZ8buD4
7Mr4jM6s9wSfAwV8diby2UMSn8i/83yK7Gc1g/7dLJ/u2k/E53LAZxOb+Xze
YPz5FuOzJsdnLONzFMdnH8ZnU8BnFeDfPwB8LgH+/W3AZyTgMx+Rz/eA/aTG
n4cAnzUM+vcvBfGnUT5XEu0n4rO8yfjzeeDfu7sZf+r20w/Yz38Q7WdVYD87
AT7XEu3nbsBn5m3XfEZK8u88n1cYn4eJfPaxKD9aTrSfruuo2H62Y3ze5Pis
yPisyPF5A/DpxfisxPE5ivHZjOOzD+OzCIg/bxqMP5H9zDfyP3wGAj5/Bnx2
JPp3ZD8Rn++7aT9F8adR+4niT6p/Xw34/BHw+aokPlF+hPhE+ZFZPjMAn50s
5rMD0b8j+xlh0L/r8ec9js85RD5F9SWj9lPns46b+Xs44LOpyfgzncgnn7+L
4k/ev/dlfBY2WF8KZny2NJi/63wGAD63Az67AD6jLObT3fhTFp+vMD5rGeRz
GeBzmST/jvIjVJ+/aTI/ksVnKyKf9Yh8dpaUH1Hjz3SD+Tu1vlSe8dk3l8af
VD4zBPVPPj8y69+vA/8eTOST6t+DiPEnNT9C9vO2m/dHZvMjFH+6699Rfd5s
fYn37xWI+RGqfyI+RfYT8dkGxJ9U/77NUP6envU+/p/r+id63pE7ckfuyB15
3paL42p0b/uum3GLKB42eZ+VJUf9UdQ+KNd9d/S+Ef0+aAAXT6L+ENRPgvpY
0L0YqrOhexAUj6F7Q1p9idoPj/th9Od7cs+3B30pV0CdYS1YF6qLtgP7JrpP
R/m4N6dHPQ70B3HgBnDPGMJxpXPYmuMQ1fMHMM6rc5xfZ+eiB3cu0H0E6qtZ
C86p3kdRljvXyA7o94zLOLuB6p+oXqrbsSFPzq1AO4n6VFFfFsoTqf2uc4l2
FdXNUJ5YQXCfa7QfRnSfOx/c5843WK9AXOn54I0c7nfV+w1qc+d3jyAfRP2E
vH+R1U/4tPJptJ5G5ZPaj51X+LSq39Usn0b7sR0+//OPaj/N9msZ7XfNK3zy
canIfvL92FQ+UV0XxeEVQL1XxCe13svzucpiPkX3Ze72Y/dkfFaVdB/B+/dH
jM9BgM9wUO/tB/jk83cRnyivR/2EeY3PcJv8u9XzAnsZn2c4PjswPp+3eF6g
J+CT77s2G3+6Oy/QySSfRvu1qPMCsvIjq/uxC5q0nxU5Po8yPpdwfHZnfC7l
+l0HgX4tnc/egM/VFvNpdF5AZD/5fgPEp+z406j9RHyuAHzaNS9QUFB/Q/nR
ixyfpxifYzk+ezM+gwzOC+j+fQTg8wcQf/bn+FwliD/5Pm2r+7GRf0d92qjf
QFZ+tILIp1392Lp/rwz4fB30wzwD8qMk0K/VjNjv2hDwuQPYz07E+BPZT6v6
sWXFnyL/btR+/kjsd/W0fmzEp35/UdTD+7HN5u9G+111Pv8AfL5gsL6E+KTa
T2q/FpVPs/6dz49E89Q8n6L4k59X1fn0MZi/6/azraR+V2Q/+X5XkX/n+7TN
8nlXUv2Tvz+12r9T8yNZ8Se131UUfxrtx0b1T7v6sUX2k8on8u/U/N0qPqnz
AssBn8stzt9l82nUfor45PtdZdtPfh7QrH+nxp83LKov6Xz28/D7dyqf1O+l
iO6PUPxJnRcIksTnToPxp8i/U/MjdH9k1L+j/AjVl6yeF7A6/mwP+NTz90oG
8yNR/In4lDUvgPIjNC+wFfD5Fsdn/f3d2kQ0SdXa/tyvy0Ovk+x5+76jGBa7
N86naKrmNbvF+Bk+p1TR80XazZ4QWj9JW3em7Uurz57Pem5p08/GFgpO0Dat
2dvt9rei70w6cnPyx+du4jdrR99K1Lq+HNBzbLMLWVwtjv/XhA0BCVqhNy58
3GXXRYEe8fuLz3tYpOj6eK3jD8NG3vgj2y6daLzv+NawOK1UyMj8nw1IzpJ/
cvNG5MnnTmqdSjRr91ajvPLdWkeeN+SKsjDs6oTZxeK12mMP3o0bnu0HS5RU
274RflYrMKXWvEULkrPkZbxP/CP9+1+0IosafnKwndnvFePfMy1s2CSftfu0
wNa/L1z2Ybb/bb5JC/1Tx0FaRrlZde5l/p856G9rxHwXsk/1WrszuNGYvPLd
bEeeN+SK8vPVmAOzDu/Tqk/bteWlD7LjxhkrfvOZcXWS1qj3yKJ/z8yW11py
8NW6/aLVkqG/nS4z3ez30vHvKZPyQ9xq/1NqeJ/1DxoUyI5XfX0ebeiYHqd+
/tqE/u+0yfZffX6PnlL7u3h1bsnB05b4JDrny5F7kPxxvLdw2bAlNU6qQe/+
eLZ4g+w8q9KBr46diIlTG/xrwdWATtn+a8DnV1qNT41Xh5S9emz2YT3Pkvd7
CvxU+r3REQnqgg9P+Nx6FJ/13PDBla43CU9S93s9m3GujJ4XWL8/Ra5MqtF0
dYrab+7Z+r/di3XOr1vyx/z8OfqFtStS1FfHNPiw23OnpfNzZP/gZaO7Jqi7
q+wL7DPzYha3gROW3v/q6yR19uhxj3qqbvzdE5f5NcpzqfksNf+SlU/JimMV
ZTqIPyeB+HOpy/gT+/1FwO/XdOn3FaW0FH/9eL3ATlYk2UmqfUP2B50jMf+z
nuDf4TlLvzbxTItj5fEs8vuvAJ4Hczx7C3g+kEt4Xs/xvITxvNkgz4sAzyUA
zycZzyU5nscynju6yXNZwHMY4Nlns2uelwCedxPts108i+zzUKJ95nl+hvH8
FuC5McfzYcazxvFcz2V8IuY5v0H7vESSfaby/AngeRHjuRbH83NEnmXZ512A
53WA5xcl8zyH47m0SZ6RfZ7vJs/DGM/PAfssi+d8FvGM7LNd8UZpwDOq3+YD
PC8HPO9kPNfgeF4IeH4J8OwHeC7NeP4sh3kuKOAZxc99OZ4/YDwnjqbxPAfw
3M7N+BnFG36M5y65NH6eQbTPru8jcPz8V8Dzyxbz7Ad4rmxx/Kzb5x4G7bMe
b0QAnucCntvkcPyMeC7GeO7E8Xyc8ezL8TzaJvtMu1+TZ5/RfUQpEG/0ZjzP
M2ifnwf2OYTx/A6InxdxPIcyng9yPBdjPHfmeA4RxM+RRJ7drW/klnzwWWL8
PAvwPB3kg4sBzxHAPh8FPL8AePYFPJdkPH/B8dyLyHMFSfmg3Tzz8cZMxnMB
i+p1Os+FPby+MZNon1cAnjVJPOvxxiqO5zIg3uhLjJ+pPFPjZ53nDgbrdWbr
G0E5XH/+nvFc0M34eYzF8cZUYj6I4o0dIN6YTqxvoHijdA7VN/j7FE/lGeWD
fH3DRxA/W1WvOyGo1z3t8bNdPMuKN3SeGxms17m+H7f/PoWPN8zWN3I63thH
5Bndp2hE+0ytb4jijWCO5/KM54Ycz/1BPojqGyKeOxnkmRY/e9r3uh25I3fk
jtyRO3JH7sgduSN35E+PnJ5fU+s/su7xZfVjy+qjpvX54/oe6kel9mnL6iuQ
1f8jq0+PWm9HPIvuVbdw70H3/jHg3h/9/jlgP5/b4no/F4H9FN1Lont2vk9V
1I/Hc1Wc8dke3Cc25Xg+xM5FFHcuAti5mMedC3Qeqff+UcT7MlSPXQz6QksB
e+XH7JUPZ6+ofVPo/tRs/fMncF42gv4ud+cjqOcC+YXiYJ99Bf1d9Q32d/1g
8XyEnPlcWXOR9s/7yKrnP+08o3q+XfNrqL8rt82vNbRp3sfh2bPm16g8e+r8
ml08U/vJZfV38TxT+7sQz6h/IAzwTJ1fQ/M+nsqzLPvM81yU8dyLeN8qa97H
4VkOz6h/AM2vofwrt8UbRufXBjGea9o0j4niDavnMY3GG9R5TNG8j1X5IHUe
0+7+LlnzPj05nkMZzwWJ85hofs0qnqn2ObfEz9T5tZ3EfDC3zGNS65lFwTzm
SMZzqqR5TKvm16j5oNXza1SepwGezfbfusuzp82veYH5tXcF/YpdQfzcIJfP
r3n6vA/6nkkQiJ+/t3jeJ7fNr/Hxhl3zmLLm12Tng57CM7WfXPb8GjV+5vNB
WTxT42ed547E+gaal0fxhlXza3m1/izr+w/UfNDu+Jmvb1DjZ+r8mtl5H8Sz
0e9NUXmmzmMinnNb/JzX5teo35sS2WdZPFPrG3w+uFRSPiirXpdb+jc8rV4n
K96gxs9236fYNY9ptM/waYufRd9/mE2sb/DzmG+bnMdEPKN5THfzwSl1lweE
v5Sqld2Q9nVGqOy/V/U4r9TKhnlPT9NqvrP+6+j+0VnPJY3f98uu+DSt9vKw
svcXbpb8/+Lfk3xvVWbmY/7mxK1bUWtV/qznpg0YUXPU49+TFlJtyrQdm9Wc
+j3PVOrzxpqZadq4EevOR1eOzvZfic/uneuTpm3zbX/785pHc+j34N8Z+cuo
Tecj47WA0c2n+Gb9PTtP+769p8kVpVDsAf+VY5O0H6d8uabFu2a/e0//f+t4
re+/sVq8FhQV+OnAfok28+PIHbkjz71yRYkLOvtmUpFkte6F+aNa/qL/3VL8
fM1fw4fdWpSqJpQ5su7e3BjB89b//qCQHYvTG6Wp90ee2v1FRf3vgdLfU7BB
sbOtP0pRqw2fFbyv8K9Z/vqdqpUefROQrG763Wtoj/bnTL9/bYHPpsUuT1Pr
9CvUukp6VNZzmc2+8at7OU1NK/za5KobN5ncT0VpUaJgyOP4R92o/TQmLqht
1nOxdzS/+RfT1F6rtSvRQWbjH0V579inV5Tv01Svc3eO7Z68R/AeFH9S40Zq
XEeNu1D8g/w78r/oHKHzgrgVc7jxCQ6pXFE5QXrH+g0T6LcW0O+Mk7lDvwFP
uX5F5/dl4vlNd1O/USb1G2xQv7WZfs8A/WYC/dYA+t0M9FuO0+8jpt8bQL+N
o13rtyPQbz6ifmsR9YvO702ifre6qd+6xPOr6/dXTr9dmX7HcPotxvTrxel3
qEC/fkT9NtnrWr/BnH5HMv1GxcnRL/K/n0fL0a8s+4zOL/K/1zj99mH6TRrx
pH59mX7jQ13rdwvQb21gn1OAfhtEuNZvD06/HzD9TuT0O5np10+SftH5ve7m
+dX1Ww/oN9xN/6uf39PE81sAnN+tQL9lgX7TifaZen7LEP1vnRy2z5pAv0bj
q7NMv4Gcfusy/R5y0/+i8/sT0683sM+3gH6bHXKt3xbA/2ZKss91ifHVjRz2
v8g+m9VvvlH26HcX0G9zg/oV2Wfq+UX6RfZ5PNDvLovjZ3+g3/1Av7eI+REf
X+n69SLGVz8fcK3f1kC/94F+y9mkX2p85a59Nqvf2zbp97WDrvXbiqhfanyF
7DPV/44F+t0o6fzK8r8PgX6rE/Uryz6/CfT7kOh/qed3/mU553eHRfmRSL/o
/P5hUL8o/xWd3+tAvzv3u9ZvENDvoyf062nfo3PkjtyRO3JH7sgd+dMjV5Rt
sYtLBz5I1f7552p1ve4f/X9xJvWeBcWZqW7GmXfn7d7Y906KFtnwwK2tH2X3
OVPzCHTvie4ZRfeVPbl4j3of2mrqmqMNPk1RG5f2fb//sdNZcpQ3nc5YMH3q
nCStrbKhQJOm2f26KF+IAPk1ypf9WbwdzcXbepycD6wrCcTJW/9p7B4B3QPq
+rrL6cubxfkvcnH+EBbnb+fifHTvVpjxs4rjR8QnX6cS8Z/E8U+9B/HUfpXt
Bs+pKE80es+i35clGuxnyG39CY6+PEtfdvcLOfqy93xR+3+M6ktUFzWqr1pM
XxcM1j91fVUj1ru2RLnWV1cP6+eh1jNzWl+oX6sD09dhoC9Z/VcdOH29z/SV
aHF/zt+OWHO/r+srgqgvo31Zur7iOH11Z/rqCvRVkdiP0QjEyby+9H6MDR7W
T/UX4vnSLPZfVzh99Wb6ejDCtb5qAn2lAn01jHStr+6gP2pqLu2fQfZQ1Fdj
VF91mL4Oc/oKZvpK5c6XnocWAvYwA92ng/vWlsB/3cml/TBm/ZfR+gm1H8au
/hbZ96ey+lt2An3tkRRv8Pequr4OGLw/1fVVAOjrpqR+Bv6+2+5+Faq+UP7l
rj2k9qvY3X9itb5k2UM+PpStL3S++Lql2fOF/Bfq53xgkz2k6muzpHieqq+D
QF8PiPpC8Qbqv0X+y67+H1TfQPG80XsZWX1B1P4fZA9F+VdT0M/D98O77ufJ
vkfb88Q9Gp4/db1v+Hl077Nmjff4awcTtITGfUOj0uMF/y9+/4B0787DJido
Vf279t3a5qLw91zqUnnJpd0X1Elhr4fd/j5RuN6YwV+19d8Xr56q9OaXzRIS
hO9fqLxdYtUbieq0rkX31AsWrQvdo/2X78N0m3l/2s0ENTC21PWkbfHC3+Na
v5h/mr7Q/qN9RvuJ9g3fM7reB89d70mD623J1tvEovXGsvW249a7mq03Eay3
msX6fYVb73S23lfAevl7f+R/RfpF6+X1e1mSftF6Z7D11ieul69HmV0vr1+z
651q8PyaXa9Rnu3Wb30iz1EWn19kr77i1nucrTeWW+8Ctt4Z3Hpbs/X6g/U2
sEm/PM8X2Xr/ZtBe6eudLmm9yD5HEdfL+6MQwfmdSLTP/Pltw9ZbR5J9puqX
X+9Att4qxPNr13p5+6yvN8hie+UuzzME8YZV9orK81G23tOWnF9P63u0r98S
5fWIT8QhimNp34nC34dBfhl9xwCdI2R/0HlHcRfiHPlfkV2qzXE7Dfgd5MeR
vpA/Qv4LrXetTXki0i+KP6m8UfOvvLI/VQ1+T8lT98do3I6+g4Hycav3R1bc
K5sffn90fhqC/UHzqvz5osZXuW1/+Hy/MNufMgbnean7I+t8ycqLRfvTgNuf
Emx/7oW63h/+exTUeoLZ/bGqTkK1z6XY/lwx+D0l0f5EGjxfVtcZ5oM6gz5n
XZ/bHz2erwfsTxWD3zOh1iuo9gflNdS6BDpf+v7UA/vD5zvU771Q6xvUvN4u
+6zH1XWJ/otqn2Xtj7t1AJH94eeqUD2E+r0RUT2Ber6srgvJ4kfW/iB+crqO
JNv+yDpffD1KVt3pCqg7HQP+y7Pss6d9F92RO3JH7sgduSN35I7ckTtyR+7I
Hbkjd+SO3JF7qFx15I7ckTtyR+7IHbkjd+SO3JE7ckfuyB25I3fkjvy/yf8N
vnTezg==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{382.49238301063616`, 408.1865851800277},
  Method->{},
  PlotRange->{{0, 1}, {-0.5, 0.5}, {-0.5, 0.5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.688898528570759, 2.929799985046594, -0.11787199757577102`},
  ViewVertical->{0.9935906333206782, 0.11078370550199707`, 
   0.022463836997725667`}]], "Output",
 CellChangeTimes->{
  3.607661532276889*^9, {3.607661573932238*^9, 3.6076616027035913`*^9}, 
   3.6076616484956703`*^9, {3.607661862783093*^9, 3.607661876615988*^9}, {
   3.607670266878088*^9, 3.607670314086245*^9}, {3.6076720583469*^9, 
   3.607672066851021*^9}, 3.607674753301504*^9, 3.607674815196699*^9, 
   3.607675182767679*^9, 3.607675352044763*^9, {3.607688015197865*^9, 
   3.6076880277329493`*^9}, {3.6076924488342447`*^9, 
   3.607692452345427*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQm4HcV159t3efuip33XE0gC2SwPgQSyANtiMdgGIwwGZDCbAeFFCMkg
MDJiE7aEQQih9dlRHMdO4tixlWUSPEOInU2awXgbJ5BAQsiEGQiJzWc+IBip
pmvt6u5T1bX1vfc9Sd93733q7tu3u+pXp053n/M/51392RXXfebqz9547dWD
71999aoVN167ZvDsm1bHi6rviKJ33Bm/dg5G+G8URfyN/FuP39h/gL9PIx/t
6M0330TyvzfeeAMdPHgQvfrqq3T7JXR7+lFDr7zyClq1ahV64okn0NatWytk
cR0tWLAA3XnnneiGG25A+/fvR/v27aNfXyx/vR3t2LEDPfbYY2TVypUr0ZNP
Pkn+PnDgQFQl21TRhg0b+NHQfZxM97GQrX/qqafQTTfdhF9Rhby3oc2bN6Pl
y5ejZ599lnxl48aNeFmdfWXt2rX8p8BdvvXWW+iXv/wlfsW7xO9t6Fe/+hWa
O3cuOWP8b8+ePfiQa+wr+Jdmz56NXnjhBbrLU+QzraKlS5ei5557jvyvgrZs
2VJhLfjMM8+gZcuWoYGBAXKYuVaqo1tvvRU9/vjjZNWaNWtIa1bYfl9//XW0
YsUK9Pzzz9PffXe6g15++WW0evVq0srr1q2rscW4gRYvXoyWLFmCXnzxRfmI
T2N7xl3P272NLXvttdfEsjvY0QHIiKOT1kXfpbv/QTE5Tz/9tLwq2it/s0cH
DbQu9bt1CIuoolnHvr4If/TiAbWebQzAIHYErWM7mqdpNo683GycWTGSyf/y
y0jPjsGLbmJrFcgBK9ihzdF1TRvpmpdeeim7us3wAMeLA7ySnZiaa3hd6jB7
tRzgf8D6VGtef/31yoOdAizrwO8DeNH5rKEyg6sKL94rHzYMWVWzjhxynZjy
Kj0QekzRVNVxk0Z+L1srD+MasCzVqDC5Vc06qEEr0jL+M4uAZb2iQf+UNTA0
/eB/bAp6p3ysAMdV1Qp+4vzX4yONTlU1X2ZZRTTp11kjFoyPTZs2yRPf0ekG
hsCuatZBh34pcJhjxWFuI//XT658r/LkOk8+UOXMkVmcNU/48D4LHF6b6Ov7
2MlCrHNbIk/Q7LDmsVUyu3VgGdRea4ADmiza67NsXzq85en9KHpAC4Ef2gz8
UI8482vZWgW3OV/gaLsfmsL2Ii0T5/gRdo5q+tKuxHyXn04vGxA/fgY7MBCd
nC/CmvckdsSZsyGH8DfAz9VFM5/E1spUtLNlsgMz1+2HJorz+mjxDv4F2EG3
ONKz3HYAtTY5oIXF+zsAfjf+14cXGbQ9+QM6Ao4RmwXI/+Z47I+Y1QreZl7I
vZyo2ihz6OR9UvA9TsuswAffgP1AnUPepzZoP8QsKc+Gmy5pRUEDKw9Ev6sF
wK5q+l3VU7vi5zbXYX+TgRVQkxx5CO17ErAC6tsm7bsObE7eJ5a47wnACugk
2b5PAPbdBmx+eN+KfY8HVkCdMxL2DW18hMO+xwEr2oFlbN9DwL6hzUPtu0O1
77El7nsAWAFtPBr2TeZrZQ+WebRjgBWdzdn38cC+oc1L33c/sKKrdfYNbX4v
fh/Em32ynB9Yh9/b8WbRIPrDs3ehP/3AbvRnH9yNHvvQbvS9+PU/ztuNHj9/
N/rzD+8mO/uLZbvR9y/cjX7wkd3oL+PXX100jP764mH0Nx8dRn97yTDad+kw
2e5/XjaM/tfyYfTDjw2jpy4fRj+6Yhj9+OPD6KdXDqOfXUW3+fm1w+jvPjGM
nr5uGD1z/XAXErc10wfZAyybbXeet+L3TnKex6GvLdmJvn7qTvKlby3dlT/v
80o676vB80b/cMMw+scVw+jZG4fRc58cRv/0Kbrdv3xmGL2wchj9K37dNNyG
F15WTvvcjN/p/dFT0SND2xF78IV2LtiOdp+0A3154Q70G4t2oD2n7EBfXbwz
1YbfBtrwv7dmG6L/s2oY/dvNw+jF1cPo/8av/7eGtutFdu16HNCu3cDmK/E7
2Sz2EjYOPYoeGNqGHoxfm+PXlvgVt3WFrH5PuqlPHpVNTbZ76ZZh9PKtw+jf
49cra4fRf9w2TG9IfLicPvhU0ged6N64DzbEry/EL6g/tg5tj2iHnIl2npju
kN9sZodc1bgOeeW2uFNuH0b/Gb9+8Tm6zX9t2EWa8INAA/f699EK/N5m3Udn
GffRH0l99L0AffRka/YReuv+XXQwnVNOR12XDKZ+tHboEXR7/LojfuEvrh/a
Sj7NO/AD5h34fqADz9d04EWWHXhly3Qg+vUXdqG3v7gLHdi4Cx3cFL8e2Ema
/Kxy+pQ8UqH9MRbdPLQFrYlft8Qvt/7djvtX172/penexw7N7qXNVUPowZ3C
9Ypf7wN6q8+/w6/C7/XmdfgfnBGmw/E2+/GEGaDD/7l5HY4eil+bdyD08A5y
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
4V9cBKyFDkhbkaZOKtI8/fTT8ir+0A7qFMiJ/jWwjNQ5Ywk3+P89uiIg0Loj
/Y+BJ6PIraGrvFDRrAtwODxeGKIFUrmvaNaVejiAmnhFtYIdyFHAD7QDy6AD
mQAcSJ29Q3rNFc26Ug8np4pbhRfP8T8I7lHIB8E7VpYarQHLArQB9PML/XfL
Q1Dk3VIzJkKC5M2huxlvN263xKsn0+1i/52NBY7xZP/dchdc3u0pdLfzgc2h
Qqol7fYAsIxfJ8m7Xey/W35ZKu/23S27W36jQN7tErpbqLY4dIs4wG6hm6cH
gWX8foi821P9d9uJ38nYOt1/Z/zaST7G0+hu6b28urw5+YcfS5A/3tGA/XE/
Tt7f6S20v05gf+8pZ3/Ui66l9sf/hnbVAezqvfKuks3FIUHYhNoPsctkN2c4
fJvPk/JRvI/u51j6Hb419O024NtLG/TtOvDtMxr07Rrw7TPpt8kNFVKX/hd2
XyStPhFv/QzwxSrwxbPoF8mjkAl4678CfzH+Cs0BpLexyJbfAbaEaoeeTb94
tzi2XXZf3CF+8T6yID9s8dUsjdCKviU2XsUOXd442e774miWZ44G74xGMUV/
L3Z2FrARtaftYJ1gViOYexeviF87XtoRO1dmWLSXsnfeeadcWJX7geT3quIo
ybUPuTrtYsemK1HJcZBLVJ4k7Xey2C8EOv/2U089hW666Sb8ijsRv7eRchrA
1SbfjVwCUP5BMmhI7/JR/dZbb6Ff/vKX+BXvHL+3oV/96lfQtSMfFXLxtIXS
zk9n6xXXgLmKUoty39VdtqXL7Jyc+27uYqrGFmcqj7Ajjt7x/wH1bkzW\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"iEllipse", "[", 
   RowBox[{"pt_", ",", "\[Lambda]_", ",", "\[Mu]_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "yabPt", "}"}], ",", 
    RowBox[{
     RowBox[{"yabpt", " ", "=", " ", 
      RowBox[{
       RowBox[{"nYAB", "[", "0", "]"}], ".", "pt"}]}], ";", " ", 
     RowBox[{"ellipse", "[", 
      RowBox[{"yabpt", ",", "\[Lambda]", ",", "\[Mu]"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.607692888105918*^9, 3.607692892685034*^9}, {
   3.607693021886332*^9, 3.6076931259593782`*^9}, 3.607693511778963*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"iEllipse", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.05"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6076932310342493`*^9, 3.6076932336240053`*^9}, {
  3.607693540129661*^9, 3.607693572566695*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
J9APvFfoNStb0jv+vnBz/vA5EVxn+VS561NfLeGN2gwbun9XNNMnXIeFtpqm
N+P4vILrjajcpQHLpPn59BG9d52OPK4WrpbcsFLz4y4gPmpSdM2WoMkb+ToQ
rqeuddEFbryD+GhIteiuZRr+ns7sCFfPRftaExb/x/dfG6bELUgOeMDu4Zq/
+pk2LAHPkwZSNr/KoHnD8HxlIG37fTS5XwW+TwjXEptHVDoxFcd5GMnJSR+3
nj0Px0OYyLy96a9mfoXjS0wkfugTlccBfK5vJm+D2vsO6mhAfMykcPdwzwth
+DzbQpqcK9cudzKOM7CQTdNqF99+F58HW8nog6aorRvx+bqNRAY8OxDwmO8z
uAk/Pm72F19YeUVPXi/fcVVaT/iTgbr6oeeuyHG1uun6LrqteH3gT6r2TKzR
NPwYwoNR/C8fzzd7nSi7NFKOS637x5t3lffekOgnJLyeGpSNcRW5nVO4h2og
jlP2J7VPt0u8cz1S6u+10tp2R/fcRf3yJ+07q/68szBU6tezvD1PeprkeM+J
NVu37bEM4jr5+Wbfsr2SnvV7gNpVkdFCvCqPg359aVS9F+1w3HEweasfsfth
r1iEq4h72b8WRm2JkvQ86OuALy0rcZ2ZYPJNUv2s0iQO4Vpytdrmq28u4zhQ
Ffl74brQvdcwriWX561JLV4iht0DfZHjI2xFjXLcYuo+z9g6a/C6UI3iTHl8
dKnWz8jajvGoXzjumNv9qPHs4M49cL1tNZmS8UnTQxKuI9kdDus8LuF4TzU5
+ndF41kJ15Ed/kFlmkx4yO6BvtYGr7Q/kuQ4xI5rK7es7YXXqRoUT8rjnWme
Tu8k1C8N8Wkx6s1EdxzfqiHjm55qeaE7rlOhIeWmGTvk38T1JTSkz1xNyRst
8HtRR0Ia1Ld+M5Wf9wDuVXXq/up9cL0FLRlTPnHGvZt4/aojnS5GVzxWCceZ
asnu5Sf/uTogDcmjJbEnbWNSvsK4gRTus3n+cxdxjr9uOHs77WwaktNA5jYf
tK9PCz1q10C8xnXoVUyKA9WR0vf2Fwr8GOebG8ne0+uHVzDg+EcdaRt82q1+
MsaNJLPhx7+efS7HGx5Z+Xo2kda1BtJjXvSFOeNw/r4RxVHy91Ttx49LDWdx
o7xf8e2a/DFzjSz/NbNm5eBXcnzfd9vf3a47PFPiH20vGzcO4yaSeyPYo5UU
T2ogKkv0/NnnTJIezhZ+4d64YRbSg4F8XW7OjC/ScJyggQR1atjJ+5UcTzc6
fFP0kAn8vAH4+fQY2nZZHP6uMKF4QL7Of3cmfv1bd/m9vmL2qfuP/MwIN5HV
oZ0+vVTPRXzl9p82L9abkJwF/Z3pM2dtLRxXaCVjN90b65WM49FMZFmn0IyB
OoxbSfOak67eWYnXhSZSaHiTBYXz5Liwn78+b/YIwd8/ZhTHx79H1n7896Hu
ByyoX2YyLC/hxME6chzfxSebdz6QcBt5VmPIrPVJ+HuigM/bUnkJEm4j/bWe
xXee5+cNQF++F8mNdhH/dSBkQzWP2/i7y4Li8vh3UJu1XYeXPGJF+reQflWb
evkXl9dV5yrH7xlTR47XK9E6r8abVPwdYyG3N7YatPkIzreykjPrf/wyMxV/
X9nIp0mm34eVltdnjqv8vRRFRrxLkeL1lL/H9H92jPYKx/sswSTi+1nVanng
vEIV2TRsdIevngcwOsDFPCS+Ptn0XHPgdhG8z6IiCQfXmE53i0D81aTVptu9
0/bi9ZKaXGt7dOLaRXi9pCaP91Zd8XwDXhepSZCQ98PXD70iu48PfKlCuJoc
C+vsvfSNGrWrIYuC9HV9K8rfOd4xWduK78LrIg3xWNvlRpBWzjsp0WVU7Jh5
0ahdDcqn4e/91IXjtxcbi/d3NGToL6bvPLvhdYuWrFt36bfUMji/R01mN/mu
Uq0jcYiPlnRIcltx4xu8HtCRkdtORzR8ies7aclvIy8MrL0F71tpUX4G55Mz
996b36JSJD6vVOM7//4R/o7SkbCOjQ97/InfswXv/ZEnknLb430WIxl/b+dr
P3Mm6peBvIpyzyxSF+c3mMgwS5PvT6Th+HoTiqPn74Upnedn53bFeAH9Z76v
ZgzB7ykzKZN53nuB9J4yk7PujcdMkt5TZrLEVGxi0GT8PjKjeHY+b3tfHFI1
tzPGzSTOcLBvFy/83rGQIM/Z3upS8nfm0bkdjq5sgN9HFtLdd+usz1/I8dQr
t45sU2U8fo9YyCkhTpzPw7MCz0Wsao5xCznZfm6r84fx+8JKeoYmhc4qLn/f
tqvcasPWoXiet5IDM926pp7B87ONhJ4a09AjHO9/WVE8Mqf/P5J/kd0=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJw1mnfgFsURhu/77u6HiCIoxYLSQRHFHisoNlQUbMHYNSoao0ST2JOoaGI3
asQuaIRYYsPesIKKHbGhggL2ihUNJc/DjH/sdzu7e/fd7c7OvPPOdj941G5H
N4uimMdPxXUK1724PtUoinfKojiDxlHI05C3roviQfqHIu9MeYj6k5S9qU+m
/23GH0PpT30o7Vtw75HI3ZG3Qd4E+ffI3ZCXpuxF/TXaBlA/gfpHPP8Mrlsi
j2T8cPr+nM/rRPkt9ZIxU6jPpD6e+mTG7VtEm+/7GvKRyC8jf4D8X+Qtke9C
fgH5Zt8LeSLy88hPI++P/DTyu8iz+c9h1M+n/jXPn468JvKfkD9APpTrisg7
+1z6DkbuiLwj8kDk1ZAn87xWyMtW8RyfdyjyMOTeyC/RvyxyO+RplNXpH0V7
n5aieJz2ETn/M2h7Cvk3Of8fIU9C3g35ceQ3kU/g/oHIt9N+Pe83p4q524Vr
P57XoO3JXJsS+R6uWyHvw5gdGPM/rldz/yLaauRZlMHURzPuC+5dQP819C+m
raWKeXA+9qZ9CPI4ykT/n/bHGd+V6xTkpehvS1+D68PqCqVwTui/i2rrnJ8b
KBX11lyf5P6ijm/z25u87yGuF/LAnMOTaV+P+gHqIfd0Q57KbUvn/y2gPET/
dNoX86znaD+I/mdpm0XbyfRv7frT/m/6b+U6CPkJ+t+i/3TK5tRH0L49Y1/k
ehj9z9P2Pn1tkJ9Dfia/oT/PGMZ1MGP78r5juS5kbMX1MfoeoW9Xxj5G2xtl
6H8P6tvSviljzkLeDnkdyonUl+KeF6l/SP0W6v9jzAPIryIvqmOfuF/25f4d
6Xu9ivlwXj6hfx7y6cgTkL9DHl3FfnZf/xd5NcqG1NemvSvv2xX5V8gDnEvk
h7jOY3wv2vagb1+e05bnbYy8Dn2TKd/Rvx3tM+g/gOvy9C+gbSfqa1Peod6R
8Z0Y24sxg6hvRL0nz3++iv3jPnqPvmeQf2L8DshvI3ei9GZ8D9pXYvyDXGfQ
vy790+hbi+vryO0Z01Edt70IHVuR+hqUV6lPonQqY5+5316hLEd9W9rmU1+d
ek/u74883fWhrEL9dtreoL689of/G+B75Xx0U3eQf0Dum+/YkzFbUN+Qeg/e
t2cZ+qGeLJfPfwu5Q77vCtpM92/+x0p+E9e+9K3C/dsw/nv6NqJtLdqGuw+Y
r5Kya77fa/R/TnmA+sq+I2NXp96lJfb8eYwb3ghbMMI5yPVzzTu0xLq4Pstz
79B8/jr5DlMobRrx/3upv9oE/mt957WOdXf9++T8/Uq7jbwmcm/kdZBnOvfI
nZH3UKcboXP9kbdC/jbv7468O3Ir+jdAXhP5FvdcrtUZ/F/nOua6l9/Ku3dB
Xi+f9Rb1u7jOYfzG2lXkqVXYY+3yzDqe9zz9PZCfRe7lNe2F9rcv8gvIyyC3
dz9x/R3yHtoE30E7Rf0SnvkAY5fhGW9S/8y1oH4O/R3oH0PbQ7RdShlB/Uja
d+d572uz6H+bts/p+5C206iPp/4N919BfRX6V6Vcpd2gfQL1B9UZ6hc1o99x
j2jrkA9EPs5napt43lrUr6N+Gc+7I/3dVpQ7qd+mbaJ+N/e/yP1HM34z7TXy
Zoy/iLZdqR+unXJOuR5L/xza5pVhJ7fO+19GPpYx2+hP9Rvcf2/igYfTRr2D
fDzyR8jfIl/luiLfgPwk8rXqIfIE5MnIVyOvgXw98lP2Uw6jfjXlMW095X33
NuNW5L/vr2L/awde5v8Hcv0SuSf9Xel7lPIzcn/k6XXo7azUx5Xo2xB5LvLK
yCunvro/9dn6bu3MjNyv6u/EKvyLfqYj+rc514+RP6FsQf1y9T7n8znk7dM+
/EgZUoZezsn/68Kz3uV6AvJbjP+UvsuQ+yCPQ34c+RrKoY2YjyeoH07pQn1V
yhHUj+Kb/sP4GylX87y7KbOpryQuqMP+vJCy3+v+0P6JO16gfwPtbs6n36/d
/SntYe/U/99rL9MHjUE+nPqxzViPVcVM6d+XqQIfHoX8IfJddejXxuoD8rXI
VyGPR24RuyDvh9wJ+WL6/4Vc1aHP6rV4Th8tFhOT6bvVefeWe8y98Ncq8Rr1
Gxh/ahX+3bET6pgT52Yp7ns0/ef66lfq6yu036v/VadpE/T+gHyD0KOMPSI2
FCO6dxZr75DPQ/4K+QfGb+r8U7+C571UBrZ0z7n39qV/eer/pH4J/Zcjj0Ve
LA5yv4uZkEvue6SOPaN/376IvdSg/0fki5C/Rb6vGVh7aPaLa8Q3OyLfj/xn
ntGR+rnUL875vYz+h8uQtUnaLm2Ytmqm97hetH1XBuYVu++dczpb/4V8CPLL
fkMV3/4F9XvFS/Sfm/v7e+qf0/73tBfud/Go+FScOo7xH3A9Bfkz+ueLf+rA
mz/T/mDiPW3to8jXUf+a6wXIFxYRkxzJ8zai/h/ql9P/Ddd/Ip/kfzYDk4nt
1AGx2tNl2Ja1c83dn32L2GOXpQ6ryyMbYWu+1wbQNzbt52yuJyJ/TP8PZexB
bZE2acneFHPQfw3jLhX/6JfSdh+PfCLynkXgyUF12LTx1PsXYeu0edpCbaK2
cC/Gt6Z+FvWLGP+HKnTPOOXKOmKUWxsxB7adqY1J/6K9ds6de222tndIHWvr
Gv+D/gHI+9O+E/WvqF/P+JMTP4sfxfmD0/4bn8ykDPJ7kc9n/HX0n4R8UjPw
tmtyifu3iLVSh/y/c5C/9Buq0IfPU1/a16HL7p376ogvjD+MQ76sY46d6wvy
ed9TxlC/lPKd78iYL+k/HfkCsSJtV1G/kjK/GTqlbl2c442jVk/8vi3jF1M2
p+8m5LE8qztlU+rraYupf6H98vm0XYi8CHlSxlbq47Fc18p4yXjAfe/+H542
znjCeM24zfjLPeHe0Ae+R9tC5HnIZ+UeMl66m/p9+mzqV1Kucy+rr9SXYfwd
+hNKG+pnU87k/lMST7QvI34y5mpXBiY5TpvdCKxiPKPv1x4Z+7ZWf6ynTSx5
xgLG3oa8NPIxVeADbd1VvP+1VYz1v41fFojXcn0/Y8xyyPcU8Q1tqe9NWY7+
7ejbjHv7cM/gZsQ2c6jvXEds6Z5379f5/1cUEXsekv5ty2Zg6APLiPWN+eUS
DqJ0bgTGXp/+4/XRjYi5jL/71cE1DKL+IfU/0r92I+Jz43HjsdvzXY1PX0bu
ne+7L/K0ZsR3IymvNkOn1D11UF0zDjUe3S3X+Kcq7L12fyH3X4x8Nn3f0HZq
Hfaqm/qZ+1f7qb3Ubqr/xunG6xMTj7nf10jb4Pxr8//lfzfCF8yn3NkI7mJB
2seL0566d/YpI/5Sp43P3GfuN32IvktcKD7UJmob9XXa1vMp31Pfj7YOYkHG
rVvF/nN/z6etWYUeqA/qkLqpDulfbypCt0ZWYdu0cZvwfr+hrZ31ZsSUn1WB
H8ak/R7v3ivCJ09ohl3XtmnjppaxR/Q3+lz3zt+rsG3i0tYtYXe1vzckftS+
fEr9R+r3pz3ulP5Q/1vX4R/0E3VL4FbxqxhALKC+/5zfKl5oqcP/6QdbWsKm
qA9fpP9yXVyfy9Rf6s82g3/ajnKP31MF99OG62SedQ3Xm3PsaYlXDkZ+iTE3
1oFnDkB+PvHLT2n/fCc5hHGui/Yi8bd6pX5dnfjwPPeQe6UZPt94wHjhovRP
4hDxyJiMH/Qz+hsxgdhgqDqlL/SbqsAvxyCPK8Mf6Z9GIY8twz76f51zvZ9K
f9ghscV89T37xSCTyrCr2ldtlLbK+biF/laJB8WF41Nf1fdFzXiXebn+beuI
nb6kvjTrcU4V8ZRx1R11xFRi6ROyzXGOd8xc5GXrwAraYuO1c7n/VOTR6U98
nvhEnDKR/rOreJY4/bacm38UYb99p/Py/rk5/g2uRyOfUQQGNmZbYsuLiOXE
NeIbY8rpzYjZjN2MIT9Rf1viHuO9f1ehb+5v96B7Ud+nrqlzn1O/qQr7qx1+
Ot9XvDI750O9Ur+cE+dmVv7fgZQXmqFn6tvrGX+cVQVWmJnfK9+4TxF4UG5X
TlUuUh8n13qh8Wvuh53q8Fl+b4f8lhX0SUXg6aZrVsf8OE/yWfKI8on6cHky
7bL2+Y78JuOFCTl34mNtjLam5P6lE39ov7RjYndx9Li0F9q7jymvUv8DbTOa
odPqk3r1UB0YRV+mT1tUBm+pL9Wnyk3KGU3K/1uKe+tmcDVPUlqawRE9VgRn
6R4fJUfityLvUgc/oO8Xi91axxw7139Kneqcaz0h98DK6kgRe0J/bLzgu+l3
28p3iEHzv423bqxirrTFU+rgvOS+5FnlUMWfu6eu3eT8UX6N/BjyzXX4XH3v
5UVg8GF1cGnG1Lfp+6vgRORCRteBAdrkGo1NG7lU+gRtpzGbsdt+RXDz2jBj
MWM0bdvcxFBiMrluMb//6/+PqYJDlKOSI5Jb1EerE+ILsdLHOX/q7DNpM8X5
4n1tqTZOW6cN0hYZU2p3tD/GQq6Ba6EP0Zeo466D66Hu63P1vfowsZAc6WuN
iIHlTsV0+n39v7GNNlHbqE3UNsohuy/cH2JBMZpYbXQjuCBtprbz6EZgzZ3L
4PLk3OTe5O3k7wrkXcrgQPXpcnZyo4Oof+36i0HK4Mg7p87IncvXflVE3+t1
+Bx16qkifNETyHeWwRnIHfzCgcmxyY055869PN2brl0dHKo6rW7/wrHIN8q9
yMHK4cm5yM2qg+qonL+6eWpiRrGi2Ggqch91uRn6pM0yRyAHpy2TozsoMYjc
nXzzDs3gyF9KjC4mXKER2F2OUr50YRHzt6oxIfUtqb9RB6d8SGJGuWY5Szlf
OUe5TDmhTcrggOSKHq/iWfJFO9L+TB1coZzhzVXYDGP3sekfH05ZzC5210aV
6cO0XeZwfP++qe/GUMZScrJys+5h97L2RC5FzlceST5JLliOU47q/SK4z3bI
t5WBocXSYlqxrRz6wWkjFub7aTu0wXekDdY2G/cZ/5ljMNcgThYvi6/NrZmz
kFeSXzKXYU7H3II5BnM9csrDuDYawTXr8/SV+gB9oTkE83jm88wtrNoSnHUt
PqB/9TpyHc6JcyNHvmvuAblzYypjK2NCcy+9WoLz6io+riJnMNJ5akQuwZjV
2NWch7kQ58y5c01d263oH07/+o3IpxgDGgua0/lrGT5SnKCP13eKCcQG2mxt
t5hdjCUmF5sbwxrLiuHF8mL4rxKjKt+fmF3MLRZ9oI4Y4sq0b79gHDGg2Ee8
PKCImEt743yKJcQrYhF9SCuuHcvYf/dQPm5GTG1sbQ7SGKdfI3KT5khPpv8v
jcidGsMv4XIbkXs0hyKH+m4RuRU5A7kDOWq5XzH5mMSUxi6dk+P8DPm+KnKy
xlzGVOZq5UAnlsEhyo3KgYnbxe9yY3Js8i7yL3LF3eqIBYwt3F+/cJBziuAm
J1WRj3GPule9x3vlRoyvjJHknrcuInbSRnTIuOWdOvgcsbDv73cYn8mtyDsb
L/XVJ9P/a8bNroNPMfYyBrulGRyvXK8c8DqJV+Q+9QHGG8ZU5k60x9rl76rg
0oy1f6wDg8vVqi/qzXvIU5F/m3jL+Lh9I2IiY6MedcS32jRtmzkZcyPaYP3g
NPEB9R2KiCfMkchta2+1u86j89ku50BO3VjImOjmMmIiYz1jPmMlbd63ea+2
e0Dqgjk6c3Vy3uYyZ+b3i28mFzEf5q4mVIE/uiTe0Ofoe/QxkxN/iIfMoZmL
M6drXtRn+mwxjVzDU3mPGFf80zl92a1V5Ov0Ofoeba62V5+h7xAjiY0ezXvM
8co9y0HLyRvfyY/Kk1biT+QPkTcqIx9kjsdcjxy+HLjPN9djbk5bb05O/DM9
v7djHf5Wv/tKHRy6XPrsInIJ6ry6v0Hqshy6XLr2WrutT9O3Lckz1cHxyPX0
SN+iz3Qt9an6VnMC5gbmpg2Tczf/a7wgF+85B882GGMaa8rXyo8PKYK/Np80
IrGG+V5jOmM9Y76zMuYy1jPmMxbbPfe/HKLc0twqbIW24Ju0D9oPOcElXGPa
T/GbOO7dKmypttrzAeYYzTVegDyvDj/aj/K/Ivb7QXWcFfDMwKtV2Cfz+Obz
5R7lJ7fP/5IPPLSOnL9nJjyLMTTtvZylXKT2UawtphHbmIM0l/ht2pAd03+d
0giu05jX3JkcrbHwDulv5PSOK8Pf+X5bpv00z2i+0RyOuRzPUYzM/tPKyM+a
27HfXLA2UduoTf4g/bNnQfplmzG5WNSY2NjZcwJyV3JYJ9H3FfIJWTd/f5z+
B7kL4w9M/9kL+agy+LRmHbkLc3ue55ATk7vRJoqjxDydsy62kseUz5SvlJP3
OT5vU8opZXBo4gm/QTsvP9Yz+z6tIx/cWn0Uk9Th4/X1e5aRf92c/u317cZc
ZfBxa6WuiP3Fc2K3IYkB1qzjrINzL18nxl02bZ+xgOcEPC+wMm2HlcEJyv35
TeI6zzusm++qb9ozsUe3fEfPMAzJNfJsg/ojd31iI85IbEfbO9QPdz9U4Ws9
l+L5lI6557umzdUWLJP2ZkraQGM++R1t5Cppj7Qv7nlxrZhbW3cn5WjuH6GN
p//T9KfTc4+IYcUu2mRzjrMSn3qP94r5xH5i8sFl5NzF6sZ4xp7aXG2vHImx
77giYly/f0D6iG45//ow+UHx8+l1xLTadG27MbA8oHygsbH4xzzDRokHjIHd
b8YDxsbGAMYCnkEwXtSGmYudkfFA99RJ10x8Z37ygyJ8vL5em6kdnpr4QR/S
Jr9J36KPMba9Nd/PeEFewJjX+EKeTm5Mjkx+RMzvuQHPDxgLaJO0K9oXbZU6
2j997Gqpr+5PzwjsXwbHJg8hHyH3JgbRzs/O99UHtU+foe+Qo5IDFM+J6/Qv
njF5MW2+HIRclvGAcYEchVyqfI7chT7PNTRe1xfKiXvGyrNV4nvj62beYy7T
+LvKbzbeln8ZXQQHJf6elD5SPsH4w/hLLtqYoG3ibfeQ/HrvOvBgj7Rxxheu
kVjcuNS161OFvi4u4jyPGEruWc5bbGXMNDd9nbHKBsgD1eVGnM9bL3VNTtqz
Qdooz56ZY9R26aPN8crJ6rvlZOVmPV/Vqg58oz1blP7DM0/mSD1fsLAKf6u/
nJM+WIwmNyzHJHbrnv7A/eK+8Rv1zWJgv33F9NdL8GsZ/sPctzlwz7Z0TDyo
PqvX4pNpiW1WaAm86FkC96v71jM0YhFjOc/WiI/FJbbZ5x7UFw5J22QMNCpt
sLbd/J35IuML4ww5Zrk14yvjLPkMc+X6BH2DPLd8tzlQc6Ge0TD/Z3xgnCDf
JPd3cBFcn/GlMbPne1Zxf5Rh//5SRP7UcyxykXKEcoXyKeJG8aNcsjkGcw1y
pHKMcur6Uf2pXLv8hrhCfCEfYt7H/I/22LNu7j3P68hfyDHIAcgFvFwE1ySf
Ik4Rr8g9L5d7zTMMnmUwPjFHcEQjcgnmG80XynnKWZrjluuX85fvGVwH/t4F
+XhtFfLfuGcz2tauI16XW7y+iFx80RJnWofleDkhuaE/FpE/Vf+NJcwhm4sx
JjE2McZwP6jf+uKtijhrqY6r6+I08Zn6a57DfIdnEdRXY4tjiuCjjC/Necgv
G9+1aomc1BHpn+TsPMfqeVa5PM9Eei5JTtncuTGN52o9X2usY0wo9lgj8ZZn
JOTN5M/k48QQrpExufonv2VctXUR/JVnJh9A3qnIs5R1+JVxOV/yZeYKzVEb
H5sjeQX50CJyJ+5nzwWLyd3fxq+fIJ+J3K4OjCpWlR/zrKKYU+wphhXLiiHF
kn9D/roKzt+8nPk5cwED64iPNkD+XRVndB0/PPGimEJsIQYRixjvq7fqr/G1
fOAnqfPG++YsjJuMn+QP5QfVK/VLfkB/ItaVn5iV+iSPsHn6l5/ryGltmO8j
BpQ3GZDxsjl3cbYYV6wr3+Cem9GI3ISYT+wnphHbyBeJOcWa5uLFxGLjwfn/
1yWmMyfp+usTpyT20Ff6/XI8uyTWEoN5DlvOp1/Ov2dDT8v5PqAOvmS1RvAt
YkZ5JfklsaQYS55lvXw/Mak5HjnWJfaojnNLnl8yNpYPNmZ5phFne/w+cZf4
S6wrP6xd0j7J35oTMOYx5tZ+u57yFsYkxiauj7klY26fb8ysj9m8GbG0HIB+
XH8+NfXJs3Wn5v1iSu269l2s6RkAz+F6HtezAZ5RkQeQD5Df3acOf1Y1gr/6
PzQlBlE=
         "]], Polygon3DBox[CompressedData["
1:eJxFmHW4VlUWxk9+ikinICCNMEMLSHcqIihy6VG6kWZoQR2DcSwUZSiRbhAR
pC5DSMcFCQEp6RoJJe783mft55k/1vft9e619zlnnxXvOvlf79u8T+B5Xnbf
82L+x/Jzn/EkxneZyJDwvH+DHQo9bz14FfA+kecNQV5i3AnZAV4bm8JgxVhz
D+wcUpE1+ZG0YGmQ5WCZ0Gthu401TdBXg89GH87aV9H3gJ/DZh7YSLB2YAfB
UpAFYE2Qq4w/A7/H2tXok5DpjOeCz0Nus+5zZDI2U5AHzP2AzTH+D/u2n/b9
SfcEfp3r/QrWF2w86xqBXUH/FP2/2HyP/g+kJuOnwbthX4hzmRDZGq29AbZC
Z4Dk0lkiL4MVwC4zWDbW5kCWgWUDG8DaZeh70Vdh+yf6NfQP2W8icgHsd+bW
gt9EL8dcCcaH2Wsucja0s9KZDQNfjp5b94f85s5+Ffhlxh52pcBfY90vYNXR
qyGjsbkCNgHJy/wFTKuC5eD++vFfBJuW4EnICvRjSLIw7JKQZPDxYCPBRiBt
0Ruyfw3226Dnx6aFuz+9jy8YX9ezhvbenuf/omfXzaN7x6YO+F5seoL1du/j
FHPDGX+EXNT7Zd1T4NnBT8j/kIJgb4H1YnwIfBMyAv0eUhTsC/Qd2FRl/3+B
vQv2jvYDXwm2AGyvZ2eYm/FusLRIG7DNOlPW1kUP+P8G7I7uA/HR38a+v2e+
dRF9YWzvtz5YW+Q/rJ8JVg85ik1nsH1gS9HfwW4A+gLW3UIaglVBBjLfA9tK
Lt4+AXsfLBt6f5012Ndgy+Wf6KuR+2BH0fthc1px5Nu+Y8G7gR1Hvxradd9E
8vjmz53ATqGPw647dqOQX8Drg3UDK40+k323YVc5tmvongfqrLG7AP4ldjPQ
pyOpzK/BrjVSlbGPzUvYnNTzIqXBArBmYHnwtQKsLQx2i7W3kTryXewWhva+
LyGZ0HsqDj17Lj3fR6ybifhKYMgS7DOxn49dLaCFYEfAaqIPxq6pYp51p0LL
OeORDNjsAy8Glpm1uWOLF8VNNcUUWIPYrqdz/TmwOO+GfMp4amDno3PagDxg
nBnbNooXbFoiJVxMVgFLQf8Qu3Ho13yXZ9Azgp9ifFbn6XxyIvhb8jX0P1jb
OLZnnuD89lJgZ9ID6QrWBdkNNge9Ifb30YujP4s0QC/F2oqMn+QaGZAksJuh
XXO8/Aw5wvwk7KYyfsj4PvMvsN/jYKFyLPhsZCn4dvACelfoK5G52GwGe8LZ
rgObxXiH8h92a9D3672AdUSe1l5cewtzn2NzDVnJuB1r2yOl0I9jV8XlqjHI
ALBWSHnmHwNPo/XyPfRy7FfWszqwFdsD4M/6lrvqM/4b6xbxn4JNCbAsqmFg
3fkvD/YDtvvBp4DNAFsNlgXdQyajbwRfzDgVu4fIVLB+sflOBeS8ziEy0biy
/JtxC2xW8/8M95hfNYi5xeh7wCuFlvuUf7Ogv6IzZXxVuRJZozynvM24FLbP
qE7G5muNQqu58q+cseX7S9jl036R5fFD4MUjqx833X7TkcyszYgsA5uGviSy
+9L96fpZ5Vdgz4E11jqet7riAKwZ4w9Y+yLjzmB3+F8IthNsPmu7y18SFiuK
mQO+5U7VfcXeLvCO4JG4huoZelX5lG/5+RIyQrkG/RXmPlDuQ2pzneHgQ8Gv
Mb6rGGa+F/og/iuppsTmT/Pl7+zZFbt9yi+qldjUVU10uVi58IyrLencdetE
Zif7vZHVgAMux20DHx1ZPlC9/y2wWFRM/qp3qfoFltb5ZD6wu8zXxfav6Eno
f8SWR+f75nPyvUGqZ+i5kaasryG/xS4TemvmqogHoZdDngMrp9yJXQd0n3Pe
EFhNVm1WrtuDfQHGvVjbSnGK3ha8rvwPvKB7tmqx+fvKwGqVOMiDyHhZIxcP
eufycdXG9NhljixP6r2pni52nLCvYh+J0Mso50SW2x/qfnQN+QB2b4Kngh0E
+9G3nDzYcYZN6DU884VUsID1R7HbDN7Ks3oufrDfN/6hZ06DnsDutPzKtzqn
evedi4WS3EuRyPJurthqUarDX3PnpxqxyXEp8VDxzi3MHwffAh5i9ygyPvNj
YFz477HlbL1/+YE45Gj0bxULuq/Q8uA4sKX8Z9HZudhXrPUBT4dNOsaPiQNH
lsf3ML6i2sF106s+xVaLT/pWM1Q7FFviI/sdZxUPTZsw/qDaqBr5cWT1Q2u0
9gTyvnJJwnKScoTOR+eULmF5/pZbq5pSRnkRfTZ2PzE3zPESve/CslHtYm3J
2PLzyNBiR7Gai/0KRVZ3/sR2vXJ9bPm6RWj56F303fznBauFXcXIOHXOhOW4
Qi5fif8qJ0o/pvrrWW5SDagQGF8Qb8iDno+1JbGvBJ7eN7/Pm7DYq+Dicivj
gmAVIruurr9L9wdWLDLflQ8n6/4TluO6KCZ9qz1FYouhnqHF+3vohRMWo/Vd
3lC+2YQ8Us1XXWKcP2E14ApYddbmY/y2akfCalOSu8aJyLhZZ/EW1Sfwv+j5
Y8sPyhPVwdqgdwjNl+XT4lllsR8Cvh78Y/TszHWIrD8ST8kjfiueADYUbHto
vE785bbLEXoGcQNxhKKx+dVlsPewOe8bP1UO+wasDNgc3zjhEMevFNMpqpms
S9b+6EU84+BfBZYnlC/USx5mfipr+/PfRL2DaiB4R1fndR46F/Ug4gH1kFaB
1YVC8v3Q8v0sxjnY85PAeIS4mO5L3EIcQ1ytfWy5VWfYlXUXYvNd1RftOcr1
QmdZO0Z8A5kIdgOsY2z3oH6oT2j14yT6G55xeXH6y+ITCeMUGZk74HiO6kIP
1W1sagfmL2eQ3qHlYfmSfEpcuTz2b4TWixeIredUXHQJradUbyl+9RT6RvaP
A8sv4rHKy0XAd4LPjyxvjGY80vF+cXnxDfEU8d09yPLI9X6RcRVxFnGQ15GR
qm3KB+DXY/Orr3zzIfHeO+jDkbVgL6hWBPbOVVPUz8o35CPiUqoL6of1DDWc
7ya7WiFf1nOrN1BsKkZVQ59nfBqsuZ4XfZd8KLS+bJfLG6qBtSJ7l8ol+cCG
IENdbRyMfWk9u2+cspGLafFI9b+dAuMv4mvqm9X7qc6p3jWLLV/rnHXeO9Fz
RtbDH/eMj5VVDgYr6pv/VmN8NrbeWbyzONJY3Ab8YWQ8SnzqW7BHyoexfT/R
d5Q1YDH3NgJsp29cfr84LthS/uspV/tWR5cE1kepxjYNrV9R37KZ8QzGnfVs
4mjY/Y7NNN/icB7z92KLfX0nEVeepRwd23eIFfJRz3jTNJ156DiZZ3V5QWC8
SnE1x71j2SnXvag+AXkIthH9OHu2E8f0jcfsAPtZ8QaWQL+BXf/Y8n3N0HK4
ekBxW8VRcbCDYJkC4+hPJux7lL5LqW9SL5QNKShOw961Q9tPsa6Yn+xbHrzj
3mXWyDh/iuPeWVUH0ZM9q80vO19T769vKefAV0TGn5u7ey4bWN3SNyh9w1Bf
pv7sn5F9RzofWB+lPk5cQHVVPZq+M9zwrY9SPyg+0iS0XjGnqx/KK8ovDQLj
eqoLY1UDxAED611Uy1qGlpvVxyW53CROq/qrOqw8qT5ePEh86ExoPqT8p1gZ
5mKiBPog9IbYbRW/AI+w2x4Y9xMH1De6E6Fx0QbOj9uH9i4TseU+5UD11Pr+
Nwq5pn4S2zHe//mG+l71v4ox9UJfg9/z1QDg88z1ju27Y4j+hLgxU1MYL5L/
MV6EPMA+BpuP3eHAvg3pG9HjsX0POwjWA323uIjqk/IJWGvPvuGIt3+GfOn2
0rX0bfMIdq+G1keKn4inKAZ1bnsDi0/F6XTV1cC+Z4kHig/q2rqHlMC+x+m6
A8EbePZNZp9iKrA8qZr4fWA5QLlgGtg69GbolT3rmfSdda3D1vnGMfWOVoF9
F9i+2l99mXoH9RCq4Yrf/wHNwKqN
         "]], Polygon3DBox[CompressedData["
1:eJwVzjFLQmEYhuG3NIfskES0lkO0NRiBW3M46U84mwVGhIhDtkXQFkUJLg1B
mzi1iNDm0BIuQdA/iMAlnOpyuPm+537e7z2nmJ7UGosRkSCHw6WI30zElDyX
L3CbjSgoc86/hYi+PkHDbIoKfyXv6fYxlUv8sfu29/d2verL3Bir+jxX5Nbw
KA/wYfYTu9yGXDV7jbbZll2bqOt2/MuTfmR2goJ+XX4z28WzXOaPzJ+5t7kO
vuQOX5+/45fteecP7PzhvrHFX3Irutnce/PAd3HnGze6IX9q7sXZQ5P7B7ly
KEY=
         "]], 
        Polygon3DBox[{{1521, 932, 382, 931, 1104, 615, 1251}, {1468, 768, 163,
          769, 1022, 499, 1176}, {1474, 773, 164, 185, 944, 1031, 
         1358}}]}]}, 
     {EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{937, 396, 911}, {15, 19, 368}, {654, 354, 923}, {594, 
         308, 595}, {622, 347, 621}, {1124, 36, 1123}, {1121, 33, 1132}, {430,
          57, 432}, {1271, 36, 1124}, {1240, 388, 1239}, {17, 24, 40}, {428, 
         57, 430}, {339, 340, 338}, {593, 308, 594}, {1242, 313, 1243}, {323, 
         325, 324}, {1328, 388, 1240}, {404, 8, 402}, {655, 25, 653}, {950, 
         341, 912}}], Polygon3DBox[CompressedData["
1:eJxNlDlvU1EQhe997xkQilhEQwVKaGjoEhtqQGIThQkhNhDi5wgEcnDE2gER
IsaxZJzFkEQiiIr8BJR/AjSkQCxtlJ7vMFNQjN5s794zZ2buYN4s309CCONI
hnQLITzHkaKP4dhCLscQnuG7Q6yErGMPEc+JPcIuY48iP7CvI/uJzWBPoP+S
D12X3Ca3z/cI8Yf4ZtF38H3isir2T3I30fvoB8lpEd8mvoFvzM8Xhib+S9Gw
raIfJXe358+Te47YeaSDXiankZjdSg2DsFzE/k7sLb4b6F3kHfoiMo5eQZZS
u3PUdWERxornCrvOEJam1yd84moC329i0+gXot2ne7/gO4meo9fJXeac+WgY
hfUbcgq7jj1F/DPxhWj1iS/VoFpU41xqZ+TOh7D0sF8l1gP1Qvlnid3773zd
X0K+ohfJf48+SH4tsxzldqJhU52qV5yIK3Ha0t3RuN7y+nPHKwyqteb1aYY0
S8IkbDXnXpxMen+X/A5xK9EsbDjfwiL8p5G76H+Ia141o10/f5LYamr2R/R9
xAeQD+jVzPRF9BHiL/lvbzBMOkP8viH2AHmR2Ewf838160Wf9134rmXWA82u
/tG/c9gHgs2sZlf/6F/dWfV9qGGvpVa/ztBZPXzDBcOlXGFe1h75vGomVlKz
ZxLjvOM1qtZb0bg4UbBeqqearTa5h4L1X5yrp9pV1aBaVvgeDrZfwqyd0Wwt
OP5Zt7VTfe+ZsItjca2ZvunzrlnP/fwSMp0Zxz3nS/VP+XwKn2av6vWvO7+b
Pt96e8SleqL+PonWq7rPTNHrEyftaJyIm47vQ8PtEed0D2dUMutp5vWpX+L8
Kb6C9/MqQuifTzHxIW6OB3tbtGNnos2gdqmRWa1Dvi+aXb0PV6K9Hdv4Xkd7
03Z8FzVrmrm2v3faKb03yh12vh5Hw/IX/UGfIw==
         "]], 
        Polygon3DBox[{{1123, 417, 415, 35, 1124}, {1113, 11, 373, 400, 
         1333}, {1241, 310, 594, 595, 1325}, {1380, 611, 333, 334, 1249}, {
         1240, 310, 609, 608, 1328}, {653, 408, 405, 16, 655}, {1382, 623, 
         349, 397, 1256}, {1118, 654, 923, 353, 1115}, {912, 395, 618, 617, 
         950}, {1133, 428, 430, 35, 1122}, {1253, 342, 937, 911, 1396}, {1239,
          593, 594, 310, 1240}, {1124, 35, 430, 432, 1271}, {1111, 5, 372, 
         413, 1334}}]}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{924, 355, 951, 625, 356, 357, 925, 358, 926, 359, 626, 360, 
       1259, 361, 1329, 627, 362, 628, 1260, 363, 1330, 629, 364, 630, 365, 
       1261, 366, 927, 367, 928, 369, 21, 1397, 924}], 
      Line3DBox[{632, 375, 633, 1262, 376, 1263, 377, 634, 378, 929, 379, 930,
        380, 381, 635, 931, 382, 932, 1264, 383, 384, 933, 385, 934, 386, 
       1265, 387, 636, 389, 637, 1266, 309, 1331, 632}]}, 
     {GrayLevel[0], 
      Line3DBox[{1109, 373, 11, 1113, 8, 404, 14, 417, 1123, 36, 1271, 432, 
       57, 428, 1133, 55, 1132, 33, 413, 372, 5, 631, 1, 1109}], 
      Line3DBox[{640, 370, 399, 371, 30, 661, 31, 665, 40, 24, 408, 653, 25, 
       655, 16, 646, 4, 640}], 
      Line3DBox[{643, 374, 2, 1258, 351, 921, 352, 922, 353, 923, 354, 654, 
       1118, 368, 19, 649, 10, 643}], 
      Line3DBox[{1239, 388, 1328, 608, 330, 621, 347, 1256, 397, 349, 1257, 
       350, 638, 334, 333, 611, 313, 1242, 311, 1325, 595, 308, 593, 1239}], 
      Line3DBox[{323, 324, 902, 328, 906, 390, 391, 624, 393, 920, 394, 916, 
       395, 912, 341, 950, 617, 323}], 
      Line3DBox[{339, 338, 1396, 911, 396, 937, 342, 936, 346, 935, 392, 1267,
        398, 348, 918, 344, 914, 339}]}, {}, {}, {
      Line3DBox[{399, 952, 401, 954, 405, 408}], 
      Line3DBox[{404, 402, 1333, 400, 1332, 631}], 
      Line3DBox[{413, 1334, 414, 1335, 415, 417}], Line3DBox[{432, 430, 428}],
       Line3DBox[{595, 594, 593}], 
      Line3DBox[{608, 609, 1379, 610, 1380, 611}], 
      Line3DBox[{617, 618, 1106, 620, 1108, 624}], 
      Line3DBox[{621, 622, 1382, 623, 1383, 638}], 
      Line3DBox[{625, 956, 407, 958, 1398, 410, 959, 1399, 411, 409, 957, 406,
        955, 403, 953, 630}], 
      Line3DBox[{626, 960, 412, 962, 418, 964, 421, 1337, 966, 423, 424, 1338,
        968, 427, 969, 1400, 426, 425, 967, 422, 965, 420, 963, 419, 416, 961,
        1336, 629}], 
      Line3DBox[{627, 1401, 970, 429, 972, 434, 974, 436, 976, 439, 1341, 978,
        442, 1342, 443, 980, 445, 981, 1402, 444, 979, 441, 440, 977, 438, 
       437, 975, 435, 973, 433, 1340, 971, 431, 1339, 628}], 
      Line3DBox[{632, 1375, 592, 1089, 1374, 590, 1087, 588, 1085, 587, 584, 
       585, 581, 1082, 578, 1418, 1080, 579, 1081, 580, 1372, 582, 1083, 1373,
        583, 1084, 586, 1086, 589, 1088, 591, 1090, 1419, 633}], 
      Line3DBox[{634, 1100, 607, 1098, 604, 1096, 602, 1377, 1094, 601, 598, 
       1376, 1092, 597, 1091, 1420, 596, 600, 1093, 599, 1095, 603, 1097, 605,
        606, 1099, 1378, 637}], 
      Line3DBox[{636, 1107, 619, 1105, 616, 1103, 613, 612, 1381, 1101, 614, 
       1421, 1102, 615, 1104, 635}], 
      Line3DBox[{161, 162, 772, 166, 775, 171, 778, 174, 177, 1390, 781, 179, 
       785, 182, 786, 1185, 183, 181, 783, 176, 780, 173, 777, 169, 167, 1389,
        773, 164, 770, 163, 768, 1178, 161}], 
      Line3DBox[{982, 447, 983, 448, 1343, 450, 985, 1344, 451, 987, 453, 989,
        455, 991, 457, 993, 460, 1404, 995, 461, 994, 459, 1346, 458, 992, 
       1345, 456, 990, 454, 988, 452, 986, 449, 984, 446, 1403, 982}], 
      Line3DBox[{996, 463, 997, 464, 1347, 466, 999, 1348, 467, 1000, 470, 
       1002, 473, 1004, 475, 1006, 1406, 478, 479, 477, 1350, 476, 1005, 1349,
        474, 1003, 472, 1001, 471, 468, 469, 465, 998, 462, 1405, 996}], 
      Line3DBox[{1007, 481, 1008, 1351, 482, 485, 1010, 1352, 486, 1012, 488, 
       1014, 491, 1016, 493, 1355, 1018, 495, 1017, 1354, 494, 492, 1353, 
       1015, 490, 489, 1013, 487, 1011, 483, 1009, 484, 480, 1407, 1007}], 
      Line3DBox[{496, 497, 1021, 500, 1023, 503, 1025, 505, 507, 1409, 1027, 
       508, 1029, 510, 1357, 1030, 511, 509, 1028, 506, 1026, 504, 1024, 502, 
       501, 1022, 499, 1020, 1408, 498, 1019, 1356, 496}], 
      Line3DBox[{512, 513, 1033, 516, 1035, 519, 1037, 521, 523, 1039, 524, 
       1041, 1411, 526, 1042, 1412, 527, 525, 1040, 522, 1038, 520, 1036, 518,
        517, 1410, 1034, 515, 1032, 514, 1358, 1031, 512}], 
      Line3DBox[{1359, 529, 1045, 532, 1047, 534, 1049, 537, 1362, 1051, 539, 
       540, 1363, 1053, 543, 1054, 1413, 542, 541, 1052, 538, 1050, 536, 1048,
        535, 533, 1046, 1361, 531, 530, 1360, 1044, 528, 1043, 1359}], 
      Line3DBox[{544, 545, 546, 1364, 548, 1056, 1365, 549, 1058, 551, 1060, 
       553, 554, 556, 557, 1063, 560, 1415, 1065, 561, 1064, 559, 1367, 558, 
       1062, 1366, 555, 1061, 552, 1059, 550, 1057, 547, 1055, 1414, 544}], 
      Line3DBox[{1066, 563, 1067, 564, 1368, 566, 1069, 1369, 567, 1071, 569, 
       1073, 571, 1075, 573, 1077, 576, 1417, 1079, 577, 1078, 575, 1371, 574,
        1076, 1370, 572, 1074, 570, 1072, 568, 1070, 565, 1068, 562, 1416, 
       1066}]}, {Line3DBox[{640, 952, 641, 661}], 
      Line3DBox[{643, 639, 1422, 921}], Line3DBox[{646, 954, 647, 665}], 
      Line3DBox[{649, 645, 1424, 922}], Line3DBox[{653, 655}], 
      Line3DBox[{902, 903, 1106, 916}], Line3DBox[{906, 907, 1108, 920}], 
      Line3DBox[{911, 937}], Line3DBox[{912, 950}], 
      Line3DBox[{914, 915, 1523, 936}], Line3DBox[{918, 919, 1525, 935}], 
      Line3DBox[{923, 654}], Line3DBox[{924, 951}], 
      Line3DBox[{925, 962, 666, 1434, 682, 972, 683, 1440, 702, 984, 1441, 
       703, 724, 1449, 996, 725, 997, 1450, 704, 1537, 985, 685, 684, 973, 
       1532, 667, 963, 938, 1528, 650, 955, 648, 1425, 928}], 
      Line3DBox[{926, 960, 662, 1432, 679, 970, 1433, 680, 700, 1438, 982, 
       701, 983, 1439, 681, 1531, 971, 664, 663, 961, 1527, 644, 953, 642, 
       1423, 927}], 
      Line3DBox[{929, 1100, 891, 1513, 890, 1090, 1575, 873, 872, 1572, 1079, 
       870, 1078, 1571, 871, 1512, 1089, 889, 904, 1099, 1519, 905, 1107, 917,
        1524, 934}], 
      Line3DBox[{930, 1098, 888, 1511, 887, 1088, 869, 1504, 868, 1077, 1570, 
       849, 848, 1565, 1065, 846, 1064, 1564, 847, 1503, 1076, 867, 885, 1087,
        1510, 886, 1097, 949, 1518, 901, 1105, 913, 1522, 933}], 
      Line3DBox[{931, 1104, 900, 1096, 884, 1509, 883, 1086, 866, 1502, 865, 
       1075, 1569, 845, 844, 1063, 1563, 829, 828, 1559, 1054, 826, 1053, 
       1558, 827, 1493, 1062, 843, 863, 1074, 1501, 864, 881, 1085, 1508, 882,
        1095, 898, 1517, 899, 1103, 909, 1520, 910, 1521, 932}], 
      Line3DBox[{477, 126, 478, 1163, 128, 1164, 129, 493, 149, 150, 506, 
       1182, 172, 173, 1190, 194, 518, 195, 531, 1201, 216, 1300, 546, 237, 
       544, 1209, 236, 1208, 214, 529, 212, 192, 516, 1188, 191, 171, 1181, 
       170, 505, 148, 492, 1172, 127, 1295, 477}], 
      Line3DBox[{1426, 956, 652, 964, 668, 1435, 686, 974, 687, 1442, 705, 
       986, 1538, 706, 726, 998, 1451, 727, 742, 1459, 1007, 743, 1008, 1460, 
       728, 1544, 999, 708, 707, 987, 1539, 689, 688, 975, 1533, 670, 965, 
       669, 1429, 657, 957, 656, 1427, 651, 1426}], 
      Line3DBox[{1428, 958, 659, 1430, 966, 939, 672, 976, 690, 1443, 709, 
       988, 710, 1452, 469, 1545, 729, 1009, 744, 1461, 745, 746, 1549, 1019, 
       765, 1550, 1020, 747, 1547, 1010, 940, 730, 1000, 712, 1444, 711, 989, 
       692, 977, 691, 1436, 674, 967, 673, 1431, 671, 660, 1526, 959, 658, 
       1428}], Line3DBox[{675, 968, 1529, 676, 1437, 978, 693, 713, 990, 1445,
        714, 731, 1001, 1453, 732, 1011, 748, 1462, 749, 1021, 766, 1467, 767,
        1468, 768, 787, 770, 769, 1022, 750, 1012, 734, 1454, 733, 1002, 716, 
       1446, 715, 991, 1540, 695, 694, 979, 1534, 678, 677, 1530, 969, 675}], 
      Line3DBox[{696, 980, 1535, 697, 1447, 992, 717, 735, 1003, 1455, 736, 
       1013, 941, 1463, 751, 1023, 771, 1469, 772, 788, 1553, 944, 1031, 789, 
       1483, 809, 790, 1032, 945, 1474, 773, 1024, 753, 752, 1014, 738, 1456, 
       737, 1004, 719, 1448, 718, 993, 1541, 699, 698, 1536, 981, 696}], 
      Line3DBox[{720, 994, 1542, 721, 1457, 1005, 739, 754, 1015, 1464, 755, 
       1025, 774, 1470, 775, 791, 1475, 1033, 792, 810, 1555, 1043, 811, 1044,
        1484, 793, 1476, 1034, 777, 776, 1471, 1026, 757, 756, 1016, 741, 
       1458, 740, 1006, 1546, 723, 722, 1543, 995, 720}], 
      Line3DBox[{758, 1017, 1548, 759, 1551, 1027, 778, 794, 1477, 1035, 795, 
       812, 1045, 813, 1488, 830, 1055, 1489, 831, 850, 1494, 1066, 851, 1067,
        1495, 832, 1560, 1056, 815, 814, 1046, 1556, 797, 1036, 796, 1478, 
       780, 779, 1472, 1028, 761, 760, 1465, 1018, 758}], 
      Line3DBox[{762, 763, 1029, 942, 1552, 1030, 764, 1466, 762}], 
      Line3DBox[{1473, 943, 781, 1037, 798, 816, 1047, 817, 1490, 833, 1057, 
       834, 1496, 852, 1068, 1497, 853, 874, 1505, 1080, 875, 1081, 1506, 854,
        1566, 1069, 836, 835, 1058, 1561, 818, 1048, 946, 1557, 800, 1038, 
       799, 1479, 783, 782, 1473}], Line3DBox[{784, 785, 801, 786, 784}], 
      Line3DBox[{1480, 1039, 803, 1049, 819, 1491, 837, 1059, 838, 1498, 855, 
       1070, 1567, 856, 876, 1082, 1507, 877, 892, 1514, 1091, 893, 1092, 
       1515, 878, 1573, 1083, 858, 857, 1071, 1568, 840, 839, 1060, 1562, 821,
        1050, 820, 1485, 805, 1040, 804, 1481, 802, 1480}], 
      Line3DBox[{1482, 1041, 807, 1486, 1051, 947, 823, 1061, 841, 1499, 859, 
       1072, 860, 585, 1574, 879, 1093, 894, 1516, 895, 896, 1577, 1101, 908, 
       1578, 1102, 897, 1576, 1094, 948, 880, 1084, 862, 1500, 861, 1073, 842,
        556, 1492, 825, 1052, 824, 1487, 822, 808, 1554, 1042, 806, 1482}]}, {
      Line3DBox[{1109, 1332, 1111, 1334, 1121, 1132}], 
      Line3DBox[{1113, 1333, 1114, 1335, 1122, 1133}], 
      Line3DBox[{1118, 1115, 1424, 1110, 1422, 1258}], 
      Line3DBox[{1123, 1124, 1271}], Line3DBox[{1239, 1240, 1328}], 
      Line3DBox[{1242, 1243, 1380, 1249, 1383, 1257}], 
      Line3DBox[{1256, 1382, 1248, 1379, 1241, 1325}], 
      Line3DBox[{1259, 1432, 1131, 1434, 1136, 1435, 1137, 1127, 1337, 1430, 
       1120, 1398, 1428, 1117, 1426, 1397}], 
      Line3DBox[{1260, 1339, 1134, 1438, 1403, 1278, 1441, 1280, 1538, 1148, 
       1155, 1452, 1149, 1283, 1445, 1284, 1345, 1447, 1142, 1535, 1276, 1342,
        1130, 1530, 1400, 1269, 1431, 1126, 1429, 1125, 1528, 1268, 1527, 
       1336, 1330}], 
      Line3DBox[{1261, 1423, 1112, 1425, 1116, 1427, 1119, 1399, 1526, 1384, 
       1128, 1338, 1529, 1129, 1437, 1341, 1274, 1139, 1443, 1147, 1442, 1144,
        1440, 1385, 1270, 1433, 1401, 1329}], 
      Line3DBox[{1262, 1419, 1575, 1324, 1394, 1504, 1228, 1502, 1226, 1500, 
       1227, 1321, 1373, 1573, 1233, 1515, 1376, 1244, 1395, 1577, 1381, 1250,
        1520, 1252, 1522, 1254, 1524, 1265}], 
      Line3DBox[{1263, 1513, 1238, 1511, 1237, 1509, 1236, 1235, 1377, 1576, 
       1246, 1421, 1578, 1251, 1521, 1264}], 
      Line3DBox[{1266, 1378, 1519, 1327, 1518, 1247, 1517, 1245, 1516, 1326, 
       1420, 1514, 1232, 1372, 1319, 1506, 1223, 1566, 1369, 1311, 1568, 1312,
        842, 1217, 1218, 1569, 1315, 1570, 1317, 1417, 1572, 1230, 1375, 
       1331}], Line3DBox[{1267, 1525, 1255, 1523, 1253, 1396}], 
      Line3DBox[{142, 141, 501, 769, 163, 787, 185, 944, 512, 187, 210, 810, 
       212, 812, 217, 816, 222, 203, 523, 801, 182, 784, 178, 943, 511, 157, 
       154, 760, 149, 756, 146, 752, 142}], 
      Line3DBox[{1340, 1272, 1532, 1273, 1533, 1138, 1436, 1275, 1534, 1277, 
       1402, 1536, 1143, 1346, 1286, 1542, 1153, 1457, 1349, 1293, 1455, 1292,
        1453, 1158, 1545, 1290, 1451, 1288, 1405, 1449, 1145, 1343, 1279, 
       1439, 1135, 1531, 1340}], 
      Line3DBox[{1344, 1281, 1539, 1282, 692, 1140, 1141, 1540, 1285, 1541, 
       1287, 1404, 1543, 1154, 1350, 1295, 1165, 1172, 1353, 1464, 1297, 1463,
        1171, 1462, 1169, 1461, 1296, 1407, 1459, 1156, 1347, 1289, 1450, 
       1146, 1537, 1344}], 
      Line3DBox[{1150, 1444, 1151, 1291, 1348, 1544, 1157, 1460, 1351, 1168, 
       1387, 1549, 1356, 1175, 1467, 1177, 1469, 1179, 1470, 1181, 1409, 1551,
        1173, 1548, 1354, 1166, 1163, 1406, 1546, 1294, 1386, 1448, 1152, 
       1446, 1150}], 
      Line3DBox[{1159, 1160, 1454, 1161, 1456, 1162, 1458, 1164, 1167, 1355, 
       1465, 1174, 1466, 1388, 1357, 1552, 1390, 1191, 1477, 1188, 1475, 1187,
        1553, 1186, 1178, 1468, 1176, 1550, 1408, 1170, 1547, 1352, 1159}], 
      Line3DBox[{1180, 1471, 1182, 1472, 1183, 1473, 1184, 1185, 1480, 1194, 
       1482, 1411, 1196, 1486, 1362, 1204, 1214, 1491, 1213, 1490, 1210, 1488,
        1208, 1198, 1359, 1555, 1197, 1483, 1391, 1358, 1474, 1389, 1180}], 
      Line3DBox[{1189, 1476, 1410, 1190, 1478, 1192, 1479, 1193, 1481, 1195, 
       1412, 1554, 1392, 1205, 1363, 1558, 1206, 1493, 1366, 1304, 1216, 1499,
        1224, 1498, 1221, 1496, 1393, 1301, 1489, 1414, 1209, 1199, 1360, 
       1484, 1189}], 
      Line3DBox[{1361, 1201, 1200, 1300, 1364, 1211, 1494, 1416, 1308, 1497, 
       1310, 1567, 1225, 1231, 860, 1313, 1501, 1314, 1370, 1503, 1219, 1564, 
       1306, 1367, 1207, 1559, 1413, 1299, 1487, 1203, 1485, 1202, 1557, 1298,
        1556, 1361}], 
      Line3DBox[{1365, 1302, 1561, 1303, 1562, 1215, 1492, 1305, 1563, 1307, 
       1415, 1565, 1220, 1371, 1316, 1571, 1229, 1512, 1374, 1323, 1510, 1322,
        1508, 1234, 1574, 1320, 1507, 1318, 1418, 1505, 1222, 1368, 1309, 
       1495, 1212, 1560, 1365}]}}},
   VertexNormals->CompressedData["
1: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
f0VHxF/RU/FX3PHY7gMv7VVs3DVqzqWnzHbGZw6WydFhu6baWOe9afRqnoeu
7eNIetRodhGHLzpuXLj3yymqHP/9YYjtodr7qEGXXSH3xmpoiH2h8y2Kp9Cd
5XdCn5WNo8vNAu7mm6Xnp6eW+1gtukD6lR9szFupqLvbjDpOITl8zDJLvOuo
Y/P1DbIs5oeS+8xZTzo/TKeiaclO5T/Esfs6Wryxo56+V388oOSvZH77I9n/
VaiO31t8v6x1S6djM12fFd0UTB/kOmnlOsfLdd4g61N9WZ8vyvpcS9YnN1mf
M2R98pQ4WSVxcm+Jk9rL/VLgx9z75Wpyv9xE7pdT5X45QO6XlglunCq4cYrg
Rv0EZyouOJOt4MzICx+D70VeyEHySFrJI62UPHIi/O1O+Ntz8LfgAy0XPlBP
4QN3hO+9DN+7Bb7XBP4W/KQH8Lf28Lcn4G+94W8vw9+ehL/9Bn+bKHVB/aQu
OGpTbl1QmtQXRUl9sa3UFy+T+qICUl9cVeqLQqRO+bjUKXtLndJuqWv640pu
XfNpqWsuCt/7Er43i8T3xkk/oVnST+ir9JPf/vYM/G0/+NuS8Lcz4W/nwN+m
fxV/aw9/6wl/2wr+Ng7+tgT87Vz42yXwtxfhbwn+Vg9/6w9/GwJ/+2Os+NuV
8Le14W/Hwt+GSj+nQPjbbvC3TvC3KtELqiZ6wc1FL7iv6AWVEr1gW9ELOiO6
Q9Ad3iC6Q3fgh6uoxA8vhR+GfpEWvjcQvrct/O1N+Nua8LeX4W9trcTf2sHf
XoC/7Qx/Owb+Nhz+tgH87Ur42zPwt07wtyvgb1Pgb/vD33rB326Dv3WGvz1q
4G97dvhXf3sW/tYe/jYE/nYH/C3D3+6Gv70If9sL/vYX/G04/O1o+Ftz+FuC
v30If9sJ/rY+/O0l+Nu18Lcl4W/Lwd8ugb+Ngb/9Bn97CP62K/ytNfztIvjb
RfC3FeBvHeFvl8PfVjDwt2Xgb9uLL6UI+NtJ8LeL4W/94W/nwN8S/O0N+NvS
8Lf7xCfzA/jbRfC3RvC3JeBv+8Dfwp/TLPjbrhI/V4W/tYO/DYO//Ql/ex7+
tiX87RH4273wt8Xgb03hb2cb+Ftr+NsO8LcDDfxtV/jbJPhbgr99buBv1xj4
20tJ4m+j4G+3wN+Ohr89B397Av42Fv52MvztLfjbIvC3deBv0+Bvo+Fvh8Lf
LoC/PQx/6wN/ux7+9jj87Uj426nwt97wtwkyh/I6+Nsq8LeX4G+bwt8+gr/V
w9/Ogr+t11387Qv423vwtwZz8f/6+XQ9+NvR8Ld+Bv62M/ytLfztGvhbPE/g
K/C3jeBvw+Fvy8HfBsHffpI+zGvgb/vB326Evz0Bf5skusDX4W8vwN/+nC7+
tgf87TL4W0t53sI35XkLb5TnLZR9VvztAfjbGfC36fC3KfC3FeFvi8pzpBxf
mPsciU7Jc6T/+PdBHvC3p+Fv38DfmsLflpXnYxwEf+sMf3sU/vYa/O1y+Fsf
+NtV8Lcv4G9vwt+6wd/mEVeez8Oc4G/XwN/Gwt/+vXX+Xbj99/rXXqyY/eW9
B9XImFXbo6uW4s9lhn5KV/OLyi22TNZo6fmMVc8ONPfhGZ2uDT2T45uyp4//
3KiFjlyvJE77dTidm3SaE113RyS3OPQooPkRFV1/MHt49Bodb3i037+/+2a6
OGmw0+ZZj7ji9Ecpke/SuGqVS4uNluso5EH2oaSeKs6YUUNT7nkQb89fZGOd
CXk/D2ws67OfrE8hj3PX518SD5+QeKi7xEOIn9dI/DRL4icnuV+2kPvlaLlf
CpJ4SCPx0E6Jh70lfqoq8VNFif8v+sb//fxptEu9aSfya3jWwPfXRm4/yzP6
/YiZ1iLvc7UPLo99ONtBxfsfni8x5Qhzab9hT1+30eX5+X8az9d5mWExHlru
MzrG5ESwFzkPHXrcbpI6z/V3RJeYUc9Bw/oyzkm99HOZz8Q9/HBdQ00domo1
6aHlpQHvTy+IUdPLZlmR2Reu02f8VK43w+f+5zj//n2Vizj2Lfqbjp9Vmlfb
ySiKTJtNaGi9M40KW35q0bi2jv+o3DYoqPxtumz2tkjEcRV931jcZMj4NO6Z
GHLOLYdvBd8ecbb2jeY6/YLvOp+O5kUxDbeXtdHRGd/yvYfOSOOBFw6YHbbW
sVoXP6zc4HSKOG900poj8/weTcnnRORXyXfg/szCUyal8msnm0Vd5kdzuxn3
K80iPV0bUr/+iKNJXNiuq/3OCk958opsGjEj73Opu5CfvsjXF+Rv8/ZPG1pr
0rmu9sHQEfdCOPLK6mO/NuuoAvB4AnwUvNpN8LRqv0LL1xy891+qcoX8t7rs
+XpZTZMcvxVV9dJwD+qYcW7mAdbHnPzR7KuGhvcfW65QhI5p7SHbgb9SaUKt
rRmn1kTTVPzsiuvK5369v9j/RryOn9jU31g1+z6Vdlo9uX6B9Bw96TKy4Cct
l+zhtSF0qT9dvNd5iNcHFRlvX9n0WAEV11zafGb/nP508+TiPwI/P2CVy/j2
ta4/YJOEOyvapWopblUnl5XGKs5fKPV2dM78Fu+tLxk3OoW6W1Xt/jI8jjoW
7WvcuL6eT9wtZ9RmbTIdjij83f9dPBmjbg6jjiJRVx2Rh3fIix/yZPWlmX+z
2d70ZZVFn8bNcvhewXZvy5w5XOH7RfB/J+ohvVbl5Z+3a+nHmPrRr3558p4z
NcM9dqv51fLTg/PvT2T/89GT7rd8xrW/VIgsN19PZ1vXWtQx8jlnX9p58dmm
BHaNWF9/5nA9uYOnA8Fbhcd+yA8jX+2Rv/B8ja1b9VRzs0UfbjXz9eZ2p3r+
iAzU0umnFR5PXZHO15MfqsarwrjE+OdzRnnk+Iwx+w9NyMlD759+ywO/36dB
hfcUOZuTJzzP5D6YU5Ixp7yA7+sAH2gMX9gVeD8D/ko+Css+HCj7kpvEQTcc
IvK9DNRyhLNJlpufN8U/D3Uo3lNNgclOXi+2qbnFFtev32pqae2Al1ETm4dw
gF3oDfePOXPytj6z8lfTUkRUkfEvdqn5mODEpd1zcSMPwZGqCa4cIzjTJ8Gd
pqGelPq6gHq7pz4852GShp6X7vl5SysNu79OCerl5U1RqBsL1NFGpa6QNyWP
WuQVcVJfiZMfSJyk1E0H1NEE1JWv4ED+ggPHCA7sIjzljcJb7i48ph6CM0cI
zlxMcKYLqJtyqCOlrhKRt4HIYynkFZ/n7O65n+dK8nn6LHzgtsIHHih8oAOo
mzOoow6oq/PIpy/yWwT5fin3yy3lfgn3S4HCW74uvOU2wlu6irwVQh5PIq+P
BH+uJ/jTesGfdFJfXHBsbn2Ro9QXIY+MPNJNySPPkfrlDKlfein1y7OFD0q/
pSPCB+omfYDfSB8gD+kDdBZ1qdTpadRtgPCWWgpveZHwloqhzjxRd66ow87I
5w7k9xzynSb9jYylv/Fz6W+k5Ce/5Pd3/vpJv+Xe0m8Z/ZbuSx+gttIHqI30
AUY/p9nIi5KnS9JneKT0GS4qfYbKil5wgugFVxC9oPeop7uoL3PU2wbkpwny
9RD5C5I+yRdK5/ZJspM+SdAv7in6xdAvOoE8FENeZiJPBZpl9QwfruOlIbGZ
+92DaFH9svMODlNRYMChwh3/0PKCFuuTD+28SNumdi3nnKimQqiPR6iX/qif
cqIvVF30hS+IvhB0iqBTDJ3i0cC1k4IzcB8kfoD04gf4oPgBNhP/QMvEP/BJ
8Q+k8N0d/A9APRQB3m2BP/wJ23wuM9d2cAQ3v1Mxafa3NI69WjZE91RH24Df
kbKC5x3gu/5k042L+qq4eQdnq/Lzc+bxlXZHRgzX0dEU01rxxmmctnZi68/2
j7hXBf2AyAr637z+DJ4TeD8XuNoC5yLAPeyUS1CRhRp+NdyHHoY48d46vSzX
PdJQ1Cqd2bFSan5zpX8J8+W+fCEhPH6GTkvTj24e+McyHVsVm1KxsrOKjCzf
tRpd8zJ1ch9wsEbjy9Tro03v104qqjD3ffXZOZ/zKPHqhn1TPX+wu2K9tlQ0
aYOvLsp0TqXsoyn6uWt1vCbJuVz+OyE0NbFRnbtvc3QkXrdlx5ZE3r6smcnD
Snq6Wn99W1en53weP5Xrt/A53dxW47ePT+GwKlfWnW+nJ7+ABi7un2P5q/hA
6ic+kL+8yfWBVBF8DwX/y6EeniAPSl42Ik87tiV3MTqkpp+qlt5T7XP8VMxV
ndeIy7Q9RL91zMELtHJC0zPalVous3rx+g+eaipg/elWuF8cHel3qfT9FB23
PNArY/qxFIIPJ6Uu4MN/57Md8rsO+f70qmol2zFBvLfYpUt7Y9P5rEX4/eK3
dLQVdbAEdcGok4PI2yfkMRh5nSi48nrBmfMdy8WdXkoeWCd5UfJEn5CfQjsk
X67I3xHJP6cIHyhF+EFbZV9+KPtSnOxLURI/HZP46aTEz22Fp/xLeEsXhMc0
WXDgMYID7RIcqL7gx4cET6ov+LIxfh7A9Vb43DzJF1dQ5+aLVsXn5ovbIA+H
kZcfVpKnHqgbFeroOOrKeF4ur+i28IonCq/IVXhIm4SH/EB4SG6oj/xXpV4e
on5+CM/JFvhPQz7WSb1wR6kXNpN6ISvUwT7URQbqJAF4pwH/E8jHBuEDDxY+
cIjwgeZJvfMCqXdGvdMp4J1/neDfCfn4jjmjO+YOe8whu+B/d0pfYl/4Y+ew
XP7zDuE/fbXJ5T9HSh1xd6kj6iF1RJ3wszOuP8bnzDGv3MD8UgzzTHn44vrw
ycfhmz9gvhuA+a4E5ru2mO/Qn+kw5rsxmO+eYb5zxXz3FHlT8ngQeb2KOkhG
XbxBncyTvkeTpO/xEul7/Bh8Z/DfDvUQjjz0QV7WIk8hmD8KO8s80hTziT98
a1342FHwtTtRB9NQF9NRJ8ocj36i9BfeAT/bCv72Lvzur6aCawRwrgPcu2HO
uIe5wxNzyBz4Wc+u4m+T4XenYP5rpsyDmA+r42dbXJ+Bzxl/kDkxDnPiD0eZ
E+vCzzaAvz0Iv1sKc6KFwZz4AXOiKebEx5gTTTCXwD9TJcwtA+Bnt8HfLoXf
LYo6WIy6gC5yc+ShCPJyB3kahDkxC3OiBnOiUgcXTaQulDp5hjnRRHwsH8ec
GI95wgfzRSPMG7vgN/OJT+YL8KP7wXcC/6ugHi4jP/Db1Av5C8OcWBFzYgfM
iYo/DYJfVfxrMubEdpgTx2NOVGMeHId5sDDmwarANRw4lwfulTEfKPPCLswP
4ZgHgzAPBmEe9MI82Bnz4EbMg7GYBwdjHgzBPHgNc0NxzBFTMVe0gj+NgF+9
CP86DnVjjjpyR13dxTyYiHkwDvPgPdRHQ9TLdtRPHeTnNvKlRv6uYR7sjXnw
IebBFNSHGvUyG/Xjj3lwH+bBx5gH+2I+wPzFgzA/vJ4jfvYF/C34TYdQH6VR
L/VQP5jfaSTmQczv7Ix5ohLmi6aYNxIxDw7APDgO8+By1Mc61Avi4X3I5zXk
twLynYo5wxVzx0zMIb7wv3fghzvAH89G3koqcz3yGoN5ojrmizWYN15jHoyV
5y20E/NgKObBZMyDzpgHt2AeRJ2SGvPgCswZ37fL3LEYc8gQ+OKX8MlH4ZuV
5zRFUI8uBvMgnmPwdsyDRVFPbqgvzM/8B/KpzPtWyHcc5sHSmAefYR6sjfyE
Yn4/ivzVxFzSA3PKeMwt/pgHB2Ae7IF5cDLycB550SFPpzF/TMA8Yoz5pAj8
72v4YTP4Yy/U02PUVzPU20rkpznyFWswD5Ys/6/z4D743EbwvZ/ggycjD9Uw
Dy5FnsrKczx2lOd4dE+e45G1PHflhvLclSLkuSuZoj6U5yfGmAdNMQ+aYR50
wTxYQvSIgjEPFsA8OAu4NgfOjYH7RMyDcZgHl2IerIx5EM+T+Szmwdbgu8J/
5flIJeDdDPgfRj4KNc99fs7L5fk5N5Ln5+QM/MaXEzxvAt88nhvn+b3VAfC6
rOgaDQLvHwPXo8C5JHD/p+t/y2POgq+j2+CVwrM6uL+1uN+KuP//eZ8/76s8
VxgIXinPHf4q3r+7fhT4ZQy+WYF//6718fP//L3g2Euvby3vmMa3xt6wbl/i
JYV+Gt1slFMA7w7fcXDQthz/YHt2yrL3gTRlrmnr7V11rB1wot6CMA1VnHf1
xaI5m7jiGL985Ww0v3+WxnXlc1Px7zphHWVdnfzvfGVu7ucJ/572yv/Og+Tz
PFn+Pd1fv21Om8+36FLLteE1Cr7kvV87OS3sl0aDJX4Kkfj5rcRPlvh3A7DO
caxbCvscxr4fEcf/Li9/vu4VPqrZghy/tjXOf9Kvgte4bvclhevYaamtzY9i
HUdGUrNT54aVmphO5ssHvTeapeNXq3Kvcye5zmZynS7LOuQi61AjWYdruiQd
j/oZy5YmFu0ftdNT1PbY9yk5fatjmcFJzXPm41VDw99nPEknD/WFyb2mBBHJ
dZon19lMk3udX57MXYeGyTqsk3XIH/FfQvzVEf9xiZMaIv7miD8M8TdH/PUQ
/znEfxjxt0T8eeEYJ/nli5Jf2if5zZPHTgtn9ss0VfOsMuGlAjv5coleSd6l
Uw3P4/z354u9DCyzLFPD3c0DFmUFHCKH9X98Ne6jIcvyw9JWH9hOScVeb1X3
0tLYn+YutzPVvHLc1jJN/HQ8/0X5wxv336NDBY1Kd++bTpP3bQpPLP+CS34e
Y3X6i46CDmV8qbomkUc8v9LdxUjN829GNwy4oqUjqV0zrsUHsdv7Wh1KF9VS
j1ib9Pwdj3PG00jPbTn+8VrHQm36bkrjwgMmW9s8iuRqu1tkziukp4kuA+bW
q6SmYc+eT6m5zYeMGifbZebo/KolH1o0b5NzvxnNeo6r7cOL3qy65HkvJy9D
Di1wrJ1CiZMmxq97GkP5f1YfP/GenncHlJ00tbKWS3p/j5nq50LLhnUMy6yu
oWZjUvtu7xJCM6c2eFXUVkXDdk6Z8MhYx296Gtfp8UTHg09G3Kt27z7Ve9E0
plvJdArrvszPyz6ZP2VbNBmZo3uXr5xtuL7uMx5nu9jUs7WGb7WOzdctQUMV
QrsebWPswzvefa5ZJiFnru497NrANve50QV/fm2UzotHvl7YKPA2t77n9fnT
pHQ2v/xul66Gnk47WNS5XDJnHhuoyzg//ATXqDvh6MSmGq4+Kf/QhKwUHnPY
+sOtZY/ZvuBz7/5X9NS12P6E4TXV9Hh+g9baGr7U+Lnp+qXxWvZqbFL62oic
ucNurun8MzfYdpzDjRLXtZTtZbRk3JtkIt2yMRvfxtD7Dtl+p1P1v7/P6mrw
fVaZu58GFTIKpjED2y6qWkFFb3avmm6zNKfvfTK3Nd+p587GrSO3VXlER9/U
a8lbUmmxt+ma5j9S+ZlN9cKPluqo3/5Xk3f2eMK33XShZgty5uKq34o4hqsp
wnOWl1p1gL1X9Ky9ZLaOho+1ja5zQcURbVZmfynnygWmHmznX1ZFp7f9Ucnr
rpbL97m0caQ+kj5V/2NP3y0580jnmhEDfKP4q677Tx+fVJ6ermluFhfEybOm
PXT1TueX+9bZ13uoo0ZlWtcZmzMXfa9ReOTi56d4f/Lx/rdNNWz9LvZru24p
vNdhe7uylWM48PJ9i8oJeso/TP0xtpOaPiQsWVgyxpuWJgwamR2iZVznNLnO
uE4LZB06IuuQv6zD2JczZF/CvmQjcVKqxEk6iZM/yn1xU7kvwn1RfsGBgQNV
FRzYR3DjEYIb7RXciAVnChecufa1XJxpueSFkBfuLHmhV5JH6ih55EOSRzaS
vPNQyTtnSN7ph/CHOwp/+KPwh7yFbzRB+EarhW9Mwk9+IfzkRsJPMhc+k6Xw
mXYIn9lV+M+Xhf9kJvynhVIv1FLqhSykXvhzYOba8w31/On+jn2TJ96nC8U7
fat6Oo0mST2Sr9QjF5d6pBipX/og9ctnpX7prdQ7DZV6Z9Q755P+wPOlP/Bg
6Q/kLP2Eiko/4RXST3hSyyMpS6unsNUv567DsmM4Y2fkrbJ39bRU+hXNk35F
y6VfsZ1Rr3EHC6i5wvR9dW2O3eQek3ctn/xaS2cdR81rXyFHz6c8GDW6YhRN
fm4dcmuwnsfo500Y+UXDA7sfCvWreZhCPhy+W7J3zlyQ3NZ1U9Ec3129YnC5
GTqaVdV9Z9LERxx12/f6jAwdrwv4VSHwTTo53G+5odqlqzRM+jMtkv7Me6Q/
00Tp51RG+jnfkH5ONtL/aZz0fz4g/Z/La5YVTBgdxEcrTeiRf6+KN98oXG5m
jZw5SPSFSPSFnURf+NhWy+J73FP440aXyF6WMbxQs+52d3s9NaoZPmSgVkU1
q3m+HdLTn/JbXayT+UPLpiN9rh1OVnGj5Sctffr685PD1kP3FdTRQA+j6+2b
MHUasyLgZe10KrY7e0SxMXpO7R5ztNZ0HXc516z5sErBNN5m4YWeDVT0q1HA
9ezrcTy4/9r48m31NPX8w2tPqqaw/TrrW2cck3jYh6h7llZ6Gljth1+wyVNu
uDH3OnWU62xZOfc6FWmcuw71lXV4jqxD6bIv9ZJ9eazsyz0kTm4jcbKRxEkW
cl9UR+6LwuW+uIHgwJUFBy4oONBpwY1KbsrFjWYLbmwMHW8KHd8OHU9T5+aF
zkheaJ3khbdCx6dDx7dCx2dAx0tDxz2h472g48ug483SRMefCK9oufCKfwqv
eJfwkMBDXic8pGnCWxolvGU/4S17C8/ZWnjOw4Xn5CB1Qc2kLoikLng9dN8J
um8N3R8mdUdTpO4oW+qOj0D3m0P3raH7vqNF9ydB9ydD97Oh+5bQ/XLQ/ZvQ
/Qzo/g3o/ljovh90fwN0/530JSoekduX+Ir0JUYfyxnERfcrQfePQvf7DxLd
rwPdrwzdnwDdd4TuN4Hu34LudzLQ/X7Q/bXQ/afQ/TbQ/Z/Q/c+hou8DoO9Z
0PcM6HsH6PsO6PsM6Hsq9P0P6Lsv9P0h9L3oddH3a9D3MdD3A9D3fNB3VwN9
fwt9N4O+/4K+D4S+J0HfX0Pfa0Pf70Dfj0Pfx0LfT0Dfw6HvGUNF399D39dB
3z/Idf4Ffd8EfR8Hfd8Dfcc6XA/6bmYu+n4I+l4b+p4OfYcP4S/Q97rQ94/Q
96wpou9u0Pfq0Hdf6Dt8Ed3LQ98XQ9+XQt+fQt/7Qt9fQt9bQd8PQ9/PSN55
BPT9C/Q9FvreA/r+A/p+Hvq+DPq+DfreDvr+CvreAvpeFPo+B/p+CPp+Hvp+
E/peGfreHPreDvpeC/q+T/wzFxX/TNXFP9N06LsX9L2Kgb5/hL6fgb5/g753
h75Xhr57Sx9gK+j7KAN9L2+g784yX/BLmS+4qMwXZA19XwN9t4W+T5X5hfvK
/MIlZH6hfTLvUBeZd6ipzDvsLvMRJz3JnY/og8xHNBJ6PRd6/Rh6PR16bWyg
19uh10ug15ug101kvuM0me94hMx3VAp6PQp6bQe9zms+3SXzJg2SeZOKybz5
d/9++2/+PfefP6+8jyEe72dQ3tfwP6//9/dV3q/gj/ctjMT7F3bUjVijOaTm
ksmaFYkFteTSqHqpHmahef79rfJ+hZM4j1YO719INRrhWeltPL8LKTr3RaaO
Km79YJdRKuXf9n6JvK4r7y2ohPcYKO81mI7zW51wnisZ57uycF5QhfODyvsy
7K2KTtyRL0fH9t7Mqj9CR/tW7nuwMOoJO5ZYvvqjUwz3sHnZrM4+HU0dU2nv
o/xpvBnnsSJxPisN57XicG7yMM5RKu8T+af3pbzXQXnPwxecf7tpq76x3y2E
GhfusmpbEy2nr213vfdS9e/3i7jhPKby/pF0nKcshveHKO8Twbl/VuN9Angv
AFXpcKZJkZQ0OljizOlXyRH02nHxVpM0HV/DeaAROB+E8280ttPpn67dtLz7
iZN9m6lu5Ntlieemt2qyqKq7+eZbJBfm0kXmZWkp/yj3Ud2j03kHzlFVwbkq
Fd4jsBDnHYfh/GNBnIdU3ougnCNriHNltWV9KiTrcwFZn3CeRjlfo5y34YkS
J72VONlL4uRYPA/ojPdOmOB5QUWcy4nAOZ36OLdTTfDhtYIPvxJ8aBHO2fTB
uZsCOGceKPnihpIvUkm+OBLnk5TzSt9xPh/vFaBpOFeYjHOGyvkt8I134v0F
9sJPIuEnzxJ+kvJeh1icg1Pe+6Ccm9HiHM0pnKt5hnMz5XCORjk3rpzzDse5
GOUc+BOca7HHORfl3Eut5n7pZjn1ZPPca5pJlXSqsmnnoCotmaJxbjsT57i3
4Vy3D94foLxPoBfeL1AD592V8+9jcB7+Ks5zh+N89yCc994m9UuoX3aV+qWZ
OJfWHOfU0Ac4VvoVfZZ+xabSr2gtzp+1wXk0X5xPC7Bv/XThcl9Sd3BeELQl
nQr2nfGzT2M9jy/p2CNk9g4+FRTkuaO8mh6mpz5ebqLjXjhfjnPcdBHnz8/i
nNZRnNsqjvcUbJE+TKWlD7Or9GH6jvcQTMZ7CWLwnoKDmyf2vDJOR8UWbs6c
ujmdk76VLmEz9AEr7xsoflneP7AF7yPQVai9tPvDdN6irxFcYH4oW7ue/Rji
qCNHvG/gFd4/EI33ESS4v3WMytGjy/qfs3ta7OMjXdR2E3L0qFHJPSkm//X9
z4Nis98+ZZpmUaaPxl5FS3EuXDknfgTnxp0kTi4ncdJTiZPW430AkXg/wBa8
L6CdrE81ZH0eIevzK4mHNuly4yEHiYc3l8jFn44K/hwr+NN6nPOOxbnvZJwD
/yw40D7BgSYLDr/Pc4/C+e5dOO/9Dee2p+Act3Ku2w66WQq6uR66eQn6uBn6
WAD6qIE+foQ+loE+9sP5/hSc9y94Ws7/B+Mc/xOc62+Ac/61cE49H86tz8M5
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
D33CLQc=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{390.6069323684052, 363.0636599764075},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.5531455409750574`, -2.098483354896437, 0.7265090886023247},
  ViewVertical->{0.2880965345800092, -0.28617542507826893`, 
   0.9138402556487988}]], "Output",
 CellChangeTimes->{
  3.607693238596706*^9, 3.607693519076562*^9, {3.607693551315578*^9, 
   3.607693575345446*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"iEllipse", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.2", ",", "0.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6076746839632483`*^9, 3.607674712578931*^9}, 
   3.607675393367083*^9, {3.607675550011291*^9, 3.607675601982863*^9}, {
   3.607676894182781*^9, 3.6076769003075733`*^9}, 3.607687629175046*^9, {
   3.60768766756966*^9, 3.607687670287442*^9}, 3.607687704100527*^9, {
   3.607687742022015*^9, 3.607687747394989*^9}, 3.607688630069974*^9, {
   3.607690682704254*^9, 3.607690685052733*^9}, {3.607692415281863*^9, 
   3.607692427661367*^9}, {3.607693138089651*^9, 3.607693142293356*^9}, {
   3.607693186097672*^9, 3.607693199595591*^9}, {3.6076933681011667`*^9, 
   3.607693412693892*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJydfAdYFUf3PrH3gkaNGo3YO5ZYEvXaFSxRxK6JvYOKvXeNBlGwFxJ7iRoj
KojtooAKNgQRFJQmReqFi1TB/+7lvjO7Z7jf9/3+PHnc7HvPnDlz5szszOx5
t9G0hTYzS5iZmdUvbWZW0oz9ef23a7i7XZi7Xb6W3pvCTd3/r/r+m56F0l3Y
vBwm59LEyqWJb6HWQ74Ny2Jy7+XfpxYIOK4y6j4yR6gH8tQeA67VC/KGy2yu
XzbHqha3T751WVT4n/VKOOSAQ0+x/juSW3x7VuUyfYb7nbxeWv8t+fIyp8h/
VhlFeBS3R4XbETw4XY2X/Vx8/23VC/UaLvGZTL9Kry9vP/qZ+pv2G67Qg36n
OI0jFd6nwKSfDP0Sqhd+p/6F/6l+e/nSMU9oL64GeEKqOk4lv6H+pvLvH3JN
lgcOOQOezeVpuX3yfc9Mo/6kojj4JZv0d1LxcbAtUY0v0wn2GPTFpAj1Osv3
o3VMP8ZNsf2i1QvxhH4oNh4V9SCOgSPOVfOFhKNfitVzNcek/wbLgGMqwxHP
VL+qnKI/rOX/OfGZ+YHKG/AfY9X2S/5E/V/lvyH/pbyEQ87Q3zO5PC1nuB+d
pt1vuI8uwu9xPSrciuBTo9S4b7xgzyLZ7Psfi693W7xavzSv0PFHxwfth+Ln
qyS1/6T4Bo74V9eTxPqlWD3fZ5r0nyFq58QyHHFO9avqV/SHQU2VdOYHKt9M
hi1C2T38ifoN846nzmR54JAzmBXI5Wk5w32HOCMeaIyPZCIfKOg3XFcFMLy5
DPd9L9gzVDa8c4hQbwv59mG4Wr803xQ7vhXjg/ZDsXGqqAfxrcKl+Ec54OiX
YvV8m2bSf4b+2R6qxrfFC/pxpf1haEdOAvMDlTf4b4aH+l7yp6r+4abLA1fJ
baLyvNwB+frdO8zPZkXxEcPkVLhCf4FhAjquAW6IhwxfwZ4Pst1Xrgv1GuI+
w0etX5pv6Pij44P2Q7FxqqhHHd+BLP7V5QJJvxA96bEm/WewI+sWwxHnVL/q
qugPB7n8uQji50C1nyOeaHCv9qcxPmw/mCwPHHIHZdyTy9NypeSb3lrt3qL7
onq/e83kVbhC/94iOYZ/ke3W3NNQe27Ibrnjr6H1FslrNSr90nxDxx8dH8X3
Q7TQfnX/xzAc8a8an9If+oXqMcgfeWvSf/PlcrWesPYhzql+/NH+uF3kH+Z/
Ku9UJM9w+BP1Lyyq32R54JAz7BUjuTwt16jIfiMerSnaW7oS+WgN1b+3yM8M
31PkN8GeeUV+FurdU9QvTL96vuHjj44P2g/FxqmiHsQ3cMQ/ygFHv1A9JQzy
90z6r3/RuGM44pzqx5X2x7ui8c78QOX3Fs0n7B7+VPk369Z/Li/hkBtYNL6I
PC/XqGh+04QWjccifFUAk1PhCv2hRfOwGk+PFewx+Cc7oXh7O8Sp9Uvzjaof
JX/S8UH7odg4VdSjju9oDeJfXS6a9AvXY2GQ9zXpvwVFz2WGI86pflxpfxju
O4cQP3N543qD3av9aax/e6jJ8sAhZ2iPBZen5UKL1j8a4/O6CJ8axeRUuEK/
Ab9H8G/TBHsMlyrpxdc7Ok2tX5pv6Pij46P4fggU7FPZIcU3cMQ/ygFHv1A9
Bvm+7036z7huV+NSnFP9uNL+WFC0X2B+oPKGeHDJZPfwpyo+ZseaLA8ccsAN
+zMznVAO9/hdhX+fqdbP5gM+Pmj8Uj8VG0eK+hF/KlyKT5QDDr+Z0gP7i22H
JKeSH83j9v/LL/cyhLig/YarMay9TF3/47lsMeeKFDd1PmnqHMwgbuqcp5jz
OkP5Ys73TJ0HmjofpuWpXlPnw//rua5Kr+Lc9f/qd1Pt/b+WN4wO9y/C7xRX
nqfJONUL3D7MfZ3lVH6+SfXcsgsb4zc9R9AjXWZdWJ/JcOW+fXnzAoZL19we
W3KEeiH/2LVpcpyHnsl3dyvTuMdLfs4MPKfi705XYjNV50Bn7MQ4prjyvE7G
qR+AS5etf9YrNKnfU8JT5uUJeqR/6tn76xkuXd1eXMsR9EOvvFpwWVPI5KV9
QX/9PPU5rlJeBo9c0jFckroYP1l9Dmms1wXnjuZDswU8YVHXjiUnpTP8wJW/
5j0olSG099mLdTnVb6arzp2WN1Gck4+69tXL8SvD/Rb97rvVrFDpDwPeKaF7
t1OBvJ+pHvkce+eezKL5JSxD+1Ol9yebBucKehTlk2Y1LGTying7drLLF4bH
eEcernIuT6hXqq+zVRb3B+Slf21eRuQI7VWcw2qbTksV6pXNtN6eyuTl1YHz
HX5uDXk5PireyRTahfr2NbFy6Bqdq7THxXhunWKVmav0W0X3pfx8EvLSPHil
/VJ+zkj1y5XWuvZJ0C/JT3SMiFXaP96lGz/PhLxsh2X/VMGfUev1q/MeJgv+
hB0Gcc9MJh8deea37Lqpgv24t18R3Dj232iGO52aZNdqRYKg/8UfA9Kzcvg5
rLz+7tIkjdlX688Zv1nuzGZ49OwrA1IHZbPfgcf8MbjU8vL8fQjVI6M2BekM
h5z0e7N90nyowEusvp0p2AN5aQ7ovX9ULMMl2OfYzjTBHsV5l1vqhM8Ml+J2
acY6fm5I5aXfP35wCGe4FA/DtufGCu1CefmcPOVuioD/9nOG9F8Yw62OOH3p
HB0ptCvZYtquDe0jWDnD+smZ91OXxcvPDm37meHurU5ftanN3wMC770jakh+
Lz3TT/UYznH6JTBc6Z+tezOV8m5NDugEe5Tnbnf6hDL8gNStjVxjBXtQXg7X
fQ90DJfm/eXzqsazcwAqL6/rrYf5K+ud6DE5TGhX4put433dAgU7LS6EVyux
jZ9XFEoTzoavUdr+qwt8rerw90/AoXeQHJ+HOb4z5fB3HnH8vRvwn0p/bvbN
p1RWL9VzXMbrvmX4Uv17XWNv3g+Gfcu7N9rjf/7Sq9TgREG/oj09l9/TMXll
vE69mMLwVyfPX37mkyjY01gaF39G8PNQyMsP0UtucYJ/UF4+N/tpsYdQr3w+
OM3lFpMvLT2Lh03l5+eQHy5dOv8WZqJdgYb+XzQigegvOlc/sDSByUt6ykcO
4OfnkD8syT/qx8/1qP4fJOxcm5Maql8+f7J19tZA/oY0/Hz2+qriTpYfIF0S
PT0Ff056/OyfX95fK9af8p9hgvbm/d7u+Kc5D6IfCvbj/u2RjOptaj9ldqb2
rx71qIWbhup/nDjzqHOiF9t3O8q/z/dm9g1psOLgv8ditcAH+63p1GfSR/Y7
8D+HmmsvjOHvH6geWzlATz0neKD8PM3oXzKO4SXktWFAuLZ4e4rOoS9seqIB
flS6FtS5L9iD8oul6fPelg8Mj5TG++lgH3ZOR+VlMKbmW4bL88PNYT4a2i5W
Xp4X/jkl4NPN3HRN8t8wPT7TI4/UvxEk+Llq4sSmHl2D2T76gnxddYnVt8fn
qMWnmEgt8I+uL6rUzApj/gB+dfvvx2dtCWHtoHr6yP7v9kBjmKf3BWg6Dppx
vOt9X0EPyku4+Yjb4VrIK/3zU+1ghp/p/m5V0ILnQr3fSP8/dhk/D4W8vB+u
uoW/p6D1yuOjz7kPGlrvG6kfsid/YPL50jiYd5afE0N+rtTfrhe9NLRdynPf
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
XXN+f2dXiuD/zYXmL45X4DjsP1BuY70ra9KZPdAzNftEeV0A54Oj3sMOG7cu
7JnM6sV4729WfaTz2RQmz+afGheTzvZJFPr9wom5v/q2jxf6EfnL1J+++q69
29zl/GvYf7qg5MaFCzjfGfU6d+4Tv6JcHMMx34WeuWTja815zZDv6L+yZZ97
MQxn+5w1iavvWkYJ/fh1SELtTScjhX6cVrbO7fuBYUI/PppdfWqYLoz5B3jH
uzPujJj4Wuhf3ektg0pX+iD42SJu9tmSLcJZuzCfjr86r0GPnzjPGv04xbuv
3fzGkQyHfNahWofytoax/FW095/KmgG1jnKeMuRfNBxT5dAefyEewh8FX602
kvOIUe+0FI2/ZZKnEA/I52V8dmO9Hz7pdYu+vGB5s6h3aJcQv2pbOW8X8/Cj
dVMXB5+5wOxkeYrzmz0o2dudyQO3sJxW7/WHbSzPFna2WNJtUeu9NzU0TmqP
6RGW3+uJhsbJ/FE+rkvrcv4s5L1rLf/0xs2b4bDTcuSr/A7nH7F8SDw/ys48
Usev31jO3zTaWX/JkfbDt3F+E+SRf4q8Pui3v5/WZMaGxwxn3zXTXZ/Zx/Mp
w6Gn6vAX1gu+57xU+HmGT4v3Tk4ch/7VDRyPDPIIVfOtpOdRjFPp2nlJnB/K
9mV7fr7vGhLF6sXzzCHILfFE70iex2jE+229V7bOnhgN7feBz1vq64+O09B+
RD4p9WfJGPt2nv04HxP2O221bbu9U7Lg5+6LXJpOS0sW/Bxp9vpoYkWd4M/4
troj8fV1zH7gISuXpXp5pQt+DjxSGH1Elyz4wbrVkH7On3SCH/b6LmrmZp7G
8iShB/mSwCG/rmfWlTmj9IL/kb8JHP0V0Wuha+9GnHeGeRg8MDwX8By8uWBC
JbPsfOF5se73qXZVVvPnL56PLRzfroqZmS3Mzx5+HQZqPfhzGfont2nucHFS
plDv6Pf6yd3WfGZ6YCf4QJgPob979AKrqyHpQruibx88n3BdJ6xPzjhq6+6v
lS7Yb1uh6bFfs3XCeiN/3+nUmykpwrzt3Wraijq+OmHeG/T51hb745yPyebD
0PIxQ5rFC+ucqBkttv/7LFFo7zezQ+MWWHwUnsuXax/Leef0UfDDD5oKM92X
xwrz6p1LnmP79ojn310xztteUT7t7OwChfVDmarPPYPG8e9XYByBz4H5AfOh
3seq7rIer7V03piSeN3adeMLod5HcdZ3x7c7JDy/ek7tOqXB1/ts3ob9+SO+
nn5sf0ZLx/Xd+J7br7q7aehzf/fPj/P81qzT0Ofg5qr++3pGPNJQ+316/vZg
07WrbB6APUfudXye/XeQhj43/QcM+aF2YaiGPjd72bSskhIVoqH2z9aHDrRZ
8EZDn1ODll3zfejyQZhPbs8pH1o9hX+XAON3ZO7Vwn77Q4Vx/dPJwbuTanC+
PPCSKxsdLXeCz5/wm8OumGNtfowR2ntQXy481yFBmOfrnA1+8qVyovDcWee+
8qnjoVhhvqpa/tXMuucShfnKqXGHIzq/dKFdyBOn9v8/9gN2Jw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt2nfgRmP5BvDzvud8Q8jKHiGyU2mIbNkje++RLXsU2XtkRiIkyUo2+ZmR
WaFUkpWMhpEkkX7Xx/38cb7nvs5zzvs95xn3fd3X/cy17Z7r7jHuuu69/Bly
XqLvuulzfnnUdefmwnS5vm7wMsG/iP3RHF8JXir4l7H/mfMngj+e8x3Bu+aZ
cezJcu0L+a0nckwSfGXavpO2DXIskbb5c20i9l9ynil4upyvyz3X5/6d/Z+c
T0j7ijnPlfYp0/7v2NNMdN0MOV8R/Necb8ixS+6fPucTc//ksVdo7/to7A1z
fZn2vh9J+07B6wdPn7ar2u/PFjxL2t+PvVR738vTfk7a1w7+TNpnzzUdtFLw
3DFnCx4F/zHnKTXlfFmeWTXt8we/EXxe2l/P+ePB0+T8k7T/K+eFghfI+a7g
A3L8MvgO9+XZ23P8Kviu4NVaX/4r+K0cT8T+TV//y/v9dajxmjptU+V4PPZE
2qaJ/Soc+7Uc88aeK+dbDXSOz+b0seDbYt+W84PBP89xS+wv9fU9U8V+J/Yr
Oc/Y1RgZq1+P6renad/0t1H1h/uvzu99Pcevg+8zL/L8ozn+oT9yrBD7vhxP
x7437Wvk/ZcNniV4Mt8Z+5Gc/xz8rHeKfWeuPRb7nthr5v5j8vsvBD8UvLCx
zTFz8KTBb/lfOS8QPF/O/5d798i1rXxv7J8MNScna/Npt+CNc2wWfGba/xN7
ffcEz532cewn++qrm9N+UfBWwaua28Y9eL9cfyT42uBZ0vaR4FWCPxf8gLWS
a4sFzxm8R+6fdVz/b53gP3intN8afE3wimnfNXjT4K8EzxC8XvDiwfME98En
5ZnXg2cOviH2KMcXgz8RfLv/nfvnC543+Gu5/6bgO4NvCF4peLXgBY1n8Hux
V88xQ+zr8+wFbb5733dz7XvBS7f+/Wjw7kPNa/N7+pyvzTNfTft6wWsEH5j2
WXJto+C1gp+MvVfatwveMHjWoeaM9fBaV3Np/bQvye/E3neodWl9Lhf8q9i7
pH352I/F/nFbvxumfcVcmzp4hxwPBF/MZ8Q3PJv2L1snwdcN5VfM3RlyTBt7
2lxfO/aXYj8Se9Pcv2LwssH75/4lc17L+ORYOvaWuXZQ7C1jzxH7G7l/v+DN
gw8Onie/sUPwxsHPxP5D2heOfV/sS9P+fPBmwc8H/zR43na//vpd7BvTfnfw
rrF/n/btgtds/bFP8I59vctqwQcM5QP+2dUc5hvWSvunYk/k+R+kfaPgZbUH
/zD4kJyfaGt7Tr5iXN/nOx+OvVuOe4Jv8n19Pb908KLBk/r/fETwD/Rd2nZv
/ft4rl+T9kuts7TfnOP7sTfpy//ywz9K+8XBVwX/MG3LWGutvxcL/nDwL4Jf
7mrNPxj7nhx/iP1o2tdp/bFG8ErB0wX/yrzq6pv4AONoPFfL8cVR+fulYn8y
9iS5/5fBfwo+Ou/zl+DNvX/wZ9M+efD9wc8FH5v2V4LXDf588OliG/9u/eXe
h4LfDt6yr/VtnV8evGbwoq2/9uavxzWfF+S79EHarws+37sO5ZP4pvnbehW7
bm/9I4aJoWLpPO35C3LtkrRfGHvKzO/Lgq8N/m7al8zvbZvrN5j/OTaKfXVf
4zB1zlPl/itzvjFt25sHQ8VW/uBHo4qxUwSv3FVMEBu27qsfHxSrcv9T4l/w
/cGX8X/jGs9z+D99FXxw8NbBL+rjXLtYDDLX8v/XyPmTaV8k14Y83+eeL3W1
Ru4el0/hW/gsvuvIHIdZD/xE2s4MPjt41dz78+BXgs8wtuJk8OI5zgr+bu7Z
JvbKffERvOT8ofpIX20pLsX+UNpPDz4tx4RYmuOU2Cfzr7EvynFlV/c/PlQ/
6k/ze7vmr38a+5JcOy7t1zT/vUPafjvUGBvrrYN/M1Q/6I+b2j3n+72uxuwK
do6ru7rf+23BzwV/J89M4X/l+HHsmXN+Ku3L5Txr2t/0zcFHB+8hJue5cfr7
oOC907576z/+5WfBVwcvF3xh8I/a+x8/1LwwP74XPFXavt1XX+rTz6f9qr7e
/aLgpYPPCT4/+NvBx7TxOLO962PB5+Z8Af+Y3310KL/Gv+FreNsoxzGxTzfe
uEjuOcFY4UFDcR7c57Dg5/hPPrMvLvGnoXyItWLNXJdrb/TFB/CCF9N2b+MX
nn92KI6BaxyJN8T+c44Fc89Cfd3P/7yS+49r65+P4+suz7VNc+2B4OdbO//x
g77G56Lg3wUfMS6u8nLzIZ8To/P8if5n7JNz/8niSdoeCv50jqPS9q1c2yr2
wmKKvvR87j0+x3GxV8/996ft7ZwPSvvhYlbshXLtgPb8adamOSCOpu0Xsd/K
eb/gb/CHfNi47j80ePHYL+WZw4P/i7fk/k/5huB1gx+OvULOJ5kP7Z1PN77i
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
yn+37TlS7u8B/gdaMc4G
         "]], Polygon3DBox[CompressedData["
1:eJwV0j1IlWEYh/HH1IRosUJCTlAKBoElmKLg5KCZaCqIkAimg2ihcmg6fqAi
Di6VQ2h+huJg0ZyCUHQgGtTBTTex3CqdoiH7PcPF/b+v+z7ved7nnFtdAy39
F0IICVxEaVYIkxkhLGSGMCGfG+6pN3Eiz6LLvB1HdgZRwBXiIfcAA1y3/Xau
B+vcKj7wvfyh7/ks18kFan52CKfqNzszXEJ/T/9K3lKTnnGNq9a/t/ORe4YE
/5fLRTXfx73DsrwSMW/FIteKEi7H7hnSfFJt5P/wL/TX1TzUcw1mX+Sv8kv5
jvpd7VDL+PJ4Vp/5pzZzN8za5GE5JR+bbatz+iZ5HmPmo3jNvcWsXGnnsne7
pJ+SH2GP/+GOdtW7/Ek8J4rlNc/ZiefCb/0MhuQUasxq0RnPjtP4jvwb9T5G
7G7gibyMJbN5rHPn9g+4Rn2RehuPuQqzbG4/7nHT6OODMx/KzfHetU/x3G4t
rnJX8BO/0GK/Byn740hzn5COvwufxeWiKt4HOvmM+D+Qm+R+edN8Vf0PhyhT
ag==
         "]]}]}, 
     {EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{506, 31, 491}, {479, 262, 681}, {485, 20, 483}, {493, 
         36, 509}, {267, 29, 270}, {983, 8, 822}, {825, 480, 1174}, {476, 10, 
         478}}], Polygon3DBox[CompressedData["
1:eJwtkj1Kw0EQxXezf6OYICK2QgQrO6MGxM4jeAQPoOewjugRxCJ4FQvBjwQh
ERtDGlMY1KC/57ximHk7X29mdvPk7Pi0llLaRiqkB1jOKX1j99EfBQM9R+1g
v2I3sVeQN+wx0pIP+cKeElPQDfAe9lUVOevgQ/AF+Amsnvfg/RL1FKPYaxy/
qoU88/aSo5diBjlqiktyrxF6DbiKviX3rkRt9ehWMcOi8nPMtot/AfwI/izR
Q3PnHL3b4g8egi+rqHHO+3uK2nqTbwY+KFFDtX7ARyU4NN1T3Ea2Vf+mFn5x
3eJt4v0+5OAkbn3vXjsQH0l2DfkUU/f8yu0gSyl2PvU+i+fXrnvmoxvpVroh
6r+n8sV5A9zwPjT/OMXMml03m3kfuo9mqHvnmm2e4/Ytz6MaqlX3PF3fW5za
vv/Af0hcp/5fiu/4vwwdL//E3Ju+7x+0w1SG
         "]], 
        Polygon3DBox[{{822, 6, 267, 270, 983}, {1174, 480, 236, 235, 818}, {
         681, 257, 4, 19, 479}, {980, 254, 10, 476, 1172}, {491, 31, 30, 266, 
         685}}]}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{650, 237, 678, 467, 238, 468, 239, 651, 240, 652, 241, 242, 
       977, 243, 469, 978, 244, 470, 245, 246, 653, 247, 654, 249, 979, 15, 
       1130, 650}]}, 
     {GrayLevel[0], 
      Line3DBox[{817, 253, 820, 11, 259, 8, 983, 270, 29, 834, 252, 472, 5, 
       471, 1, 817}], 
      Line3DBox[{474, 250, 255, 251, 266, 30, 31, 506, 49, 509, 36, 272, 18, 
       262, 479, 19, 4, 474}], 
      Line3DBox[{10, 254, 980, 2, 976, 234, 649, 235, 236, 480, 825, 248, 827,
        20, 485, 14, 478, 10}]}, {}, {}, {
      Line3DBox[{255, 679, 257, 681, 262}], 
      Line3DBox[{259, 1011, 256, 1010, 471}], 
      Line3DBox[{266, 685, 268, 687, 272}], Line3DBox[{270, 267, 1015, 472}], 
      Line3DBox[{467, 261, 1012, 683, 264, 1013, 265, 1014, 684, 263, 682, 
       260, 680, 1131, 258, 470}], 
      Line3DBox[{468, 273, 689, 1133, 276, 1018, 690, 277, 279, 1019, 1020, 
       280, 278, 692, 691, 275, 274, 688, 1017, 271, 686, 1132, 269, 1016, 
       469}], Line3DBox[{1021, 282, 1022, 283, 694, 1023, 284, 1025, 289, 698,
        1135, 291, 703, 297, 705, 299, 709, 305, 1032, 303, 1138, 708, 1030, 
       301, 1028, 295, 701, 293, 1136, 699, 286, 695, 281, 693, 1021}], 
      Line3DBox[{696, 285, 1024, 288, 1134, 697, 1026, 290, 1027, 292, 704, 
       298, 1137, 706, 300, 710, 306, 712, 1035, 308, 1034, 307, 711, 1033, 
       304, 1031, 302, 707, 1029, 296, 702, 294, 700, 287, 696}], 
      Line3DBox[{309, 310, 1036, 1037, 311, 312, 715, 1139, 314, 1140, 716, 
       315, 318, 1141, 718, 319, 721, 722, 322, 1041, 324, 1040, 323, 321, 
       720, 1039, 320, 1142, 719, 317, 1038, 717, 316, 313, 714, 713, 309}], 
      Line3DBox[{1042, 326, 1043, 327, 724, 1044, 328, 330, 1143, 726, 331, 
       1045, 729, 334, 730, 335, 732, 338, 1049, 1048, 337, 731, 1047, 336, 
       1046, 333, 728, 332, 1144, 727, 329, 725, 325, 723, 1042}], 
      Line3DBox[{339, 340, 735, 344, 736, 346, 1056, 743, 353, 1057, 355, 361,
        748, 1150, 1151, 363, 1059, 365, 749, 359, 745, 357, 351, 741, 1055, 
       349, 739, 1053, 343, 1051, 342, 734, 1050, 341, 1145, 733, 339}], 
      Line3DBox[{737, 345, 1052, 348, 1146, 740, 1054, 350, 1147, 742, 352, 
       358, 1149, 746, 360, 750, 366, 752, 1062, 368, 1061, 367, 751, 1060, 
       364, 1058, 362, 747, 356, 1148, 744, 354, 347, 738, 737}], 
      Line3DBox[{753, 370, 1063, 1064, 371, 754, 372, 1065, 374, 1152, 756, 
       375, 1067, 758, 378, 379, 761, 762, 382, 384, 1070, 1069, 383, 381, 
       760, 1068, 380, 1153, 759, 377, 1066, 376, 757, 373, 755, 369, 753}], 
      Line3DBox[{1071, 386, 1072, 764, 387, 1073, 388, 1075, 393, 768, 1155, 
       395, 773, 401, 775, 403, 779, 409, 1082, 407, 1158, 778, 1080, 405, 
       1078, 399, 771, 397, 1156, 769, 390, 765, 385, 763, 1071}], 
      Line3DBox[{766, 389, 1074, 392, 1154, 767, 1076, 394, 1077, 396, 774, 
       402, 1157, 776, 404, 780, 410, 411, 414, 782, 1084, 413, 1083, 412, 
       1159, 781, 408, 1081, 406, 777, 1079, 400, 772, 398, 770, 391, 766}], 
      Line3DBox[{415, 416, 1085, 1086, 417, 418, 785, 1160, 420, 1161, 786, 
       421, 424, 1162, 788, 425, 791, 792, 428, 1090, 430, 1089, 429, 427, 
       790, 1088, 426, 1163, 789, 423, 1087, 787, 422, 419, 784, 783, 415}], 
      Line3DBox[{1091, 432, 1092, 433, 794, 434, 1093, 436, 1164, 796, 437, 
       1094, 799, 440, 800, 441, 444, 1166, 802, 1097, 445, 446, 443, 801, 
       1096, 442, 1095, 439, 798, 438, 1165, 797, 435, 795, 431, 793, 1091}], 
      Line3DBox[{447, 448, 452, 805, 806, 454, 1102, 813, 460, 1103, 463, 466,
        1105, 465, 815, 1169, 464, 459, 812, 458, 809, 1101, 451, 1099, 450, 
       804, 1098, 449, 1167, 803, 447}], 
      Line3DBox[{807, 453, 1100, 456, 1168, 810, 811, 457, 1170, 816, 462, 
       814, 1104, 461, 455, 808, 807}]}, {
      Line3DBox[{474, 679, 475, 685, 491, 506}], 
      Line3DBox[{478, 476, 1172, 473, 1171, 649}], 
      Line3DBox[{479, 681, 482, 687, 493, 509}], 
      Line3DBox[{485, 483, 1175, 481, 1174, 480}], Line3DBox[{650, 678}], 
      Line3DBox[{651, 695, 1185, 696, 508, 1186, 510, 658, 1268, 511, 697, 
       1187, 656, 698, 495, 494, 688, 484, 1176, 682, 1259, 654}], 
      Line3DBox[{652, 693, 1264, 505, 1183, 507, 694, 1184, 492, 686, 477, 
       680, 1173, 653}], 
      Line3DBox[{486, 683, 1260, 487, 689, 496, 699, 1265, 700, 512, 524, 
       1269, 713, 526, 1194, 1195, 527, 715, 1271, 514, 704, 703, 500, 1181, 
       691, 490, 489, 1261, 684, 1178, 488, 1177, 486}], 
      Line3DBox[{497, 690, 1262, 498, 701, 702, 513, 1270, 714, 525, 541, 
       1200, 723, 1275, 542, 1201, 543, 724, 1202, 528, 716, 515, 706, 1188, 
       705, 502, 501, 1182, 692, 499, 1180, 1179, 497}], 
      Line3DBox[{503, 708, 1266, 657, 707, 516, 529, 717, 530, 1276, 725, 
       1203, 544, 545, 733, 1208, 561, 1209, 734, 546, 547, 1277, 726, 531, 
       718, 1196, 659, 518, 710, 1190, 709, 517, 1189, 504, 655, 1263, 503}], 
      Line3DBox[{519, 711, 1267, 520, 719, 532, 727, 1278, 548, 735, 662, 
       1210, 737, 563, 1212, 564, 666, 565, 1281, 740, 1213, 739, 663, 551, 
       550, 729, 536, 1198, 721, 523, 1193, 522, 712, 1192, 521, 1191, 519}], 
      Line3DBox[{533, 720, 1272, 534, 728, 549, 736, 1211, 738, 562, 576, 
       1219, 753, 577, 1220, 1221, 578, 754, 1222, 566, 742, 741, 552, 1279, 
       730, 538, 537, 1199, 722, 1273, 535, 1197, 533}], 
      Line3DBox[{539, 731, 1280, 661, 553, 743, 664, 744, 567, 1285, 755, 579,
        593, 1227, 763, 1289, 594, 1228, 764, 668, 580, 1286, 756, 568, 746, 
       1214, 745, 556, 555, 1205, 732, 554, 1204, 540, 1274, 660, 539}], 
      Line3DBox[{1206, 558, 1215, 748, 665, 747, 569, 757, 581, 595, 1290, 
       765, 1229, 766, 596, 1230, 597, 672, 1293, 598, 767, 1231, 669, 768, 
       583, 582, 758, 570, 1282, 750, 1216, 749, 560, 559, 1207, 557, 1206}], 
      Line3DBox[{571, 751, 1283, 572, 759, 584, 769, 1291, 770, 599, 610, 
       1294, 783, 612, 1238, 1239, 613, 785, 1296, 601, 774, 773, 588, 1225, 
       761, 575, 574, 1284, 752, 1218, 573, 1217, 571}], 
      Line3DBox[{585, 760, 1287, 586, 771, 772, 600, 1295, 784, 611, 627, 
       1244, 793, 1301, 628, 1245, 629, 794, 1246, 614, 786, 602, 776, 1232, 
       775, 590, 589, 1226, 762, 587, 1224, 1223, 585}], 
      Line3DBox[{591, 778, 1292, 670, 777, 603, 615, 787, 616, 1302, 795, 
       1247, 630, 631, 803, 1248, 640, 1249, 804, 632, 633, 1303, 796, 617, 
       788, 1240, 673, 605, 780, 1234, 779, 604, 1233, 592, 667, 1288, 591}], 
      Line3DBox[{1235, 781, 607, 789, 618, 797, 1304, 634, 641, 805, 1250, 
       807, 643, 1252, 644, 1307, 810, 1253, 809, 636, 799, 622, 1242, 791, 
       1298, 609, 671, 782, 1237, 608, 1236, 606, 1235}], 
      Line3DBox[{619, 790, 1297, 620, 798, 635, 806, 1251, 808, 642, 647, 
       1257, 648, 1258, 645, 811, 1254, 646, 812, 637, 800, 624, 623, 1243, 
       792, 1299, 621, 1241, 619}], 
      Line3DBox[{625, 801, 1305, 675, 638, 813, 676, 1255, 814, 677, 816, 
       1308, 815, 1256, 639, 1306, 802, 626, 1300, 674, 625}]}, {
      Line3DBox[{817, 1010, 819, 1015, 834}], 
      Line3DBox[{820, 1011, 822, 983}], 
      Line3DBox[{825, 1174, 818, 1171, 976}], 
      Line3DBox[{827, 1175, 821, 1172, 980}], 
      Line3DBox[{977, 835, 1021, 1264, 985, 1185, 986, 1265, 1136, 840, 1133, 
       830, 1260, 1012, 824, 1130}], 
      Line3DBox[{978, 1016, 836, 1022, 1183, 847, 1024, 1186, 849, 861, 1269, 
       1270, 864, 1109, 1029, 1028, 844, 984, 1262, 1018, 831, 1013, 1177, 
       826, 979}], 
      Line3DBox[{981, 1173, 1131, 823, 1132, 837, 1184, 1023, 848, 1134, 850, 
       1268, 1036, 862, 1194, 865, 1200, 877, 1276, 869, 1038, 854, 1031, 
       1266, 1030, 1107, 1019, 841, 1179, 832, 1014, 1178, 982, 1259, 981}], 
      Line3DBox[{828, 1176, 829, 1261, 833, 1180, 842, 1020, 1263, 845, 1138, 
       853, 1033, 1267, 858, 1142, 871, 1144, 1278, 993, 1203, 992, 1275, 
       1042, 866, 1195, 863, 1037, 1108, 1026, 1187, 1025, 838, 1017, 828}], 
      Line3DBox[{839, 1181, 1182, 843, 846, 1189, 1032, 855, 1191, 1034, 859, 
       1039, 1272, 990, 875, 1046, 1115, 1056, 994, 1211, 1210, 890, 1208, 
       1145, 1113, 878, 1201, 1043, 867, 1139, 1271, 989, 851, 1027, 1135, 
       1106, 839}], 
      Line3DBox[{987, 1188, 1137, 852, 1140, 868, 1202, 1044, 879, 880, 1050, 
       1209, 891, 1052, 1212, 893, 1219, 906, 1285, 895, 1148, 1057, 884, 
       1280, 1047, 1111, 1040, 872, 1197, 860, 1035, 1192, 988, 1190, 987}], 
      Line3DBox[{856, 857, 1193, 1110, 1273, 991, 1041, 1274, 1112, 1048, 885,
        1116, 1215, 1150, 1058, 898, 1066, 912, 1290, 922, 1227, 909, 907, 
       1220, 1063, 1117, 1281, 1146, 892, 1051, 881, 1277, 1143, 870, 1141, 
       1196, 856}], 
      Line3DBox[{873, 1198, 1199, 874, 876, 1204, 1049, 886, 1206, 888, 1151, 
       897, 1060, 1283, 902, 1153, 915, 1156, 1291, 1000, 1229, 999, 1289, 
       1071, 910, 908, 1221, 1064, 1118, 1054, 1213, 1053, 882, 1045, 873}], 
      Line3DBox[{883, 1205, 887, 1207, 889, 1059, 899, 1217, 1061, 903, 1068, 
       1287, 998, 919, 1078, 1079, 1123, 942, 1295, 1294, 939, 925, 1230, 
       1074, 923, 1228, 1072, 911, 1065, 997, 1222, 894, 1147, 1055, 1114, 
       1279, 883}], 
      Line3DBox[{995, 1214, 1149, 896, 1152, 1286, 1119, 1073, 924, 1154, 926,
        1293, 1085, 940, 1238, 943, 1244, 955, 1302, 947, 1087, 930, 1081, 
       1292, 1080, 1121, 1069, 916, 1223, 904, 1062, 1218, 996, 1216, 995}], 
      Line3DBox[{1067, 913, 1075, 1231, 1076, 1122, 1086, 941, 1239, 944, 
       1091, 1301, 1005, 1247, 957, 964, 1127, 1304, 1165, 949, 1163, 935, 
       1159, 1235, 929, 1158, 920, 1288, 1070, 917, 1224, 905, 1284, 901, 
       1282, 900, 1067}], 
      Line3DBox[{914, 1225, 1226, 918, 921, 1233, 1082, 931, 1236, 1083, 936, 
       1088, 1297, 1003, 953, 1095, 1128, 1102, 1008, 1251, 1250, 965, 1248, 
       1167, 1126, 956, 1245, 1092, 945, 1160, 1296, 1002, 927, 1077, 1155, 
       1120, 914}], 
      Line3DBox[{1001, 1232, 1157, 928, 1161, 946, 1246, 1006, 1093, 958, 
       1098, 1249, 966, 1100, 1252, 968, 1257, 974, 970, 1104, 1255, 1103, 
       971, 962, 1007, 1305, 1096, 1124, 1089, 950, 1241, 937, 1084, 1237, 
       932, 1234, 1001}], 
      Line3DBox[{934, 938, 1298, 1299, 1004, 1090, 1300, 1125, 1097, 961, 963,
        1105, 973, 1308, 1170, 972, 975, 1258, 969, 1307, 1168, 967, 1099, 
       959, 1303, 1164, 948, 1162, 1240, 933, 934}], 
      Line3DBox[{951, 1242, 1243, 952, 954, 1166, 1306, 1129, 1256, 1169, 
       1009, 1254, 1253, 1101, 960, 1094, 951}]}}},
   VertexNormals->CompressedData["
1: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
J91v60YC1qcL6dRxGfj0RAdV5nUl6t6zqdMg+/2B/5NSETUu6tx3XqzhUg6S
m3xVM8/TQGBTkP+kK4HpYr55W5JowMqJ9bvSWIKh7P3FL2voyNdnY31fexC+
5NN3SX2k4OwGQkavgAusoIZvxdlM1M///sexvQ1Pb7bOTDYYBtkHCpyPF1px
qFb/W3d1N655vZWP78wwrPIVG/rXkw9uKuKpjWQ+av/h6yzW5GK5mJ1dVBUF
gseWmRZP0CBzbKl83zYCeyeUc+pnaNCtWhVlc3AQrBY6Kno001GQvutUQ1AJ
6rj45iisaAMP182XbZ8x0TPr9MuO3xworPk3dWtHLXzaVyuqH8sCy0Qh76Br
A3igLDe6Pxbh7/cWkfywYRAy8s4I7KOh+uNM4Y0RTLAZPfFafZacQ/v9XpS7
tGElZ3yh5DYKnDvA61aoOwqbZtjpqE6BAjHzZo2wOlSTH+LbXklHx8hdstNk
X1q+/+LLY9uLelftTeVJjqe9XvAsILoDlUd5E1PzeuDfsNgwQXJ2idenT5pH
O2HRVdfU1d++Q3tr8D5BKQYY8jt+ve5FIDt/kUoMg4v97/xKC+er4U1T02E7
AVJPFYvtBD71Y6pGuXzMBQKMvx9+Z9DdguMln4XeeXBwZjnnrW8TB3yLB2v6
FjxC/XPXpmz6uaCVVRsGWmQ+8D7bFvm8Ei/6vlyeG1iBPt83H/8qxEQ9lOr1
WkOAkcCc87XWUmjK5XnhnskEyxOFxbZVXJz80mZHVNLwrOr+U/+dY3PwonT/
jDcVk4sqmXazbODy/S1mKw/ginUZW4dKU0FXSDtbc3U/+G5o8vnv/J+7211h
/GwbFKtVzFwe6IA9W0Ntk68RqKizrsjqWi8o+lHzVxg2YBPzqL/aJTqeYo+W
65HcMfl8oJ53rhfzA1dm/ooh4Mauzc8WtrajpzbvETfhHrCMbby+5RmBL7Mn
U4qXdMFh0RCJXVPVMBHpvBA9GaBV7lHXeZxArubA4IOCPqzUfUX9FTQI46Q6
tqQ1opJCv7d7NwOTcx2WCb0gfXXZOmpcQCEcU9SqXFrIBVF5n5aoh0yM7H56
JeVGOfaUvH0vJERynfhC0Tg/CkhOlfzu9uLiaurR6qbTlZB9/581y4INRn9b
zneuH0CeMauGxAoKnPTO+sx4NwAmPCKToTMsWHbWM2zdcQbuX3hWZJDM+5HL
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
+LlkDfwftmJhlw==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{347.9222287958935, 349.0813513445771},
  Method->{},
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.09498669579361649, 3.377664708201037, 0.17988509275485876`},
  ViewVertical->{-0.7843180593526056, 0.6074861201432492, 
   0.12572110247156007`}]], "Output",
 CellChangeTimes->{
  3.607687825258849*^9, 3.607688035970016*^9, 3.607688632514476*^9, 
   3.607690268757235*^9, 3.607690691980329*^9, 3.60769243099107*^9, 
   3.607693146477388*^9, 3.6076932040766582`*^9, {3.607693377431197*^9, 
   3.60769341669901*^9}, 3.607693528064351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nYAB", "[", "0", "]"}], ".", "RGBCube"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inYAB", "[", "0", "]"}], ".", "%"}]}], "Input",
 CellChangeTimes->{{3.6076878181784363`*^9, 3.607687818222459*^9}, {
  3.6076892162447653`*^9, 3.607689234593155*^9}, {3.60769070436731*^9, 
  3.607690748277746*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "3"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.607689222034863*^9, 3.607689235215659*^9}, 
   3.60769070739567*^9, 3.607690749652858*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.607689222034863*^9, 3.607689235215659*^9}, 
   3.60769070739567*^9, 3.607690749655389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inYAB", "[", "0", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["2", "3"]}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["4", "3"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      FractionBox["2", "3"]}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6076908410490637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "cube", "]"}]], "Input",
 CellChangeTimes->{{3.607690861925272*^9, 3.607690865774989*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"cube", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "pt", "}"}], ",", 
           RowBox[{
            RowBox[{"0", "\[LessEqual]", 
             RowBox[{
             "pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[LessEqual]", "1"}], "&&", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "\[LessEqual]", 
             RowBox[{
             "pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "\[LessEqual]", "0.5`"}], "&&", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "\[LessEqual]", 
             RowBox[{
             "pt", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "\[LessEqual]", "0.5`"}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`cube],
  Editable->False]], "Output",
 CellChangeTimes->{3.607690866956332*^9, 3.607690965130888*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inYAB", "[", "0", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["uT", "1"], ",", 
    SubscriptBox["uT", "2"], ",", 
    SubscriptBox["uT", "3"]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["uT", "1"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["uT", "2"]}], "3"], "-", 
    SubscriptBox["uT", "3"]}], ",", 
   RowBox[{
    SubscriptBox["uT", "1"], "+", 
    FractionBox[
     RowBox[{"4", " ", 
      SubscriptBox["uT", "2"]}], "3"]}], ",", 
   RowBox[{
    SubscriptBox["uT", "1"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["uT", "2"]}], "3"], "+", 
    SubscriptBox["uT", "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.607692058758491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cube", "[", 
  RowBox[{
   RowBox[{"inYAB", "[", "0", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     SubscriptBox["uT", "2"], ",", 
     SubscriptBox["uT", "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6076908136268044`*^9, 3.6076908161617727`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", 
   RowBox[{
    SubscriptBox["uT", "1"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["uT", "2"]}], "3"], "-", 
    SubscriptBox["uT", "3"]}], "\[LessEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{"-", "0.5`"}], "\[LessEqual]", 
   RowBox[{
    SubscriptBox["uT", "1"], "+", 
    FractionBox[
     RowBox[{"4", " ", 
      SubscriptBox["uT", "2"]}], "3"]}], "\[LessEqual]", "0.5`"}], "&&", 
  RowBox[{
   RowBox[{"-", "0.5`"}], "\[LessEqual]", 
   RowBox[{
    SubscriptBox["uT", "1"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SubscriptBox["uT", "2"]}], "3"], "+", 
    SubscriptBox["uT", "3"]}], "\[LessEqual]", "0.5`"}]}]], "Output",
 CellChangeTimes->{
  3.607689674964574*^9, 3.607690276579485*^9, {3.607690789607692*^9, 
   3.607690816765965*^9}, 3.607690971862195*^9, 3.607692090444202*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"0", "\[LessEqual]", 
    RowBox[{
     SubscriptBox["uT", "1"], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["uT", "2"]}], "3"], "-", 
     SubscriptBox["uT", "3"]}], "\[LessEqual]", "1"}], "&&", 
   RowBox[{
    RowBox[{"-", "0.5`"}], "\[LessEqual]", 
    RowBox[{
     SubscriptBox["uT", "1"], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       SubscriptBox["uT", "2"]}], "3"]}], "\[LessEqual]", "0.5`"}], "&&", 
   RowBox[{
    RowBox[{"-", "0.5`"}], "\[LessEqual]", 
    RowBox[{
     SubscriptBox["uT", "1"], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["uT", "2"]}], "3"], "+", 
     SubscriptBox["uT", "3"]}], "\[LessEqual]", "0.5`"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.607692105620941*^9, 3.6076921073312883`*^9}, {
  3.6076921693863707`*^9, 3.607692169734778*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.3333333333333333`"}], "\[LessEqual]", 
     SubscriptBox["uT", "1"], "\[LessEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "2"], "<", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.3333333333333333`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3.`", " ", 
             SubscriptBox["uT", "1"]}], "-", 
            RowBox[{"2.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["uT", "2"], "\[Equal]", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         SubscriptBox["uT", "3"], "\[Equal]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}]}], 
   ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", 
     SubscriptBox["uT", "1"], "<", "0.3333333333333333`"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "2"], "<", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"0.3333333333333333`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "+", 
            RowBox[{"3.`", " ", 
             SubscriptBox["uT", "1"]}], "-", 
            RowBox[{"2.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["uT", "2"], "\[Equal]", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}], "<", 
         SubscriptBox["uT", "2"], "\[LessEqual]", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.3333333333333333`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3.`", " ", 
             SubscriptBox["uT", "1"]}], "-", 
            RowBox[{"2.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}]}], 
   ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["uT", "1"], "\[Equal]", "0.3333333333333333`"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["uT", "2"], "\[Equal]", 
         RowBox[{"-", "0.625`"}]}], "&&", 
        RowBox[{
         SubscriptBox["uT", "3"], "\[Equal]", 
         RowBox[{"-", "0.25`"}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.625`"}], "<", 
         SubscriptBox["uT", "2"], "<", "0.125`"}], "&&", 
        RowBox[{
         RowBox[{"0.3333333333333333`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2.`"}], "-", 
            RowBox[{"2.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["uT", "2"], "\[Equal]", "0.125`"}], "&&", 
        RowBox[{
         RowBox[{"-", "0.75`"}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", "0.25`"}]}], ")"}]}], 
     ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.3333333333333333`", "<", 
     SubscriptBox["uT", "1"], "\[LessEqual]", "0.6666666666666666`"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["uT", "2"], "\[Equal]", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9.`"}], "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         SubscriptBox["uT", "3"], "\[Equal]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9.`"}], "+", 
            RowBox[{"12.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}], "<", 
         SubscriptBox["uT", "2"], "\[LessEqual]", 
         RowBox[{"0.125`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}]}], ")"}]}]}], "&&", 
        RowBox[{
         RowBox[{"0.3333333333333333`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3.`"}], "+", 
            RowBox[{"3.`", " ", 
             SubscriptBox["uT", "1"]}], "-", 
            RowBox[{"2.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}], "\[LessEqual]", 
         SubscriptBox["uT", "3"], "\[LessEqual]", 
         RowBox[{"0.16666666666666666`", " ", 
          RowBox[{"(", 
           RowBox[{"3.`", "\[VeryThinSpace]", "-", 
            RowBox[{"6.`", " ", 
             SubscriptBox["uT", "1"]}], "+", 
            RowBox[{"4.`", " ", 
             SubscriptBox["uT", "2"]}]}], ")"}]}]}]}], ")"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.6076920956213207`*^9, 3.607692108855933*^9}, 
   3.6076921705774317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"solidCube", "[", 
    RowBox[{
     RowBox[{"nYAB", "[", "0", "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.607688348188966*^9, 3.607688362920745*^9}, {
   3.6076884231676683`*^9, 3.607688436567799*^9}, {3.607688519811935*^9, 
   3.6076885295997868`*^9}, {3.6076886684347*^9, 3.607688673775193*^9}, {
   3.607689873456284*^9, 3.607689878982238*^9}, {3.607689983735816*^9, 
   3.6076899966037397`*^9}, {3.607691515638514*^9, 3.607691540510518*^9}, 
   3.607691585198927*^9, 3.607691789365326*^9, 3.607693605983959*^9, {
   3.607693638622031*^9, 3.6076936432422113`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnUGqY8lyhgt7CV6B4e2jxp56CQYPjffyViJ60OOLRgJPhLiYAtVAiELI
pXKjJfjRx1HZ8UV8nXn7Pt7ArqThcP+OSqUiI+OkMiP++Md/+fd//te/+/Dh
w8//8OHD339Yb3/+0z/95b+fPvJvw+3v1f7s32X5vfz7vYxrX/o7//xvf/nv
P0o/gbMfyud/d5LxnGQ8p9LPr92f/7P0Ezj7oXwe51m+11m+11n0fZH5vMg8
XUQ/V9HPVfRzLf38Cv/5S+kncPZD+Wjb172Jnm+i51vp59fu//RfpZ/A2Q/l
o236f8h8PWS+HqWfX4f583+XfgJnP5TP7Snz/pR5f8r6ZT/z9cn1zJHlfvjv
9h/7db3/vh6J9+tu/7FfR/F5XBf77/ZMvLfb/cfeDvcfaSd5PLST/cd+3vdl
voiH/Kq/o3/kvOR+9qUf/rssfyo45yX3c5ZxXqT/a8E5L/lzbwXnvOTxPArO
ecnjHPNCPOt7/v7I81vfK7kfrpeTrJeTrJeTrJeTrJdTmZfcP9fLSdbLSdbL
SdbLSdbLSdbLqcwL8ZBffR/H/7f3dO5nX/rhvGT5U8H5Obmfs4zzIv1fC855
yZ97KzjnJY/nUXDOSx7nmBfiIb+6v8nrru57cj/0Y2fxY2fxY2fxY2fxY+cy
L7l/+rGz+LGz+LGz+LGz+LGz+LFzmRfiWavz/WL+/3UfmfvhvuAi76WL+MWL
rMuL2MVFxnUp8xJ4v/+8lHkJvN8fXsq8BN7v3y5lXoiHZIy7f7/4fv0DWu6H
75ervF+u8n65yvvlKu+Xa5mX3D+/x1XeL1d5v1zl/XKV98tV3i/XMi/EQz7G
x3npx/2T2Bn72Zd+OC9Z/lRwzkvu5yzjvEj/14Lze+TPvRWc85LH8yg45yV/
3pgX4iEf4+jf+/57kvOS++F7/ybv/Zu892/y3r/Je/9W5iX3z/f+Td77N3nv
3+S9f5P3/k3e+7cyL8RDPj6P89Kv25/Ez7KffemH85LlTwXnvOR+zjLOi/R/
LTjnJX/ureD83nk8j4JzXvK/H/NCPOSjX85L7zd/kvcc++F+7CH7sYfsxx6y
H3vIfuxR5iX3z/3YQ/ZjD9mPPWQ/9pD92EP2Y48yL8RDPv4956V/b/0k+wz2
sy/9cF6y/KngnJfcz1nGeZH+rwXnvOTPvRWc85LH8yg49ZT/HvNCPGvVz9c4
L5Qn/qFtz+/z1ffDffVTzsOfst9+fp/fvn/uw59yvv2U/fnzuz304+G+/fnd
Tnr9cD///G4//fi5/33K+fNT9mVPOWd+yn7hKefJT3mPPb/bZ68f+tennA8/
Zd0/i931uJ/b5r/X722yXD1f7OXruVe2t/r7vh9//d2Z7aTur/vPrfs+23fY
e8/8LvVv63tNr0Oe67zH2X89Z8/4kOc673GOp57LZ5x2WM/rM87x13P8jA95
rvMe5/et5/79vtfvA/r9mN8T9PsEvz/o31/r9wpmT8T79cv3yMD79cv3AsfD
9Us/P/B+/dJvD7xfv/TDA+/X77Po4wNavw7X76ttPcffvXy9Hwj99/3U89HQ
f99/PR8K/fefW38fh/778dTfB7Y/pf7pP+09Y/Zreu1x9l/vw+g/A6f/7HGO
p96f0X/m8dV7tYxz/PW+jf4zcPrPHuf3rfdz9J+B03/2OPVT7/PoPwOn/+xx
6nN+/9fL1/eu2VO/fof/7Pvh+h3+s++f63f4z/5zuX6H/+zHw/U7/Gc/Tvud
8f44nfz+mq1Pv0fN7696X9SPv95j5PdXPa/tP7eeI+b3Vz0vIZ7fX/X3XK9P
e5/bPt3s195L7H82D0O+338S53jqPTf9Z/68ev+dcY6/3ovTfwbe7z+J8/vW
e/R+/+n36/3+0+/d6T8D7/efxKnP+T19L19/h9j71eymX7/cf3I8XL/cfw68
X7/cfw68X7/cfw68X7/P8v0+oPXrZD0+MfS/tl/xeJP4u++n3reH/vv+631j
6L//3HrfEvrvx1PPm0P//Tjn52H0nz1u73nbv5td2/tqyK/ND8dT41HoP/O/
r3EqGef4a/wK/Wfg9J89zu9b413oPwOn/+xx6qfGx9B/Bk7/2ePU5zyeppev
5zL9+rX3q9nN8J/9eLh+h/8k3q/f4T+J9+t3+E/i/frl73ePK4q/Q//5vTGL
W6rnX6H/tX2Jx4XF3/34a1xM6J943v/X+2fief9f79+Ih/77cc7vB+g/e9x+
D9k5h73/bV9v9m7vMY5nNm+0wxpPlnGOv8aZ0X8GTv/Z4/y+NS4t40Oe/rPH
qZ8ax5bxIU//2ePU5zzurZev59T9+rXfG/YeNfvg73f2z/XL3+/8XK5f/n7n
eLh++fud47R7uWh/PB8lr+/ZeZbHL+d1OVtXHEeNUyOe102N0yGe10GNUyCe
7brefwZO/5nx2f2YnRsNefrP3M/s/MP2BUOe/jN/7uz9RjuczSfHX+NB6T8D
p//scX7fGj9K/xk4/WePUz813pT+M3D6zx6nPufxqb18vbfr16+dv9jvCntf
mh0wHmDg/frl/f7A+/XL+/qB9+uX558ep5v/Xs/DC/33+4N67h/6X/s95nHu
8T37/mucbz4/qfGMxPP5SY3nIh7678c5jx+h/+xxO1+3ezM7T7JzYvv9ZOci
tl+w3wG2Puy9x/HP5nnI03/2OL9vjfOm/wyc/rPHqZ8aF07/GTj9Z49Tn/M4
8l6+xjH069fOo+2cxX4/2HvR5pvnn/xcrl+ef3I8XL88/+Q4LW7r/fnHoX/i
of9evp7vh/77furvsdD/2jrxePzQP/HQfz+eGg8b+u/HOY+nCz1yvBm3e0iL
L7Bzd7tPs3MmOz+231V2XmL7CPt9YOvG3odDfm3++X1rPgb9Z+D0nz1O/dT8
DfrPwOk/e5z6nOd79PI1rqtfv3Y/Z+fOdp5ivxPs/WfzOvwn8X79Dv9JvF+/
vD/yvJf4O/Sf/fosr6bGz4X+e/l63xn67/up51Oh/7V9g+ctxd/EQ//9eGre
QOi/H+c8vpj+s8ctXsPisOx+0uIO7Dze7tns/MnOle33lp2j2P7CfjfYerL3
JL/vzC6GPP1nj1M/Nc+K/jNw+s8epz7neVm9fI1z7devxSvYPZydL9u5if0e
sPeczR/vjzgerl/eH3GcFtf/fr6Z0D/x0H8vX+M/Qv99P/W8PvTf919/X9m+
wdZD/N2Pp+ZXhf77cc7zLeg/e9zi2ixe1eI4LD7L7i0tHsHO6e3+zc6l7LzZ
fofZ+YrtO+z3hK0ze38O+TV7oX5qPiT9Z+D0nz1Ofc7zJ3v5Gvffr1+L37K4
BLtvs3NkOx+xfb+9z2yehv8k3q9f3r97Hmn8HfoPnP6zl6/5FaH/Xr7Gw4X+
+37q/WXov++/njeF/tf2AZ4HHH8TD/3345znn9F/9rjF/1pcv8W7WRyrxXdY
3JbdZ1qcgp3f272cnVfZObT9PrNzF9uP2O8MW3/2XqV+ZnY05Ok/e5z6nOc5
9/I1D6pfvxbPanFaFn9g92p2XmznILa/t/eWzQfv3zlOy/t8P79g6L+f75pH
EfonHvrv+6nxHKH/vv96/h767z+3/l6yfYDZd/zdj3Oej0v/2eOWJ2H5TxYX
bPH+Fgdn8a0W92HxXHbPafELdq5v93V2jmXn0/a7zc5jbJ9ivz9sXdr7dsiv
2Rf1Oecj6OVrXmi/fi2+3+JWLR7L4gzs/szOhe28w/bx9n4yvTN+aca/UPkd
Aue6DwniWX41//at+WZvza94azzxW+Pn3hov8tb70bfeB7z1/Outv/feur95
63qu/A1ZnzNeh7fyDXgeY5af8QR4PGX+vFl+v9/r5M+d5eX7/tL8Zr9unVcl
cOo547P8Y893Cpx6zv3M8oM9niDw/nfJav6u79ftPdT7O+ejCby359U8Rc8f
i797e17NI/T4jMB7e17N8/PfP4Hb+5565v6QOPWc8Vk+k+fjBU49535m+UYe
7xI49Zw/d5YP5L8nbZ/Uv1+d/yjw3m+s5j14fmPgvd9YzUvw+KHAe7+xmjfg
v88Dt/0o9ZzHPfQceP9eXY2P9nzRwPv5X41f9niswPv9z2p8sZ93BG77+/y3
xbG+Nb7SeQqy/Cwu0vMl8jhn8Ywet5E/dxaH6OdHgdvvJeo5j2PoOXDqOeOz
eCvPZw6ces79zOKhPF4wcOo5f+4sXsnP4wKnnvv14/xugffvwdW4DM8PD7x/
D67GTXj8ZeD9e3A1rsHPNwPv34Or9+dvvdd1XpIsP7uP9fyoPM7ZParHaeXP
nd1/+nlx4NRz79+dTzDwfr+xes/j/AWB9/uN1XsYjw8OvN9vrN6T+Pl7/N3v
N1bP4996Tuy8OVl+dr7r+Xt5nLNzWY8jzJ87O0/1+4zAqed+/7F6/jHju7Tf
8fa7034n2b7e9qG2b7L3vL2XzI/aujc7XT0PHS3rlzjPnSq/XZav/E9Zv+xn
Xv8s91/zq/p91Hr9sDyeGr/Q+4Fof/S8uZ7n9Xr185Jer/57dHs67y5x25/a
fsre//a+Mv+an/X8NPB+PdTz3MD79VbPlwPv13O0eg7e+4t6/p77r+f7vf+q
9woZr/cWuVXc7NrWga0bW2e2Lm0db62ue/MT5lfMD/2+31r3f3/03/3wm79t
63Ya+A9/+tvx/HF/avgPP/tb+b+en+X//2HHvx3PX9+Oif/4/fDb8fzR3w/1
af/OPsfGZd/DvrfpyfRq82DzZvP8+3Yxs69oP+yyH89fzy4//G8zf23+/fff
B/X9Ye8bez9tzesBErf3pb1f7X289l7fYZzRdqLPnbzHKL8v/Wc9U/5U8Kxn
9nOW8V+k/2vBs575ubeCZz1zPFWfWf8c51P0SZx+hPiQ7/cLxNk/9xHEh3y/
vyDO8XDfQfwJ/XA/Qpzj5z6F+JDv9y/E+X25ryE+5Pv9DnHqh/sg4kO+3x8R
pz75vtlBbvST5bl++R6iPNcv30Psh+uX7yH2z/XL9xA/l+uX7yGOh+uX7yGO
M54v4j8HnvX/Iv6T8vvSf9Y/5U8Fz/pnP2cZ/0X6vxY865+feyt41j/H8yh4
1j/H+RR9Eqf/JD7ke/9JnP3TfxIf8r3/JM7x0H8Spx3SfxLn+Ok/iQ/53n8S
5/el/yQ+5Hv/SZz6of8kPuR7/0mc+qT/fIHc6CfLc/3Sf1Ke65f+k/1w/dJ/
sn+uX/pPfi7XL/0nx8P1S//JccbzIP5z4Fn/B/GflN+X/rP+KX8qeNY/+znL
+C/S/7XgWf/83FvBs/45nkfBs/45zqfokzj9J/Eh3/tP4uyf/pP4kO/9J3GO
h/6TOO2Q/pM4x0//SXzI9/6TOL8v/SfxId/7T+LUD/0n8SHf+0/i1Cf95wFy
o58sz/VL/0l5rl/6T/bD9Uv/yf65fuk/+blcv/SfHA/XL/0nxxnPo/jPgWf9
H8V/Un5f+s/6p/yp4Fn/7Ocs479I/9eCZ/3zc28Fz/rneB4Fz/rnOJ+iT+L0
n8SHfO8/ibN/+k/iQ773n8Q5HvpP4rRD+k/iHD/9J/Eh3/tP4vy+9J/Eh3zv
P4lTP/SfxId87z+JU5/0n0fIjX6yPNcv/SfluX7pP9kP1y/9J/vn+qX/5Ody
/dJ/cjxcv/SfHGc8X8V/Djzr/1X8J+X3pf+sf8qfCp71z37OMv6L9H8teNY/
P/dW8Kx/judR8Kx/jvMp+iRO/0l8yPf+kzj7p/8kPuR7/0mc46H/JE47pP8k
zvHTfxIf8r3/JM7vS/9JfMj3/pM49UP/SXzI9/6TOPVJ//kKudFPluf6pf+k
PNcv/Sf74fql/2T/XL/0n/xcrl/6T46H65f+k+OM5yfxnwPP+v8k/pPy+9J/
1j/lTwXP+mc/Zxn/Rfq/Fjzrn597K3jWP8fzKHjWP8f5FH0Sp/8kPuR7/0mc
/dN/Eh/yvf8kzvHQfxKnHdJ/Euf46T+JD/nefxLn96X/JD7ke/9JnPqh/yQ+
5Hv/SZz6pP/8BLnRT5bn+qX/pDzXL/0n++H6pf9k/1y/9J/8XK5f+k+Oh+uX
/pPjjOdn8Z8Dz/r/LP6T8vvSf9Y/5U8Fz/pnP2cZ/0X6vxY865+feyt41j/H
8yh41j/H+RR9Eqf/JD7ke/9JnP3TfxIf8r3/JM7x0H8Spx3SfxLn+Ok/iQ/5
3n8S5/el/yQ+5Hv/SZz6of8kPuR7/0mc+qT//Ay50U+W5/ql/6Q81y/9J/vh
+qX/ZP9cv/Sf/FyuX/pPjofrl/6T44yn5RMMPOu/1l3q5fel/6x/yp8KnvXP
fs4y/ov0fy141j8/91bwrH+O51HwrP8aDxx47z9r3aUeH/K9/6w8Arkf+s/K
LxB47z8r70D+XPrPykeQ9UP/WXkK8jip18pfEHjvPyuvQf5e9J+V7yDw3n9W
HoSsB/rPyo8QeO8/K29C4PE312+WG/1kea5f+k/Kc/3Sf7Ifrl/6z8o/Qbxf
v/SfNR+9Hw/XL/2nxU3XPCDiWf+17lIvvy/9Z/3XukvEs/5r3aV+/Bfp/1rw
rP9aT4J41n/l/yWe9V/zJgLv/Wetu9TjQ773n5UfJPdD/1l5QwLv/WflE8mf
S/9ZeUayfug/K/9IHif9Z+UlCbz3n5WvJH8v+s/KYxJ47z8rv0nWA/1n5T0J
vPeflQ8l8Pib6zfLjX6yPNcv/WflOSPer1/6z8p71PfP9Uv/WXlQiPfrl/6z
8iL044xnzZcknvVf6y718vvSf9Z/rbtEPOu/1l3qx3+R/q8Fz/qv9XWIZ/1X
PnTiWf81vyzw3n/Wuks9PuR7/1l5f3I/9J+VDyjw3n9WnqD8ufSflT8o64f+
s/IK5XHSf1a+ocB7/1l5iPL34rxVfqLAe/9ZeYuyHug/K59R4L3/rDxHgcff
XL9ZbvST5bl+6T8rHyTxfv3Sf1Z+uL5/rl/6z8oXRbxfv/SflT+mH2c87+I/
B571fxf/Sfl96T/rn/Kngmf9s5+zjP8i/V8LnvXPz70VPOuf43kUPOuf43yK
PonTfxIf8r3/JM7+6T+JD/nefxLneOg/idMO6T+Jc/z0n8SHfO8/ifP70n8S
H/K9/yRO/dB/Eh/yvf8kTn3Sf94hN/rJ8ly/9J+U5/ql/2Q/XL/0n+yf65f+
k5/L9Uv/yfFw/dJ/cpzx/Cr+c+BZ/1/Ff1J+X/rP+qf8qeBZ/+znLOO/SP/X
gmf983NvBc/653geBc/65zifok/i9J/Eh3zvP4mzf/pP4kO+95/EOR76T+K0
Q/pP4hw//SfxId/7T+L8vvSfxId87z+JUz/0n8SHfO8/iVOf9J9fITf6yfJc
v/SflOf6pf9kP1y/9J/sn+uX/pOfy/VL/8nxcP3Sf3Kc8fwm/nPgWf/fxH9S
fl/6z/qn/KngWf/s5yzjv0j/14Jn/fNzbwXP+ud4HgXP+uc4n6JP4vSfxId8
7z+Js3/6T+JDvvefxDke+k/itEP6T+IcP/0n8SHf+0/i/L70n8SHfO8/iVM/
9J/Eh3zvP4lTn/Sf3yA3+snyXL/0n5Tn+qX/ZD9cv/Sf7J/rl/6Tn8v1S//J
8XD90n9ynPH8RfznwLP+fxH/Sfl96T/rn/Kngmf9s5+zjP8i/V8LnvXPz70V
POuf43kUPOuf43yKPonTfxIf8r3/JM7+6T+JD/nefxLneOg/idMO6T+Jc/z0
n8SHfO8/ifP70n8SH/K9/yRO/dB/Eh/yvf8kTn3Sf/4CudFPluf6pf+kPNcv
/Sf74fql/2T/XL/0n/xcrl/6T46H65f+k+OM5078p/GKWL78UXDLb7K4fYtH
tTgrix+wezE777VzDNufz947/n7vP9fPozJu5/92r2rxKhYHaPHVlrdyFNzy
rI2/YjfBo8X/Nz4W4xmgfQZueWGW72BxvBafZnEXdp9o5+R2/mO/a+x9TT1T
n8Rned/EZ3k6xGdxlcRn9+B2v2PnlvZ73PaZxKOt8tKRB4vNedf6/ZHzqPX7
HedF256V/6zfpzifWb/vcH6yfh/hfGPbc5VXbJXvivw6bM7n1M+L8zP18+J8
S9uz8ir18+I8Sf28OO9RPy/OY7Q9V/mKVnl0yNvB5jwx/bw470s/L87jsj0r
X0s/L86/0s+L86n08+L8KNtzlQdllZ+DfABszj/Rz4vzSfTz4vwQ27PyQPTz
4rwO/bw4T0M/L867sD1X+RVW8/6ZZ8zmee39vHieej8vnne+PWt+eT8vni/e
z4vnf/fz4vnc23M1b3s1n5j5i2yeL9vPi+e/9vPi+azbs+at9vPieaj9vHhe
aT8vnie6PVfzQVfzFJkXxeZ5eP28eF5dPy+eJ7c9az5cPy+e39bPi+er9fPi
+WfbczXPbDX/ifkWbJ7f08+L5+v08+L5N9uz5tn08+J5M/28eB5MPy+e17I9
V/NXVvMqGMfN5nkD/bx4HkA/Lx7Xvz1r/H4/Lx6P38+Lx9f38+Lx8ttzNS5+
NV6b8aFsHo/cz4vHF/fz4vHC27PGBffz4nG+/bx43G4/Lx6Huz1X421X40AZ
d8bmcY79vHjcYj8vHoe4PWu8YT8vHj/Yz4vHA/bz4vF923M1jm81vozxLGwe
P9XPi8dD9fPi8U3bs8Yx9fPicUn9vHicUT8vHje0PVfjg1bjVnhPzuZxGf28
eJxFPy8eN7E9a3xEPy8e79DPi8cv9PPi8QjbczXuYPU+nPdvbH7f28+L39/2
8+L3sduz3rv28+L3qP28+L1oPy9+z7k9/T4z64/nxsSN59v4+43X1viqjcfR
+FmNt8z4CI2nx/i3jJfC+GYsD9v4FSzv0PKJLc/G8ucsrtzyRSyO0uKjLW7I
4gHtntziX6z+htXVMb55qyNh/MrGm258osYTbPx5xotpfFHGA2f8KMZ7ZHwA
xvNh+a+W1275XpbHafkNlrdk8bwWp2/xaxaXavEaFodldWCsvpPVPbB6Jsbz
bfz9xmtrfNXG42j8rMZbZnyExtNj/FvGS2F8M5aHbfwKlndo+cSWZ2P5cxZX
bvkiFkdp8dEWN2TxgFaPyOqMWf0Nq6tjfPNWR8L4lY033fhEjSfY+POMF9P4
oowHzvhRjPfI+ACM58PyXy2v3fK9LI/T8hssb8nieS1O3+LXLC7V6mJZvTur
A2P1nazugdUzMZ5v4+83XlvjqzYeR+NnNd4y4yM0nh7j3zJeCuObsTxs41ew
vEPLJ7Y8G8ufs7hyyxexOEqLj2Z8JeNnat22jM/qjFF+VleH8rwHrzz0GZ/x
plN+xhNM+RkvJuX5O7nySGV8xntE+RnPB+Vnee2Un+VxUn6Wt2TxvJS3OF/u
P4lbXSyrd2d1YKy+k9U9sHomxvNt/P3Ga2t81cbjaPysxltmfITG02P8W8ZL
YXwzlodt/AqWd2j5xJZnY/lzFldu+SJWr9Lq0Fp9Nqu7aPWIrM6Y1d+wujrG
N291JIxf2XjTjU/UeIKNP894MY0vynjgjB/FeI+MD8B4Piz/1fLaLd/L8jgt
v8HylqxuqtVDtjqBVv/T6mJZvTurA2P1nazugdUzMZ5v4+83XlvjqzYeR+Nn
Nd4y4yM0nh7j3zJeCuObsTxs41ewvEPLJ7Y8G8ufs/q9Vpfb6lVaHVqrz2Z1
F60ekdUZs/obVlfH+OatjoTxKxtvuvGJGk+w8ecZL6bxRRkPnPGjGO+R8QEY
z4flv1peu+V7WR6n1ZG2+vBWN9XqIVudQKv/aXWxrN6d1YGx+k5W98DqmRjP
t/H3G6+t8VUbj6PxsxpvmfERGk+P8W8ZL4XxzVgetvErWN6h5RNbPXPmGe9E
/kXkrd7vrA6t1WezuotWj8jqjFn9DaurY3zzVkfC+JWNN934RI0n2PjzjBfT
+KKMB874UYz3yPgAjOfD8l8tr515XTxfGvj2+4r57szbGvi2Hpi/zrytgW/7
D+ajM2+L42R+OfO2Bp733/xcnscwb4vjYZ4387Y4TurZ8jiZt0WcemYeFuWp
59W69xwn9bxar56fSz2v1pkfeK/n1TrnA+/1vFpnm/LU82p9bI5zVu964L2e
V+tUczzU87y+dH7yHHjgvZ5X6/FSnnperaPLcc7q4g681/NqPVuOh3qe16HN
z/fW8xx4r+fVOpzsZ1ZXk/1Tz6v1MAfe63m1jiXHST2/t+7fwHs9r9brYz+z
+nvsn3perZs38F7Pq/XuOE7q+b31wQbe63m1rhf7mdXpYv/U82p9rYH3el6t
i8VxUs+85xp4r+fVekGUp55X6/xwnLO6PQPv9bxab4fjoZ7ndXLy8731Rgbe
63m1Tgj7mdX9YP/8fqv1Ogbe63m1zgbHST2/ty7BwHs9r9YTYD+z+gDsn3pe
5fUfeK/nVT5+jpN6fi9/+cB7Pa/yjrOfGY84+6eeV/m/B97reZW3m+Oknt/L
czzwXs+r/MTsZ8Y3zP6p51We4IH3el7l9+U4qef38qEOvNfzKo8p+5nxkrJ/
6nmVT3TgvZ5XeUA5Tur5vbyJA+/1vMp3yH5m/IXsn3pe5R0ceK/nVb5AjvMJ
ve7wd7QfPHZb+8Fjt7W/NY9dPGmfgf/gsdueP3jstuffmsduh2c04pSn3RKn
PO2ZOOVp58QpT/snTnmuC+KU53ohTnmuI+KUrzx6Gad85dfLOOW5HolTnuuU
OOW5folTnuuaONcz7ZM45WmfxClP+yROedonccrTPolTnvZJnPK0T+KUp30S
p3zlE8w45SvPYMYpT/skTnnaJ3HK0z6JU572SZzvFdonccrTPolTnvZJnPK0
T+KUp30SpzztkzjlaZ/EKU/7JE75yquYccpXvsWMU572SZzytE/ilKd9Eqc8
7ZM49ze0T+KUp30SpzztkzjlaZ/EKU/7JE552idxytM+iVOe9kmc8pVfMuOU
r7yTGac87ZM45WmfxClP+yROedon8ZCP+aN9Eqc87ZM45WmfxClP+yROedon
ccrTPolTnvZJnPK0T+KUrzybGad85d/MOOVpn8QpT/skTnnaJ3HK0z6Jh3zM
B+2TOOVpn8QpT/skTnnaJ3HK0z6JU572SZzytE/ilKd9Eqd85RvNOOUrD2nG
KU/7JE552idxytM+iVOe9kk85EO/tE/ilKd9Eqc87ZM45WmfxClP+yROedon
ccrTPolTnvZJnPKVdzXjlK98rBmnPO2TOOVpn8QpT/skTnnaJ/En9EX7rPmw
Gad91nzYjNM+az5sxmmfNR8247TPmg+bcdpnzYfNOO2z5sNmnPZZ82Hz35V/
NuOUr7y0Gac87bPmw2ac9lnzYTNO+6z5sBmnfdZ82O1Z82F7nPK0z5oPm3Ha
Z82HzTjts+bDZpz2WfNhM077rPmwGad91nzYjNM+az5sxisPb35SvvLzZpzy
tM+aD5tx2mfNh8047bPmw2ac9lnzYfP3oX3WfNiM0z5rPmzGaZ81HzbjtM+a
D5tx2mfNh8047bPmw2ac9lnzYTNO+6z5sBmvfMQZp3zlKc5PytM+az5sxmmf
NR8247TPmg+bcdpnzYfN46N9Eqc87ZM45WmfxClP+yROedonccrTPolTnvZJ
nPK0T+KUr7zMGad85WvOOOVpn8QpT/skTnnaJ3HK0z6JP/F5tE/ilKd9Eqc8
7ZM45WmfxClP+yROedonccrTPolTnvZJnPKVnzrjlK+81RmnPO2TOOVpn8Qp
T/skTnnaJ/En/j3tkzjlaZ/EKU/7JE552idxytM+iVOe9kmc8rRP4pSnfRKn
fOXpzjjlK393xilP+yROedonccrTPolTnvZJ/Im/aZ/EKU/7JE552idxytM+
iVOe9kmc8rRP4pSnfRKnPO2TOOUrX3nGKV95zDNOedonccrTPolTnvZJnPK0
T+JP/P9ow05zfO28Pmdu5GMb9Qz7fuZxpvnfzesf5naUfub1+nLzenF9P/O4
1/zv5vXQcvN6XH0/87ja/O/m9aZyI2/cqM/T9zOP283/bl7PJ7e79DOvP5Ob
1z/p+5nHEed/N6/vkZvXl+j7MX56rvfAuX4D53oMnOsrcKtjYPUKrC4B7TNw
2lvgtJ/AaQ+BW30AqwNgfOo7wckPNOPpPwpuvPvGr288+uTjmfHik19nxnNv
fPbGW2/837TPGd887XPGH2888cYHb7zvtM8Zjzvtc8bLbvzrxrNufNU7wY0f
/SD4UXDjNTf+cuMpJ9/ejHfc+MXvghtfuPGCG78y1/uMz5vrfcbPbTzcxrdt
vNpc7zOebOPD5nqf8Vsbj7XxAXM/OeOf5n5vxidtvNHGD2080Nz/zHidjb+Z
+40ZH7PxLht/Lf1nvR/OOP1nve/NuPEcG5+x8RbTf9Z714wb3zD9Z70vzbjx
BBvf6k5w4/c9CH4U3Hh5jX/XeHavghtvrvHj3gU3vlvjtTV+UL6PZny0fB/N
+GWNR9b4Yo0Xlu+jGc+r8bnyfTTjZzUeVuOz3Alu/KkHwY+CG++p8Zsaj+lV
cOMlNf7Ru+DGJ2q8oca/yPf7jO+T7/cZf6fxdBofp/Fu8v0+49E0vky+32f8
l8ZzaXyBO8GNn/Ig+FFw45U0/kjjibwKbryPxu94F9z4Go2X0fM48+/9Z9Fz
xp0XsJd3frte3nnaennnG+vlnTerl3f+p17eeYx6eefj6eWdV6aXd36UXt55
Pnp556vo5Vd5F6KR1zMaeSijkTcxGnn+opGXLhp51KKR9ysaeaqiWT12qwdu
9aitHrLV4zUeC+NJNV5P46E03kTj+TNeOuNRM94v46kyXiXjATLeGuNZsTq6
5JeNRj7UaOTvjEa+yWjkR4xGPr9o5J+LRr60aOT3imZ16a0uutXltrrQxqdi
fL3GL2t8qMbfaXyTxo9ofH7GP2d8acbvZXxUxp9kfD9Wz5k8x9HIyxuNPLLR
yHsajTyd0cgrGY08iNHI2xeNPHPRyIsWjTxe0aw+vNUnN14f4402nmPj5TUe
WeM9NZ5O45U0HkTj7TOeOeNFMx4v452yuuLk245Gfuho5DOORv7daOSLjUZ+
02jk44xG/sho5DuMRn6+aOSTi0b+s2jk64pm/FLGX25828YPbXzGxr9rfLHG
b2p8nMYfaXyHxs9nfHLGf2b17cn7Ho085dHIqx2NPNDRyFscjTy70cgLG408
ptHIuxmNPJHRyGsYjTx80cgbF814zoxH33jfjafceLWNB9p4i41n13hhjcfU
eDeNJ9J4DY2Hj/xw0XaCky8/2kHwo+Dkz45Gvudo5CeOdhWc/K/RyFca7S44
+SCjkb8wmvHtUZ8836i8+D1OffJcovJk97jxPVOfPDeoPK89Tn3y937lfexx
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
HwW3eudWZ9rq+zK+Jlrlqd1a5Vvd2l1wq5tl9YqsHgz1Sfus+bA9Tn3SPms+
bI9bXeQar5T/rvmwPU590j5rPmyPWx2dneAvgh8EPwr+KrjVNbd60ozzilb5
kvPfNR+2x61Om9XHsvpD1Cfts+bD9jj1Sfus+bA9bnW4a9zc9qzxX/nvmg/b
41bfzuqKWd2mneAvgh8EPwr+Kvgnwa1+OeMNo1Xe7q1V/un8N3GrC2j12Kze
FfVJ+yROfdI+iVOftE/iVve9xm9uzxqHuD1rPF3+m7jVU7Q6dlYnbCf4i+AH
wY+Cvwr+SfDPgjPuNVrlj99a5UHf2l1wq0Np9f+svhr1SfskTn3SPolTn7RP
4tQn7dPqZ1vdYqsXa3U6rT7ial26neAvgh8EPwr+KvgnwT8LzvjraLWOwdYq
H//W7oJb3VOrN2n1/KhP2idx6pP2SZz6pH0Spz5pn1av3epkW31iqwtr9ThX
6yDuBH8R/CD4UfBXwT8J/llw5gFEq/U0tlbrQmztLrjV2bX6plY/kvqkfRKn
PmmfxKlP2idx6pP2SbzmB2zPGue+PalP2qfVJ7a6sNFCjzvBLY7E7u+Pgtt9
ld0T2PmsnYvZeYT9DrT9t+177H1j65n6tDgbi2+we2W7z7N7FDu/tnNDO6+x
38n2+8T2hfY+nvlB6tPikywuxO7j7R7U7p/s3N/OW+2cy84X7Hed7adtHzN7
f1CfR9HnUfR5FH0eRZ9H0edR9HkUfR5Fn3YuY7+H7XeI7f9m713q0+LhLA7J
4j/s3t3uO+2eyc737VzVzrPsHMF+v9m+ebZfoT4tjtDityxuxuIV7J7Y7ufs
XsTOo+0c0M5f7Hev/d6Y7fOoT4u/tLg3izeyOA+7X7d7TbtPsnN8Oz+1cys7
L7DfabP9MfVpcasWL2hxWhYfY3EJdh9s93B2/2HnznbeZ+cs9vt29ruC+rR4
X4uztPg2iyuyeA67R7f7S7s3svN6Oye18yk7F5j9HqM+LU7a4lMtLtDisSwO
xuIP7N7X7tvsnsPOl+1cz85TZr9jqc+76NPiei2e0uLYLH7I4jbsvtzuKe1+
yM7l7TzUzqFmv/+pT4vLt3hoi0O1+D+Lu7J4F4szsPtdu1ez+ww7R7bzu9m5
CfVp+QwWR27xuxY3afFqFidk8Rl2L273kXYPZOfvdu45O2+iPi2vxvIZLI7c
4nctbtLi1SxOyOIz7F7c7iPtHsjO32fndDvBLa/mIPhRcIvftbhJi1ezOCGL
z7B7cbuPtHsgO3+3803q0/KOLN/D4uwtvtniSi2ez+KoLH7F4gbsvtbuyex+
YnYuTH3yfIk49cnzJeIWL25xuhYfaXFpFg9kcRh2/233jnbfY+fp1CfPl4hT
nzxfIm5x9hbfbHGlFs9ncVQWv2JxA3Zfa/dkdg9BfVp+oOVlWT6M5SFY/LfF
3Vq8o8WZWXyPxVXYfbbdI87ub6hPy6u0fDbLI7L8DYubt3hlixO1+DyLi7J4
FIsDsPvX2b0X9Wn5qJYHaPlXlvdi+QYW523xtRbXaPFkFsdj8RN2bz27L6Q+
LY/X8ictb83yhSxPw+LjLS7Z4kEtDs/inyzuxO77Z/es1KflP1veqeX7WZ6V
5bdYXoHFc1scrcUvWtyYxetYnMTsfpr6tLxxy9e1PEnLT7O8IMvHsDh4iz+2
uE+Lt7M4J4svmd3rU588XyJOffJ8ibjl+1meleW3WF6BxXNbHK3FL1rcmMXr
WDwE9Wk8BZYfbnm5lg9peWiW/2N5FxbvbnHGFt9pcXUWzzSLI6E+jd/B8uot
n9nySC1/z/KmLF/F8gQsPtviYi0e0eLAZvE31KfxjBi/g+XVWz6z5ZFa/p7l
TVm+iuUJWHy2xcVaPOI4X/ofB5ZNqw==
   "], {{{}, 
     {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJw03QWUrmXhtfEX4cCBQ3c30iEIKqEg3aWCgkF3h4Qg3R2S0t3dIF2S5t9u
xcDu/K4fz/utpetwzf1OnpnnmZmzr70X2nG/rfZ912g0+szMo9EU/pxuNLq8
/7hy0mi0fE/bKZ68p589cTRaId45nibeaMJodNOMo9Gu8dTxeZ2/p/M94mnj
8+MV40PjeeMtevwdPf7cnv61Xv768Td7HYd1Pk/nF/f09/X4HeIp4w06v7HH
7xn3x2iT+Jb+Y/949niz+Lb4wHi2+As9/8o9/0HxXPHmnd/e+d7xDPEFna/U
+SHxnPFF8SrxbnH/G23c42/u8fsFPXl0Yefv7T8OjxeIt+z8zs5Pjb/Y239V
b/sand8Wf6LzlycOH8Oj44XiS+MPxMfGi8aXxavGx8VLxB/p5d3Ty/t8vFi8
dXx3/Ll44Xir+K74yp5v+Xib+P96nUd2Pn98SU9/fy/vxHjp+KOd39vjr+np
U8Ubxt/q8ad1vkJ8VU//YI8/PV4pvjb+UHxKPFmPPSi+r+c/OV6q8y/Gq3d+
Qrx4fHm8WrxPPEu8ac9za48/I35vfF3na3Z+ZrxyfH28Vnxu/IH45njd+Lx4
1fiWeL34/Hi1+NZ4/fiCePX4tniD+AvxB+M74o3ic+L3xzfF68Rnx++Lb4zX
ji+M14hvjzeML4/Xjx+Mt4gvjteK7443iS+J14nvizeNL43Xje+PN4svi9eL
H4g3jy+Kr+jv/+o+thvHd3m/O/94H49v97Qvdr5B/FBP37LzK+ON4kfireMb
44/Gz8XbxdfEm8aPxx+Lr403i5+It4mvizePvxRvG18fX9nrv6bX9fH4rHiV
zm/o/MPx1fEm8WPxR+Or4o3jR+OPxE95u+Ltenu/28t41sct/kT8vfimHv+x
+Pmevn2PvzneJn4h/mR8e7xd/OV4h/iWeNv4xfhT8Q3xVvHT8SfiK+IN44fj
reJb44/HL8Wfju+It49fiXeM74w/Gb8a7xT/X3x2/L/4jPju+NPx6/Eu8T3x
Z+I34l3jr3g58Sd7f77f+3Nv51f18bq2/96t8/vinTr/ao/b3d9f/Kn4tXjn
+PF43/j78QHx133c4u17eT/oZTzW+T7x93r6/p0/FO8RfyveO3443jP+drxP
/Ei8V/ydeN/40Xjv+LvxfvED8W7xN+M94/vjXeNvxHvET8T7xT+ID4y/FO8f
/zA+KH4x/lz8m/hz8WvxcfEf4+P8fcdX9/5f19t+SPx0fHDnP+380PiZ+LPx
L+LPxj/3cY0/1fv7o57nJ15P/On4h/GTPf6A+Ec9/eAe/2x8WPxWfFj8XHx4
/Mv48Pil+Kj47fio+OX46Pi38dHxg/Hu8f/Fe8Vfjj8f/y7+fPxCfGT86/jI
+Pn4iPhX8RHxK/Ex8e/jY+J73XfibXt7v9Pb+2rnx8Z/6OnHdv52fEs8dzet
q+M34hPjv3R+QvxmfEr89/hEn0/xqfE/4pPir8anxf+MT/b5EZ8R/zs+Nf6b
j6v7aK//J73+73V+bR//G/rvczv/Wnx65//qcafEE3o7Lox36vE/7THf6vyc
2E31zM6/HZ8bThafFX8nPi9+V3x2/N34/Hjy+Jz4m/FZ8X97+afH34jPjP8T
nxZP7HEnxzv2+n7W6/t+51+Ip+zp53X+S29vPEv8xfj1+Jre/ut77PHxj+LL
Op/k7Y5/4n4YTxdfFP/U9TGePr44/rHvJ+Jp4y/EP4wvjaeJL4h/EF/i3Y3P
j3/m+hbPEF/i89HXbzxjfGn8q/i6eNb4inj2/rwh3qX35+e9jX/29xjvEP84
/rXH9/bf2H9f2ePf8v50PnPPd3n8C18f8UzxZfFc3u54557/F17e9H1+9g3S
q31TsudMfZ31+Bs7n6PHXeX+1J8fnqyn9fhp+8bnj53f2fkC3q7O/xTfFS8Y
3xj/Ob47Xii+Kf5rfG+8SHxL/J/48XjZ+O74D/Ed8fzx9fF/4yfi5eJ74t/H
t8fzxdf5/IvvixeNb42X6s+b4117+37Z+/PPzh+Kl+jpd3T+r/jReOn4zvjv
8f3xYvFt8b/jx+Jl4rviv8T3xAt7ufE/4uv7+N7Uy749/l/8pc6X7/zeeOo+
fq/Eq8ePx8vGf/X2xD+K3xU/Ha8YPxBPET8bvzd+yNdH/Fy8cvxwPHn8TLxS
/GA8WfxU/J74fp/f8UvxB+LHZvaJ2DWrP1aI74vf358vxnv08fhVb/M0nb8a
r9HTn+h8Uvxa/MH4S/G08evxh+In49X685F4957/1z3/VJ3f0Pt/c//9aOdT
xs93vorHxYt7O+PdevxbPWa6zt+I1+zpT3U+ffxmvFb8dDxz/PV43fj5eJb4
G/F68QvxrPE34/W9H/GG/fmteK9e/m96+ZvEX473jN+OZ+rxX4vX6enP9fgZ
46/Ga8fPxrPFN/b239JjX4rni3/S+dadv+nrIf5BvHn8ajx3/MN4i/i1eJ74
R/GW8evxvPGP463iN+I54u/Fm3q7fL3G3443il+O549/Gn8k/kq8YPzz+GPx
1+Il4j/4eo6/G3+iP38V79P799ve5kU6v6m3/9b++5udf9LjOt+789/1tMU6
/637mY9T5zPEX4k/HD8TLxy/5X4RfyNeKP5FvE389XjR+NfxdvH/xe+Of+d+
GH87XjL+o+tp/D1fb/GfXM/j78fLxX/z9x//OF46/rPrS/wDnx/x790v4u/E
C8Q/iz8afzVeJv6L61v8w3j5+O8+/+KfxCvE//D5HP80Pro/l+p6dHbv/597
//fve/Sb+/jc1n//rPMVe/z/evyBXSfv72zfHv92vG+P/0OPOaCn3dLj9+7p
P+/xB8a3xvvFv4j36s9/9fj9evzve/wHe3lT9/oOjR/tse+N/9v5/vED8aH9
/86e/6Ce79c9/8Hx7fEB8S/jVXv8hJ7/4B7/cGeH9P87Oj/Q33Pnq3c+VeeH
dP5IZwf1/9s637/ztzpfpfPJOj+w8wc7+2z/v6vzgzv/Tedrdj6p8892/lhn
R/X/Bzo/ovM/dr555/N3fnznz3V2eP+/p/NDO/9t50fE98afjX8Xr9fjZ+rx
R/T4L3W2TjxDfHj8RPzheLr4sPjx+LD+f3fPf4iPc89/ZHxffFj8+3iDHj9L
jz+yxz/Z2SbxHPFR8dN+Huxxy/TfR/f/P/bxfn/nk3d+UPxQ55vG88THxM/E
G8WzxZ+Ln/L8/f/+Xt/hvZw/9PqO8nkdf77zP/Xyftv1+tb+vubp6dd0vlnP
P1/Pf1znz/a8v+v8ts7n7fzazrfufOHOT+78pc4/Ei8SnxK/HH80XjQ+Nf5y
/LF4sfi0+JV423jx+Iz4tXireKH4pPjF+IRezwrxhfE/e/u26fzd8enxq50f
3/my8XnxPzr/fDxvfGz8l/gYH6/43Piv8bHx0vE58d/i4+Ll4vPjv8ef6OW/
q/8+uK+HN3r5H4+X6PzMnvZ6fGKPXz6+IP5Xjz8pXjG+KP637+ni1eKr4qm6
/2/Z8y8Ynxi/4PcFna8UXxz/r8efHq8cXxpP1uPPiN8ffzF+V3xavEp82YTR
O79IOSV+b3xJ/N+e/+T4PfEX4v/EZ8bviy+PJ+/xZ8WrxlfGU8TnxR+Mr40n
xufHa8TXxFPHW/T2LhCfED/f23tB52vG18fTdH5OvHp8dTxlfHb8gfiKeEJ8
Yfyh+Lp4UjxnL+/7vemb9fRX+nzZLl6n8wP6+L7Zy3/R13PfT+3d91Mf7Pup
T8frd35bz//1zj8TbxDfHn8j3iHeML7D74vineKN47v8fsPvh+KPxo/4+ST+
VLxefGv8tXiv+GPxo36eiT8ZrxvfEn813jneJL7bz+/x7vEW8f1+fowv9vnm
Wtb/p+/926PzrTt/yM+Dne8Sbxrf4+eN+BL3kb6+Hoxn6PE7dr5R53f6/U3n
u8Wbx/f5edvvp+Jt4sd8vxpf1vN/JH44nqnnP7Hz0+Pf+/zz+6n4E/GXfP8e
HxBvHz/l+1W/D4s/GT/t+w2/L4u3i5/0/bHrffzx+Ak/b8SX9vp2jF+IZ+z1
7dP5tvHjfn7p/OD40/Gzvl+KL+/xO8cvxTP3+C/GO8UvxrPEV8S7xl+OZ40P
db3qvw/p7/83ru/xZzp/zvdPrufxp+JnfH/q94nxZvG9fj/h91+9vF3il+PZ
enlXxbvHr8azx9fFe8dvxnPH18d7xW/E88Q3xPvGX43njW+M94m/Es8X3xzv
F38tXiC+Nt4jfi2eK74m3jN+PZ4zvineP/56PH98d/zZ+Lvx4vHt8UHx/8WL
xHfEh8bfiReN74wPib8dLxbfFR8Wfy9+d3xrfED8jXih+Jb4wPib8YLxPfER
8Q/iJeJ748Pj78dLxsf28Tsx/pXrXR+/I+Kj45+4X8dHxp+Pf+p+7/4QHxP/
zP0lPjo+Lv6F7x/iq3v5u8WvxHP08g/v/Kj4x76/cn+Lj4x/6Psx99f42Pjn
7i9+vxkfH7/l+hwfF58U/9r11/U8Pjn+jeu5e1Wv75t9/fwuXrrXd0Lnp3T+
tvtB58fEJ8S/dH13v48/F+/f59fb7q2u796W/r9Uz39S52d2/kfXa7/fjM+K
/+T66fM5fixeqOvRzF2PTo3Pif/iet35afG58V9djzs/PT4v/pvrd3xGfH78
d9fv+Kz4wvifrr/xKfHZ8Z9dv3t5j/T2XRFP3utbobfvzM4viP/h+t3jH+78
sslG7/wSfHnX786n6OzQ3r+JnT/Q+aWd/6+nLdP5g/EZ8R/iZeOH4svjyXr+
5Vy/e/6L4n+7fvf8Z8dfiP/l+h0/2uO/GL+rx7+nxz8WXxVPiFeMX4hvjqeP
14hfje+MZ43Xjr8UXx1PGa8cP+X7hHhi/L746fiGeFL8/vjJ+Lp46niV+Anf
d8RTxe+NH4+vjKeIV4qfia+Pp4k/ED8b3xRPF68avxjfFs/kfhK/FN8azxh/
KD639/fi+D/uz72/L3d+RzxL52t2/nx8SzxDvHr8XHxjPG28Wvzl+PZ45nit
+Lb44PhbvbyF41fiu+LZOv9w/A3X/3i1eJP4gl7/vfGc8TS9/gvj++O540nx
F+IH4nniaeOL4gfjeePp4kvih+P54xni13v5d8ezx+v28q/u/Jl4iXiOzi+O
H4rni6eP3/D9i2tLvJ7rdeePd75wPEvnV8RPxIvEs8ZXxl+KF41ni6+Kn4wX
i2ePL4sfjReMZ4ovjR+JF4hnjN/0c1Jfv4vH67t+dv5c50vFc3Z+e/xGvHK8
SHx+fF+8X5/fU8fXxy/Gy3Y+T3xj/HK8fDxffFP85XiFeP74hvileLl43vi6
+IV4mXju+Nr4+XjpeK745viV+D3xAvEt8avxivGC8R1+Hunj9dnenkXjr/i5
tPP3db5B789r8T3xHPE68VfjZ+Ml4w19fvT8r8fvjRfu+W+NX4tXiheKv+bn
2vgD8UY9fvvO145v6nV+pevD1/3cF7+/8407vyheK76h8+ni7/g5Nv5g51vG
3/XzbrxWvFX8PT9HxmvGW8c/8HNp/OH4o/Fbfm6KN40/FX/bz7Hxh+It4l/6
OS/eJP50/C3X43j1ePP4h34OjdeNPxb/1M+d8YbxJ+Kf+bk03iDeLv65nyPj
jePt4x/5uTdeJ94m/kX8s3ij+JPx9+Pvx2vHH4l/Ev8oXi/+ePwrPxfGm8ef
iR/283H8CdfLPr7vmqbPi76/PD4+zP3Vz++dbxG/u/N74t/GW8dLxPf6eT7+
SLxkfHf8drxVvHj8az+nxpvFO7i++vk9/rjra+d3xr+J9+3zZbH4/vgP8cc6
Xzp+JP5rvJ3rvett/Ld4e9fb+DE/z8efdL2NH4z/FG8bL+t6H/8x3iZeJr4v
/n380Xip+Me9fT+O14+37e37jZ+f+lz5VLyj62mP/1fnn3E97fFPxv+Ld3b9
jZ+a3i+T+x7L9Tp+2s/T8a6u1/Ezfj6Kd3P9jZ9zP4r3cH2MvxT/t5e3k+t/
/ET8n3hH1/P4Wd//9fjdXa/j3/f2TRsfEO/qet35xHgf12vX53jK3v7D/Lta
/NseP03n+3W+c4//XfzvXv4O8S7uTx7f+V7uTz3+eV+/8Z6u5/EfevykeP94
tx7/p3i6+MB4j/g/8Rzx5+KD4r/GM8efjfeO/xbPFB8a7xP/PZ41PjzeN/5n
PHt8ZLx//Lavz65/n453iv8Sz9D5wfFe8Z/jGeND/D45/kc8S3xYvF/8r3i2
+Ij4gPi/8dzx5+OD4//Fc8VHx4fEk/f5Pl98XHy4f3iP542PjQ+N/93j54yP
ig/0++l4+vigePd4sh4/T3xM/Nl4injB+MT4iHhCvEB8Qnykn+/iLeL747Pc
H/287+/Pv/f28Z6q84Xikzo/yv3R7wfiU9wfO3/V7wPi03z/4H7m9wHxGe5n
8ZQ9/8LxyfHnev7/63yF+MJ4s85f8/uA+HTX3/ib8fLxBfGm8VfjpeNzXI9d
b+Nl4nNdb+Ovx8vG57m+xt+Il4vPd792/4qXjM9y/3L/9PuA+Ez3z3hib997
+vz8Qny062PnK3V+setj5z+JPxhf63oVT9vj14lvjo9z/e58lfgy1+/Ovxe/
P/6i63X8/fgD8RWuf/F34/fFl7u+x9+OV44vdb2Op+7lf7vPt4viz7ved75q
51e63nf+w3i1+CrX6/in8Yfi61yv45/Fa8bXu16738VLxWe738U/j6fq/T3c
vwe73sRrdH6N6038o3j1+GrX83ia3p4PxzfGx/T2fLPPt6/39bqqv594Uufv
7fyS+Fh/v75f6HwNf7/xjJ1v0Pnt8UnxTPH68W3xyfHM8UbxnfEp8SzxhvEd
8anxbPHG8V3x6fEM8brxLfGJ8fzxx+JH4wviWeNN4rvj0+L54q3jh+Lz47ni
zeP74rPjueOt4gfjc+J54i3jB+Jz43njj8QPx+fFc8SbxvfEZ8azx5vF98Zn
xAvEH40fiS+MF4y3jR+PvxD/to/vjvELrn99fKfvfL341vgE908///t9in+f
7/wtP+/HT7q/x7/0+4D4affzeJGe/+PxE/ElPf/C8SfiL8UXxwvF28SPxRe5
3/r5PH7G/db90O8D4mfdD+PfxTvFL7oeu77HO8cvub7H0/Xy1o5vio/v5f2h
813il12PO3873iF+3vXSv6/5/UD8nPtX/Md41/jLrlfxvn7H0uf7R3t/l/Pv
a53v1vkrrud+/up8Pr87mtTfySxdvzsXcPqq63fnf4/3i7/m+h3/I94//rrr
b/yv+MD4m66/8eK9/XvHb8ZfdH/ofJ/4K+4PnS/R+efiH8VXdL5Y/J3evtfj
y1x/e/xBnf+f6+9Mo3fCSJ+Nv+v6HE8WHxZ/z/XX9y/xxN7+I/x7evyfnv/g
zr/l/hS/u5d/RPyD+HL3n84PiL/h/tP5/+JD4++4P8RL9vgj4x/GV/b4leOT
49/Et/p66PVN3es7std3QY9fpvNjOv9Z59d0vlx8XPyL+Lp4+fjY+Ofx9fGy
8efjn8bXxkvHR8U/jq+O3xufEr8d3xIvFR8d/yS+Kn5PfHz8VnxjvEp8Wvy7
+Lb4ffGp8W/j2+P3x2fEf4jviFeKT4x/Fd8crxifFP86vileIT4h/mV8g/tp
H59D4m+7n/b+fqDz0+Pfx3d2vmp8Vvyn+K74g/F58d/i+9xv+3hd4PsN+Yae
/0Odnxv/tfP73T87Pz/+u/un+1n8hfhf7mfxGj3+7PjP8b09fvX4nPgv8T3u
tz3+wvif7re+3uMr4smn6v1wfY0vjf/n+hpPii+Lhb6Odb+JL48ni4/z9Rd/
MX5XfLz7V3xx/B/3L/fr+KL43+7X8QzxlfEUPf7EeM3evpX87iB+wPWw89s6
nyk+u/OZ4+vjaeJT4lniG+JJ8anxrPGN8bTxafHs8c3x9PEZ8Wq9/DPjP/b6
7+7lrxV/t6+fqTp/0PW/x1/b+cT45B4/W3xTPF18ejxHfEs8Q3xmPHd8ezxz
fE48T3xHPEt8bvzhXv498RzxQ67Xnd8Zzxqf1/mc8a3xjPFZ8YzxVfGE+KR4
vviueLb4/HjtXt518dTxw728deL74rniR3z+9/ifxBvEt/T49Tp/IJ4nfqzz
9eP747njx+MN4ofi+eIn4g3jB+N54y/FG8cPx/PHT8XrxvfGc8aPxh+Jn42X
jF+ON4ofiReIn4y3jp+K3x2/FG8ePx4vHD8XbxE/GS8WPx9vGX8pXjR+Id4q
fjpePH4x3jR+NF4wfibeJH4sXih+Ov5o/Ey8RPzl+GPx8/HS8Svxon183ohX
ji/t47NU/I14tfiq+OM9/oV4mfh198vOX4n37Ovvws636/yleLnO3+z8E/HL
8fLxG/G28YvxsvFr8Tbxc/FS8avut728L8crxF/o5S0UvxqvGF8ULxa/Ga8S
X+b6G38lfl98ebxZL++JeJH42V7e4p1/NX5//EX32/j1+L3xJfHC8WvxSvHF
7h/x1+IPxFf4fi6+JP6v7+dcv+Ovx6t2fmW8f6/v3/EO8c9dfzv/TrxmfG3n
n+z8e339fCj+qut359/r/MPxdZ0vH38/Xju+Pn5P/MN43fjGeHvfn/X1/sH4
K66HnU8Tf66P912drxD/oMev0/kNrp/xW/Gm8Z3xyvFP4w3jW+NV4p/FG8W3
xe+Lfx5vHN8evz/+RbxJfEe8UvzjeP345njF+EfxevFN8ad6+34Vbx5/rbfv
064X8Vrx1+M947/G28U/jJfp+f8vXiO+puffsfPfxlvH/9f5zvHv44/G3453
iX8XfyT+TrxT/Ha8VfyteIf41/EW8Tfjz8S/ibeMvxHvGv8x3ib+brxb/If4
Y/H34r3iv8SfiH8U7x3/Pf5k/GP3z97eb8arx1f39u7T+d/i7eOfdL5H/Kd4
2/gH8e7xn+OPx9+P943/GX86/qmfP7vf7RW/0efTXr28/Tr/R/ypzn/W+em9
vrMm72XGk/X91CGd/6/zneNfd35o/K7Od4t/E6/W46eI9+jz4e5e3urx5PHu
nd8TrxtPFx/oehQfLCwe7xL/qudfr/Pp44Nc/zo/qPP/9Pp2jH/Z+RqdT+h8
z/jeztfy/Um8r/uB67fPx3g/12/X33hSvL/rb/zBeMp4r/i+eJ142vgA1+P4
s72+yeJd47d7fWv6fivex/2t8/XjGeKDXY/jLeN542Nd/+JPx2vHN/l8izeM
Z4kPc32ON4pni49wvY03jmePj3S9jg/v9X9fniD+Xa//sHhlv9+Pf+v62+Pn
6fHHuP72+A3iGeND3A/iTeM546Ncb+Ot4vni41yP463j+ePjXd/jj8QLxCe4
H8Sbx3PHn3e9d/2K54qPdv2KN4nniD/n+u37m3iqeO/4/vij8YLxia7n8cd8
/Hv7j+rz4ZX4qN6fRTo/pfM/9f4cHb87Pj3+c/z5eLH4tPgv8THxEvGZ8V/j
4+Kl4rPjv8efixeNT43/GB8ZzxofHv8hPjZePD4j/lt8WrxifNFUo3eC/SfF
y8Xnx//u/OR42fi8+D/xKfEK8YXxf+NT4+XjC+L/xSfEy8Tnxv+Mj4+XjM+K
/+Hrx+8D4i/4+pG19P1SfHE8efyJPj4fjK91P+rjc07n74+/GE8p2xm/L748
nkq2M141vjKeKNsZfyC+Ip5a9jVeOD45/n2v/2yfP/Gl8QTZz3iV+LJ4Ctnt
Xv/qvj77+3m1179tvFp8lfuh+2f8ofg690/X/3jN+HrX//gz8Trxza5v7i/x
WvEN7i/uz/Ea8TXuz/EZ7h/xJfG7ZKs7/3B8o+t15zvE68a3uH66Hsfrxbe6
HseHxIfE33b9iXeON4hvd32OL/D+9fl2RzxNL3+Xzjfu/C7X684v7PwHfX3d
GU+Sre58s87vdf3tfKd4/fg213P303ib+DH303jXeNP4Htdv18v4Y/Gjrpfx
XvFW8YOu3/He8dbxQ67frtfxR+KHXa/9vBp/NH7E9TjeI94ivt/1O9493jy+
z/U7PiDeNn48/kV8oOtX7+/R/f29FV/V+7dz5y91Pnvv3w3xnvHr8bzxxfH2
8VPx9LK28afiZ+IZZXfjT8ZPxzPJ3sbbxU/GM8QXxZvEd8fTyQb7/UD8pXha
Wd74M/Fz8cyyv/Gn42fjWWRp453iF+M5ZG3jXeMvx3PKxvf+bBk/4P7c+3Nt
57vEL8dzyf7GO8TPx7PJEsc7xi/Es8ryxrvHr8Zzy6LH/+r+8Rkfr74ero93
6/yVeJ7OD4z/2/lO8Vud3xLv2/lX4wVln+J94q/EC8k6xfvHX48Xlq2N94u/
Fi8SH9Tbf7D7YX8fv+ztv7nzveI3Ol9AVr3zI+Mfuj51fkfnB8bfjBf19dv5
EfEPfP12fmh8aPwd91f3J78fiL/r/hQf5vcD8ffcH9w/4sPj77t/uL/GB8X/
5/4a39nrOyD+RrwYN6Dzz8U/cv10fY6Pin/s+hyfFJ8a/9b1Mb6p5987fjOe
X7a+82Pin7k+d35sfHz8luttfHeP/2Ffb7+IF5d1dj2TNYnfLcvf4z/f43/q
et/jj46Pjn/ifhAfF58Y/8r1Pj4+Pin+tetrfHJ8Wvw71+v4lPj0+Peu1/GN
vb494tfi+WT1Oz8j/oPrd+cnxqfEb8f/ik+IT45/43oenxafGf/R/ULe0/2j
t/+1vl+6tM+XMzo/u/M/u545n7HrTe/v5pP6OM3S122Pv6Dzf3S+lOx0fH78
93jp+IH4C/G/4mVkr+OL4//Ey8VPxVfGU/DfZMH9viL+ZedLxk/H18RT8b1k
r/0+Iv5b50vED8cXxf+Ol5cdjy+LR3w3WfH4inhyPptsdvzF+F3xyvEj8aXx
/3r+FeIn46viCZ2vEj8YXxj/s/NlZcHjy+PJeBbxM/HV8ZR8N/cvP2/Hs8gr
9PF6yPd7fTyPiRfkb/T4GzqfxC/r8S/GN8XT8dPil+Ib42n5afEL8fXxNPEa
8XPxtfFEPpr7p5/345njqXr5z3Z+XTx1vGrnZ/t9RbxrPKHz8/28H8/q35vj
C/w8H88WTxNfGN8dzx5Pis/x+4B4xnjK+Mu9/Jvj6f17Ry//5fiWeAb/XiVL
H18S/7eP13tcP3v+e+I5Op+2578ovjeeM54uvix+MJ43nim+PH4oni+eOX7F
9wuyRvwu19vOH/P57ueAzl/tzx/3+bgAj8v1vvMHOp8nnrHzS+L747njGeIr
4sfjBeNZ4hvi5+LF4jnia+Kn4kXi2eJr46ddD/xcFV8XPxMv2vns8fXxs66f
fk6Jr4q/FC/c+azxlfET7k9+TolvjJ93/fVzT3xz/KLrq59L4nvjr8Tfct2O
b4u/HC/Ry5s7vj1+xfXNdT++I341XrLzeeK74tfjpeJ544vj++K54unjW+OX
Xd/9nBTfEr8UL975XPGd8Wuu137Oju+O33B99XNKfF/81XiZHj9/fH/8Nd+v
+Lkp/k5/fiNevvN1fP37fkc2J16g83viNztfOp4vvil+IX53PGf8oO/3e/xL
k0bviJYPx99y/fdzS/zd/vxJf98L9fh1e/k/8fNOPE2PX7rzR+PvuL/0uMnj
x+Lvuh/FU8SPx99zP4gnxE/E33c/iKeMn4x/6HodT4wfib/tfuPnwPjX/fnT
Xt8Kvf71XU86/4HreU+fqvMX4rdcX+MZ4mfjn7pfxNPGz8U/c32Lp4ufj2fq
/X25t3/6+Fc9/eedv6eXv57rX+c/jn/e06fp/Kn4R+5H8dTxi/EvXd/jGeOX
4l+5n8UzxV+LZ+7lf7mXP2/8f/E/fX12vmD8Svy2+4WfK+LX4t/Ff4pnj1+P
f+/6H88Rvxr/1v0ini3+cvwb96N4lvjl+NfuV/HM8RvxH+K/xHPGb8Z/jP8a
zxX/oz//Eq/U+7tB7+/XO/+b+0VPn6/zZ+KfxL+IJ8X/7M+f9fFfscdv2OO/
2vmf3W96+jydfyX+k/tDPHf8jfjv7g/x/PHV8ZO+X/F6+3z7ZvwP96N4AW9P
PJ/Prz5ea/l8i//rfhEvGn8v/p/7Cbci/n5MHJ8ifnf8g3iyeEK8ePyjeHK/
z42XjL8T/8f9g7sRvxVP6nyGeIX4h/G74injJeJfxNPE0/PR46n78+fxe3v/
N+79/2nnU8WTevoynf8snhhPGy8b/zyeOp4uXi6e2J9TxCv3/Bv1/D/ufJY+
P17p6Ut1/kvfb3c+Y/wen4/xdPFM8Yrxn+I54nni1eJvx/92v40Xjt/29dv5
rPHK8e98/sWzx++Lfx/P2ut7VZY//q3P/85ni1eJfxPPEM8Sv9fXm/tnPHO8
UjxHf84Sv6+3f5Pe/j90Pls8V0//QOd/jueM541Xj/8SzxXPx1ePvxX/y/2+
v++F4r/Gc3c+P5cj/mM8ezx3vGo8Z3/+Il6l17dpr+9vnc/jftPTP9T5WT4+
vT+f73wK/lg8b+cLdr5m52fG5/j89/Mwf83b6/urztfr/N0+bj3+Az3/Zr38
/3W+aLxET1+faN73W4vFS8Yb+PuPl/P5H28Z/6fHLxQvFq8bT9P58vFK8Vbx
vztfMF40XieerPN3x0vFG8YT4qXi5eJN4ynjpePl483iqeJlXO/izeN3xYvH
S8cb+XyKl43fE28RL96fb8Xv7/3ZvPdnis6XjJflZnU+KV7B52+8dTxbvJrf
18afjHfqz9/Ea/b82/T803W+kr/vnv7Rzqfn2Hj58cfiGeKVffy4EvEq/fnL
eNWef8uef2Wfx/Fq8RbxrD1+1fiDPX37Hj9tPHt/H6/HH4lnit/n8fzyePZ4
dW9P/Cmff/Ea8Vrxp31+xB+MPxx/Jp4l/kC8RrxdPHP8/nh1rkU8Y7yKty/e
Np48XiJeJt44niv+ULx2vEM8dzxHb98b8Y7xvPHa+iPineP5ODjxBvEu8fzx
uvGG8a7xAvF68UbxbvFC8QbxJvEe8br9+StvXx+frfv4zMPhidfr6Tt1vmC8
frxxvHu8tc8Df189/iM9fjHOTrxFT9/H5zMnJ94y3tfnQ7xZvFW8X7xEPGfv
z5vcrHgRzk7nm8V7xQvHG8abxnvGS8Zb+vdubla8FGcm/lh8YPzeePv4M/Hn
4mU5OPHH40Pi5Tg48SfiQ+Pl423i7eLPxu/hvMSfjA+P1/F16++v92+r3r9l
OD7xtj394M6XjreOt4kPilfg9MTbx4fFK8afiD8VHxGvzLmId4iP8vkZzyXr
GB8dv5/j0fku3J14R59nPr96/R/r9a/U+XbyVD39yM4/0p+/9vnb+Uc7fx9n
JN6ZC9T5B+Id4125P/GqnJF4N+5PfKmv917/efEt8eocjs73iE+I1+AgxHvG
J8Yf5GzEe3F/4g9xROK9uTjxWhyUeN/41Hg1Tkm8e3x8vAEng08WnxOvGe8R
7xOfEq/P4eCHxWfHB/g88vnf+7dt79+6nI/4IK5P5wf259u+3jr/eOfrcTzi
g3v6WZ2vzSmJ949Pjz/MgYn3i0+LN+Rc+P1zfG68EccjPiw+Lz62P38br9PL
366X//HOT4hP6elXd76pzH18ZHxhvHl8eHxUfFG8BecgPjq+ON6MIxB/Lv5C
vEl8aHxEfEG8MSckPjw+P96SoxB/Pr4k3iqeh8sTX+rvn1PQ+fHx5fFHOQHx
CfEXff7Gc3N74jPij8XHdn5ifIWvX45DfFx8WXyMr5t43d7fT/h9KUchPqmn
X9n5P7t/zB8vHH843pazEJ8cXxX/q/MF4kXiteNPdn5KfEZ8ffyp+NT4zPiG
+NOcgvis+Mb4M/G83Kf4pviM+MzOz41vjrfnLMSnx9fFF7l/9fgL49vjs/09
ux7KZ/X279z52a5X8svdb3d0/+nxG8QL+3nQ9TY+v+e71f0mPsv1sfNF/Lzk
/tb5BZ3f1vk5/fk710P5ol7+Dp3/3tdrvFCP3yU+x/VU/jX+gvu1fFzPd0fP
v1f8Bde/zpfmg8Unxad1fm3nu8Xnuf51vnjnu8fnx5vHS/h5PV64l3dJj7+7
x18QLxJfHN8VXxgvGl8U3xnvGp/r+tnzv7vn3yO+wPU5XjI+L16ox1/a4+/x
/sULxJfH98V7xxf1+K17/DJ84/jE+NTOr/Hxjufv8V+M74/PjReML4vvjfeM
L3T97/mX6vn3iS+OPxIvG5/Y911L9/3QOX4fNW2fkz6vXc87/9R0w8/7fp+w
/ph3me6dX+W807ekn2j36d75VvOdviJ9SHtN947i/k4/kj6eA9zjR0M/kv6j
q3vm94yGPgx9QDt2/uYUQ7+S/qY7vV2joV9If805E4ceKP1B+pkO7vFzjIY+
Jf1Nx8SLjIa+Iv1Fx8fvHg19RvqHToqXHA19RPqEPhvPPRr6n/QnXeHjyu+e
MPQZ7TvdO1rNO31C+pyOihccDf1H+pDu8XuP0dBPo89jTv7HuM9AP4P+oqVH
g6/J33zT9zmjod9G/8uP4x1GQx+M/pKfxYeMhn4O/SZfi3ceDX0n+l2e8X3A
aOh70YczW6/vgtHQz6Ff4km/lxoNfT/6c/4anzQa+jT0fbybrzLuo+D7Lxk/
PO4L0L/wvviBcR+A/oGp4ovGfRP6OKaIjx8N/RX6QP7Uyz9wNPSv6LM4ovd3
vtHQR6UfatUe//LY99dHsEH8wrjfQB/AnvLrY1+er/2ePln+Pfaz+d/7dP6f
+IAJg/+9kk+myQafmr/9PnnvyQY/m2+8fY//zdgX59d/XH5z3D/Ax19ZXnyy
wU/mY68fzzrZ4CPzmz8UTzvZ4EfzsdeKp59s8Kf50mvHM042+NV86nXjmScb
/Gi+9Wry4pMNvjkf/APy35MNfjh/fMN49skGf5r/fGRv3z/Hvjp/Wp+XPjK+
Mj9Zn9mUo8Gf5jvrA+tL8B3/mQ+uf6z/veOH82P1j/mxhN/LV96YbzHuG9C3
oN/Mr5L5yPxqfWbUsW0nDn62/qz+eMe35QfrK9Nnxn/mU+v/0jfGn+ZL6wdb
eDT40/xnfWDLxWdNGPx+fWKLjQY/mk+tb03/GT+bj71xH485+3gcO3HwyfWF
LTEa/Gt+s76wFUeDH82f1me1/GjoD+BP87v53nxT/qj+qDVHg1/Nn9YfpR+J
H83H1r+05Wjwq/nb+pN2GQ2+Mn9av5B+HD40f1lfz9qjwefmZ+vn0JfBX+Yb
6x/acTT44HxrfSb6N/jW/GN9Nvpa+M98an0w+nT403xqfS43jwZfmR+tj+OG
0eBb86P19Zw8Gnxsfrb+mINGg9/Nt9b38eXR4Evzu/VtvDgafGg+tX4C/Qf8
ZL4yn59/z+/lr+qj0K/A3+FH61/Qj8D34UPrX/hvF9ybJwx+j36FX40G/1qf
jL4L/R78bT62fg/9Fnxr/ra+Bf0HfGb+kD4E/QD8Z36zfgb9B/xj/rQ+BP0E
/Gk+sv6hE0aDX84311+gz4APza/Wz6B/gY/Nz9Y/oK+Br82v1n+gD4H/zJ9e
I55msqFvQR+EvgT9BnxefjSfnJ/OZ+XP6S+Ym08zcfCp9RPw+fnP/Gl9BPoN
+Nb8bn0N+gn43nxuvj1/nT/NV9aXoJ9CHw9fm9/P5+cb84/57voe+OB8a76/
PgJ+Mx9Zf4E+A740n1p/gT4DfjWfWh+BPgN+NV9Zn4F+Av4yP1o/gj4DfjU/
W7+BPgA+Nd9aP8eS8fMTBt9af4F+Av4035v/z/fnM/OV9UHMFR83cfDR9Rfo
N+Bf86v1Jegz4FvzofUV6AfgL/N19SXoL+Dv8qf1IehP4FPztfUl6Avhf/O5
9RvoX+BX8531Degv4FPzofUX6BvgS/On9RfoK+BX86H1T+iv4M/z2/UT6Avg
M/Or9SHoP+Bf87P1G+hT4Ffzt/UX6EPgV/Odbxv7c/wefQH6B/Qt8Kv50fw6
/h7fh/9z4diX40PzsfUz6TPgV/Oltxv7dnxlvjD/Th8An5m/zOfnn/OT+dP6
EPQn8Lf52fx0/j5fmb+sT0H/Af+bz61fQP8A35ofrb+A/8+n5kPrA9BfwIfm
V+sz0D/AZ+ZH6y/Qh8DP5mvrJ9AvwOfmO/MB/9P14kcTBt9bX4J+BL41f1u/
gP4CvjSfWj8A/5+fzC/mY/On+c78TX0GW/HnJg79AvoU9BvoG+BL60/Qr8Cf
5kvrN9BPwDfmZ+tH0H/FR+db6xvQT8CP5kPrU9gyPn7i4G/rF9B3wIfmV+sr
0F/Af+ZL6wPQX8Cf5ifrH9APwFfmL+s/0F/Ax+Zf6zPQV8DX9o2kPgV9D/xu
vrV+CX0S/Ha+u/4BfQZ8aD6wfgJ9BPxgfrU+A30DfGj+tT4DfQd8ar62PgI+
PD+ZL62PQN8Bn5svrS9APwF/ms+sL0G/Al+bj63fQV+Cbzr42vx6fQP8ab4z
31+/AL+Zj6y/QL8BX5o/rb9AXwE/mQ+tj0C/Ab+aD63PQH8AX5u/rB9BfwG/
mm+t30A/Aj+br61vQF8BX5rfrb9APwHfmT+tP0BfAB+Zn6yvQJ8Bf5rvrP9A
/wAfmQ+un0CfAR+aH6uf4N99vs415eAr65vYofP/Thj8dX0I+hP45PxqfQn8
aj43P5vfr1+AP80P1jegf4A/zafWZ6C/gO/Ml9ZnoH+AL81/1hegD4HvzO/X
T6DfgK/Mp9ZnoB+Bf83H5nfrW+CD88n1Iegv4Dvzm/Ur6C/gS/On9RnoL+BL
86f53Xxufil/VH/BqfEJEwd/Wj+B/gb+MB9bv8dp8XYTB39b/wGfn0/Mn9ZX
oL+AP81f1pegD4GPzc/m9/P5+cV8Y30H+kL44Hxrvr8+An4z/1h/gT4DvjSf
Wn+BPgN+NZ9aH4E+A341P1qfgX4CvjQ/Wj+CPgN+NT9bv4E+BX4135pvr2+A
/8zv1l/Av+d786n5/3x/vjFfmX/P5+cT81f1F+g34Fvzo/Ul6DPgS/Pp9RXo
B+Aj88n0Jegv4JfxpfUh6E/gT/Ox9SVcEq8y5eBv6zfQv8DP55vpG9BfwKfm
N+sv0DfAl+ZP6y/QV8Cv5iPrg9APwU/nm+sn0BfAZ+ZX60PQf8C/5mfrN9Cn
wG/jV+sv0IfAb+ZP6w/Sx6MPRF+I/gF9C3xnfrT+Hv07+gb0h+gv0HfAt+ZT
6yfQx8DX5k/rI9BvwLfmd+tr0BfAX+Zz8+31EfCh+cr6EvQb8K/52vx+fRj8
Zv4x312/AV+cb8335//zk/nI+gv0FfCn+dT6C/QP8JP51PoI9BfwofnK+gz0
BfCZ+dH6EfQh8K352foN/uX3J1MOvrV+Dn0F/G6+tf4CfQV8ar43/19fAH+Z
r6wPQp8DH5qPrr/gqfjEiYNfrS/h6Xj7iYMPra+Av88n5uvqS+D388v50/oQ
9B/ws/na+hL0I/C3+dz6DfQv8Kv5zvoG9B3wn/nQ+gv0E/Cp+dP6C/QZ8Kn5
0Po19FXw5fnt+gn0G/Cl+dX6EPQZ8LX52foN9Bnwrfnb+gv0GfCx+c76b/Tb
6MvQv6FvQR+BviV+NV/pb/69aqrBl9BfoG+AH82n1k+g74Bvzc/++tjf5Evz
p/Vb6C/gb/OH+Zv6LvjEfGZ9CW/G+045+Np8f/4+X5lfzQfVJ8CH5l/rE+D7
86f5yfoM9BHwr/nV+gz0F/Ch+dH6AfQd8K/51voN9Anwt/nS+gz4pPxq/rb+
An0J/G3+tf4E/Qh8az43f16fAT+aX83/1w/AL+Yn6zPQT8Cv5kfz8/n/fGJ+
sX4D/Qd8a30D+hX0Hegf4E/rU9AfwIfmT+tL4OvzufnZ+g30JfCv+dz6DfQz
8K/5z/oH/un3j1MOPrX+An0FfGn+s/4CfQD8ZP60fgD9A/xlvrI+Av0BfF4+
sz4E/Qb8az62/gL9CPxs/ra+Af0D/Gn+r74D/Qp8af40n5zvzl/lf+sz0F/A
z+Zf6zP4h/d34uBr6yPQ18Dn5kvrI/inr6eJgy+tL0A/AX+az6wvQT8Cn5uP
ze/n8/ON+dT8ev4/f5jvzPfXR8A/5iPrL9BnwKfmT+sv0GfAp+ZD6yPQZ8CP
5kPrM9BPwI/mL+tH0GfAz+Zb6zfQZ8C35mvrL9M3wO/mT+sv0GfGp+ZP6wvg
8/OP+cj6KfQ/8Mv55voL9BHwYfnP+gn0EfCT+bH8fP0IfHF+r74E/Qd8av64
PoSp4xumHPxqfQn6E/jb/Gz9BvoG+NJ8Z30DfH++MJ9af4F+A/4031n/gL4B
fjJfWh+H/g++vz4B/Qb6DvjRfGX9CPoL+Nn8a/0G+hH41/xs/QX6FPjSfGe/
I/e7db9j97tzfQv6C/jSfGp9BvoH+Nb8ab9803fAr+ZP6yfQb8CP5mPr99Bv
wK/mb+s/0E/AV+ZP6y/Q/8Hv5k/rL9BHwHfmM+sX0G/Ar+Y76y/QT8CX5k/r
L/hHX29PTTn40foL9BXwp/nU+gv0D/Ch+dT6CPQX8KH50foM9AXwl/nR+gP0
CfCb+cz6Bfj1fG6+M99eXwF/mt+tv0BfAX+aT62/QF8BX5pPra9A3wHfmQ+t
b4CPz2fl++pD0Jegr5gPra9AnwK/W55VX8GK/J+Jgw+kD0H/Ab+aj61PgJ/P
d+Yv6xtYaewP8Z31F+gf4D/zqfUX6CfgU/On9RfoM+BT85H1BegH4C/zbfUT
6DfgK/Or9QfoJ+BH85v1HehH4Gvzs/UX6DPgY/On9ZXoL9GHoC9Bn4G+Bb4z
n5rfz7/nB/N39RfoN+BX86n1E6wVf3/KwZ/WR8BP50fzu/U16C/gV/O5+ev6
A/jM/Gn+vT4Hvjd/Wb+AfgL+M99ZfwE/n9/Mn9ZfoJ+AL82P1l+g34BfzafW
X6CvgP/Mp9ZHoN+Ab81X1megP4DfzI/WH6CvgM/Mb9YvoJ+Az81/1s+hX4D/
zLfWX6CfgD/N99ZfoL+Dj82v1legz4BvzafWB6Efgp/OR9eHoJ+An8uP1leg
H4C/zNfVV6BPgS/NX9aHoD+BT83X1iegb4AfzXfWN6DfgO/Mp9ZfoK+AL82n
1l+gr4D/zJ/WX6B/gD/Nh9aHos9E/4j+Bf0E+gj4y/xq/QH6BPiT/GZ9B3/v
6/kfUw5+tv4C/QL8Z76zvid9VPpn9M3oI9C3wK/mX+o30GfAp+ZX6xvQB84H
5kfrB98jPmXi4AfLj+tT4IvzpfUB6A/gB/OZ+ed8fv40P1m/gf4CvjW/m7/P
T+cv85X1Jeg/4H/zt/UP8Pn40Hxr/r/+Aj40n1p/gT4AfjUfWv+APgN+NJ9Z
H4L+Ar42P1u/gH4CvjOfmy+4J39w4uBb60fQl8Df5lvrL9AvwKfmS+sD4O/z
f/nI/Gk+Nn+T76yv4PB49qkG31pfgv4C/jU/Wj+BvgD+M39Z34K+Aj4zn1of
gn4EvrV+An0E+gn40Xxm/Qn6FPjbfGz9A/oI+NJ8av6//gL+Mx9Z34C+AL4z
X1lfgH4AvjJ/V5+BfgN+Nd9aH4K+Ar42H1t/gb4Hfjd/W5+Efgm+O79dH4F+
Bb40n1r/gT4CfjCfWn+BfgP+ND9b/wD/nY/Mj9Y/oN+Av82P5sfrC+A/85X1
B+gb4DvzofUj6C/gV/O59SfoW+Bv87P1C+gz4Fvzn/n//GI+M99aX4G+Ab4z
/1n/gL4CfjL/WX+BfgD+Ml9ZX4D+AL42n1kfgr4D/jQfW1+CPgO+Nf+az6yv
gC/Nn9ZXoJ+A78yP1hegP4CfzEfWd6B/gP/K/9ZHwL/n7/Jh+fhXx6dOHHxe
/QDXxJ+ZOPjP+i30RfDb+er6D/Qn8Mn50/oR9CHwqfnW+g30O/DF+c76B/j8
fGL+tP4CfQZ8ab6z/gF9BvxnvrQ+BH0B/H6+s34D/QR8ar6yfgT9Bfxs/rX+
Bn0N/HD+uP4CfQj8Zr6z/gL9CvxpvrT+An0G/Gm+NJ+b78035ZfqI9BfwJ/m
X+vz0E/Ax+Zr6zu4O95sqsGX1legL4C/zJfWH6B/gN/MZ9aHoC+Bn83H5rfz
+fnFfGr9BvoT+Nd8Z/6//gA+Mx9ZX4F+Ar4zf1r/gD4DfjUfWn+BvgD+Mh9a
X4B+Ar40f1kfgr4D/jXfWl+CPgV+NV9bX4E+Aj40f1pfAf+e782f1g/A5+cj
85P1C/D3+cP8Xv0H+gj4Yvxn/QT6APjH/DH9BPoT+PV8MX0K+g741Hx7/Qf6
Efja/Gr9CPoU+NT8bP0C+gr403xm/QP6Dvhn/Gd9BX+VN5tq8I/1D+gb4Dvz
p/U/6Ifgp/PR9RHoC+Az86H1G+gz4FPzsfUj6D/gM/O19QvoG+Dr8p/1B+nn
8Y/S+kL0Eehb4DvzefX16OPRD6IvRB+BvgH+Nl9a/4A+Br42n1s/Az+dH83f
5qvz6/nJfGn9AfoX+OJ8Zn0I+g341/xsfRj8fv4xv5mf/634tImD38z/5/vz
kfnJ+gr0F/Cp+dP6B/QX8Kn5yfoL9BHwlfnQ+gL0GfCj+cz6EPQD8IX51voS
vu3vd+Lga+sr0M/Bt+Z36yvQX8D35lPrB9AXwF/mJ+t/0O/AN+ef6z/QX8Cv
5kPrJ/hlfNJUg5+rn0BfAB+ar6xPQV8Cf5ovrf9AHwJfm5+tH0FfAp+bv61f
QN8B35f/rH9AHwF/ml+tr0C/AB+Z/6x/QJ8Bn5o/rb9CXwVfnj+vj0B/gPwR
f1m/gb4D/jQfWz+CPgO+NV9bv4A+Az42//nT070TDxltM3HYZ9NHoM+ATy3P
pN9AXwF/ml+tb4CfyYfmR+uv0E/Az37X2N/k//OX+dL6APQP8KH5zPxzfj4f
mZ+s30BfAl9bMIO/rx+Aj8xX1peg34CPzd/WP8D/5EPzrfn/f+nr7+qpBp9a
f4G+Af4yH1r/gP4AvjafWR+CvgD+NT9bvwAfni/N5+aX6uPgO/Ot9SPoQ+BX
8631F+gr4D/zpfUB6AfgF/OR+dP8cP4n31lfgf4EfjTfWl+CPgK+Mj9aP4E+
AD40f1nfgj4F/jSfWh+CvgO+tn4CfQT6CfjRfGb9CfoS9BfwsfUP6Hfgm/Op
+f/6CvjSfGR9A/oA+Ml8ZX0B+gf4y/xdfQZ8fL4w31ofwszxjhMHH1t/wUzx
6RMHf1ufhD4I/ju/XR+B/gE+MJ9a/4F+An41n1p/gT4D/jU/W/+APgO+Nj9a
/4A+Ar40P5ofv1D8xFSDr6w/gC/PX+ZD60fQl8DH5nPrT9DvwNfmZ+sX0F/A
h+Y/8//1EfCP+db6CvQZ8Kn5z/oH9AHwlfnP+gv0GfCj+cr6AuT9+NB8Zn0I
+gz42XxsfQn6EPjY/Gv5QP0EfGj+tL4CfQR8Zn60vgB9APxePrK+A/0FfGj+
tz4C/QN8ZD4sH18fAj+cz6sfgJ/P7+U/67fQN8Ff56vrP9BnwKflT+tH0J/A
3+Zb6zfQN8CX5jvrH9BfwI/mT+sv0G/An+Y76x/QN8BP5kvrQ9A3wG/mO+s3
+HNfj9+aavCV9SPoL+Bn86/1N+hf4Lvzx/UX6BvQD8B31l+gr4AfzZfWX6Cf
gB/Nl+Zz8735pvxSfQT6O/jZ/Gt9HvoN+NF8bX0H+gn40XxpfQX6CfjKfGn9
AfoI+NB8Zn0I+g343Hxsfju/n2/Mp9ZvoG+A/8x35v/z/fnHfGR9BXx7vi9/
Wv+APgN+NR9af4E+An40H1pfgD4DfjR/WR+Cvgh+Od9aX8KG8RkTB19bXwHf
nt/Nn9ZXoL+AT82f1g+gL4C/zE/WL8C35wPze/Uf6C/gR+uH0U+gL4EPzefR
T7Dt2O/h/+hT0JegT4Yvrf9AHwIfm1+tH0FfAn+bn61f4ON8uKkGn1n/gD4C
/jT/WV+BfgF+M/9Y/4A+Az41f1r/w0bxThMHH10fgf4A/i0fWr+BvgP+Mh9b
P4I+A/40X1u/gD4DPjb/WT+JPhF9BvoR9BHoMxDC5fPy5fnki419TX0E+g34
1Xxp/QN8dD40n1s/g74CPjV/m6+uL4C/zJfWH6B/gN/MZ9aHoL+AD87P1oeh
H4BPzW/m5+t74IPzm/n/+jL4z/xkfQX8f34yf1r/gD4DfjU/WX+BvgA+Mx9a
X8Cf+vqbaeLgM+tD0HfAv+Zb60vQB8Cn5mvrK9BPwJ/md+sr0E/An+ZT6wc4
Lt554uAX63/QV8EX55/rP9CPwH/mQ+sn0Ecw99jP1U+gH4C/zFfWp6C/gL/L
l9Z/oD+BT83P1o+gD4Gvzd/WL6BvgE/Nf9Y/oL+AT82v1lfAr+fP8qX1D+gz
4EPzlfVX6KPgx/Pn9RHoJ+Az86H1G+hz4HvzsfUjHBufOXHwtfUL6C/gT/Oj
9Tvpo9I/o19GH4H+Af4039o+oz1G+4P29fQx6SPgL/OD9Q/oZ+IL8435dPoI
+Mfv+MR+HxAvN3Hwjfnn/H/+GV9Pv4E+BH40H5q/z/fnD/Lt9CXoU+BX86f1
D+gv4Pfyi/n/+gX4lnxT/QX6DPiq/En9A3x3fiAfUx+CfgL+M39Xv4C+A74l
X5EvyAfkQ+sD0I+gP4Hvy3/VX6CfgL/Gn9MHwLfnH/BR7PPa+7X3au9UX4F+
A34bX0lfgv4C/hI/Sz+BvgA+HV9I34K+Av4Q30sfgv4F/hdfTh+BfgL+DR9E
f4K+A34if07/gD4C/g0/j/+vv4A/wr/QN6AvgG+x0Lgv4I98tImDP6HPQL8B
v4a/ow9BXwHfie+jv0DfA7+M/6RPQv8C35dvrY9A3wFfg8+h/0DfAt9jkXF/
gb4B/gSfQv+AvgH+wxLj/gE+PD9hybEfrx+An8FX0B+gj4CvsMy4H0EfAj/j
3eP+BH0J/IrFxv0C+gb4EvyOU/qZ4PUphr1l+8/7zfjOP8e9sx9tT5pTYPv5
q1MMrsFpnX9limE/2r70qfEbUwz70e8Z9yE83Ms/a+LQ96ovQT+C/lc+xck9
/rUphr1m+84nxq9MMew724PmPHAZOA1ciOM6f2mKYZ/ZfvKx8YtTDPvM9pqP
iV+YYtg7ttd8dPxc/MikYQ9Zv4X+CL4Lv+b4zl+eYthjtl99QvzlKYY9a/vS
n4+fn2LYU7afzHngWnAuuBD2taceDXvM9pntaftnMHvK9pntW9urtnds39i+
9gyjYV/Z3rK9brcn+872qE/q9b06xbCHbb/a/vXMo2Ef2B6z/Wt72/aY7Sfb
37YnbY/ZPrM9a/u+9mnt1dqzXnQ07DHbZ7Znvfho2Fe2z2wfeqnRsM9sb9l+
9LO9/ocnDXvN9rJXGA17y/aS7VcvNBr2nu0/24e2B22f2D4yB4VbwbHgpth7
th9tP9l+sL1p+9L2mO0z25u2f2zf2T6zPWR70PaX7T3bh7YXbX/YHrM97JVG
w96z/WdOCTfmPaPBNbFPbY/afrK9ZPvU9qjtM9tTtie9wWjYL7Z3bL95s9Gw
R2w/2F71M73/D00a9prtRa81GvaQ7TVzSrgsHx4NrgmHhKvCWeGW2K+2d23v
2f6zPWx71vag7UPbr15nNOxH21e2X73uaNhrtidtf3rD0bBHbl/Z/vJGo2Gv
2T65/W973fat7V3bp954NOwv23O2d73+aNhztvdsD3u90bD/bA/anvQmo2Gf
2V6zfh79Qfor9GfYn950NOwp22/W16O/R7+G/g771VuNhv1le8ycG64N54aL
Yz/aPrb9Y/vM9rLtUdtHtodsj9retL1le8EcH27PDqPB/bEH/VQf/wcmDfvE
9qztV9sXtq9sP/ozo2G/2H6yPWv70/ac7THbo7Y/bf/ZvrM9avvQ9pftQduL
tj9tf9kesz1r++/2ne0928O2b23/2R4054i7w+HhItmj3mk07C/bY7Y3vd9o
2C+2d2zv++ne/gcnDXvW9qB3Gw37yvaZ7SXvMRr2j+0r25/eczTsI9tDtie9
+2jYX7bHbO9619Gw72zvmfPEdeI8caHsVe81Gvaj7Svbq957NOw125O2P73/
aNhPtq9sf/qA0bAvbU/ZXvnmo2F/2x63fegne/vvnzTsT9vL3nc07Dnbe7Z/
vc9o2H+2B81p4jodPxpcJ/2d+iz17enr41RxtThbXCsZWFlXmVfZWHvQ9qHt
L9tTthdtD9vesT1m+9j2p+0h2z+2P21f2kXXnri951NHwx6x/WH71fal7TPb
d7b/fNpo2Du2V2zv2r61/Wd70PaqjxkN+8z2mjlbXDHOGJfLfvKJo2Ff2f4z
x4srdtJocL/sVx87Gvac7Tvboz5lNOwh22O2n20v2/65PWf73l/q43vfpGHv
2R716aNhX9keMyeOS8Yp48rZx316NOy92ju1B33WaNhXts9sX/2c0bB/bF/Z
/vS5o2Ef2R6yPemzR8P+sj1me9dnjoZ9Z3vP9q3tR9tDtq9s3/qM0bAHbe/Z
XvX5o2Gv2Z60vWl7z/a37Sfbf7YHbX/SHrd9aPvS9ibtUXLuuHTXjwYXz971
E73/904a9p/tY583Gvaq7Tnb+z5uNOxh28e2V21/2j6y/Up71Paq7SnbS7Yv
ffVo2DO2x2wP+prRsMds39he9LWjYU/ZPrN97OtGwz6yfWWOH5eP08f9s199
1WjYd7b3bA/bnrX9Z3vQ9qsf7+2/Z9Kwr2zf+c7RsE9sL9k++a2jYW/ZHrN9
zttGwx60/WV7nLePhv1n+9D2n+8YDXvL9qA5htzIm0aDe2j/+sbRsPdsn9k+
9V2jYS/ZHrI96ntGw56y/WV7z/an7R/bQ7YnbQ/anrH9ZfvQj/X23z1p2Dfm
MHINXxgNbiMHkevIeeQm2ge3B24P2361vWv71Pac7Tvbk753NOw923O2J22f
2n6zPWV71fap7Ufbc7aPbf/aHrN9ZnvY9qbtKdtntif9zGjYO7ZvbI/6ydGw
r2xv2d61PWt7z/ao7XPfPRr2p+1Hk2mfGg37wPaY7U0/Oxr2mO0n26d+bjTs
Mdtntmdt39eeq31Y+8+P9vG5a9Kwz8zB5EZyJLmZ9qJfGg37x/aWOYPczZdH
g0toL/vV0bCfaS/Z/vXzo2Hv2f6zfWh70PaJ7SPbu35lNOwr21O292w/2n6y
/WB702+Ohj1m+8z2pr8yGvad7TPbQ/7qaNhftvdsH9petP1he8z2sF8fDXvP
9p/tZb82Gvag7Xvap7ZHbT/ZXrJ96kd6/++cNOwp25P+6WjYL7Z3zEHlYnIy
uakcUu4kh5Jbai/afqh9ZXvN9kTtT9tHtrdsP9qetD1ne8z2q+1J22e2/8xB
5br+cjS4qfarfzga9qPtK9uv/tFo2Gu2J21/+mejYY/cvrL95Z+Phr1m++T2
v98YDfvW9q7tU/9iNOwv23O2d/2T0bDnbO/ZHvaPR8P+sz1oe9JvjYZ9ZnvN
9uNvGQ176/bX7U8/3MfrjknDfjPHkNvIceQe2q/+3WjYO7a/bH/696NhP9n+
sf3oP4yGvWR7yvay/zga9pbtJ9ujtjdtf9gesj3r346GPWf7zhxSrufyo8Et
tWf9p9Gwn2yvmcNqK/hrUwxuqz1r+9P2hO0X26O2P21P2b6wPeqHeuztk4Z9
Zc6t7eKlJwwurj1r++/2lO0r28O2b21v2T4yB5U769eF3FQOKtd0zdHgpnI8
uZonjwb3k7PMRf7NaHCZOahc0rVHg5vKOeWmclS5qBxSbifHk1vKUeWW7jga
3FVOK3d1y9HgunJSubErjgZXlbPKZd1lNLisHFHuJIeSO8o55ZbeMBpcVM4p
N5WjykW1V/7r0bCvbY+bg8p15bxyU/3wx13lsHIzOalcWc4sV5XzymW9eTS4
sM/0+XRY//2Pzk6ceXBmuakvjgaX9unOP9t//73zE2YenFJuJEeSa8o55aa+
PRpcVM6krVub01xKjiI3kCPIXeQAcgs5htxATisXlZPKdeXwcRc5jNw+ziqX
9VejwWXlOHI7OZ7cR04iF5GTyFXkMHIPOYjcRg4jd5HDyG3kKHIfOZDcRY4i
d5BDyF3kjNretXHNJeVIciM5ktxJziGXkdPIReQIcvc4fNxBDgi3hGPCDeE0
chE5iVxHTiJ3lcPKVeQgchs5jtxEjiM3kiPJfeRIch05j9xJDiEXkZPILeR4
cic5lNxPDgi3kePIDeEscus4dlxGzh+3kePIBeTc2Tq1UczF4yBySTgl3ETO
CHeRw8gl4dxySTglXFwOKPeUg/rOVva0w/aqDWOuH0eLu8Zh425x4LhunDdu
HAeOK8eZ48Zx4LhvHDhuHKeNK8eZ47pxzrhunDcuGseOC8eJ495x5Lh2nDvu
HIeOu8Zh49Zx1LhtHDfuGgeO68B54MZx4LhzHDpuHAeOK8eZ48Zx6rhdHC+u
HUeCC8eJ405w5Lh2nDvuHAeMi8ZJ44Zx0rhvHDiuGkeJm8RR4i5x4LhsnDZu
HAeO68X54sZx4LhynDluHMfLVqbNW+4XJ5BbybHkCnLsuHScOu4dR46bx9Hj
znHIbHvavOWWcZy4Uxwq7hMnigvFieJKcai4TxwobhUniYvFyeIqcaq4VJwq
rhWHiovGSeNWcQK5gpxBriCHitvEceJWcZ64VJwqLhTHizvFoeJ+ybzL7svw
y8JzqrhQnCiuFYeKe8XB4lZxpLhhHDHuFCeKa8W54kpxZrhSnCkuDWeLe8XB
4nJxeGwh2kDl9nDMuEEcIe4Zx4gbxZHiHnGouFCcKG4Vh4r7xIHiVnGouFac
K24VJ4orxBniSnGouDycHm4VB4mrxdniJnGMbAPaSOUecWS4Npwb7gzHhZvC
UeG+cEK4MxwarggHh6vD2eHmcGi4ORwdbg0Hh/vCgeHmcHS4ORwd7g6nh7vD
4eH6cH64TxwoLhBHhpvD0eHOcGi4OJwcbg3nhqvD2eHicG64ORwdLg4njXvG
QeOqcXq4NRwbrg+nh7vD4eH6cHC4ORwdbg5HiMvD6eEO6VjQfaADQfcCR4c7
w6Hh7uhA0M2go0E3AmeBq8PZ4TJwcLg0nBpuDgeH28Bx4OZwbLgpHBXuDUfF
tp8NTe4Kp4fLw+nh+nAcuBUcC+4DJ4fbw/Hh6nAsuBEcCe4FZ4PLwengcnA8
uB8cEO4Hx4ObwdHgfnA2uCCcEC4Hx4P7wQHhfnBebP3ZmOTCcDC4HJwObgbn
hIvByeCicCS4EJwI7gSHiWvEOeI2cTq4PJwergenR7Zaxprrw9HgcnA6uBuc
Dq4IZ4TrwRnhunBeuCScEq4IZ4RrIqPN5eB0yG5zPLgfHBDuB2eD28Hx4HJw
NrgZHA0uB0eKW8Wx4k5xOLgenA9uByeEO8Ih4YpwRrghHBEuCceD+8CB4H5w
OrggnBCuBydC17dNR64E58F2m01FLgQHQNZf5p8bwAHgCnAGuAEcAFl/mX9u
AAeAK8AZ4AbI/HMDOAJcAI4Bt4JjwT2QwZe9l8GXzecMcAM4AlwCmX3Zfhl/
WX4OAFeAM8AN4ADI+sv8cwM4AFwBzgA3gAMg6y/zzw3gGHAROAncAw4C14Bz
wE3gHHALOAZcBBl+7gCHQLZfJluWXaZdVptjIfvPAeBeyGDKRspIymZyBLgD
HALuAAeAO8Ah4AZwAGTlZea5ARwD7gCHgHvASeBycDq4CjL8XAJOgWy/TL2t
MJt7svYy5bLZMtqy5jLlsuQy5bLmMtuy3DLdstwy4rLnMuiy4zLqsuky6rLr
Mvy2z3TCy/bLgMuey6DLhsuIy5rLnMuOy6TLmsucy6rLnMuWy5jLosucy8rL
zMuiy5zLhsuIy6LLjMumy6jLksuMy3LLdMuSyzTLlsuYyzrLeMuSy5TLfsuA
yz7LQMuGy5jLksuUy57LmMuKy4zLnsuYy4bLiMuey5jLosuky57LjMtyy3TL
ksucy6LLpMuiy3jLTstQy35zAGTnZei5ARxTWXWZde6pTLVtKhtvstYyyLLW
MteyyTLFsr4yv7LGMsmyyjLLssoywLKxMrKywTKyssUyxrKzMs6yyTLKss8y
xLLNMs6yxTLJssUyxrLKMt+2rmzcyYLLJMsuyzDLKsskyz7LQMsqc1y4KxwW
7ovMsyyzTLMstEyyLLRMtKyyzLNss4yzLLQMtayyzLJstcywLLNMsyyxTLGs
scyxrLGMsmyxjLHssgyybLKMsmyyzLIss0yzLLPMsqyxzLEsswyybLOMs2yy
DLLssAyxbLLMsKyyzLIssUyx7K4Mr6yxjLJssYyx7LJMr60iG2GyvjK1toxs
jsnayrzKqsqsysLKvMreyuDKwsqwypbKmMq2yrDKxsrIyrbKnMraytzKosqk
yrrKvMqqyuDKtsq4yubKvMquyrDKwsq0ysLKxMq6yhjKNso4yh7KsPq3Bf/G
INvq3xhkM2Q0/NuDzKosq0yrLKsMreyrDKxsrQyH7KkMqmyHjKmsq8yr7KlM
qmyrjKusqoyrbKiMqOyrjKssrEys7KtMqayrzKusqQyprKrMqmypzKqspH/k
lWWVoZVtlXGVrZWRlZ2VoZWdleGSjZKRku2ScZVdlWGVfZX5k62TsZMFlNm0
lWOTSpZTZlJWUmZSllIGUrZTxlM2UoZSdlGGUbZSZlFWUmZSllGmUTZSRlLW
UYZKtlHGUbZKZlI2UkZSllJmUtZK5kqWUmZS1lLmUpZSZlK2UsZSllIGUxZQ
JlA2U0ZStlLGUnZSRlBWUWZRdlBmUpZSplKWUoZRVlJmUrZRxlG2UsZS9lGG
UlZSZlK2UmZSVlJmUpZSRtb2kM0u2VkZSFlLmUvZSBlI2UgZSdlIGUZZSJlI
2UaZTNlKGUtZTRlO2UkZStlOmUlZPpk+WUqZSFlPmU9ZSRlBWys2jmQHZeZk
2WTaZOlk5GTdZN5k52ToZAtlDGXrZOBk62TsZONkBm212FSSJZSJkwWUCZSV
k+mWFZcZl/WWuZOVk5mTxdP3Llyhr1zfuYyc7J0MnuycDKHslwyYbKFMlSyd
TJ2slUyY7JwMnayYDJ2snMycbJ1MniyiTKKsnkybbJqMmqybjJyslsyW7JyM
p6ybzJvsp4yc7JoMm+ycjJ3snQye7J1Mm2yojKism8ybLJ5MniyczJ6sncyd
LJ9Mn2yejJ6snwyfrJ/Mn2yfjJ1smIyY7N01Og4nDHsT9ipOj3/Ux+vRScN+
h/0Cewn6/vXzy6TZ8rCpI6t2uc7DCcN+hr7+L8arTxj6++1xyKDZBrG5I5sm
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
vQj7DvZN7EfYk7BPYe/BvoS9Cfsb9irsT9iLsOdh38Peg70I+dVPj/Mk8h/2
Pex96LzSfWXDwbaDDUfbDvyHDcf5FnkaeyH2PexR2I/gB9hGWG6cx+EvbDvO
n8jDyMdvM87r3DXOj398nI+RV5Ev336cd5F/kff9zDg/Iq8iL73dON8i7yKf
/Mlx/kUeRh7+E+P8jLyLfPanxnkX+Rn5kivH+Qf5AfncHcd5nL+N8zTnj/MW
8hvyrjuP8y/yOvKcO43zLfIx8qq7jvMs8jHylLuM8zPyMPKMu4/zUPIu8oa7
jfMy8i3yhnuO//1PXkrebo9x/sW/F8rX7T3Op/j3Qfmwvcb/niiPIn+27zj/
Ir8in7bPOK8iHyNfZBtBR7t8jDzTfuP8jHyMfNSx4zyLvIk8lW7+Jcd5GXmm
c8b5CnkXeaazx3ka+RV5o3PHeRb5FPnhHcZ5IvkfeaYLxvkX+Rh5pi+M8zfy
MPJMF47zMvIv8krnjfM08hzySheP8y7yOvJKF43zMvI58kWXjvMp8jDyVZeP
8yvyKvJMl43zKfIv8mnXjPMl8inyTVeM8y/yLvJJV43zK/Iw8kyXjPNA8i3y
Tl8c52nkZ+yh2WuzH2bvy7/3Xj3Op5w3/vfrA8b/furfR+WNbhjnX+R15Jmu
H+dp5GPkmXTp68iWj5FnunGcn5GPkWfSvb7DOM8in3TtOB8jjyPfJB+01zif
Ik/08DiPIQ8jbySftPs4jyJfJI+08zgPI88kr7TbOA8jzyR/tOs4DyPPJD+1
xzgPI8/0wjhfI+8iHyWPs9M4/yGfIx+1yzgfI18l77TnOJ8iTyTfc+g4HyJv
JH+03zgPI8/0wfG/r/v3fHkmeaN9x/kYeSb5pv3HeRh5Jvmjg8b5GvkkeS55
GHl7+Sl5pn3GeRl5InmoA8f5GHkj+aKDx/kY+Sp5pcPHeRh5Jvmnw8Z5GHkm
XeY6ouVh5JnkneRl5FnkmeSzPjvOu8hHyTcdMs6fyCvJy8inyM/IK+mWvmSc
f5GnGY3zL/Ir8kbvGudb5GHkmSYb53fkYeSZ5JWuHOdf5JkmH+dl5FvkmaYc
51vkw+STJozzL/Iz8k0Tx/kT+Rd5oqnG+Rr5F3mjacb5FvkUPsPU43yM/Is8
07TjfIv8izzTpHE+Rv5Fnmn6cd5F/kWeabpxPkaeRT5qxnH+RB5Gnkp+Sx5I
PkmeaYZx/kUeRZ5ppnE+RV5D3miWcX5D3kWeafZxPkbeRZ5ptnEeRt5Fnkm3
t85e+Rl5piXHeRL5FnmlWcd5GXkaeaU5xnkZeRx5Jd3Mb47zL/JFM4/zN/Iz
8lXvG+dj5FXkmVYd513kX+Tt5O/kweS75Js+MM63yLvIJ602zr/Iw8gzvX+c
n5F3kXdafZx3kZ+Rh1pjnJ+Rd5FnWnOcx5FPkWf60DgPI78ib/Thcf5FXkee
aa1xvkU+Rp5pnXGeRT5GnmntcX5GHkaeab1xvkfeRT5p3XFeRr5FvmmDcV5D
/keeaP1x/kUeQt5oo3HeRZ5D/mbDcV5CXkWeaZNx3kUeRp5p43GeRR5Gnmmz
cX5FHkaeadNxXkYeRj5KF7MOWvkWearNx3kZ+Rh5JvkheS55FHkm3b9Tj/Mq
8kb7jfMr8i/yTMeM8xryH/JMB47zLvIw8kwHj/M18i/yTAeN8zHyNPJK+4/z
M/Jj8kqHjvMu8jjySoeM8zfyMPJFh43zKfIw8lVHjPMr8iryTIeP8yryL/JF
R43zL/Iq8k2fG+df5F3kk44e51fkYeSZPjvO38i7yDsdOc7TyM/Y17T3ac/S
fqU8y+fHeRj5FHma+8b5DnkNeaNjx/kVeR15phPGeRf5GHmm48d5HvkYeaaT
xnkWeRh5phPH+Rl5F/kk3cE6TeVd5JtOHudh5F3kiS4Z51HkXeSNdMvqyNSV
Ka930zjvIq8izySPpCNTHkae6ZZx3kUeRp7p5nFeRh5Gnum2cf5FHkY+6tZx
Xka+RZ7qjnEeRT5Gnun2cf5FHkWe6a5x3kVeRd7onnG+Rf5FnkneS35I/kee
6e5xfkUeRp7p3nE+Rv5FnumBcZ5FnkZe6c5x/kXeRV7p/nFeRh5HXumhcR5F
/kW+6MFxXkceRb7q4XE+Rf5Fnumxcb5F3kU+TT5avlgeV77p0XFeRn5APunx
cZ5A/kWe6ZFxXkb+Rd7piXHeRV7GXqD9QPtzD8wy5JXkieRx5F84BtyEX4wG
90B+SZepPIs8jPySfJK8izyM/JJ8k7yMPIz8krySPIs8jPySvNCx43yL/JL8
kzyN/I/8knzRKeP8ifySPJR8jXyM/JL80KnjvIr8knySfIv8i/ySvJF8jPyL
/JK8k3yL/Iv8knyTfIz8i/yS/NPx43yJ/JK8lDyOvI38kjyT/I28jfySPJG8
izyM/NKc4zyJvIn8knyRfIz8i/zSduM8gH/fl1+SV5J3kYeRX5I/kmeRf5Ff
kgeRj5F/kV+Sd5Kfka+RX5Lvks+Rv5Ff0kWqg10eRn5p6nH+RR5GfmmOcX5F
/kV+ae5xfkX+RX5prnE+Rv5FfmnecZ5FvkV+Sdemzj/5F/kl+Sr5HPkW+aV5
xvkZeRn5pfnHeRd5GPml+cZ5GnkV+aUFxvkV+Rf5pYXH+RZ5F/mlhcb5GHkW
+aVFx3kW+Rf5pUXGeRd5MPmld4/zLPIu8kvyTfJi8i7yS0uM8yzyLvJLi4/z
MPIu8ktLjfMs8i7yS0uO8zDyLvJLy4zzLPIu8ktLj/Mw8i7yS8uN8yzyLvJL
y47zMPIu8ksLjvM88j/yS7rydfbJv8gvrTXOs8i7yC9tMc6vyLfIL20+zr/I
t8gvbTXOr8i3yC9tOc6/yLfIL209zrvIs8gv6WrUIff/irrvOM0L8lzjv519
B5YdmHmXoggILEWwRamWiKLSu/TeFlhYelG6NJGFXXqxxChNRZpIExGkmxBF
RY3R5BRjwRKT40lOTo4mOcnznef2k3+SPHmXdXeWGXfe33VfF34Gv7Rv+Bb8
C35p//AteBf80lvC6+Bx8EsH5nk9/gW/dED4FbwLfgmvh/fCc+GXDg7v4vk+
funQ8Cz4F/zSfuFt8C/4pYPCz+Bl8EuHh0fBv+CXDgsfg3/BLx0Z3gWvgl86
InwMHga/dHT4FTwMfumo8DL4F/zSMeFj8C34pUXhY/Aw+KXjwrfgZ/BLx4aX
wfvgl7gWOd/wL/ilxeGB8Bv4pXPDt+Bf8EvcfRxi+Bf80tLwLfgX/NIV4WPw
L/ilq8K34F/wS1eGj8G/4JeWh2/Bv+CXloWPwb/gl64J34J/wS9dF54F7zIv
/M/bw4Pgl64NH4N/wS9dHx4G74Jfuik8C94Fv3R1eBs8DX7pxvAx+Bf80i3h
UfAv+KWbw8fgXybCM+Fh8C9zwxvhW/AuK4YvwqfgV0bhnfAy+KIVwjPhjfAv
c8I/4WXwL5Phn/AveJk3hT+5Kc+H8UtcfRxh+Jf1w+OcFF5jKnwSvgUPg1/i
fuOUwsOsEj4J74J/mQ7fhJfBt8yET8LL4GHG4ZvwL/ipBeGTPB/C06wavglf
hX9ZLXzSUXl+tHr4JnwMXmWN8El4FzzMq8I34VnwMK8On4RfwcOsGb4JL4OH
eU34JLwJvmWt8E14GXzM2uGJ8Cd4lHXCN+Fn8CrrhmfCr+Bf5oeHwxfhfdYL
r4R3wcMsDI+Er8G/bBBeDB+Dp3lteCf8DN5lw/BJeBM8zkbhnfA3+Bf8Ercb
xxQeZZPwSHgHfAt+ifuLwwgP8uY8j/tYeIDXh1e6MXzEG8M33Rw+4nXhpfA2
+Jc3hIe6IbwFfgnPh//Ch+GX8HG35Pk7Rwh3CIcId8hm4ZP+JM+LNw9/9Mk8
r90ivNGf5vnsluGbPpXnmVuHZ/p0nu+9NbzUx/O8+z3hc76Q9/u3Ck/0mTz/
fHd4pM/l/fx3hj+6Pc+T/jh80mfzfOhd4ZvuzPOVbcJHff4Pz1PCU92a539v
C690W543viM81B15/rVt+Km78v78buEVRvXn9+qp5pPwKj+t+6X57cjhzuHQ
4c7B93BR/VX9838zv/kXvM8P6v71/OZb8B4/9/3k/OaXZvI8wPvj+CUuMs4k
7//vFH7mlXr9d/Obn8CP/HPd86b6+b7n5b+sH7/mVD9fxxesVvfrpvp5uufL
v6p7k6l+/uz5+wZ1bzXVvAU+4Bd1rzTVPAr+4pW6fz+/n097Pvvruree6ue3
nl9vVvd2U/381vNDTfrtp/p5oud3vxl1q37/PH/dc9Rt+wPyvEvDfdFUPx/z
vFDzXvv9oDwP0mDXej84z8804bXKD8nzEU1urfZD8/xHw1wL3PMTrqn/Pep2
9+F53qIRrjXNwfQZz55G7WbicNWC1oTmduVg4mry7Sk3k0a09vS8odvRnExc
TZxNXE375nn2tnXvM9WNam3qqaHb1RrV2tSyLNrVGtVaz1Ty2tUcRdxNHE7c
RRrQ2tUa1trQHE5cRpxG3E6cStxOHE9cS5xPXFOcU1xQmtda1ZrVWtia1drT
GtRa1pxU3FIcU1xVmtRayprKWtWcUFxOnE5cUfgsPNbP6v5v87u5rE29/tAt
Zo1qLewNh25Xc0BxP3FAcUNxSnFNcU5xTWlma2W/buiWNicU1xTnFFeUhrZ2
9uuHbmtzTnFHcUhxUWlqn+kPY7Jb25xPt3o2OGoXFIcUFxTEiVuKQ4pbylvx
3FKcUdxSKw/tkuKE4pKCcXJFcapxRVEhcK1xTnGtca5xUXFGcVFxUnFJcUZx
SXFKcUlxOnFJcUpxPXFGcT0tHNolxRnFJbXR0C4pziguqU2GdklxRnFJvWFo
lxRn1G2eZY7aJcXZxCX11qFdThxQXEacRtxQnEVcRTsM7TLihOKK4oziiuKA
4obiiOKG4pTihuKI4priROKG2mJoVxInFfcUBxVXFScUVxVnFVcUJxRXFGcU
VxRnE1cTZxOXEwcUlxOnEzcUhxJX0/ZDu5U4oW73LHfUrigOJ26n7YZ2O3E+
cU9xUHFBcT5xSb13aBcUBw83z2lDu3k4qbibdhzaVcUxdKdnv6N2D3FAcUPt
PLQbivOJG2qXoV1QnE5cULsO7XricOJ62m1otxPHFbfT7kO7rzh/uK84sLiA
OIu4gDiBuIw4nu6o//zPjNr9xOnE/bT30K4nTieuJ84nrieOJq4nzifuJo4n
7iYOJ+4nTiXuJw4oriXOJa4lziUuJs4yLiZOJi4zTicuM04zridOJ64nzieu
J04nrifOJ64nTihuJ44nrigOLa6vnYZ2a3FKcUcdObRrilOJy2nR0K4ljiau
peOGdjdxRHFHcUhxR3EycTktHtrVxOHE1XT80G4nDidupxOGdjtxMHEznTi0
m4kziZvppKFdSvglvPUnwgtyLHErnTy0e4mziVuKY4rLieOJK2rJ0O4nzilu
Jo4mLirNIG0hjSEtIY0crRwND3soDgGuSs5KbgEOJO4BDgJuJM4kbiSOJC4l
TiYuJU4lriZOJq4mziauJk4jbiaOJq4jDgOuAs4CbgPOJW6mK4e4mFZttxPH
E7cTZxNX0tKhXU6cP1xKlwztAuJI4gK6dGh3EgfT57AOo3YzcSxxM10+tHuJ
w8kXS44obieOKO4lDibuKI4mrqeLh3Y3cS5xQ101tIuJw4jbiOOI24hjiSvp
6qHdSxwts+6Xod0tnEpcTJxMXEucS1xM1w3tYuI04mLiZOI64lziVlo+tIuJ
Y4n7adnQ7iWOJS6kG4Z2L3EyfR7LMWpXE6cS1xLnEtcSJxLXEucSVxInElcS
ZxJXEmcPVxJnEpcPZxPXE+cTlxMHE7fTjUO7mTiOuH44f7iPOJC4jziQuJE4
lriRbh3avcSpxLV0+9CuJU4lrqU7hnYtcSRxLd05tDuJw+guLMqo3UYcKtxG
nx/arcKZxK1y99AuJc4kLqV7hnYpcSZxKd07tEuJM4lL6b6hXUocTFxKnErc
TBxJ3EwcTdxJHEHcSQ8M7Q7iTOIO4hDiUuIw4lJ6cGi3EccRt9FDQ7uPOKW4
pm4b2jXFqcSFxInEtcR59AVszahdSBxF3EccSNxFnEzcRRxGXE0cSFxNnE3c
SBxI3EgcSdxIHEbcR0/X7S9hHErcShxL3EqcSNxJHEpcSRxh3EfPDO0O43ji
fuKA4n7iQOJWem5oNxIHEjfS80O7kTjEuMI4w7jFOIu4kl4Y2mXEeXQ3VmjU
LiSOJm6yZ4d2N3EmcR19fWiXEgcSt9E3h3YjcQ5xI700tIuIk4iLiJOIq4ij
h6uIs4i7h/OIu+c7Q7uQOI+4kDiRuJA4j7iQvju0C4nziAvpe0O7kDiUuJA4
kbiVOJe4lTiWuJg4j7iYOJm4kDiPuJA4kbiQOInuwUKN2lXEWcRVxFnEZcRx
xGXEacR9xHHEfcSBxH3EWcR9xIHEZcRZxGX046FdRhxDXEZ/O7R7iIOIe+gn
Q7uJOJe4iX46tIuJ04jr6OdDu44ex3/V3yVXmFN/h5lupxH30StDu444ibiL
fjm0q4iz5l4s16hdNpxJ3E4/G9ql9Ag+s75e/ke9vtl0O4a4bv5uaPfQo/g0
z/vr3qLuL/vxk8NsVGKr6XYacR1xHnEdcRhxG3EccRs95u+/9eMn6se/jTsJ
z1b3qO53TLcjiduI44g7iROJK+m3Q7uSfuB7BPxV/fh3TbfjiCvpH4d2H/0F
vgvPU/eHVmlnEhfSPw3tUnoCD1evz69//j3T7SziVuJY4jJ6Eh9Xr69cr793
uh1H3EYcR9xHX8PL+X6oXn//dDvDuJA4kbjEnsLP1evjen376XYscYtxjHEv
PY2nq9dXrdd3nG7nEhcTJxMX0zP1+gW+f6rXd55uBxM3E0cTN9OzeLt6/VX1
+q5cafi5yVlEYjiqfr/P4+UmZx9NDsf4fMfLTc6+LTgsrv/xdbzc5CymPSyp
+8/xcX6+uk/z9Qs/6PvF+vm38fmOb6v7NfX6mfX6N/Bxda9X97l1f9PzrLo3
qPsCXy/wd5OzU6Hh5LpfqntZ3RvXfVHd36p7ed2b1n1p3d+u+2p8Vd2X1/0y
PtK/f3Vv7vPZ97D4rbq39PlY9/11r1S/vnf7/K777rrn1L21z2ffg9Y9Wfc7
fb3w71f9fHPq/7e0fv7v131P/d9z6/W3T7fjkguTE5P78oe+p/T9b72+7XQ3
ibV/NYC1iv/G94C+/617B5/Pvufz+617J5/Pvsere426d/H5XPcjvp+tezef
b3U/7vvVuvfw9aLuL9U9U/d2/n2v+znfX9Z9gM//uh+re+26d/f5VfezPp51
7+/zu+6v1b2w7r19ftf9lD+Puvfx+Vv3076/rXtfn191P1P3RnXv5+tF3U/4
86x7L19f6v5q3evWvSc3Wt1P+n657g/4fK77+bo3qftALrC6f1X3bnUf4/PJ
1wff/9R9yHQ3yLXHNci1yf+hXv9x/fj3132oz4+6f1r3DnUf7vOh7p/VvWPd
R9T9G1/fvJ9R/7+Dfb7X/YJ/f+r1g3x+1P3zuneq+0iutLp/UfcudR9d97/U
/eu6d6/7WO6zuv+u7j3qPo77rO7f1L1n3Yvr/n3df1/3XnUfz21W9y/r3rXu
Rdxqdb9S9851H1X3v9b927r3qfuEuv+t7n+se7+6l9T973X/U937131i3f9R
9z/XfWDdJ3tTpT4+/7fug+o+pe45df+L32vdp9Y9Uff/q/uQuk+re27dv6v7
0LpPr3tU9+/rPqzuM+qerPtf6z687jPrXqHuf6v7iLrPqnvFuv+97iPr/mDd
8zRdvN+AQat7pbpP9ffzev3suufXvabnxXWfU/eUxpnnz3WfW/fKGmeeF9d9
Xt2r1L2O5891n1/3/6/f7/+pn/uAuk+qe1rzzPPeui+oe1z3ep731v3hulet
e6HnyXVfXPdqdW/geXPdl9S9ugaW58l1X1r3GhphnjfXfVndr9bA8ry47svr
XlD3+p43131R3a+qe2PPu+v+SN1ramJ53lv3R+ue0WDzvLzuC+teS+PK8+O6
l9a99oJux2vIX+nrf/3+flK/v+3rPmy6m/J/5PnynG7Nr6t5VfeNdS+v+zWa
W57f1X1F3a/VyPJ8t+5lda+vgVX3zXVfU/dCTa26b6n72ro30OCq+2N1X1f3
hhpYdX+87uvr3qjus+vPb1S/phumuxF/St0Pz+l2vEa7dryGvHb7Jgu63a7h
fvN0N+D3qfvROd2G14DXhteI14bXgNeG14jXhteA14bXiNeG15TXhteI15rX
oNea15zXpteA16bXqNeG14DXhteI14bXZNeG14jXatds12rXbNdy14DXctd0
14bXgNdu13DXhtdw127XcNd211jXXtdg117X2Nbe1uDW3tZk157XoNdq13jX
dtd4137XeNdy13TXfteE127XcNeK13jXbtdw137XcF9S90tzuu2+jYZL3d+q
+57pbrhrlWqWartrlp5Tfz6Tk90y1QTXLtcw1wrX9D7Z+9FzuvWtaa79rQGu
df7uBd2G14i/d7qb4FrgmuBa4ZoUn7UVGHWrQlNca1xzXGtcM/kk7+dNdEtZ
M1xrXHNcS1wjXUtcU1w7XUNcO11DXVtcE1tbXGNcK1vzWytbM1sLXFNcC1wT
XGtcU1xrXHNca1xDXDtcQ1xbXENcq1uzW1tcs1vLW9Nby1vTWztYQ1jrW0NY
K9wb3trCmuFa4ZrhWuKa4VrhmuFa4prhWuGa4VrimuHa4xrkWuIa5FrlmuXa
5JrlWuGa4VrmGuFa3Zrd2uGa7Frtmu1a7Rre59bHc4XJbntrTmtTa1RrUWtO
a1FrUmtRa5Brj2uQa5NrUGtTa1RrU2tQa1NrVGtTa1BrU2tUa1NrTmtRa1Jr
UWtOa1FrUmtR/6i+Pj3g73/163vfdDeotak1qrWpNai1ozWktak1rbWuNa+1
rjWltas1rLWmPxUeCT+GL1uyoFvVmtU/nO7GtLa0xrT2tKa0lrSmtNa0prR2
tIa01rSGtDa0RrS2tIa01rTmtLa0JrB2sIawVrCmtFa1ZrXWtAawdrCGsDaw
prX2tAa11rVmtba2xraWtYb0efXns+Jkt6U1i0/0fuJEt4w1i7WMNY21jDW5
tak1qrW6NYy1jTWOtY01rbWvNbC1rjWXtao1q7WYNYy1ijWLtY01ZrV4NXm1
ZzUjtS41L7UkNYqNSzQftYs1g7UdNR61hDWGtYQ1hbWHNR+1jTWOtSA1IrWP
NZC1IzWCtW01brWDNZG1lTWWtZI1j7WQNZG1kDWCtYg1ibWDNYm1iDWJtYo1
ibWINYm1ijWMtYg1ibWNNYe1jTWOtYg1lrWRNZK1lzW+tak1qrW/NY21izWM
tY41jLWVNZa1jTWBtYM1hLWCNYTPrz+veZPdFtasXVL3TRPdstXA1bLVtNXG
1bzVwtXE1cLVPNYa1hz20ESjWQtZE1m7WTNXS1dTV0tXw1Z7VoNW21bzVQtX
E1cLVgNXC1YTVhtXk1YbVyNXq1azVqtWs1bLVrNXe1eDd7blu6DbvBq92rwa
udq5GrrauZq42rMatFq5GrKzbdeJbstq2s62bCe6datpO9uunejWrYbtbJt2
otu2ms6zrduJbj1rWGtVa1ZrW2v4zrZyJ7rtq3k72/ad6Bauxu1sG3qi27ea
ubOt24lu6WrOzrZsJ7pFq2k727Kd6NatBqpWqmaqNqrG7QWeb012+1Yzd7aV
O9EtXY1g7WANYe1gTdgTPD+c6FasRqq2qsaqdqomqnaqhqpWqiagVqBmoFag
hqaWrKastqYGqLamxqY2qMapNqhGqPaphqr2qQaqtqpmqpaqpqqWqiatFqsm
q1at5qk2qkaqFqrmqharJqsWq6apNqpGqtapBrA2qkaqNrBGqjaqRqp2qkaq
NqpGqnaqRqo2qkaqdqrmqnarhqsWq4artqvGq7arRqs2qkaqdqtGqjaqRqp2
quamNqdGpxanRqUWpSaldqWmqTaqRqrWqebphfXxnz/ZLVSNzOP9fXNutzM1
VLVRNVK1VTVQtVE1UrVRNVm1UTVStVo1O7U2NTe1PDU7tTw1PbU8NTe1QTVC
tTg1L7U4NTm1MDVgtZQ1lbVhNTO1MTUytTQ1R7U+NT+1SDU/tUE1QrVANTq1
NjU3tTs1rrW1Nba1rzU5tTw1PbU6Nfi09zT4tPk0ObVANUG1OjVBtTc1OLVC
NTi1NzU4tTk1OLU3NTi1OTUztTI1M7U0NTe1PjU/tTg1ErUXNRi1EzU7tTY1
N7U8NRkXe744t1uNmpham5qbWpmam1qbmptanJqbWpuam1qcmpsfrn9+arJb
nBqSWpqamtqSGp7akhqT2p4ap9qNGo7apxqQ2qcaqNqQGn7ahxqI2n6aoVqn
mqdaohqL2o4aj9qLmo1ajpqOWo6ajVqOmo5ajhqP2owajdqPmpBakZqRWpGa
kVqUmpRakhqP2o8akNqPmo3ajxqQWo6ajFqMmoxajZqMWoyajFqNmqxarZqt
Wq0ajVqPmo/ajZqM2pEaklqNGpLakBqR2pKakNqRGpJakf5+dIXngfnvV01J
LUdNR61JmznbAhsDWzrNRW1GjUYtRo1GbUaNRu1GjcaLPP+f7HajZqAWoCag
lqDmnhafJp8Wn+ajlqOmoxakpp42n0af1h5QQBtSI1LrUaNQi1CTULtQo0+b
T6NPu0/zT7tPw08LUNNPC1ATUOtPU1DrUPNQa1ATUPtPA1ArULPwOM8f53bL
UPNPe1CDUAtQ40/7TwNQ+4+DiOuI84ibiNOG+4YDh+tGo1D7TwNQu1ADUOtP
808bkHOJa4lziYuJw4aLiZOJ24bDiduG44bbSdNPG1IjUutPE1B7UINQK5Cz
iYuJk4nLSUNSO0lDSVuSk4lLiVOJq0lTSTtJQ0lricOJW4ljidtJY1BLUFNQ
e1CjUHtQg1C7UJNRq1GzUauRo4mLipOKu0mTSftPA1CrSSNQe1CDUDuQA4r7
iQOKG0qTUItQk1CrkBOKC4oTiiuKE4rrifOJK4pTikuKU4prSmNQi1CTUHtQ
01DLUNNQ65DDibuJw4nbiROKC4oTiiuKE4oLihOKK4oTiguKE4orihOKC4oT
iivKG8kv1ufHzGS7qDQTtQc1CLUUOaK4oTiiuKM4obigOKG4ojiRuJY4l7iS
OKC4nziguKE4oLifOKC4oTiguJ84oLihOJ64kjiTuJ84wLi2OLe4wTimuKU4
prinOKi4pziouKk4pP6ifv3jyXZLcS5xQXFCcTFxQHE/cUBxQ3FAcT9xQHFD
cTxxN3E4cT9xQnFBcUJxRXFKcT9xQHFNcWRxY3FkcWdxRnFBcUJxSXFAcTNx
NHFDcTRxP3FAcTdx0nDRcNJw1XBAfaPuBZPthuJw4jrjPON24jzjcuJ04kLj
dOJy4nTieuJw4m7icOJ24pjiluKY4p7iVPpm/fyrTrZriQOK+4kDihuKg4l7
iYOJm4nTicuJ04nridOJy4nTieuJ04nLidOJ64nTicuJ04nriTOKK4ozikuK
UwrsxinFNcXhxNXE2cTtxNnE1cTZxOXEkcSFxInEncRBxFXEWcRNxNnE1cTZ
xOXE0cSlxKnE3cSpxNXE2cS1xOnE5cTpxPXEAcX9xAHFDcURxQ3FEcUdxfHE
5cTpxP3E6cTdx+HH9cTR9FLdq022u4mTiYuJk4mriSOLG4sjizuLo4mbiaOJ
u4kTiguKE4orihOQK4oziiuQw4mribOJ20mDWAtYE1ibmMOJm4mjidtJI1g7
WENYO5iTiUuIU4iriVOIi4mTiWuIk4mLiZOJq4mTiYuJk4mriYPpW3WvPtlu
Jo4rrifOJ+4rziOuI84jLiQOJ+4mDiduJ44kbiSOJO4kziWuJc4lLibOJa4l
ziUuJs4lriXOJS4mziWuJc4lLiZOJy4nTieuJw4orifOJ24oziWuJc4lLibO
Ja4lziUuJg4jriLOIm4jTizuLg4vriwOpm/7+SbbzcSpxJ3EoeQhHocSdxKH
ErcSxxX3EgcT9xXnEpcTpxMXE8cTFxMnE/cT5xLXEucSFxPnEjcSRxIXE4cS
NxJHErcSRxKXEqcSdxJHF5cXpxd3F8cSFxcnF/cSZxNXE2cTlxPnEpcTpxMX
E2cXdwCHAJeXpuzF9fV9lcluzdpcfsfHd7K3mJ5XeH7h/W7vb3MgcSdxKHEj
cShxFXEWcStxFnEZcRpxGXEWcSNxJHEZcQ5xtXC2cBFxMnErcSxxNXG4cBFx
EnG7cDhxN3E4cTtxLHErcSxxL3Ewvezr52S7mTiRuIo4i7iSOIu4kDiRuIw4
mbiYOJm4mjiSuJA4kbiTOJi4ljiXuJk4mrieOJ+4mziSuJE4kriTOHW4hDiF
uHY0bI+tj+e9c7tty1HEhcSJxF3EYcTVxNnEbcTZxI3EkcTlxJnEdcR5xKXE
qcR1xHnEtcRhxOXD6cNtxNHEvcTBxN3EqfRdn1+T7VriOOI24jjiPuI44jbi
OOI+4jjiNuI44j7iTOJK4kziUuJg4lLiVOJm4nDibuJw4nbitOKy4rTiuuJI
4kbiSOJO4kjiRuJI4k7iPOI64jziQuI8+p7P/8l2IXEccRlxGnEfcRpxGXEa
cR1xFnEDcQRxGXEqcSlxKnEtcS5xLXEucTFxIHEdcR5xI3EOcRNxFHERcRxx
G3EccR9xHHEbcRxxH3EccRtxHHEfcRxxF3EYcR9xJnEbcRxxKXEWcSlxKnEZ
cSBxG3EccSNxGHETcRRxG3ECcQFxAnEFcRRxdXF2cRdxdnERcRJxeXEScRFx
EnEVcRBxD3EQcRNxUHFPcVBxU3EacR9xIHEdcSJxHXEecSVxGnEZcRpxHXEY
cRdxGHEbcRRxE3EUcRdxFHETcRRxF3EMcQtxDHEPcRb9pa/Xk+0y4kDiPuJA
4kbiePq+r++T7X7iMOIq4iziNtJo1oLWhNZu5iziKuIs4jLCg5wXHsDzew4j
7iIOI24jjWFtZ41n7WFOIy4jTiOuIw1mLWJNYm1mjWZtZo1m7WZNaK1ozWit
aI4h7iIOI+4hTiQuJE4kriQNaG1ojWhtaM1oLWlNaS1pTiQuJE4kriQNaW1p
jWltaY4kLiNOI+4kDWrtaA1pbWrOJa4lziUuJs1o7WkNai1pTiXuJA4lriV7
gN3Dg+BL8PP7hAfBf2hAa1VrVmtDa0RrQ2tEa0fbNxwwbxaXn+VbbKZ/4L+/
J3tLzdFkS21Tzd2kea1lrWmthW3/sFP4GDyMfcMu4WPwMPYGe4R/wbfYG+wZ
3gU/xCnFJcUpxTVlb7BX+CL8iz3EbuFp8C72EruGt8HX2Bt8ILwMPoZzjMuM
04yLzP5g7/Az+Bh8yxfDL+AL8FZnhG/Bv+Ctzgy/gnfBU50V3gXPgqfCg60Y
/gXPc3Z4FrwMvuu08DT4GrzQxeFL8Ch4sg+Fr8FX4YsOrI/nWuFP8E3nh3fB
v+CZLgjvgn/BL10Y3gX/gle6pP7514R/wVedG97F8yg81jl5PoW3wStdGj4G
f4JXuiw8Cj4FH3RX+BF8iT3FfuGH8D14pY+Gh8G/4JWWhn/Bu+CVrgz/gp/B
i10RXgYfg4e6PLwLngbP9JHwMfgXPNNV4W/wOXimZeF18DB4pbvDA+Bb8En3
hG/BB9iH2I9sGt4Jj3RveBf8C17p6vAteBd81PLwNngXfNN94V3wMRyT3JIc
k9yT+Lj7w6fgYTgkuSg5Kbkl8UoPh3fBv+CVHgnvgn/BK11af14fCP+CV3os
fAueBZ/0bHgTfAke6qHwNPgafNBz4U/wJvimB8Pf4IPwRY+Hj8HD4JW+Fv4F
74JXeir8C94Fr/R0+Be8C17pq+Fp8CR4qGfCw+Bf8FIH2SfMaR4HH/VkeBt8
DX7o+fAw+Bd8EB7oo+FL8EpvzfN+z/PxSviOC8O/4JXwSReFd8Er4Y8uDu+C
B8EzfTh8DB4K74SfwdPgpfBIl4dvwTe9EB4Hf4Mvwi9dGv4Er4RPuiK8C14J
n7Q0vAte6TLvP4VnwSvhsT4S3gUPhV/Cv+Br8FL4JXwL/gbf9UT4HDwSnulg
71fNaX4Gz4RvWhY+Bq+EX7oufAteCb90ffgVvBJ+6YbwLngl/BL+Bf+FT8Ir
3RyeBQ+FD8LX4GnwQngpfAzeBt+Ed7opPAy+6LXhT/AoeKU1w7PgW/BKa4Vn
wbfgldYOz4JvwSutE54F34KHwkfhafAzeCn8FN4GX4NXWjd8C94Fr7R+eBZ8
Cz7ojeFB8CV4pQ3Dr+BZ8EobhV/Bs+CVNg6/gmfBKx1SH+9nw6/gxfBjeCR8
EB5qg/AxeBk808LwM3gaPNNH6p9/JjwMnmnT8DD4F7zSm8K/4FvwSW8O74Jn
xBttFn4Fr4JHwi+9GP4Fr/SG8DR4F3zUeuF78D74preEl8HH4JU2D/+Cd8Er
bRH+BZ+C5/hk+ADP5/FKW4WHwb/glfYKv4J3wSvtHd4Fz4JX2id8DP4Fn7Rf
eBY8Dx5qy/Aw+Bq80OX18fldeBN8077hf/A1+KLDwqPgU/BKB4VvwbvglQ4O
34J3wSsdEr4F74JXOjR8C94FD3VA+Bk8CF5q//AheBu80qH16/l9eBe80pHh
X/Au+KCTwoPgS/BKV4f3wH/glY4J/4J3wSsdF94F34JXWhzeBd+CXz02fAwe
Bg+1KDwNfgbPdHR4G3wNnun48DF4GDzTCeFj8DB4pZPDv+Bb8ElLw7fgh/Bf
B4YXwg/hka4K74J/wSudGJ4G74KPWhLeBl+Db1oW/gUfg8fFr+Av8Zz4qOXh
YfAx+Bb8LP4Un4lXuj58C/4Fr3RD+BW8C17pxvAueBa8Ej7pLeFf8EkfrT+f
zcKz4KGuC0+Dr8EL3RreA5+Cb7o5/Iu9Fb7oM+FZ8CB4pT8Jj4JXwSt9KvwK
Hgav9KfhY/AweKVPh4/Bw+Ch8FFbhKfBSx1Wv77N6/7RdPNKt4WXwbfglW4P
74JXwQfhgRaFB8ErXRteCN+DV/pseBU8DF7p2fAt+Be80nPhb/AueLGnw8fg
ZfBQd4bnwLvgme4IL4PvwDM9Hz4Hv4NneiE8DF4Hr4RHOia8Cz4Jb3RseBa8
2jXhkfBOeCS80nHhYfBKfxbeBc+Cj/p6+Ba8Db7JHm5xeBn7OLzS8eFRTqz7
cHu68Cru7+Tj7eOLN8IT4WfwOngm/NGp4WPwTPim08LH4JnwTaeHj8Ez4YPO
DM+CT8JHnRweB9+EX/pY+BQ8ER7qjPAweCP80y3hUfBF+Jmzw8PgmfBG+Bg8
DJ4Jv3RjeBg8E17p5vAweCY81AfDu+Cj8FZnhf/A5+CdPhQ+Bl+FX/p4+BQ8
0fzwIPgQvNEQ/gUPg2dakuf3nufjmeaEh8HH4JnmhqfBw+CZRuFd8DX4JPzS
J/P8HT+FV/pEeBk80WR4EHwM3uiI+vO7PXwMvmoq/AoeBs+0cvgYPAyeaZXw
MXgYPNN0+Bg8C55pXngbvAs+amn9/LeFP8ErzYR/wc/glcbhafAveJoF4WHw
K3ij1cLr4GHwTKuHj8HD4JnWCB+Df8Ez4Ze+Eb4Fz7R5eBl8GD5pi/Au+Bl8
05bhXfAveKKtwqPgX/BGW4d3wafgG94W3gX/gmd6e3gX/Aue6R3hXfAveKZ3
hl/Bv+CZ/jj8C54FH/Wu8CZ4GDzVquF38El4pm3Cp+BR8ExH1sfzr8Nr4I3e
F/4F74Jnen/4F7wLnmm78C94FzzT9uFf8DN4ph3D2+Bb8ErbhgfB0+CVdghv
g8fBK+0UHgb/gi+6sn49Pwo/g6/aJXwKXgXPtGv4FfwL3g6Ph+fCd+Gbdgsf
g3fBJx0fngUPg2faObwN3gXvtHv4GPwMHurE8Ch4FzzTSeFV8Cl4ppPD5+BX
8EanhIfB6+CZTg0Pg4/BM50W/gUfg2c6PXwLHgbPdEZ4FrwLPunM8D74FnzT
WeEf8D94og+G38BD4I2uqo/XgvAc+Juj6l51bvMqeKZzwq/gYfBM54WPwcPg
mc4PH4OHwTNdED4GD4OPujB8DL4FT/Xh8C74GDzTReFl8Ch4povDp+BV8Eb4
IrwX/gXPdG/4DPwHnumy8DF4GDzT5eFh8C94plvD2+Bp8EqXhIfBj+GVbg//
gsfBK90R/gUPgy+6MzwKHgZf9bnwLngVPNPnw7PgX/BF94RPwavgm+4KD4N3
wSfdHZ4FD4Nn+mz4F7wL3ukL4WXwM/gS/MnS8Ah4lvvCq+BT8DR4m/PDb+CN
jq4/v13mNq+DZ3og/A4+Bs/0YHgZfAye6aHwMngYPNPD4WPwLvikR8K/4Fvw
TY+Gd8FL4YnwTnvneSHe6LE8P/R8EK/3lTwvxKPgmR4Pn4JfwTN9NTwLPgbP
9ER4GXwMnunJ8DL4GHwUfgofgzfBU+GX8C14GTwTfgmvgnfBM+GJ8Bb4FbwR
Xgn/gk/BMy2rj9fOc5v/wTPhk/Aw+Bg8E34J74KHwTPhkfA4+Be8En4J74Ln
wCvhk/A4eB28Ep4I/4LPwRfhjfAneBh81aL6z790bvMueCa8Ff4F74JPwxfh
UfAm+Ca8Ex4GT4JPwjPhTfAteKbl9fNdMrf5FrwTHgp/gkfB8+H/8GN4Mc97
8W94FrwJX8WL8TfwOcwJT4Q/wZdMhD/Cm+BD5oZvwovgN0bhm/AcnvetEP7o
vrzfjk/y/BhvgmeZCb/0aN5vngz/dE+eb02Hf3ok73/PD7/0pbyfPhV+6cG8
n71y+KWH8v74KuGVHs774fPC33wx79+vGL7p/rwfv1L4pQfy/v04/NKX8/7z
OuFlXqr7gZnmlY6p+/G6Pz3T/hW+FT4SfpLVwzM9Wa/fOtN8EB7ombrvnGk+
CS/0XN2fm2k+6eq6v5L3yxeEV3os76evGZ7phbrvmmleCI/0Yt33zjQPhBf6
dt0PzjTPgw96ue6HZ5q3wfd8r+5HZ/r5LP5m+/qe67GZ5oHwR9+o1++fad4J
D/Vndd89088fPT95ff34o/I8xfOMa0b1dWfczzc8H7m27kV5HuL5x/V1Hzvu
5yGeP9xQ93F5HuF5xo11Lx738w3PL26q+/g8z/D84+a6T8jzEM8nbql7SZ5X
eD7wsbpPzPMCzx8+XvdJ434e4fnDJ+o+edzPI66p+x316z9l3P4lfqX67c36
eviW+JT4efh6+JX4ifh5+Hr4iviN/KvM18N3xJdU/2vW17NRnv9cV/95x4zb
p8SXxNfD38OXxEfEz8PXw2/ER7RwaD8PPxF/10ZD+3n4vPiINhnaz8NPxD/E
x8PPM+sbmtf+HT4eviO+JL4f/h++osen6r+HR+3v4SPiH9piaF8PnxN/E38Q
nxAfEf8QPw9/Dx8R/xAfG1/PGuHxnqoP2O0z7SfiI+Lv4WvjI+If4ufh7+E7
4jfiA+Lv4S/iK+L34fvhJ+Ij4uvh7+En4iPi1+Hv4SfiI+Lv4dvhJ+Ij4u/h
8+En+kr9/p4btc+Hn4iP6L1D+3v4ifiDthvaz8MnxE+0/dA+H74iPqIdhvb/
8BPxz+04tK+Ij46faKeh/T18RfxEfD38M3xFfER8Pfw9/ER8RLsO7e/hJ+Ij
4uvh7+En4g/afWh/D58QP9EeQ/t7+Ir4ifYc2t/DV/RY/f6eHbW/h5+Ib2jv
of09/EP8RHw9/D18RnxL/Dx/8PXw8/DX8NnwMfER8fXw9/Dp8A/x8/D18BHx
D/Hz8PXwH/Ej8f/wAfET8RHx9fD38BPxEfH18PfwE/ER8evw9/AR8Q8dObS/
h4/oy/X7eWbUvh5+IT6h44f27/AT8REtGtqPxEfEP7R4aH8P3xG/ER8Qfw9/
EV/RcUP7fvhm5sZ/wrfCT8RHxK/D32M/x5dz+dC+GX4iPiL+Hj4ffiI+opOH
9vnwE/ERnTK0v4efiD/o1KH9PHxC/ESnDe3z4SviIzp9aP8TP9Gj9ft9etR7
dP4nfiK+Hvs9viJ+In4d/h6+Ij4i/h6+HX4iPiL+Hj4ffiI+Iv4ePh9+Iv4g
/h4+Hz4hfiI+Hj4fviJ+Ij4ffh6+Ij4i/hx+H34iviF+HT4d/iF+oouH9u3w
WdnTXzq0v4ffic/pxKF9Rfb2j9Tv76lR+3z4iPiClg7t7+EP4iPiC+ID4j/i
x7pkaF8PXxE/EV8PnxBfET/RsqH9PXxF/ET8Onw6fEP8RNcM7e/hK+IDunZo
Xw8+Db+Gn8Wz8gUN8ffwn/AFTcTHw9/Df8RfdPXQ/h6+oTnx+/D92L95/8j+
yR6Kv+jh+v1+bdR+Hb6ileIX4t/hH1o5vh7+Hj6gVeLr4e/hC5qOj4e/h29o
HP8OHw8f0Drx4fDj8C1NxQf0Bz/Qa+PH4cvhW5offxC/Ed/Lgvhs+Hz4gB6q
X++To/b18A+9On4evh7+oLXi5+Hr4TtaNf4fPhz+pLXj6+Hv4U+aiT+IT4jf
aPX4gPiB+IrWja+Hv4fv583x4fDj8K0cHh8I/wgf0cL4evh7+Hg2jJ+Hr4eP
aKP4ePh6+Io2iM+H34ffaP34f/iA+IbeFB8PPw9f0nrxBfEH8Rc9WB+PJ0bt
z+Ef+qP4efh6+IfeEv8OXw//0Fvj6+Hj4Td6Y/w/fD38R5vG38MPxJe0cfw8
/EF8UavFn8SnxF+0WXw+/D/8RZvHt8Pvwz+0dXw7/Dx8P1+qX+9XR+3f4SPi
C3pxaF8Pf9C74uPhr+Ijenf8O3w8fEdbxffDB8SHtGX8QHxBfEbbxN/D58Mf
tEP8OXw6fEXvi4+Hn4eP6P3x8fDz8AVtFx8PPw8f0fbx8fDz8B9tG98P/w8/
0nviA+IH4iPaMX4evh4+ol3i4+Hn4fvZP/4bfhy+oT3j3+Hj4RvaK/4dPh6+
oQ/Ev8PHwy+0T3w7/Dv8UFvEl8RvxGe0R/w+fD98YLvH/8MHxFe0d/w9fD78
RPvGr8Pfwz/EN/SLof08/EMHxs/D988ndET8Ofw3fERfrD/Pr4za38NvtF/8
P3w9fEsP1OuPj/7LV3RIfD38PnxER8afw8fDR3RUfDx8Ovj1n2dPgS/nI1oU
Xw6fDh/RMfHj8OfwER0bHw5fDn/QcfHf8OPwDx0fnw3fDd/R0fHz8P/w9fDx
PFC/3g+N22e0OH4c/hy+ID6fL9brHxy3f4gP6J66Tx+3H4hf6N66zxi3b4gf
6L66zxy3L4hv6P66zxq3/+j++vg8Nmp/jr7CCfHp8O3wA/H/fKleP3vcPiC+
nwfrPmfc+5PvZs9gX2Av8cPsB+wF+H34ex6pH3/+uH0999V/3pfrvnDc+xKt
cI1s+we+Hz6fR+v1C8btD+IHerju88btG+ITeqjuc8e9V/lW9hP2EvYs385+
wl7C3uR72T/g/e1Dvh/+3/6B74m/6e76+U4b937hL7OPsE+wR3k5ewt7DfuW
72SPYX9h//GD7BnsG/jG+MheHtrHZV/yV9k/2FPg6/H0eHa8u73Hf89+wt7B
3uN/ZP9gr2Dv8T+zX7DPsB/5cfYa9hD2DD/JHsLewZ5Ea1yD2x7DnuI32SPY
H9iD/G32FPYT9hta3RrU9gr2H69kT2H/YP/xi+wh7B/sP36ZPYR9gv3Gr7JX
sH+w7/hZ9hT2R/YmP80ew77CHuPvs4ewf7A/+YfsIewZ7Ce0sDWj7QuAcX+d
vYl9iH2H/Yc9gn2CvZP9Bl7f3sEexP7J/sHewb7DHsSeAc9vP/Lb7C3sGexL
/lf2FPYX9h/2JPYS9hH2H/Yg9hL2EfYc9h32D/YO9hz2HfYP9gf2QT/KXsY+
xl7D3sM+wV7BXsS+w17DnsPew77E/sJ+wx7EvsO+wT7C/sI+xF7C/sE+wT7D
XsI+gu+R35GvkP/QvsPew97BHsG+w97DPsFewV7E3sN+wT7DvsR+xF7DHsKe
w77DHsLewX7EnsSewn7C3sGewh7B/sAeRNtb49p+wt7C/sJ+wV7BfsPew/4D
/27vMRMeHr9v72H/gee3T7DfsP+wV7B/sPew77CnsJew97A3scewr7DHsL+w
h7B/sD+xz7CHsGewn7CnsHewL8C37x4+G99t32H/YY9gn2CfYb9h32PvYL9i
r2H/YO9g32EPYs9g/2M/ou2tcW3PYF9i/2JPYX+B/7d/sZewj7BfsAewl7CP
sOew77B/sHew57DvsH+wP7CXsXexF7Gfsdew97BPsFewF7HvsNew57D3sI+w
v7DfsAex77BvsI/A4+8Rvh2vbo+hza0Bbg9h32SvYT9hL2HvYf9h/2DvYO9h
/2H/YJ9g72H/Ya9gv2A/Yv9hz2CvYW9iT2K/YR9h72F/Yi9hH2HvYf9hL2EP
YX9h/2EfYe9gn2GPYf9g/2nvYa9hD2rvYM+hXb55+D37j7eF58P72X+8Pfyf
PYI9hz2IfYL9gj2HfYc9g32EvYt9l72IvYc9hr2H/YS9hD2KvYa9hL2BvYf9
h72EfYN9h/2HvYO9gv2GvYf9At7entWeA39vn4A/1LLWiLZ/sCexd7FnsL+w
77B/tWewlzgmvKK9hH2E/Yi9iD2H/YZ9hv2FfYS9hv2HvYb9hn2GPY79jf0L
KNcexD7EfsM+wp7CHsQ+wX7h2PCT9hj2FvYi9iP2FPYLGBAsiA2vLa+9hr2H
PYS9BJ79svDmeHD7D/sMewR7B/sPbWwNaXuF2Wb1VO8X7BnsPexB7BvsJ+xN
7FHsN+wj7D3sGewx7BvsKewd7BXsE+xX7EXsL+w97CHsN+wP7BnsPew17B/s
Hew57D/sH/D49h/2Hfh8+wT7D3sQewX7BXsO+xL7DHsMexN7GPsNew17DG1s
TWj7CHsN+wx7CfsI+wp7CPsGewN7BHsJewL7AXsQexX7CfsE+w97EPsFfLT9
xpLw0vYQ9iL2I/YM9g32LvYn9hT2F/Yo9iL2GfYV9h72H/YU9hP2CPYf9hT2
E/Ye9h/2EPh/ew9ta41newh7F3sWexT7EfsPexB7CXsFew/7DvsL+w17D3sH
+wx7DHsPexH7BnsH+xR7H3sb+xr7EXsQewj7CvtG+zz7QPs++w97EHsK+wf7
D3sQewj7BfsPexB7BnsNexJ7EPsN+wj7BnsP+wj7B/sS/Ll9hX2GfYW9Br7d
HsA+xB7FvsKewp7DHgPvj3+3B7HfsH+wb7AHsQ+xd7BnsAexD7FvsEew57AP
sU+wF7D3sDexr7DPsD/R0taQtrewz7D3sE+wP7BHsdewR7B3wOPbH2yECR03
T2/vYn9iL2LvYQ9iD2AfYA9iz3F13Z8c937DPuQN9c9/Ytx7D+3q5fX68nHv
SexL7BfsCexN7GHsLWb3DKv1/mNTG7Rx7znsPTbBkI57X2EvsCHmddx7CnuL
DTCx497n2OPYz9jL2HPYWyzE0I57X2HPsTFGdtz7DnuR12FSx72vsP9YH4M7
7j2E/cO6mNm6/xOD1urN
        "]]]}, {}, {}, {}, {}, {}}, {{}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0csqBAAUBuAzzDDukVJTipSy9Q42ljbuhkGJIrnfJ8rCQ0iSJEmSpCQk
SdJk51GsfGRx+jqL01/nb87NdE0nImLWZKsiCsmIHNP2cVZwgtWcYi2nWf97
wwbOM8MlNnKVTdxgC/Ns5Q7buMtIRcwJSXCeRVxgMReZ5BJTXGYJV1jKVaa5
xjKus5wbrOAmK7nFKuZZzZuaiA5e87M44ooFXvKDF3znOd94xlee8oUnfOYx
n3jEBx7ynge84z5vOSZ3m6PsZI51HOFXUcQwD5nlJIfYzkF+K2WAj+znHvvY
xV5m2JP+e2N0//7xv78flmwzVg==
       "]], Line3DBox[CompressedData["
1:eJwt0T0oBGAYB/BX4RyT7UwyyXiLwaKUJJOPUSksBkTJKIuy3Wa+jUlZZJRN
yeDz3Pn+drh8Hc5HfleGt1/v8Pb/v89T1z/aNVISQhhzEhUhbJWG0FYWwjan
uMNl7jLHPdaXh7DPPqY4xwNuMs1IJIQMm3nISR5xkce85glr5Z1xozKEc2Z4
wSwvWeAVo1XeMMabYj5v2cg7tjLLHt5zgA8c5yOnmWOCT2yX+8xqvjClzyuT
fOMQ84zznZ/+9cFVfnKWBXbyizX85qn5/HCBvxwr3s11OKoXe5lmB9fZxBU2
cJ4xzjHCGeb1m+AlB7nNbq6xhUuMM8nS//39AYTOTkw=
       "]], 
      Line3DBox[CompressedData["
1:eJwt0T0oBAAUB/CHwx2jsCmGK/n+NvkogwlRVxbFqBCDEkkpiyIlxWBjJMuN
MrGpW1DKYFBnsIhikJ8y/PuN7/3fq51ZGJ8viIhFOU5GNPGc/bziGHOc5jOX
+M5NJlIR+6zkCdPMsoc3HOYDJ5nnLL+5yobiiHVplKw0yZs0S7okooVTbOUB
23jLdpaURnSwj51cZhfP2M0X9rDGnr3M8CihX3nENne5xg3OcZFTnOEoJzjA
Ibaxi3VMs4LVTDDJj6KIrzIz+co7PvKezebu8dM+k7xkLbeYL4wY4QWruMIn
/QZ5yhTnmfOcbh7yR5dpXrOeO3/3cs/M3x3///cLD8k3YQ==
       "]], 
      Line3DBox[CompressedData["
1:eJwt0TsvA1AUB/CLkkakQUQYJRZjIyINIoJIY2K2KH3pCzFa6l2PetVrtBst
Rrsv4DsYrBIJP4nh5Jdz7vC/956BVGWx3BRC2FDxWAg/kRA2o/ybccbhOrdZ
4TPL/GCJg80hFLnEAhtc4xvzjLSEkOM4s9xihk9M81PecmcIQ60hpFjXr/Cc
q7xgmpfM8IpZXjPHBvO84RpvWeAdi7xniQ8sMyGnLvdF/hmrPGWSJ+ziMd/d
v8ZHHjHPQ8Z5wC/v3+cr91jjLhe4w35W2cd5/9rLJHs4x27OspPTjHGKHZxk
OycY5RjbmGCEo2zmCAOH+f2/v19IcjOG
       "]], Line3DBox[CompressedData["
1:eJwt0bVVA2AAhdEfDh0NK7ASIzAAIbi7r4DEE0gCccXd5TARt6B455Zf8QaH
I0MjPSGEqEUGQtjvCyHWH8IB4zxkgkdMMsYU40wzwQyTzDLFHNM8ZoYnzDLP
HAs8ZpEnHNXNM8oCx1jkOE85wTNOssQpljnNCmdY5SxrnGOd82xwgU0ussVT
3TbP2GGJXZZ5zgovWOUla7xindds8IZN3rLFO7Z5zw4f2OUjl3SfuMxnrvCF
q3zlGt+4zndu8IOb/OQWv7jNb+7wh7v85R57///7A5cPTg0=
       "]], 
      Line3DBox[CompressedData["
1:eJwl0TVOBGAQBtCfwFYUuOvioaTELdSEC5BwAAgH4ATs4u5+CdzdJbRU3ICa
RygmL1N9+WaifQM9/QkhhEEznBpCfSSERTZwiY1cZhNX2MxVtnCNrVxnGzfY
zk12cIud3GYXd/ieGEKcKfbr5BBSecM03jKdd8zgPTP5wCw+MptPzOEzc/nC
PL4yn28s4DsL+cEijsgt5ihLOMZSjjPKCZZxkuWcYgWnWckZVnGW1ZxjDedZ
ywXGk0KIMcYruUO8ZD8v2MtzdvOMbTxlHU9YzuO/3jxihIf8cbcDfnOfn9zj
Lnf5lfT/v18qgzvK
       "]]}, {}, {}, {
      Line3DBox[{1351, 3031, 1353, 3033, 1368, 3035, 1370, 3037, 1372, 3039, 
       1374, 3041, 1376, 3043, 1378, 3045, 1380, 3047, 1382, 3049, 1384, 3051,
        1386, 3053, 1388, 3055, 1390, 3057, 1393}], 
      Line3DBox[{1366, 3032, 1367, 3034, 1369, 3036, 1371, 3038, 1373, 3040, 
       1375, 3042, 1377, 3044, 1379, 3046, 1381, 3048, 1383, 3050, 1385, 3052,
        1387, 3054, 1389, 3056, 1391, 3058, 1406}], 
      Line3DBox[{1407, 3059, 1409, 3061, 1424, 3063, 1426, 3065, 1428, 3067, 
       1430, 3069, 1432, 3071, 1434, 3073, 1436, 3075, 1438, 3077, 1440, 3079,
        1442, 3081, 1444, 3083, 1446, 3085, 1449}], 
      Line3DBox[{1422, 3060, 1423, 3062, 1425, 3064, 1427, 3066, 1429, 3068, 
       1431, 3070, 1433, 3072, 1435, 3074, 1437, 3076, 1439, 3078, 1441, 3080,
        1443, 3082, 1445, 3084, 1447, 3086, 1462}], 
      Line3DBox[{1463, 3087, 1465, 3089, 1480, 3091, 1482, 3093, 1484, 3095, 
       1486, 3097, 1488, 3099, 1490, 3101, 1492, 3103, 1494, 3105, 1496, 3107,
        1498, 3109, 1500, 3111, 1502, 3113, 1505}], 
      Line3DBox[{1478, 3088, 1479, 3090, 1481, 3092, 1483, 3094, 1485, 3096, 
       1487, 3098, 1489, 3100, 1491, 3102, 1493, 3104, 1495, 3106, 1497, 3108,
        1499, 3110, 1501, 3112, 1503, 3114, 1518}], 
      Line3DBox[{1519, 3115, 1521, 3117, 1536, 3119, 1538, 3121, 1540, 3123, 
       1542, 3125, 1544, 3127, 1546, 3129, 1548, 3131, 1550, 3133, 1552, 3135,
        1554, 3137, 1556, 3139, 1558, 3141, 1561}], 
      Line3DBox[{1534, 3116, 1535, 3118, 1537, 3120, 1539, 3122, 1541, 3124, 
       1543, 3126, 1545, 3128, 1547, 3130, 1549, 3132, 1551, 3134, 1553, 3136,
        1555, 3138, 1557, 3140, 1559, 3142, 1574}], 
      Line3DBox[{1575, 3143, 1577, 3145, 1592, 3147, 1594, 3149, 1596, 3151, 
       1598, 3153, 1600, 3155, 1602, 3157, 1604, 3159, 1606, 3161, 1608, 3163,
        1610, 3165, 1612, 3167, 1614, 3169, 1617}], 
      Line3DBox[{1590, 3144, 1591, 3146, 1593, 3148, 1595, 3150, 1597, 3152, 
       1599, 3154, 1601, 3156, 1603, 3158, 1605, 3160, 1607, 3162, 1609, 3164,
        1611, 3166, 1613, 3168, 1615, 3170, 1630}], 
      Line3DBox[{1631, 3171, 1633, 3173, 1648, 3175, 1650, 3177, 1652, 3179, 
       1654, 3181, 1656, 3183, 1658, 3185, 1660, 3187, 1662, 3189, 1664, 3191,
        1666, 3193, 1668, 3195, 1670, 3197, 1673}], 
      Line3DBox[{1646, 3172, 1647, 3174, 1649, 3176, 1651, 3178, 1653, 3180, 
       1655, 3182, 1657, 3184, 1659, 3186, 1661, 3188, 1663, 3190, 1665, 3192,
        1667, 3194, 1669, 3196, 1671, 3198, 1686}], 
      Line3DBox[{1242, 2569, 564, 2571, 579, 2573, 581, 2575, 583, 2577, 585, 
       2579, 587, 2581, 589, 2583, 591, 2585, 593, 2587, 595, 2589, 597, 2591,
        599, 2593, 601, 2595, 1272}], 
      Line3DBox[{1687, 3199, 1689, 3201, 1704, 3203, 1706, 3205, 1708, 3207, 
       1710, 3209, 1712, 3211, 1714, 3213, 1716, 3215, 1718, 3217, 1720, 3219,
        1722, 3221, 1724, 3223, 1726, 3225, 1729}], 
      Line3DBox[{1702, 3200, 1703, 3202, 1705, 3204, 1707, 3206, 1709, 3208, 
       1711, 3210, 1713, 3212, 1715, 3214, 1717, 3216, 1719, 3218, 1721, 3220,
        1723, 3222, 1725, 3224, 1727, 3226, 1742}], 
      Line3DBox[{1330, 2596, 602, 2594, 600, 2592, 598, 2590, 596, 2588, 594, 
       2586, 592, 2584, 590, 2582, 588, 2580, 586, 2578, 584, 2576, 582, 2574,
        580, 2572, 578, 2570, 577}], 
      Line3DBox[{1743, 3227, 1745, 3229, 1760, 3231, 1762, 3233, 1764, 3235, 
       1766, 3237, 1768, 3239, 1770, 3241, 1772, 3243, 1774, 3245, 1776, 3247,
        1778, 3249, 1780, 3251, 1782, 3253, 1785}], 
      Line3DBox[{1758, 3228, 1759, 3230, 1761, 3232, 1763, 3234, 1765, 3236, 
       1767, 3238, 1769, 3240, 1771, 3242, 1773, 3244, 1775, 3246, 1777, 3248,
        1779, 3250, 1781, 3252, 1783, 3254, 1798}], 
      Line3DBox[{1799, 3255, 1801, 3257, 1816, 3259, 1818, 3261, 1820, 3263, 
       1822, 3265, 1824, 3267, 1826, 3269, 1828, 3271, 1830, 3273, 1832, 3275,
        1834, 3277, 1836, 3279, 1838, 3281, 1841}], 
      Line3DBox[{1814, 3256, 1815, 3258, 1817, 3260, 1819, 3262, 1821, 3264, 
       1823, 3266, 1825, 3268, 1827, 3270, 1829, 3272, 1831, 3274, 1833, 3276,
        1835, 3278, 1837, 3280, 1839, 3282, 1854}], 
      Line3DBox[{1855, 3283, 1857, 3285, 1872, 3287, 1874, 3289, 1876, 3291, 
       1878, 3293, 1880, 3295, 1882, 3297, 1884, 3299, 1886, 3301, 1888, 3303,
        1890, 3305, 1892, 3307, 1894, 3309, 1897}], 
      Line3DBox[{1870, 3284, 1871, 3286, 1873, 3288, 1875, 3290, 1877, 3292, 
       1879, 3294, 1881, 3296, 1883, 3298, 1885, 3300, 1887, 3302, 1889, 3304,
        1891, 3306, 1893, 3308, 1895, 3310, 1910}], 
      Line3DBox[{1911, 3311, 1913, 3313, 1928, 3315, 1930, 3317, 1932, 3319, 
       1934, 3321, 1936, 3323, 1938, 3325, 1940, 3327, 1942, 3329, 1944, 3331,
        1946, 3333, 1948, 3335, 1950, 3337, 1953}], 
      Line3DBox[{1926, 3312, 1927, 3314, 1929, 3316, 1931, 3318, 1933, 3320, 
       1935, 3322, 1937, 3324, 1939, 3326, 1941, 3328, 1943, 3330, 1945, 3332,
        1947, 3334, 1949, 3336, 1951, 3338, 1966}], 
      Line3DBox[{1967, 3339, 1969, 3341, 1984, 3343, 1986, 3345, 1988, 3347, 
       1990, 3349, 1992, 3351, 1994, 3353, 1996, 3355, 1998, 3357, 2000, 3359,
        2002, 3361, 2004, 3363, 2006, 3365, 2009}], 
      Line3DBox[{1982, 3340, 1983, 3342, 1985, 3344, 1987, 3346, 1989, 3348, 
       1991, 3350, 1993, 3352, 1995, 3354, 1997, 3356, 1999, 3358, 2001, 3360,
        2003, 3362, 2005, 3364, 2007, 3366, 2022}], 
      Line3DBox[{2023, 3367, 2025, 3369, 2040, 3371, 2042, 3373, 2044, 3375, 
       2046, 3377, 2048, 3379, 2050, 3381, 2052, 3383, 2054, 3385, 2056, 3387,
        2058, 3389, 2060, 3391, 2062, 3393, 2065}], 
      Line3DBox[{2038, 3368, 2039, 3370, 2041, 3372, 2043, 3374, 2045, 3376, 
       2047, 3378, 2049, 3380, 2051, 3382, 2053, 3384, 2055, 3386, 2057, 3388,
        2059, 3390, 2061, 3392, 2063, 3394, 2078}], 
      Line3DBox[{2079, 3395, 2081, 3397, 2096, 3399, 2098, 3401, 2100, 3403, 
       2102, 3405, 2104, 3407, 2106, 3409, 2108, 3411, 2110, 3413, 2112, 3415,
        2114, 3417, 2116, 3419, 2118, 3421, 2121}], 
      Line3DBox[{2094, 3396, 2095, 3398, 2097, 3400, 2099, 3402, 2101, 3404, 
       2103, 3406, 2105, 3408, 2107, 3410, 2109, 3412, 2111, 3414, 2113, 3416,
        2115, 3418, 2117, 3420, 2119, 3422, 2134}], 
      Line3DBox[{2135, 4263, 1352, 4264, 1354, 4265, 1355, 4266, 1356, 4267, 
       1357, 4268, 1358, 4269, 1359, 4270, 1360, 4271, 1361, 4272, 1362, 4273,
        1363, 4274, 1364, 4275, 1365, 4276, 2163}], 
      Line3DBox[{2136, 4291, 1408, 4292, 1410, 4293, 1411, 4294, 1412, 4295, 
       1413, 4296, 1414, 4297, 1415, 4298, 1416, 4299, 1417, 4300, 1418, 4301,
        1419, 4302, 1420, 4303, 1421, 4304, 2164}], 
      Line3DBox[{2137, 4319, 1464, 4320, 1466, 4321, 1467, 4322, 1468, 4323, 
       1469, 4324, 1470, 4325, 1471, 4326, 1472, 4327, 1473, 4328, 1474, 4329,
        1475, 4330, 1476, 4331, 1477, 4332, 2165}], 
      Line3DBox[{2138, 4347, 1520, 4348, 1522, 4349, 1523, 4350, 1524, 4351, 
       1525, 4352, 1526, 4353, 1527, 4354, 1528, 4355, 1529, 4356, 1530, 4357,
        1531, 4358, 1532, 4359, 1533, 4360, 2166}], 
      Line3DBox[{2139, 4375, 1576, 4376, 1578, 4377, 1579, 4378, 1580, 4379, 
       1581, 4380, 1582, 4381, 1583, 4382, 1584, 4383, 1585, 4384, 1586, 4385,
        1587, 4386, 1588, 4387, 1589, 4388, 2167}], 
      Line3DBox[{2140, 4403, 1632, 4404, 1634, 4405, 1635, 4406, 1636, 4407, 
       1637, 4408, 1638, 4409, 1639, 4410, 1640, 4411, 1641, 4412, 1642, 4413,
        1643, 4414, 1644, 4415, 1645, 4416, 2168}], 
      Line3DBox[{2141, 4431, 1688, 4432, 1690, 4433, 1691, 4434, 1692, 4435, 
       1693, 4436, 1694, 4437, 1695, 4438, 1696, 4439, 1697, 4440, 1698, 4441,
        1699, 4442, 1700, 4443, 1701, 4444, 2169}], 
      Line3DBox[{562, 3801, 563, 3802, 565, 3803, 566, 3804, 567, 3805, 568, 
       3806, 569, 3807, 570, 3808, 571, 3809, 572, 3810, 573, 3811, 574, 3812,
        575, 3813, 576, 3814, 1287}], 
      Line3DBox[{2142, 4459, 1744, 4460, 1746, 4461, 1747, 4462, 1748, 4463, 
       1749, 4464, 1750, 4465, 1751, 4466, 1752, 4467, 1753, 4468, 1754, 4469,
        1755, 4470, 1756, 4471, 1757, 4472, 2170}], 
      Line3DBox[{2143, 4487, 1800, 4488, 1802, 4489, 1803, 4490, 1804, 4491, 
       1805, 4492, 1806, 4493, 1807, 4494, 1808, 4495, 1809, 4496, 1810, 4497,
        1811, 4498, 1812, 4499, 1813, 4500, 2171}], 
      Line3DBox[{2144, 4515, 1856, 4516, 1858, 4517, 1859, 4518, 1860, 4519, 
       1861, 4520, 1862, 4521, 1863, 4522, 1864, 4523, 1865, 4524, 1866, 4525,
        1867, 4526, 1868, 4527, 1869, 4528, 2172}], 
      Line3DBox[{2145, 4543, 1912, 4544, 1914, 4545, 1915, 4546, 1916, 4547, 
       1917, 4548, 1918, 4549, 1919, 4550, 1920, 4551, 1921, 4552, 1922, 4553,
        1923, 4554, 1924, 4555, 1925, 4556, 2173}], 
      Line3DBox[{2146, 4571, 1968, 4572, 1970, 4573, 1971, 4574, 1972, 4575, 
       1973, 4576, 1974, 4577, 1975, 4578, 1976, 4579, 1977, 4580, 1978, 4581,
        1979, 4582, 1980, 4583, 1981, 4584, 2174}], 
      Line3DBox[{2147, 4599, 2024, 4600, 2026, 4601, 2027, 4602, 2028, 4603, 
       2029, 4604, 2030, 4605, 2031, 4606, 2032, 4607, 2033, 4608, 2034, 4609,
        2035, 4610, 2036, 4611, 2037, 4612, 2175}], 
      Line3DBox[{2148, 4627, 2080, 4628, 2082, 4629, 2083, 4630, 2084, 4631, 
       2085, 4632, 2086, 4633, 2087, 4634, 2088, 4635, 2089, 4636, 2090, 4637,
        2091, 4638, 2092, 4639, 2093, 4640, 2176}], 
      Line3DBox[{2149, 4641, 2120, 4642, 2122, 4643, 2123, 4644, 2124, 4645, 
       2125, 4646, 2126, 4647, 2127, 4648, 2128, 4649, 2129, 4650, 2130, 4651,
        2131, 4652, 2132, 4653, 2133, 4654, 2190}], 
      Line3DBox[{2150, 4613, 2064, 4614, 2066, 4615, 2067, 4616, 2068, 4617, 
       2069, 4618, 2070, 4619, 2071, 4620, 2072, 4621, 2073, 4622, 2074, 4623,
        2075, 4624, 2076, 4625, 2077, 4626, 2189}], 
      Line3DBox[{2151, 4585, 2008, 4586, 2010, 4587, 2011, 4588, 2012, 4589, 
       2013, 4590, 2014, 4591, 2015, 4592, 2016, 4593, 2017, 4594, 2018, 4595,
        2019, 4596, 2020, 4597, 2021, 4598, 2188}], 
      Line3DBox[{2152, 4557, 1952, 4558, 1954, 4559, 1955, 4560, 1956, 4561, 
       1957, 4562, 1958, 4563, 1959, 4564, 1960, 4565, 1961, 4566, 1962, 4567,
        1963, 4568, 1964, 4569, 1965, 4570, 2187}], 
      Line3DBox[{2153, 4529, 1896, 4530, 1898, 4531, 1899, 4532, 1900, 4533, 
       1901, 4534, 1902, 4535, 1903, 4536, 1904, 4537, 1905, 4538, 1906, 4539,
        1907, 4540, 1908, 4541, 1909, 4542, 2186}], 
      Line3DBox[{2154, 4501, 1840, 4502, 1842, 4503, 1843, 4504, 1844, 4505, 
       1845, 4506, 1846, 4507, 1847, 4508, 1848, 4509, 1849, 4510, 1850, 4511,
        1851, 4512, 1852, 4513, 1853, 4514, 2185}], 
      Line3DBox[{2155, 4473, 1784, 4474, 1786, 4475, 1787, 4476, 1788, 4477, 
       1789, 4478, 1790, 4479, 1791, 4480, 1792, 4481, 1793, 4482, 1794, 4483,
        1795, 4484, 1796, 4485, 1797, 4486, 2184}], 
      Line3DBox[{604, 3815, 603, 3816, 605, 3817, 606, 3818, 607, 3819, 608, 
       3820, 609, 3821, 610, 3822, 611, 3823, 612, 3824, 613, 3825, 614, 3826,
        615, 3827, 616, 3828, 617}], 
      Line3DBox[{2156, 4445, 1728, 4446, 1730, 4447, 1731, 4448, 1732, 4449, 
       1733, 4450, 1734, 4451, 1735, 4452, 1736, 4453, 1737, 4454, 1738, 4455,
        1739, 4456, 1740, 4457, 1741, 4458, 2183}], 
      Line3DBox[{2157, 4417, 1672, 4418, 1674, 4419, 1675, 4420, 1676, 4421, 
       1677, 4422, 1678, 4423, 1679, 4424, 1680, 4425, 1681, 4426, 1682, 4427,
        1683, 4428, 1684, 4429, 1685, 4430, 2182}], 
      Line3DBox[{2158, 4389, 1616, 4390, 1618, 4391, 1619, 4392, 1620, 4393, 
       1621, 4394, 1622, 4395, 1623, 4396, 1624, 4397, 1625, 4398, 1626, 4399,
        1627, 4400, 1628, 4401, 1629, 4402, 2181}], 
      Line3DBox[{2159, 4361, 1560, 4362, 1562, 4363, 1563, 4364, 1564, 4365, 
       1565, 4366, 1566, 4367, 1567, 4368, 1568, 4369, 1569, 4370, 1570, 4371,
        1571, 4372, 1572, 4373, 1573, 4374, 2180}], 
      Line3DBox[{2160, 4333, 1504, 4334, 1506, 4335, 1507, 4336, 1508, 4337, 
       1509, 4338, 1510, 4339, 1511, 4340, 1512, 4341, 1513, 4342, 1514, 4343,
        1515, 4344, 1516, 4345, 1517, 4346, 2179}], 
      Line3DBox[{2161, 4305, 1448, 4306, 1450, 4307, 1451, 4308, 1452, 4309, 
       1453, 4310, 1454, 4311, 1455, 4312, 1456, 4313, 1457, 4314, 1458, 4315,
        1459, 4316, 1460, 4317, 1461, 4318, 2178}], 
      Line3DBox[{2162, 4277, 1392, 4278, 1394, 4279, 1395, 4280, 1396, 4281, 
       1397, 4282, 1398, 4283, 1399, 4284, 1400, 4285, 1401, 4286, 1402, 4287,
        1403, 4288, 1404, 4289, 1405, 4290, 2177}]}, {
      Line3DBox[{2192, 3031, 2193, 3059, 2429, 3087, 2457, 3115, 2485, 3143, 
       2513, 3171, 2541, 3199, 2569, 3227, 2597, 3255, 2625, 3283, 2653, 3311,
        2681, 3339, 2709, 3367, 2737, 3395, 2765}], 
      Line3DBox[{2206, 3032, 2207, 3060, 2430, 3088, 2458, 3116, 2486, 3144, 
       2514, 3172, 2542, 3200, 2570, 3228, 2598, 3256, 2626, 3284, 2654, 3312,
        2682, 3340, 2710, 3368, 2738, 3396, 2779}], 
      Line3DBox[{2209, 3033, 2210, 3061, 2431, 3089, 2459, 3117, 2487, 3145, 
       2515, 3173, 2543, 3201, 2571, 3229, 2599, 3257, 2627, 3285, 2655, 3313,
        2683, 3341, 2711, 3369, 2739, 3397, 2780}], 
      Line3DBox[{2223, 3034, 2224, 3062, 2432, 3090, 2460, 3118, 2488, 3146, 
       2516, 3174, 2544, 3202, 2572, 3230, 2600, 3258, 2628, 3286, 2656, 3314,
        2684, 3342, 2712, 3370, 2740, 3398, 2794}], 
      Line3DBox[{2226, 3035, 2227, 3063, 2433, 3091, 2461, 3119, 2489, 3147, 
       2517, 3175, 2545, 3203, 2573, 3231, 2601, 3259, 2629, 3287, 2657, 3315,
        2685, 3343, 2713, 3371, 2741, 3399, 2795}], 
      Line3DBox[{2240, 3036, 2241, 3064, 2434, 3092, 2462, 3120, 2490, 3148, 
       2518, 3176, 2546, 3204, 2574, 3232, 2602, 3260, 2630, 3288, 2658, 3316,
        2686, 3344, 2714, 3372, 2742, 3400, 2809}], 
      Line3DBox[{2243, 3037, 2244, 3065, 2435, 3093, 2463, 3121, 2491, 3149, 
       2519, 3177, 2547, 3205, 2575, 3233, 2603, 3261, 2631, 3289, 2659, 3317,
        2687, 3345, 2715, 3373, 2743, 3401, 2810}], 
      Line3DBox[{2257, 3038, 2258, 3066, 2436, 3094, 2464, 3122, 2492, 3150, 
       2520, 3178, 2548, 3206, 2576, 3234, 2604, 3262, 2632, 3290, 2660, 3318,
        2688, 3346, 2716, 3374, 2744, 3402, 2824}], 
      Line3DBox[{2260, 3039, 2261, 3067, 2437, 3095, 2465, 3123, 2493, 3151, 
       2521, 3179, 2549, 3207, 2577, 3235, 2605, 3263, 2633, 3291, 2661, 3319,
        2689, 3347, 2717, 3375, 2745, 3403, 2825}], 
      Line3DBox[{2274, 3040, 2275, 3068, 2438, 3096, 2466, 3124, 2494, 3152, 
       2522, 3180, 2550, 3208, 2578, 3236, 2606, 3264, 2634, 3292, 2662, 3320,
        2690, 3348, 2718, 3376, 2746, 3404, 2839}], 
      Line3DBox[{2277, 3041, 2278, 3069, 2439, 3097, 2467, 3125, 2495, 3153, 
       2523, 3181, 2551, 3209, 2579, 3237, 2607, 3265, 2635, 3293, 2663, 3321,
        2691, 3349, 2719, 3377, 2747, 3405, 2840}], 
      Line3DBox[{2291, 3042, 2292, 3070, 2440, 3098, 2468, 3126, 2496, 3154, 
       2524, 3182, 2552, 3210, 2580, 3238, 2608, 3266, 2636, 3294, 2664, 3322,
        2692, 3350, 2720, 3378, 2748, 3406, 2854}], 
      Line3DBox[{2294, 3043, 2295, 3071, 2441, 3099, 2469, 3127, 2497, 3155, 
       2525, 3183, 2553, 3211, 2581, 3239, 2609, 3267, 2637, 3295, 2665, 3323,
        2693, 3351, 2721, 3379, 2749, 3407, 2855}], 
      Line3DBox[{148, 1379, 149, 1435, 310, 1491, 366, 1547, 422, 1603, 478, 
       1659, 534, 1715, 590, 1771, 646, 1827, 702, 1883, 758, 1939, 814, 1995,
        870, 2051, 926, 2107, 1073}], 
      Line3DBox[{2308, 3044, 2309, 3072, 2442, 3100, 2470, 3128, 2498, 3156, 
       2526, 3184, 2554, 3212, 2582, 3240, 2610, 3268, 2638, 3296, 2666, 3324,
        2694, 3352, 2722, 3380, 2750, 3408, 2869}], 
      Line3DBox[{134, 1378, 135, 1434, 309, 1490, 365, 1546, 421, 1602, 477, 
       1658, 533, 1714, 589, 1770, 645, 1826, 701, 1882, 757, 1938, 813, 1994,
        869, 2050, 925, 2106, 1257}], 
      Line3DBox[{2311, 3045, 2312, 3073, 2443, 3101, 2471, 3129, 2499, 3157, 
       2527, 3185, 2555, 3213, 2583, 3241, 2611, 3269, 2639, 3297, 2667, 3325,
        2695, 3353, 2723, 3381, 2751, 3409, 2870}], 
      Line3DBox[{2325, 3046, 2326, 3074, 2444, 3102, 2472, 3130, 2500, 3158, 
       2528, 3186, 2556, 3214, 2584, 3242, 2612, 3270, 2640, 3298, 2668, 3326,
        2696, 3354, 2724, 3382, 2752, 3410, 2884}], 
      Line3DBox[{2328, 3047, 2329, 3075, 2445, 3103, 2473, 3131, 2501, 3159, 
       2529, 3187, 2557, 3215, 2585, 3243, 2613, 3271, 2641, 3299, 2669, 3327,
        2697, 3355, 2725, 3383, 2753, 3411, 2885}], 
      Line3DBox[{2342, 3048, 2343, 3076, 2446, 3104, 2474, 3132, 2502, 3160, 
       2530, 3188, 2558, 3216, 2586, 3244, 2614, 3272, 2642, 3300, 2670, 3328,
        2698, 3356, 2726, 3384, 2754, 3412, 2899}], 
      Line3DBox[{2345, 3049, 2346, 3077, 2447, 3105, 2475, 3133, 2503, 3161, 
       2531, 3189, 2559, 3217, 2587, 3245, 2615, 3273, 2643, 3301, 2671, 3329,
        2699, 3357, 2727, 3385, 2755, 3413, 2900}], 
      Line3DBox[{2359, 3050, 2360, 3078, 2448, 3106, 2476, 3134, 2504, 3162, 
       2532, 3190, 2560, 3218, 2588, 3246, 2616, 3274, 2644, 3302, 2672, 3330,
        2700, 3358, 2728, 3386, 2756, 3414, 2914}], 
      Line3DBox[{2362, 3051, 2363, 3079, 2449, 3107, 2477, 3135, 2505, 3163, 
       2533, 3191, 2561, 3219, 2589, 3247, 2617, 3275, 2645, 3303, 2673, 3331,
        2701, 3359, 2729, 3387, 2757, 3415, 2915}], 
      Line3DBox[{2376, 3052, 2377, 3080, 2450, 3108, 2478, 3136, 2506, 3164, 
       2534, 3192, 2562, 3220, 2590, 3248, 2618, 3276, 2646, 3304, 2674, 3332,
        2702, 3360, 2730, 3388, 2758, 3416, 2929}], 
      Line3DBox[{2379, 3053, 2380, 3081, 2451, 3109, 2479, 3137, 2507, 3165, 
       2535, 3193, 2563, 3221, 2591, 3249, 2619, 3277, 2647, 3305, 2675, 3333,
        2703, 3361, 2731, 3389, 2759, 3417, 2930}], 
      Line3DBox[{2393, 3054, 2394, 3082, 2452, 3110, 2480, 3138, 2508, 3166, 
       2536, 3194, 2564, 3222, 2592, 3250, 2620, 3278, 2648, 3306, 2676, 3334,
        2704, 3362, 2732, 3390, 2760, 3418, 2944}], 
      Line3DBox[{2396, 3055, 2397, 3083, 2453, 3111, 2481, 3139, 2509, 3167, 
       2537, 3195, 2565, 3223, 2593, 3251, 2621, 3279, 2649, 3307, 2677, 3335,
        2705, 3363, 2733, 3391, 2761, 3419, 2945}], 
      Line3DBox[{2410, 3056, 2411, 3084, 2454, 3112, 2482, 3140, 2510, 3168, 
       2538, 3196, 2566, 3224, 2594, 3252, 2622, 3280, 2650, 3308, 2678, 3336,
        2706, 3364, 2734, 3392, 2762, 3420, 2959}], 
      Line3DBox[{2413, 3057, 2414, 3085, 2455, 3113, 2483, 3141, 2511, 3169, 
       2539, 3197, 2567, 3225, 2595, 3253, 2623, 3281, 2651, 3309, 2679, 3337,
        2707, 3365, 2735, 3393, 2763, 3421, 2960}], 
      Line3DBox[{2427, 3058, 2428, 3086, 2456, 3114, 2484, 3142, 2512, 3170, 
       2540, 3198, 2568, 3226, 2596, 3254, 2624, 3282, 2652, 3310, 2680, 3338,
        2708, 3366, 2736, 3394, 2764, 3422, 2974}], 
      Line3DBox[{2975, 4655, 2191, 4656, 2194, 4657, 2195, 4658, 2196, 4659, 
       2197, 4660, 2198, 4661, 2199, 4662, 2200, 4663, 2201, 4664, 2202, 4665,
        2203, 4666, 2204, 4667, 2205, 4668, 3002}], 
      Line3DBox[{2976, 4669, 2208, 4670, 2211, 4671, 2212, 4672, 2213, 4673, 
       2214, 4674, 2215, 4675, 2216, 4676, 2217, 4677, 2218, 4678, 2219, 4679,
        2220, 4680, 2221, 4681, 2222, 4682, 3001}], 
      Line3DBox[{2977, 4683, 2225, 4684, 2228, 4685, 2229, 4686, 2230, 4687, 
       2231, 4688, 2232, 4689, 2233, 4690, 2234, 4691, 2235, 4692, 2236, 4693,
        2237, 4694, 2238, 4695, 2239, 4696, 3000}], 
      Line3DBox[{2978, 4697, 2242, 4698, 2245, 4699, 2246, 4700, 2247, 4701, 
       2248, 4702, 2249, 4703, 2250, 4704, 2251, 4705, 2252, 4706, 2253, 4707,
        2254, 4708, 2255, 4709, 2256, 4710, 2999}], 
      Line3DBox[{2979, 4711, 2259, 4712, 2262, 4713, 2263, 4714, 2264, 4715, 
       2265, 4716, 2266, 4717, 2267, 4718, 2268, 4719, 2269, 4720, 2270, 4721,
        2271, 4722, 2272, 4723, 2273, 4724, 2998}], 
      Line3DBox[{2980, 4725, 2276, 4726, 2279, 4727, 2280, 4728, 2281, 4729, 
       2282, 4730, 2283, 4731, 2284, 4732, 2285, 4733, 2286, 4734, 2287, 4735,
        2288, 4736, 2289, 4737, 2290, 4738, 2997}], 
      Line3DBox[{1186, 3535, 133, 3536, 136, 3537, 137, 3538, 138, 3539, 139, 
       3540, 140, 3541, 141, 3542, 142, 3543, 143, 3544, 144, 3545, 145, 3546,
        146, 3547, 147, 3548, 1214}], 
      Line3DBox[{2981, 4739, 2293, 4740, 2296, 4741, 2297, 4742, 2298, 4743, 
       2299, 4744, 2300, 4745, 2301, 4746, 2302, 4747, 2303, 4748, 2304, 4749,
        2305, 4750, 2306, 4751, 2307, 4752, 2996}], 
      Line3DBox[{2982, 4753, 2310, 4754, 2313, 4755, 2314, 4756, 2315, 4757, 
       2316, 4758, 2317, 4759, 2318, 4760, 2319, 4761, 2320, 4762, 2321, 4763,
        2322, 4764, 2323, 4765, 2324, 4766, 2995}], 
      Line3DBox[{2983, 4767, 2327, 4768, 2330, 4769, 2331, 4770, 2332, 4771, 
       2333, 4772, 2334, 4773, 2335, 4774, 2336, 4775, 2337, 4776, 2338, 4777,
        2339, 4778, 2340, 4779, 2341, 4780, 2994}], 
      Line3DBox[{2984, 4781, 2344, 4782, 2347, 4783, 2348, 4784, 2349, 4785, 
       2350, 4786, 2351, 4787, 2352, 4788, 2353, 4789, 2354, 4790, 2355, 4791,
        2356, 4792, 2357, 4793, 2358, 4794, 2993}], 
      Line3DBox[{2985, 4795, 2361, 4796, 2364, 4797, 2365, 4798, 2366, 4799, 
       2367, 4800, 2368, 4801, 2369, 4802, 2370, 4803, 2371, 4804, 2372, 4805,
        2373, 4806, 2374, 4807, 2375, 4808, 2992}], 
      Line3DBox[{2986, 4809, 2378, 4810, 2381, 4811, 2382, 4812, 2383, 4813, 
       2384, 4814, 2385, 4815, 2386, 4816, 2387, 4817, 2388, 4818, 2389, 4819,
        2390, 4820, 2391, 4821, 2392, 4822, 2991}], 
      Line3DBox[{2987, 4823, 2395, 4824, 2398, 4825, 2399, 4826, 2400, 4827, 
       2401, 4828, 2402, 4829, 2403, 4830, 2404, 4831, 2405, 4832, 2406, 4833,
        2407, 4834, 2408, 4835, 2409, 4836, 2990}], 
      Line3DBox[{2988, 4837, 2412, 4838, 2415, 4839, 2416, 4840, 2417, 4841, 
       2418, 4842, 2419, 4843, 2420, 4844, 2421, 4845, 2422, 4846, 2423, 4847,
        2424, 4848, 2425, 4849, 2426, 4850, 2989}], 
      Line3DBox[{3003, 4851, 2766, 4852, 2767, 4853, 2768, 4854, 2769, 4855, 
       2770, 4856, 2771, 4857, 2772, 4858, 2773, 4859, 2774, 4860, 2775, 4861,
        2776, 4862, 2777, 4863, 2778, 4864, 3017}], 
      Line3DBox[{3004, 4865, 2781, 4866, 2782, 4867, 2783, 4868, 2784, 4869, 
       2785, 4870, 2786, 4871, 2787, 4872, 2788, 4873, 2789, 4874, 2790, 4875,
        2791, 4876, 2792, 4877, 2793, 4878, 3018}], 
      Line3DBox[{3005, 4879, 2796, 4880, 2797, 4881, 2798, 4882, 2799, 4883, 
       2800, 4884, 2801, 4885, 2802, 4886, 2803, 4887, 2804, 4888, 2805, 4889,
        2806, 4890, 2807, 4891, 2808, 4892, 3019}], 
      Line3DBox[{3006, 4893, 2811, 4894, 2812, 4895, 2813, 4896, 2814, 4897, 
       2815, 4898, 2816, 4899, 2817, 4900, 2818, 4901, 2819, 4902, 2820, 4903,
        2821, 4904, 2822, 4905, 2823, 4906, 3020}], 
      Line3DBox[{3007, 4907, 2826, 4908, 2827, 4909, 2828, 4910, 2829, 4911, 
       2830, 4912, 2831, 4913, 2832, 4914, 2833, 4915, 2834, 4916, 2835, 4917,
        2836, 4918, 2837, 4919, 2838, 4920, 3021}], 
      Line3DBox[{3008, 4921, 2841, 4922, 2842, 4923, 2843, 4924, 2844, 4925, 
       2845, 4926, 2846, 4927, 2847, 4928, 2848, 4929, 2849, 4930, 2850, 4931,
        2851, 4932, 2852, 4933, 2853, 4934, 3022}], 
      Line3DBox[{3009, 4935, 2856, 4936, 2857, 4937, 2858, 4938, 2859, 4939, 
       2860, 4940, 2861, 4941, 2862, 4942, 2863, 4943, 2864, 4944, 2865, 4945,
        2866, 4946, 2867, 4947, 2868, 4948, 3023}], 
      Line3DBox[{1059, 4095, 1060, 4096, 1061, 4097, 1062, 4098, 1063, 4099, 
       1064, 4100, 1065, 4101, 1066, 4102, 1067, 4103, 1068, 4104, 1069, 4105,
        1070, 4106, 1071, 4107, 1072, 4108, 1302}], 
      Line3DBox[{3010, 4949, 2871, 4950, 2872, 4951, 2873, 4952, 2874, 4953, 
       2875, 4954, 2876, 4955, 2877, 4956, 2878, 4957, 2879, 4958, 2880, 4959,
        2881, 4960, 2882, 4961, 2883, 4962, 3024}], 
      Line3DBox[{3011, 4963, 2886, 4964, 2887, 4965, 2888, 4966, 2889, 4967, 
       2890, 4968, 2891, 4969, 2892, 4970, 2893, 4971, 2894, 4972, 2895, 4973,
        2896, 4974, 2897, 4975, 2898, 4976, 3025}], 
      Line3DBox[{3012, 4977, 2901, 4978, 2902, 4979, 2903, 4980, 2904, 4981, 
       2905, 4982, 2906, 4983, 2907, 4984, 2908, 4985, 2909, 4986, 2910, 4987,
        2911, 4988, 2912, 4989, 2913, 4990, 3026}], 
      Line3DBox[{3013, 4991, 2916, 4992, 2917, 4993, 2918, 4994, 2919, 4995, 
       2920, 4996, 2921, 4997, 2922, 4998, 2923, 4999, 2924, 5000, 2925, 5001,
        2926, 5002, 2927, 5003, 2928, 5004, 3027}], 
      Line3DBox[{3014, 5005, 2931, 5006, 2932, 5007, 2933, 5008, 2934, 5009, 
       2935, 5010, 2936, 5011, 2937, 5012, 2938, 5013, 2939, 5014, 2940, 5015,
        2941, 5016, 2942, 5017, 2943, 5018, 3028}], 
      Line3DBox[{3015, 5019, 2946, 5020, 2947, 5021, 2948, 5022, 2949, 5023, 
       2950, 5024, 2951, 5025, 2952, 5026, 2953, 5027, 2954, 5028, 2955, 5029,
        2956, 5030, 2957, 5031, 2958, 5032, 3029}], 
      Line3DBox[{3016, 5033, 2961, 5034, 2962, 5035, 2963, 5036, 2964, 5037, 
       2965, 5038, 2966, 5039, 2967, 5040, 2968, 5041, 2969, 5042, 2970, 5043,
        2971, 5044, 2972, 5045, 2973, 5046, 3030}]}, {
      Line3DBox[{3423, 4263, 3425, 4291, 3661, 4319, 3689, 4347, 3717, 4375, 
       3745, 4403, 3773, 4431, 3801, 4459, 3829, 4487, 3857, 4515, 3885, 4543,
        3913, 4571, 3941, 4599, 3969, 4627, 3998}], 
      Line3DBox[{3426, 4264, 3428, 4292, 3662, 4320, 3690, 4348, 3718, 4376, 
       3746, 4404, 3774, 4432, 3802, 4460, 3830, 4488, 3858, 4516, 3886, 4544,
        3914, 4572, 3942, 4600, 3970, 4628, 4000}], 
      Line3DBox[{3429, 4265, 3431, 4293, 3663, 4321, 3691, 4349, 3719, 4377, 
       3747, 4405, 3775, 4433, 3803, 4461, 3831, 4489, 3859, 4517, 3887, 4545,
        3915, 4573, 3943, 4601, 3971, 4629, 4002}], 
      Line3DBox[{3432, 4266, 3434, 4294, 3664, 4322, 3692, 4350, 3720, 4378, 
       3748, 4406, 3776, 4434, 3804, 4462, 3832, 4490, 3860, 4518, 3888, 4546,
        3916, 4574, 3944, 4602, 3972, 4630, 4004}], 
      Line3DBox[{3435, 4267, 3437, 4295, 3665, 4323, 3693, 4351, 3721, 4379, 
       3749, 4407, 3777, 4435, 3805, 4463, 3833, 4491, 3861, 4519, 3889, 4547,
        3917, 4575, 3945, 4603, 3973, 4631, 4006}], 
      Line3DBox[{3438, 4268, 3440, 4296, 3666, 4324, 3694, 4352, 3722, 4380, 
       3750, 4408, 3778, 4436, 3806, 4464, 3834, 4492, 3862, 4520, 3890, 4548,
        3918, 4576, 3946, 4604, 3974, 4632, 4008}], 
      Line3DBox[{23, 1359, 25, 1415, 290, 1471, 346, 1527, 402, 1583, 458, 
       1639, 514, 1695, 570, 1751, 626, 1807, 682, 1863, 738, 1919, 794, 1975,
        850, 2031, 906, 2087, 969}], 
      Line3DBox[{3441, 4269, 3443, 4297, 3667, 4325, 3695, 4353, 3723, 4381, 
       3751, 4409, 3779, 4437, 3807, 4465, 3835, 4493, 3863, 4521, 3891, 4549,
        3919, 4577, 3947, 4605, 3975, 4633, 4010}], 
      Line3DBox[{3444, 4270, 3446, 4298, 3668, 4326, 3696, 4354, 3724, 4382, 
       3752, 4410, 3780, 4438, 3808, 4466, 3836, 4494, 3864, 4522, 3892, 4550,
        3920, 4578, 3948, 4606, 3976, 4634, 4012}], 
      Line3DBox[{3447, 4271, 3449, 4299, 3669, 4327, 3697, 4355, 3725, 4383, 
       3753, 4411, 3781, 4439, 3809, 4467, 3837, 4495, 3865, 4523, 3893, 4551,
        3921, 4579, 3949, 4607, 3977, 4635, 4014}], 
      Line3DBox[{3450, 4272, 3452, 4300, 3670, 4328, 3698, 4356, 3726, 4384, 
       3754, 4412, 3782, 4440, 3810, 4468, 3838, 4496, 3866, 4524, 3894, 4552,
        3922, 4580, 3950, 4608, 3978, 4636, 4016}], 
      Line3DBox[{3453, 4273, 3455, 4301, 3671, 4329, 3699, 4357, 3727, 4385, 
       3755, 4413, 3783, 4441, 3811, 4469, 3839, 4497, 3867, 4525, 3895, 4553,
        3923, 4581, 3951, 4609, 3979, 4637, 4018}], 
      Line3DBox[{3456, 4274, 3458, 4302, 3672, 4330, 3700, 4358, 3728, 4386, 
       3756, 4414, 3784, 4442, 3812, 4470, 3840, 4498, 3868, 4526, 3896, 4554,
        3924, 4582, 3952, 4610, 3980, 4638, 4020}], 
      Line3DBox[{3459, 4275, 3461, 4303, 3673, 4331, 3701, 4359, 3729, 4387, 
       3757, 4415, 3785, 4443, 3813, 4471, 3841, 4499, 3869, 4527, 3897, 4555,
        3925, 4583, 3953, 4611, 3981, 4639, 4022}], 
      Line3DBox[{3462, 4276, 3464, 4304, 3674, 4332, 3702, 4360, 3730, 4388, 
       3758, 4416, 3786, 4444, 3814, 4472, 3842, 4500, 3870, 4528, 3898, 4556,
        3926, 4584, 3954, 4612, 3982, 4640, 4024}], 
      Line3DBox[{3633, 4277, 3634, 4305, 3675, 4333, 3703, 4361, 3731, 4389, 
       3759, 4417, 3787, 4445, 3815, 4473, 3843, 4501, 3871, 4529, 3899, 4557,
        3927, 4585, 3955, 4613, 3983, 4641, 4193}], 
      Line3DBox[{3635, 4278, 3636, 4306, 3676, 4334, 3704, 4362, 3732, 4390, 
       3760, 4418, 3788, 4446, 3816, 4474, 3844, 4502, 3872, 4530, 3900, 4558,
        3928, 4586, 3956, 4614, 3984, 4642, 4194}], 
      Line3DBox[{3637, 4279, 3638, 4307, 3677, 4335, 3705, 4363, 3733, 4391, 
       3761, 4419, 3789, 4447, 3817, 4475, 3845, 4503, 3873, 4531, 3901, 4559,
        3929, 4587, 3957, 4615, 3985, 4643, 4195}], 
      Line3DBox[{3639, 4280, 3640, 4308, 3678, 4336, 3706, 4364, 3734, 4392, 
       3762, 4420, 3790, 4448, 3818, 4476, 3846, 4504, 3874, 4532, 3902, 4560,
        3930, 4588, 3958, 4616, 3986, 4644, 4196}], 
      Line3DBox[{3641, 4281, 3642, 4309, 3679, 4337, 3707, 4365, 3735, 4393, 
       3763, 4421, 3791, 4449, 3819, 4477, 3847, 4505, 3875, 4533, 3903, 4561,
        3931, 4589, 3959, 4617, 3987, 4645, 4197}], 
      Line3DBox[{3643, 4282, 3644, 4310, 3680, 4338, 3708, 4366, 3736, 4394, 
       3764, 4422, 3792, 4450, 3820, 4478, 3848, 4506, 3876, 4534, 3904, 4562,
        3932, 4590, 3960, 4618, 3988, 4646, 4198}], 
      Line3DBox[{3645, 4283, 3646, 4311, 3681, 4339, 3709, 4367, 3737, 4395, 
       3765, 4423, 3793, 4451, 3821, 4479, 3849, 4507, 3877, 4535, 3905, 4563,
        3933, 4591, 3961, 4619, 3989, 4647, 4199}], 
      Line3DBox[{266, 1399, 267, 1455, 330, 1511, 386, 1567, 442, 1623, 498, 
       1679, 554, 1735, 610, 1791, 666, 1847, 722, 1903, 778, 1959, 834, 2015,
        890, 2071, 946, 2127, 1171}], 
      Line3DBox[{3647, 4284, 3648, 4312, 3682, 4340, 3710, 4368, 3738, 4396, 
       3766, 4424, 3794, 4452, 3822, 4480, 3850, 4508, 3878, 4536, 3906, 4564,
        3934, 4592, 3962, 4620, 3990, 4648, 4200}], 
      Line3DBox[{3649, 4285, 3650, 4313, 3683, 4341, 3711, 4369, 3739, 4397, 
       3767, 4425, 3795, 4453, 3823, 4481, 3851, 4509, 3879, 4537, 3907, 4565,
        3935, 4593, 3963, 4621, 3991, 4649, 4201}], 
      Line3DBox[{3651, 4286, 3652, 4314, 3684, 4342, 3712, 4370, 3740, 4398, 
       3768, 4426, 3796, 4454, 3824, 4482, 3852, 4510, 3880, 4538, 3908, 4566,
        3936, 4594, 3964, 4622, 3992, 4650, 4202}], 
      Line3DBox[{3653, 4287, 3654, 4315, 3685, 4343, 3713, 4371, 3741, 4399, 
       3769, 4427, 3797, 4455, 3825, 4483, 3853, 4511, 3881, 4539, 3909, 4567,
        3937, 4595, 3965, 4623, 3993, 4651, 4203}], 
      Line3DBox[{3655, 4288, 3656, 4316, 3686, 4344, 3714, 4372, 3742, 4400, 
       3770, 4428, 3798, 4456, 3826, 4484, 3854, 4512, 3882, 4540, 3910, 4568,
        3938, 4596, 3966, 4624, 3994, 4652, 4204}], 
      Line3DBox[{3657, 4289, 3658, 4317, 3687, 4345, 3715, 4373, 3743, 4401, 
       3771, 4429, 3799, 4457, 3827, 4485, 3855, 4513, 3883, 4541, 3911, 4569,
        3939, 4597, 3967, 4625, 3995, 4653, 4205}], 
      Line3DBox[{3659, 4290, 3660, 4318, 3688, 4346, 3716, 4374, 3744, 4402, 
       3772, 4430, 3800, 4458, 3828, 4486, 3856, 4514, 3884, 4542, 3912, 4570,
        3940, 4598, 3968, 4626, 3996, 4654, 4206}], 
      Line3DBox[{4207, 4655, 3424, 4669, 3465, 4683, 3479, 4697, 3493, 4711, 
       3507, 4725, 3521, 4739, 3535, 4753, 3549, 4767, 3563, 4781, 3577, 4795,
        3591, 4809, 3605, 4823, 3619, 4837, 4208}], 
      Line3DBox[{4209, 4838, 3620, 4824, 3606, 4810, 3592, 4796, 3578, 4782, 
       3564, 4768, 3550, 4754, 3536, 4740, 3522, 4726, 3508, 4712, 3494, 4698,
        3480, 4684, 3466, 4670, 3427, 4656, 4234}], 
      Line3DBox[{4210, 4839, 3621, 4825, 3607, 4811, 3593, 4797, 3579, 4783, 
       3565, 4769, 3551, 4755, 3537, 4741, 3523, 4727, 3509, 4713, 3495, 4699,
        3481, 4685, 3467, 4671, 3430, 4657, 4233}], 
      Line3DBox[{4211, 4840, 3622, 4826, 3608, 4812, 3594, 4798, 3580, 4784, 
       3566, 4770, 3552, 4756, 3538, 4742, 3524, 4728, 3510, 4714, 3496, 4700,
        3482, 4686, 3468, 4672, 3433, 4658, 4232}], 
      Line3DBox[{4212, 4841, 3623, 4827, 3609, 4813, 3595, 4799, 3581, 4785, 
       3567, 4771, 3553, 4757, 3539, 4743, 3525, 4729, 3511, 4715, 3497, 4701,
        3483, 4687, 3469, 4673, 3436, 4659, 4231}], 
      Line3DBox[{4213, 4842, 3624, 4828, 3610, 4814, 3596, 4800, 3582, 4786, 
       3568, 4772, 3554, 4758, 3540, 4744, 3526, 4730, 3512, 4716, 3498, 4702,
        3484, 4688, 3470, 4674, 3439, 4660, 4230}], 
      Line3DBox[{1200, 2420, 243, 2403, 226, 2386, 209, 2369, 192, 2352, 175, 
       2335, 158, 2318, 141, 2301, 124, 2284, 107, 2267, 90, 2250, 73, 2233, 
       56, 2216, 24, 2199, 1228}], 
      Line3DBox[{4214, 4843, 3625, 4829, 3611, 4815, 3597, 4801, 3583, 4787, 
       3569, 4773, 3555, 4759, 3541, 4745, 3527, 4731, 3513, 4717, 3499, 4703,
        3485, 4689, 3471, 4675, 3442, 4661, 4229}], 
      Line3DBox[{4215, 4844, 3626, 4830, 3612, 4816, 3598, 4802, 3584, 4788, 
       3570, 4774, 3556, 4760, 3542, 4746, 3528, 4732, 3514, 4718, 3500, 4704,
        3486, 4690, 3472, 4676, 3445, 4662, 4228}], 
      Line3DBox[{4216, 4845, 3627, 4831, 3613, 4817, 3599, 4803, 3585, 4789, 
       3571, 4775, 3557, 4761, 3543, 4747, 3529, 4733, 3515, 4719, 3501, 4705,
        3487, 4691, 3473, 4677, 3448, 4663, 4227}], 
      Line3DBox[{4217, 4846, 3628, 4832, 3614, 4818, 3600, 4804, 3586, 4790, 
       3572, 4776, 3558, 4762, 3544, 4748, 3530, 4734, 3516, 4720, 3502, 4706,
        3488, 4692, 3474, 4678, 3451, 4664, 4226}], 
      Line3DBox[{4218, 4847, 3629, 4833, 3615, 4819, 3601, 4805, 3587, 4791, 
       3573, 4777, 3559, 4763, 3545, 4749, 3531, 4735, 3517, 4721, 3503, 4707,
        3489, 4693, 3475, 4679, 3454, 4665, 4225}], 
      Line3DBox[{4219, 4848, 3630, 4834, 3616, 4820, 3602, 4806, 3588, 4792, 
       3574, 4778, 3560, 4764, 3546, 4750, 3532, 4736, 3518, 4722, 3504, 4708,
        3490, 4694, 3476, 4680, 3457, 4666, 4224}], 
      Line3DBox[{4220, 4849, 3631, 4835, 3617, 4821, 3603, 4807, 3589, 4793, 
       3575, 4779, 3561, 4765, 3547, 4751, 3533, 4737, 3519, 4723, 3505, 4709,
        3491, 4695, 3477, 4681, 3460, 4667, 4223}], 
      Line3DBox[{4221, 4850, 3632, 4836, 3618, 4822, 3604, 4808, 3590, 4794, 
       3576, 4780, 3562, 4766, 3548, 4752, 3534, 4738, 3520, 4724, 3506, 4710,
        3492, 4696, 3478, 4682, 3463, 4668, 4222}], 
      Line3DBox[{4235, 4851, 3997, 4865, 4025, 4879, 4039, 4893, 4053, 4907, 
       4067, 4921, 4081, 4935, 4095, 4949, 4109, 4963, 4123, 4977, 4137, 4991,
        4151, 5005, 4165, 5019, 4179, 5033, 4236}], 
      Line3DBox[{4237, 4864, 4023, 4878, 4038, 4892, 4052, 4906, 4066, 4920, 
       4080, 4934, 4094, 4948, 4108, 4962, 4122, 4976, 4136, 4990, 4150, 5004,
        4164, 5018, 4178, 5032, 4192, 5046, 4238}], 
      Line3DBox[{4239, 5045, 4191, 5031, 4177, 5017, 4163, 5003, 4149, 4989, 
       4135, 4975, 4121, 4961, 4107, 4947, 4093, 4933, 4079, 4919, 4065, 4905,
        4051, 4891, 4037, 4877, 4021, 4863, 4262}], 
      Line3DBox[{4240, 5044, 4190, 5030, 4176, 5016, 4162, 5002, 4148, 4988, 
       4134, 4974, 4120, 4960, 4106, 4946, 4092, 4932, 4078, 4918, 4064, 4904,
        4050, 4890, 4036, 4876, 4019, 4862, 4261}], 
      Line3DBox[{4241, 5043, 4189, 5029, 4175, 5015, 4161, 5001, 4147, 4987, 
       4133, 4973, 4119, 4959, 4105, 4945, 4091, 4931, 4077, 4917, 4063, 4903,
        4049, 4889, 4035, 4875, 4017, 4861, 4260}], 
      Line3DBox[{4242, 5042, 4188, 5028, 4174, 5014, 4160, 5000, 4146, 4986, 
       4132, 4972, 4118, 4958, 4104, 4944, 4090, 4930, 4076, 4916, 4062, 4902,
        4048, 4888, 4034, 4874, 4015, 4860, 4259}], 
      Line3DBox[{4243, 5041, 4187, 5027, 4173, 5013, 4159, 4999, 4145, 4985, 
       4131, 4971, 4117, 4957, 4103, 4943, 4089, 4929, 4075, 4915, 4061, 4901,
        4047, 4887, 4033, 4873, 4013, 4859, 4258}], 
      Line3DBox[{1316, 2967, 1156, 2952, 1141, 2937, 1126, 2922, 1111, 2907, 
       1096, 2892, 1081, 2877, 1066, 2862, 1051, 2847, 1036, 2832, 1021, 2817,
        1006, 2802, 991, 2787, 968, 2772, 1344}], 
      Line3DBox[{4244, 5040, 4186, 5026, 4172, 5012, 4158, 4998, 4144, 4984, 
       4130, 4970, 4116, 4956, 4102, 4942, 4088, 4928, 4074, 4914, 4060, 4900,
        4046, 4886, 4032, 4872, 4011, 4858, 4257}], 
      Line3DBox[{4245, 5039, 4185, 5025, 4171, 5011, 4157, 4997, 4143, 4983, 
       4129, 4969, 4115, 4955, 4101, 4941, 4087, 4927, 4073, 4913, 4059, 4899,
        4045, 4885, 4031, 4871, 4009, 4857, 4256}], 
      Line3DBox[{4246, 5038, 4184, 5024, 4170, 5010, 4156, 4996, 4142, 4982, 
       4128, 4968, 4114, 4954, 4100, 4940, 4086, 4926, 4072, 4912, 4058, 4898,
        4044, 4884, 4030, 4870, 4007, 4856, 4255}], 
      Line3DBox[{4247, 5037, 4183, 5023, 4169, 5009, 4155, 4995, 4141, 4981, 
       4127, 4967, 4113, 4953, 4099, 4939, 4085, 4925, 4071, 4911, 4057, 4897,
        4043, 4883, 4029, 4869, 4005, 4855, 4254}], 
      Line3DBox[{4248, 5036, 4182, 5022, 4168, 5008, 4154, 4994, 4140, 4980, 
       4126, 4966, 4112, 4952, 4098, 4938, 4084, 4924, 4070, 4910, 4056, 4896,
        4042, 4882, 4028, 4868, 4003, 4854, 4253}], 
      Line3DBox[{4249, 5035, 4181, 5021, 4167, 5007, 4153, 4993, 4139, 4979, 
       4125, 4965, 4111, 4951, 4097, 4937, 4083, 4923, 4069, 4909, 4055, 4895,
        4041, 4881, 4027, 4867, 4001, 4853, 4252}], 
      Line3DBox[{4250, 5034, 4180, 5020, 4166, 5006, 4152, 4992, 4138, 4978, 
       4124, 4964, 4110, 4950, 4096, 4936, 4082, 4922, 4068, 4908, 4054, 4894,
        4040, 4880, 4026, 4866, 3999, 4852, 4251}]}}},
   VertexNormals->CompressedData["
1:eJztmsGNFDEUBUcQAhEQyeZACEicyY4rKRECN0u08bTnt9Vdr6f2tuXqP16/
9ZvRwtfvP7/9+PR4PH59eTw+P7Zffz423//ulKd8z9vO3+Ozc/b2M/u6znGO
c15/nVle7Y0tf7WX3o13nrkgeOeZC4J3nrkgeOeZC4J3nrkgeOeZC4J3nrkg
eOeZC4J3nrkgeOeZC4J3nrkgeOft5DI7b7tO+7nl8n/45O/93rzVf4++Gy/P
ezU3ff1nnnwttz9P4eV5kPuon+Xjeuau3P48hZfnQe6jfpaP65m7cvvzFF6e
B7mP+lk+rmfuyu3PU3h5HuQ+6mf5uJ65K7c/T+HleZD7qJ/l43rmrtz+PIWX
50Huo36Wj+uZu3L78xRenge5j/pZPq5n7srtz1N4eR7kPupn+bieuSu3P0/h
5XmQ+6if5eN65q7c/jyFl+dB7qN+lo/rmbty+/MUXp4HuY/6WT6uZ+7Kt+e+
qBf09Wf8vTmzz9PeL9P5yKPtM52PPNo+0/nIo+0znY882j7T+cij7TOdjzza
PtP5yKPtM52PPNo+0/nIo+0znY882j7T+cij7TOdj7zqHNzfG2G8rX889+Ry
ufzdeFvfvM/s+av38a58+nMCdP9pfPceQPaZzl/+fwPyJZyyD/l78La+vf+z
72uwnyeVz57/u/HRevVz16p7ID8479XPF/r6T7zROuXzNJW39clc7M+1vDwP
ch/1s3z7cy1v6/bnJbw8D3If9bN8+3Mtb+v25yW8PA9yH/WzfPtzLW/r9ucl
vDwPch/1s3z7cy1v6/bnJbw8D3If9bN8+3Mtb+v25yW8PA9yH/WzfPtzLW/r
9uclvDwPch/1s3z7cy1v6/bnJbw8D3If9bN8+3Mtb+v25yW8PA9yH/WzfPtz
LW/r9uclvDwPch/1s3z7cy1v6/bnJbw8D3If9bN8+3Mtb+v25yW8PA9yH/Wz
fPtzLW/r9uclvDwPch/1s3z7cy1v69tzhvVMPIflHs9p+aZzWr6hfK9nZ+dR
fh4q77yd33dzOYd3nrkgeOeZC4J3nrkgeOeZC4J3nrkgeOeZC4J3nrkgeOeZ
C4J3nrkgeOeZC4J3nrkgeOeZC4J33k4u06+nr6+vr6+vr6+vr6+vr6+vr6+v
r6+vr6+vr6+vr6+v/7I/XJc/5dPPe86H+PTznvMhPv2853yITz/vOR/i0897
zof49POe8yE+/bznfIhPP+85H+LTz3vOh/j0857zIT79vOd8iE8/7zkf4tPP
e86H+Mgb/j1PLidw2D2Sy599Uf/9RV9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX1//vn73/eC53ddzjnOcg50z7AO5XC6Xy+VyuVwul8vlGH71
68vlU/xDvpTT8k3ntHzTOS3fdE7LN53T8k3ntHzTOS3fdE7LN53T8k3ntHzT
OS3fdE7LN53T8k3ntHzTOS3fdE7LN53T8k3ntHzTOS3fdE7LN53T8k3ntHzT
OS3fUD4639G6vj7Bl8vlcrlcLpfL5XK5XM7hbf23fAWn7EMu/y+H9Y9cTnr9
23JaD6VzWr7pnJZvOqflm85p+aZzWr7pnJZvOqflm85p+aZzWr7pnJZvOqfl
m85p+aZzWr7pnJZvOqflm85p+aZzWr7pnJZvOqflm85p+aZzWr7pnJZvOqfl
m85p+aZzWr7pnJZvKKfsQy6Xy+VyuVwul8vlcrlcHso/5HK5XC6Xy+VyuVwu
l8vl8gr/C4bhRgY=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{434.00442046044213`, 431.9445382534486},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{3.3220238025210884`, 0.2827095004559799, 0.5781290460055307},
  ViewVertical->{0.5084553329517711, -0.42811704006124507`, 
   0.7471204550821117}]], "Output",
 CellChangeTimes->{3.60769017982791*^9, 3.607691011556402*^9, 
  3.6076915459605703`*^9, 3.6076915872968884`*^9, 3.607691794205933*^9, 
  3.607693609752709*^9, 3.607693644709176*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"cube", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"nYAB", "[", "0", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.607689989195837*^9, 3.60768998954113*^9}, {
  3.6076910407770777`*^9, 3.6076910457599277`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
jHzLv99Oj3q+IvD5f/73al8=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
WK34SXvLd3tE99JzaBYHXR4p1Spg/wGkt2lP
         "]], 
        Polygon3DBox[CompressedData["
1:eJxNmXccl/MWx5/n9zzP91q5V1nXLHtkzzJziYpQStmyhYbStEslZJMW0bYK
lXHtUmTWtbKKSCoje3U/b5/T6+WP8/ud796f8znnadChU6uLalmWbaSfUv9b
5lm2KWnJI5Kjqyxrq7LjJcdK/0Pykep8KPlF+lVq9L7qlSo/PWXZ/CLL6ij9
tcrbqvxnyU+S3yS/x/+vkj8lKyUDVf9g1d9C9fuqrx8qzyVXet+o10Dp1qrz
uOp+r/QKyUPSHy6sfyd5sHDeHzFOprnkkm2kf6zk6urjjOQx6ZO+nihcjzz0
JyV9JbOU/ZLqH5Tc97eSBwqPcZHkUZWPUfleMQZ90Papwnvyc8yBuVyhNb2n
KjXVH8F6la4xV63va+lvSF6XLFfZ13/bo5Wxhn9ImqntEZIU432c+wzon7av
SZZV7oO5fiO5v/CcKXtVsrRyHfrjbDijZoXrvqP0kZnbfKn0Ysl90sdItqVc
ZftLblJ6SeU6lI0tPOf3c5/XGzHWHMlXlce8WOPV0dzXlvRkbLXZS339qfqH
KP2T/rdT+kHJYNX5Q+nfJS9Lf0VyN/dAZXMkbyg9Tn2OlYyXTJC8IJmtOi1V
Pkl9T5CMlzyr/OckiySfxZqY93zmK3ledV6QTJQ+Te2n5u7vg6hD2YuS+6WP
VNkIySTugWRU7jzK9tYaHta8Jkv2kX638laT/pHmc432YZTShdLvcsel76s6
v8UaGyePv67GWazy7/U/W3VnSeZIXpV8qPI32VvJuzH391hb4TWQ907Mm7rz
JHMjj7KJsSfsxfOSWZKXJEOUd6Nk/+Q9n6nx1422b0nejj4WSJ5U+ROSTyrP
bSfpO+ee45K4P29LPo+9/lTyRez5O9HX/Jgj+v9iHeQ9WPmM2dMHYg3UY+9n
FN4j9oo5MteFKmus/D8139/1v0zykvSZmssByWc/TvJM5TtwtfT9VP6c2k9W
+h6l75ZMBwMkrSXt1La9pI30f6mPQ1UXaHhPP/9Uuo3S9ZRuqfTayXVpU0d6
PUlTlR8mWUf6hpIdVbah6n+i+hsrfbXSV0k2kr6VZEtJA8kWko65sXZjyWLp
n6rNQskmKts0OT1eZXep/SWa3wbKa6d6GyivrcrOkHSQbA3WSS6QPlllI1V/
5xhrkPSBNY9JnT5qv3XmtmslYzsYv0Zy/2dI7yBZL/kMOct7C2PC09L/K7lW
+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
54jFE5PfMdZErIeYxaq1to55seb/A+Uysvk=
         "]], 
        Polygon3DBox[CompressedData["
1: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
Bsa/15w=
         "]], Polygon3DBox[CompressedData["
1:eJwt0s9LVFEYxvEzc50JRIs0aRdEmVkLx1/NEEVtlKiVoyERBAWlo6BS4MpN
UVa0bBNEhEUradGuX4uwf6AWLYLM1IVtAk2ioJA+h3thHs5zvu9z3rn3PXfv
pcnqRD6EsIeKtFIXQi0XwpVCCDmaUrxsnVVcwH+q3+b3JyF04tvogcxBbFnt
okwbf4K/hU/bN+nbQh+cWcXHse/USldlRvRYwoftZ+i57D38Gt5Ac3xXMX22
UfVOPo/fwGvWRbyKj/J31Q74n0093mHz9EP9IdaPvUjSd9lnLclvqV3Qp4Ma
1Pvlm9U/4xW+wP+OXr2OT5y5yY9bv+JDMmP8Tn7W+fO0ip3U/3ghndV7+031
O3wr3pWdPYvvwP7x5/Tczq/zr/AlmSNUkf9m/YXX434h3lcvk8i3q5X4evVH
si/j3eEb9m/4ZfUyHVVbyWY1iDfK/I0zj+8dn0F9S9+P2Fx213FWffaPZUrY
sP1umbUkzRyzVvR8kr1j/Db+0Cn5M4V0hmX8NH+YmuVr2bO9jXPjG/Gn8j3F
9NsYw7v5L/xALv1+nvnP6/n0fg/FWeszks3qdbx3/j594quyu2TLMr2y/wGt
7Vdc
         "]]}]}, 
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt0b0rxHEAx/Gfu0M2gxsuZzBQBmWyoNShrMoipBskceQpeeYoDGbqOn8A
+RdMOqVsnkIMMqAMIuUhryvDu/fn+/l9vr/f1VUmRzpSoSAIqhFGTSQIdvjO
YYZLMIsq/Tbf6ru5B11oLAiCdW7ykiT3oRcJ/Ra36WPubsqX7s5xGeYxiGEM
5d9ln+EB+y+7b/nIvYX/37aIfpssT9k0e7YnP9h+4knO6jp5Dav41YfcOdO3
Oqexgg/3b7iY33AtF/GL7bTczifuhvnC3UldPP9dlOtfudQ+4dm+/KhLIGIf
10f1G/pz3YFuTD7mOud3OWpz6DwqX/EpUvI9N+T/BI7Z5OQfx5z3ZeRneVdu
kQttKmzqdctYQi0mMI4/ZqY6Bg==
         "]], Polygon3DBox[CompressedData["
1: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
f8j/uqhR7zvvvWP6pPcC738b3l6o
         "]], Polygon3DBox[CompressedData["
1:eJwt0s1LVVEUhvHt/UCigROlblIQGhoROTUR1Gtio0BrYAjRB2WB3iJQKaKI
AjUQwonFVUcOpP6FItAUgppoGWTRIBFMKA0rJaHf4dzBw373s9bah7PPOXgh
19aTCCFUII0ymx7ru6IQjiVDqMFJuRUtasNqa/JHBNSpv7C+xCRq6Rv4gXK1
cjNpvlluRBNKuJ/qB+QM9mE2FcIWdwYPMMu1Ypd8C0PI6HnKPcFr+R+3JT92
/lH5Jj7hl/Mv8c/lrL4u+Wr0fL4B9RhQWzV3j7+LcX2r3KY8Ia/IJ3AfeW6M
y6fi2nfuD3fdfA69zhvnNuS0vCT/tq5jA8t6n3ENZhvRhGL+M/fXupmI+/ej
m7uG4sKdLWIw+i5m9mAvvnF3uFJMFc59z52L5rDbbCl3hNu2z0XvFeJvuYTb
Ib7XEVRGs0iYeVi4/1d6vmBUPqRWhWqciu6eOyy3y6fx1VwKWfltUfzfzKhP
Yw47+rfVrni3y4n4X+rnOqwL6vNYRNJ+R98HOSN36jmLN1yduUfyRZzHcfUu
Li/3YQzd9v8BO4BZuw==
         "]]}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckuw1EcxfFbHVRbYyIRNbTa6qS0JbGSWCKRCAvEzlbCTuIFPJ3ZE5h5
Cj43Ft//Ob9z7n+6t3x6sX+eCCFc4pW5or2BEPqom39QkK2Yu1g0T5nb/BI6
WEZN/o2ibhYVvoouv4ES37SugTLfogt0U/dFP7HDz9F6fA/m+V1Zja9i1vyB
PdkMfccBX9ZN85X4TBT5N5zoznCN8VQIE1iTj9IxrPLHuiMMm0fQl+VpAT3+
ORnCoX4bOVlXlqVDWOEf9U/Y0q9jWdbBUvyPuA8YtDaDtixNU2jxD+6bjN+G
pKwpG6AJNPh7/R3y+nhGuXjR/cqG+Ft6g4w4Hfcu7hlKyOpfEv9n+geSiyHX

       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0MtKQlEUBuBteBnWpEGUg16jGtUbRJOc5aVM9Jh2fQQhCXIs5Vt0e4B8
hMSC41QDJbCmfdHg4//3WuwDZ6/n67tRIoSwx4ZyIAtc06bILR1K3NPjkCee
eeGImBFlvvnhmLTvZqjoVWpkF0JIma3KNZJ6TGS37DyXdVb0YP7GgBPHGYvm
S0z1Bq92fZr6Bxm7d5mSaYb6KWc88sA5F3y5d/f3T7JEkQKXZl1y+j5X+qe8
kTtym6Q+kWNa+pbcTPy/5S+1Nipm
       "]], Line3DBox[{94, 96, 98, 94}], 
      Line3DBox[CompressedData["
1:eJwl0DtOAlEAhtGrU0iiAoLPxoQluAU3QEKsjITEQAu9b0ELXYEk7EDXoQkG
rXwUig1QaI2KiPEYi5Pvn7nF3Exms5Irj4UQcpyyxTZPUQjPnNltfaFuZ3VH
d+nY59rVHhd2UUvs2fu0uOGWAw55d97n1f7UD97shla1xsD+1qF+MbKv9JIj
+5hxF//5OyOyr7XJurM8Gyx5v8iavaDzrNpzOsuKndYUMyx7TmqCuB3XaWL2
lE4yYRe48617TuwHfYz+/+Evm0EtYQ==
       "]]}, {}, {}, {
      Line3DBox[{138, 1049, 1048, 1047, 1046, 268}], 
      Line3DBox[{140, 574, 575, 576, 577, 578, 141, 581, 582, 142}], 
      Line3DBox[{146, 591, 592, 593, 594, 595, 150, 617, 618, 619, 620, 621, 
       157, 627, 628, 629, 630, 158}], 
      Line3DBox[{160, 636, 637, 638, 639, 640, 164, 657, 658, 659, 660, 661, 
       176, 683, 684, 685, 686, 687, 182, 184}], 
      Line3DBox[{183, 181, 682, 681, 680, 679, 678, 175, 656, 655, 654, 653, 
       652, 163, 635, 634, 633, 632, 631, 159}], 
      Line3DBox[{187, 701, 702, 703, 704, 705, 193, 731, 732, 733, 734, 735, 
       210, 759, 760, 221}], 
      Line3DBox[{207, 203, 1139, 1138, 1137, 1136, 1135, 196, 1124, 1123, 
       1122, 1121, 1120, 190, 1109, 1108, 1107, 1106, 275}], 
      Line3DBox[{219, 755, 754, 753, 752, 751, 208, 725, 724, 723, 722, 721, 
       191, 695, 694, 693, 692, 691, 185}], 
      Line3DBox[{225, 776, 777, 778, 779, 780, 229, 796, 797, 798, 240}], 
      Line3DBox[{239, 795, 794, 793, 792, 791, 228, 775, 774, 773, 772, 771, 
       224}], Line3DBox[{245, 816, 815, 814, 813, 812, 247}], 
      Line3DBox[{263, 836, 261}], Line3DBox[{267, 1044, 1045, 137}], 
      Line3DBox[{269, 1051, 1052, 1053, 1054, 147, 1060, 1061, 152}], 
      Line3DBox[{271, 1069, 1070, 1071, 1072, 161, 1077, 1078, 1079, 1080, 
       1081, 169, 1088, 171}], 
      Line3DBox[{273, 1098, 1099, 1100, 1101, 188, 1110, 1111, 1112, 1113, 
       1114, 194, 1125, 1126, 1127, 1128, 1129, 201, 205}], 
      Line3DBox[{276, 1161, 1162, 1163, 1164, 226, 1169, 1170, 1171, 1172, 
       1173, 230, 1180, 1181, 1182, 234}], 
      Line3DBox[{278, 1210, 1211, 1212, 1213, 248, 1218, 1219, 1220, 1221, 
       252}], Line3DBox[{280, 1234, 1235, 1236, 1237, 258}], 
      Line3DBox[{287, 1189, 1190, 1191, 1192, 238, 1198, 1199, 1200, 1201, 
       1202, 242, 1204, 805, 1330, 804, 1329, 803, 1328, 232, 788, 1323, 787, 
       786, 1322, 785, 784, 1321, 304}], 
      Line3DBox[{290, 1148, 1149, 1150, 1151, 218, 1154, 1155, 1156, 1157, 
       769, 1318, 223, 1159, 1160, 770, 1319, 215, 748, 1309, 747, 1308, 746, 
       213, 750, 1310, 749, 204, 720, 719, 718, 1301, 717, 716, 302}], 
      Line3DBox[{292, 1095, 1096, 1097, 180, 677, 1295, 676, 178, 690, 1296, 
       689, 688, 1094, 177, 670, 1291, 669, 668, 1290, 667, 1289, 666, 168, 
       166, 650, 1286, 649, 648, 1285, 647, 1284, 646, 299}], 
      Line3DBox[{294, 607, 606, 1278, 605, 1277, 604, 603, 1066, 144, 585, 
       584, 1272, 583, 143, 1273, 597, 596, 1059, 296}], 
      Line3DBox[{300, 197, 706, 1297, 707, 1298, 708, 709, 1299, 710, 199, 
       738, 1303, 739, 1304, 740, 211, 736, 1302, 737, 212, 761, 1311, 762, 
       1312, 763, 764, 1313, 765, 1314, 216, 1143, 1142, 1141, 1140, 288}], 
      Line3DBox[{307, 1337, 829, 1339, 1338, 830, 1340, 831, 282}], 
      Line3DBox[{136, 573, 572, 571, 139}], 
      Line3DBox[{145, 586, 587, 588, 589, 590, 149, 612, 613, 614, 615, 616, 
       156}], Line3DBox[{153, 1065, 1064, 1063, 1062, 148, 1058, 1057, 1056, 
       1055, 270}], 
      Line3DBox[{172, 1091, 1090, 1089, 170, 1086, 1085, 1084, 1083, 1082, 
       162, 1076, 1075, 1074, 1073, 272}], 
      Line3DBox[{186, 696, 697, 698, 699, 700, 192, 726, 727, 728, 729, 730, 
       209, 756, 757, 758, 220}], 
      Line3DBox[{206, 202, 1134, 1133, 1132, 1131, 1130, 195, 1119, 1118, 
       1117, 1116, 1115, 189, 1105, 1104, 1103, 1102, 274}], 
      Line3DBox[{235, 1183, 231, 1178, 1177, 1176, 1175, 1174, 227, 1168, 
       1167, 1166, 1165, 277}], 
      Line3DBox[{246, 807, 808, 809, 810, 811, 250, 827, 256}], 
      Line3DBox[{253, 1223, 1222, 249, 1217, 1216, 1215, 1214, 279}], 
      Line3DBox[{259, 1239, 1238, 281}], Line3DBox[{260, 835, 834, 833, 262}],
       Line3DBox[{264, 565, 564, 1268, 563, 1043, 265}], 
      Line3DBox[{266, 1269, 566, 567, 1270, 568, 1271, 569, 570, 135, 1050, 
       579, 580, 295}], Line3DBox[{283, 832, 1341, 1342, 308}], 
      Line3DBox[{284, 1206, 1207, 1208, 1209, 244, 823, 1333, 822, 821, 820, 
       1332, 819, 306}], 
      Line3DBox[{285, 1224, 1225, 1226, 1227, 255, 1228, 1229, 1230, 1231, 
       1232, 257, 1336, 828, 1233, 254, 826, 1335, 825, 824, 1334, 251, 818, 
       1331, 817, 305}], 
      Line3DBox[{286, 1185, 1186, 1187, 1188, 237, 1193, 1194, 1195, 1196, 
       1197, 241, 1203, 802, 1327, 801, 1326, 800, 1325, 799, 1324, 243, 806, 
       1205, 236, 1184, 790, 789, 233, 783, 1320, 782, 781, 1179, 303}], 
      Line3DBox[{289, 1144, 1145, 1146, 1147, 217, 1152, 1153, 768, 1317, 767,
        1315, 1316, 766, 222, 1158, 214, 745, 1307, 744, 743, 1306, 742, 1305,
        741, 200, 711, 1300, 198, 715, 714, 713, 712, 301}], 
      Line3DBox[{291, 179, 1294, 675, 1293, 674, 673, 1292, 672, 671, 1093, 
       174, 651, 173, 1288, 665, 664, 1287, 663, 662, 1092, 167, 644, 1283, 
       643, 642, 1282, 641, 165, 645, 1087, 298}], 
      Line3DBox[{293, 626, 625, 1281, 624, 623, 155, 1067, 611, 610, 1280, 
       609, 1279, 608, 154, 622, 1068, 151, 602, 1276, 601, 600, 1275, 599, 
       598, 1274, 297}]}, {
      Line3DBox[{314, 571, 574, 317, 586, 591, 332, 631, 636, 369, 691, 696, 
       701, 407, 771, 776, 433, 807, 812, 459, 833, 836, 541}], 
      Line3DBox[{322, 581, 327, 612, 617, 347, 652, 657, 381, 721, 726, 731, 
       417, 791, 796, 445, 827, 537}], 
      Line3DBox[{345, 615, 620, 350, 655, 660, 384, 724, 729, 734, 420, 794, 
       527}], Line3DBox[{355, 627, 364, 678, 683, 397, 751, 756, 759, 429, 
       455}], Line3DBox[{456, 430, 760, 757, 752, 398, 684, 679, 365, 628, 
       356}], Line3DBox[{473, 447, 798, 793, 419, 733, 728, 723, 383, 659, 
       654, 349, 619, 614, 329, 492}], 
      Line3DBox[{480, 462, 815, 810, 436, 779, 774, 410, 704, 699, 694, 372, 
       639, 634, 335, 594, 589, 320, 577, 490}], 
      Line3DBox[{482, 1351, 570, 313, 1356, 1357, 585, 1543, 495, 1366, 602, 
       1551, 341, 1387, 644, 1564, 1565, 502, 650, 1573, 1574, 379, 710, 1597,
        1598, 711, 1599, 510, 1602, 720, 416, 1454, 790, 439, 1450, 788, 1642,
        444, 1506, 826, 1687, 1686, 465, 1501, 1500, 1499, 1498, 1497, 823, 
       532, 1677, 1676, 1675, 1674, 484}], 
      Line3DBox[{483, 832, 1699, 1700, 1701, 829, 1526, 476, 466, 1679, 1680, 
       819, 1483, 1484, 817, 1678, 534, 1502, 440, 1638, 784, 1442, 1443, 781,
        1636, 522, 412, 716, 712, 506, 706, 1425, 375, 1566, 646, 1390, 1389, 
       1388, 645, 374, 337, 1547, 1546, 598, 1359, 1358, 596, 1544, 330, 309, 
       1539, 566, 1344, 1343, 563, 1538, 542}], 
      Line3DBox[{485, 1688, 1689, 1690, 1691, 536, 1692, 1693, 1694, 1695, 
       1696, 538, 1525, 828, 1697, 450, 1670, 803, 1661, 1662, 531, 806, 1673,
        426, 749, 1617, 422, 1606, 741, 1428, 1427, 738, 1605, 391, 1407, 386,
        666, 1398, 1397, 1396, 662, 352, 1378, 1377, 622, 342, 1368, 1367, 
       603, 1552, 324, 1352, 579, 561}], 
      Line3DBox[{486, 1463, 1464, 1465, 1466, 453, 1471, 1472, 1473, 1474, 
       1475, 457, 1481, 1482, 431, 770, 1441, 1440, 520, 766, 1436, 761, 1630,
        402, 1418, 1417, 688, 1590, 394, 1409, 671, 1584, 359, 1380, 623, 
       1560, 555}], 
      Line3DBox[{488, 363, 1588, 675, 1415, 1416, 677, 1589, 505, 1424, 406, 
       765, 1439, 515, 1625, 1624, 1623, 1622, 553}], 
      Line3DBox[{489, 326, 1555, 605, 1371, 1372, 609, 1556, 497, 354, 1576, 
       664, 1401, 1402, 668, 1579, 1580, 388, 393, 740, 1431, 1432, 743, 1609,
        1610, 1611, 746, 513, 428, 449, 1457, 1456, 800, 1666, 1665, 805, 
       1672, 452, 475, 1524, 1523, 1522, 1521, 1520, 471, 1514, 1513, 1512, 
       1511, 549}], Line3DBox[{498, 368, 682, 687, 401, 755, 518}], 
      Line3DBox[{519, 758, 753, 399, 685, 680, 366, 629, 357}], 
      Line3DBox[{528, 795, 421, 735, 730, 725, 385, 661, 656, 351, 621, 616, 
       346}], Line3DBox[{533, 816, 811, 437, 780, 775, 411, 705, 700, 695, 
       373, 640, 635, 336, 595, 590, 321, 578, 491}], 
      Line3DBox[{540, 835, 461, 814, 809, 435, 778, 773, 409, 703, 698, 693, 
       371, 638, 633, 334, 593, 588, 319, 576, 573, 316}], 
      Line3DBox[{544, 565, 1348, 1349, 568, 1540, 311, 1354, 583, 493, 1362, 
       1363, 600, 1549, 339, 1385, 642, 1562, 500, 1393, 648, 1569, 1570, 377,
        708, 1593, 1594, 508, 714, 1600, 718, 414, 1452, 524, 783, 1447, 1446,
        786, 1640, 442, 1504, 824, 1684, 463, 1492, 1491, 1490, 1489, 821, 
       1682, 468, 478, 1533, 1532, 1531, 1530, 831, 547}], 
      Line3DBox[{545, 1534, 1535, 1536, 1537, 479, 469, 1683, 822, 1493, 1494,
        1495, 1496, 464, 1685, 825, 1505, 443, 1641, 787, 1448, 1449, 438, 
       789, 1453, 415, 719, 1601, 715, 509, 1596, 1595, 709, 378, 1572, 1571, 
       649, 1394, 501, 1563, 643, 1386, 340, 1550, 601, 1365, 1364, 494, 1542,
        584, 1355, 312, 1541, 569, 1350, 481}], 
      Line3DBox[{546, 1702, 830, 1527, 1528, 1529, 477, 467, 1681, 820, 1485, 
       1486, 1487, 1488, 818, 535, 1503, 441, 1639, 785, 1444, 1445, 782, 
       1637, 523, 1451, 413, 1603, 717, 713, 507, 1592, 707, 376, 1568, 1567, 
       647, 1392, 1391, 499, 641, 1384, 338, 1548, 599, 1361, 1360, 597, 1545,
        331, 1353, 310, 567, 1347, 1346, 1345, 564, 543}], 
      Line3DBox[{548, 1507, 1508, 1509, 1510, 470, 1515, 1516, 1517, 1518, 
       1519, 474, 1698, 451, 1671, 804, 1663, 1664, 799, 1455, 448, 427, 750, 
       423, 1608, 1607, 742, 1430, 1429, 739, 392, 1408, 387, 1578, 667, 1400,
        1399, 663, 1575, 353, 1379, 496, 608, 1370, 1369, 604, 1554, 1553, 
       325, 580, 562}], 
      Line3DBox[{550, 1643, 1644, 1645, 1646, 525, 1651, 1652, 1653, 1654, 
       1655, 529, 1667, 1668, 801, 1458, 1459, 424, 747, 1613, 1612, 744, 
       1434, 1433, 511, 736, 1426, 389, 1581, 669, 1404, 1403, 665, 1577, 380,
        343, 1558, 1557, 610, 1374, 1373, 606, 559}], 
      Line3DBox[{552, 1618, 1619, 1620, 1621, 514, 1437, 1438, 764, 1631, 405,
        1423, 504, 676, 1414, 1413, 674, 1587, 362, 1383, 626, 558}], 
      Line3DBox[{554, 1626, 1627, 1628, 1629, 516, 1633, 1634, 768, 763, 404, 
       1422, 1421, 690, 396, 1412, 1411, 673, 1586, 361, 1382, 625, 557}], 
      Line3DBox[{560, 607, 1375, 1376, 611, 1559, 344, 1395, 651, 503, 1405, 
       1406, 670, 1582, 1583, 390, 737, 1604, 512, 1435, 745, 1614, 1615, 748,
        1616, 425, 1462, 1461, 1460, 802, 1669, 530, 1660, 1659, 1658, 1657, 
       1656, 526, 1650, 1649, 1648, 1647, 551}], 
      Line3DBox[{315, 572, 575, 318, 587, 592, 333, 632, 637, 370, 692, 697, 
       702, 408, 772, 777, 434, 808, 813, 460, 834, 539}], 
      Line3DBox[{323, 582, 328, 613, 618, 348, 653, 658, 382, 722, 727, 732, 
       418, 792, 797, 446, 472}], 
      Line3DBox[{358, 630, 367, 681, 686, 400, 754, 517}], 
      Line3DBox[{487, 1467, 1468, 1469, 1470, 454, 1476, 1477, 1478, 1479, 
       1480, 458, 432, 521, 1635, 769, 1632, 767, 762, 403, 1420, 1419, 689, 
       1591, 395, 1410, 672, 1585, 360, 1381, 624, 1561, 556}]}, {
      Line3DBox[{847, 852, 1081, 1086, 864, 1114, 1119, 1124, 891, 1173, 1178,
        922, 1017}], Line3DBox[{869, 874, 1129, 1134, 1139, 897, 1014}], 
      Line3DBox[{924, 1183, 1180, 893, 1135, 1130, 1125, 870, 1089, 1088, 
       996}], Line3DBox[{966, 1222, 1218, 918, 1174, 1169, 887, 1120, 1115, 
       1110, 860, 1082, 1077, 848, 1062, 1060, 988}], 
      Line3DBox[{970, 1238, 1234, 957, 1214, 1210, 914, 1165, 1161, 883, 1106,
        1102, 1098, 856, 1073, 1069, 842, 1055, 1051, 837, 1046, 1044, 981}], 
      Line3DBox[{972, 1538, 1268, 1345, 1348, 1350, 1351, 980, 1050, 1352, 
       1243, 1553, 1555, 1278, 1373, 1375, 992, 1560, 1561, 1281, 1382, 1383, 
       1251, 1588, 1294, 1002, 1095, 879, 900, 1140, 1622, 1618, 1144, 1626, 
       1148, 904, 1467, 1463, 927, 1185, 1647, 1643, 1189, 931, 1511, 1507, 
       1224, 1688, 949, 1206, 1674, 953, 1534, 1530, 1340, 1702, 1699, 1341, 
       1041}], Line3DBox[{974, 1544, 1545, 1273, 1362, 1364, 1366, 987, 1068, 
       1377, 1379, 1249, 1576, 1577, 1288, 1405, 1000, 1590, 1591, 1296, 1421,
        1423, 1424, 1258, 1314, 1439, 1437, 1152, 1633, 1154, 908, 1476, 1471,
        935, 1193, 1656, 1651, 1198, 940, 1520, 1515, 1228, 1692, 961, 1497, 
       1333, 1683, 1682, 1681, 1679, 1037}], 
      Line3DBox[{976, 1087, 1388, 1391, 1393, 1394, 1286, 1573, 866, 1407, 
       1408, 1255, 1304, 1431, 1433, 1435, 1009, 1158, 1440, 1159, 1262, 1481,
        946, 1203, 1669, 1667, 1204, 1672, 1267, 1698, 1336, 1525, 968, 1686, 
       1685, 1684, 1334, 1503, 1502, 925, 1034}], 
      Line3DBox[{978, 1636, 1637, 1320, 1447, 1449, 1450, 1012, 1662, 1324, 
       1455, 1457, 899, 1308, 1611, 1608, 1606, 892, 1599, 1300, 1596, 1594, 
       1592, 1297, 1425, 865, 1031}], 
      Line3DBox[{979, 1678, 1331, 1488, 1492, 1496, 1501, 965, 1696, 1232, 
       1519, 1524, 944, 1202, 1655, 1660, 1197, 939, 1475, 1480, 912, 1635, 
       1318, 1316, 1436, 898, 1604, 1302, 1426, 875, 1580, 1578, 1289, 1398, 
       995, 1565, 1563, 1562, 1282, 1384, 1244, 1547, 1027}], 
      Line3DBox[{982, 1045, 1047, 838, 1052, 1056, 843, 1070, 1074, 857, 1099,
        1103, 1107, 884, 1162, 1166, 915, 1211, 1215, 958, 1235, 1239, 971}], 
      Line3DBox[{984, 1049, 840, 1054, 1058, 845, 1072, 1076, 859, 1101, 1105,
        1109, 886, 1164, 1168, 917, 1213, 1217, 960, 1237, 1022}], 
      Line3DBox[{989, 1061, 1063, 849, 1078, 1083, 861, 1111, 1116, 1121, 888,
        1170, 1175, 919, 1219, 1223, 967}], 
      Line3DBox[{991, 1065, 851, 1080, 1085, 863, 1113, 1118, 1123, 890, 1172,
        1177, 921, 1221, 1019}], 
      Line3DBox[{998, 1091, 872, 1127, 1132, 1137, 895, 1182, 1016}], 
      Line3DBox[{1013, 896, 1138, 1133, 1128, 873, 868}], 
      Line3DBox[{1015, 1181, 894, 1136, 1131, 1126, 871, 1090, 997}], 
      Line3DBox[{1018, 1220, 920, 1176, 1171, 889, 1122, 1117, 1112, 862, 
       1084, 1079, 850, 1064, 990}], 
      Line3DBox[{1021, 1236, 959, 1216, 1212, 916, 1167, 1163, 885, 1108, 
       1104, 1100, 858, 1075, 1071, 844, 1057, 1053, 839, 1048, 983}], 
      Line3DBox[{1023, 1344, 1347, 1270, 1540, 1241, 1355, 1357, 986, 1066, 
       1367, 1369, 1372, 1280, 1557, 1559, 854, 855, 1584, 1585, 1292, 1411, 
       1413, 1416, 1004, 1097, 881, 902, 1142, 1624, 1620, 1146, 1628, 1150, 
       906, 1469, 1465, 929, 1187, 1649, 1645, 1191, 933, 1513, 1509, 1226, 
       1690, 951, 1208, 1676, 955, 1536, 1532, 1528, 1339, 1701, 1039}], 
      Line3DBox[{1025, 1359, 1361, 1275, 1549, 1550, 1246, 1387, 993, 1092, 
       1396, 1399, 1402, 1404, 1291, 1582, 876, 1418, 1420, 1256, 1312, 1317, 
       1156, 910, 1478, 1473, 937, 1195, 1658, 1653, 1200, 942, 1522, 1517, 
       1230, 1694, 963, 1499, 1494, 1490, 1486, 1483, 1035}], 
      Line3DBox[{1028, 1389, 1392, 1285, 1569, 1571, 1574, 867, 877, 1605, 
       1303, 1429, 1432, 1434, 1307, 1614, 1010, 1441, 1160, 1263, 1482, 947, 
       1460, 1327, 1668, 1665, 1330, 1671, 1266, 1697, 1233, 969, 1687, 1335, 
       1505, 1504, 1264, 1639, 1638, 1321, 1032}], 
      Line3DBox[{1030, 1566, 1568, 1252, 1298, 1593, 1595, 1598, 1006, 1428, 
       1305, 1607, 1610, 1613, 1309, 1616, 1260, 1462, 1459, 1456, 1325, 1664,
        1661, 1328, 923, 1642, 1323, 1448, 1446, 1445, 1443, 1179, 977}], 
      Line3DBox[{1033, 1442, 1444, 1322, 1640, 1641, 1265, 1506, 1020, 945, 
       1670, 1329, 1663, 1666, 1326, 1458, 1461, 948, 913, 1319, 1011, 1615, 
       1612, 1609, 1306, 1430, 1427, 1005, 1597, 1299, 1253, 1572, 1570, 1567,
        1284, 1390, 1029}], 
      Line3DBox[{1036, 1484, 1487, 1491, 1495, 1500, 964, 1695, 1231, 1518, 
       1523, 943, 1201, 1654, 1659, 1196, 938, 1474, 1479, 911, 1157, 1632, 
       1315, 1311, 1630, 1008, 1254, 1583, 1581, 1579, 1290, 1400, 1397, 994, 
       1564, 1283, 1386, 1385, 1245, 1548, 1546, 1274, 1026}], 
      Line3DBox[{1038, 1680, 1332, 1485, 1489, 1493, 1498, 962, 1693, 1229, 
       1516, 1521, 941, 1199, 1652, 1657, 1194, 936, 1472, 1477, 909, 1155, 
       1634, 1153, 1438, 1313, 1631, 1257, 1422, 1419, 1417, 1094, 1001, 1406,
        1403, 1401, 1287, 1575, 1248, 1378, 846, 1551, 1276, 1365, 1363, 1360,
        1358, 1059, 975}], 
      Line3DBox[{1040, 1337, 1526, 1529, 1533, 1537, 956, 1677, 1209, 952, 
       1691, 1227, 1510, 1514, 934, 1192, 1646, 1650, 1188, 930, 1466, 1470, 
       907, 1151, 1629, 1147, 1621, 1625, 1143, 903, 882, 878, 1589, 1295, 
       1414, 1412, 1410, 1409, 1093, 999, 1395, 1247, 1558, 1556, 1279, 1370, 
       1368, 841, 1543, 1542, 1272, 1354, 1353, 1240, 1539, 1269, 1024}], 
      Line3DBox[{1042, 1342, 1700, 1338, 1527, 1531, 1535, 954, 1675, 1207, 
       950, 1689, 1225, 1508, 1512, 932, 1190, 1644, 1648, 1186, 928, 1464, 
       1468, 905, 1149, 1627, 1145, 1619, 1623, 1141, 901, 880, 1096, 1003, 
       1415, 1293, 1587, 1586, 1250, 1381, 1380, 853, 1067, 1376, 1374, 1371, 
       1277, 1554, 1552, 985, 1356, 1242, 1541, 1271, 1349, 1346, 1343, 1043, 
       973}], Line3DBox[{1259, 1451, 1452, 1453, 1454, 1184, 926, 1205, 1673, 
       1261, 1310, 1617, 1007, 1602, 1601, 1600, 1301, 1603, 1259}]}}},
   VertexNormals->CompressedData["
1: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
fCbPbiSwDt7lVq4hzibDbFufDA0TOvTH6H9YldQGCfXn+oY/EsHM9kmikTgF
8cx11/Yy6vjOcHhq/2jfKgry2JtSUtPR/p2hcqA6cxUef87gagmJsWj/zhBA
9Nacb0pBjumj7/p72r4z5HnUzE7G87ijN574lOB5HJv/TfOO/7meHH6k0Rm3
24NewUgY989shkDlm8b+uN5/enZW9MR+IouBusSmdSJ/fN0omTqRP1JY/Nv6
bVzG4PQ+fNw/8rxiXMDHnc3wec0FngF83FV4NHve4uPO5r9svL7b51S2fR77
wT7d2PZ5hG2fVWz7nM62z2q2fV5n2+cptn2yGZ6z7dOEbZ9sBnPPON4DeP+H
1pG9JtZnzFgMTlcMrQ1xPXBMXo2B644shkbBkKVeuE46v5fWho9XLYv/bez8
GPt+77Dvl82wbLMVXRPXnxbs23RIvw2Wshhc1yUUT+yfJl4R4pzYP3Vm8Z9+
v+eEg93q8PGl6HtLTD3WDg9nTzL0e21Q4HiEoVt2pATOSAK8cZ9koPO7cXdx
YIg+/v5g5WESWHJPMhx7cCdi7RYyGklL/FJMJoN/zCSD12eTkafOJKRP/mxh
uh+fV95P8r/NOP4uXUvvE+eEf8gn2m33wJ+7TSwGfybvnoMmZJSrfoka+7YJ
JL985bhqSoevFVzkJR1kdCDmxDqx+GZ4rli9zCuXBswarR2zDmGoKSrRy/9s
CwyHXdfzFMLj6eq5F3uaMdS8bsuDJ5taQSiSIJl9nApSlnKtIbso6ILL/prt
fG2Q2jfkefApPr/4sJ67acOs586XxX/ZuBz9wT+w/QUsYT8vWeznhf38wHn2
8/KA/bywnx8oCirPudhARq6bTxflCBBgDte5dcmPKRC12/ZL2xwSen16/heX
PSRQ2xGbTyynfPdDKPgHv7T0F69rPCiiuB9/jnasHnN/c7wdQlkMXx03b0tI
wVCWgt7hwlgCjJ2eZOi94TxgM05Glx+r9wsdI0HqrUn+y/r/gSbTtNOrE211
UtxiWU2GFk4RmwImBfaF2RPHS1oRJvNVY2kTBscdotN9N1KBEcjsmEZpRB39
Wcvsy3B/4V/WM3aeCkk7uWZrkWsRk8teRjmOCts33neCSCroGYYqSd18h/Zq
KIk/PEaDI/aVD6riqX/Z/b6udnKbw5sJU42day8YvUS2a+rnZ8T3gZWgOP/i
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
LSRd9h/IJsp/CHnJubFwfcrLjMcPuZh1Myy5NzILyY3nfVpNmJj6nfY14gYH
zk/fPtGILUbi9KV/sjVZ2NW9PX3lIzJOiTInfdnGw76NmxSUFlyCSFWulrHg
HErl9w7jAS5SVyR1Pl1wF9cvyezZJtAz3hayhhbJhezJUn/luQmY4SurKtpD
1n0iQpNK1nNh2hNv81YxCVcYctoCXeg6iYX1Al1ozzIjC7eZgwZOM7S1NpP2
EikbcYEuND3LkrQL4fa7eesPk/bmLj2TbNK+I5s1Ol9qGgLEizWvkvZQr4bL
0aTdTkaRHC+JD3L5FhuNWXApT90iXMEB13n2q7H+TNxImM/cU8zCGPv5YnUx
DgrCPZ8qpxZjLZEUKSfPRuaGgx+FV7MxyWeQom9XBZ+L14M2W7PRnKdkX6rB
Qr6epHSsTwO+nk57L+7JxvXwgWuYw0Ttp0ajmsQWxLd+Ve7QJe/f+Ynvt1s8
0BJHbI4PhsJzSrZv0i4GDDl3zGrJvHUjZU/3OdVMKHXUfOQaMxDV/FODrcOD
XlmuibY/AasXxZVe+gwYZOxdZ9rPxQzLF6o2XeV47brqKhYw8Efl+lHDq1wE
ydb8esivQfnGSsqeu1z0N/XLWna1QzYg0/jbmx5szhd7HSlK5sNtmw9QFrei
8Lj8z88xvXCmCG3rtuZinVuazT+upN8ed1bfdL0d5mHCc/8h/VyyrUQ+d3kX
Sh+2HKF5dMH2whZdew8eNlJHX983pUDBNG4He24PZnyYt3x2Ggc7rCIOyZF1
3m1HSZZrXRNYvrXZkre4MEus0Hr3uRebJLxqjCUpKOJuvCNuxEPUbK+SGgMq
In9tPlCs0oFje98smlVJ2o32eTjYtcHgvpuT60wqbET+iZpUy0Eo0+ls7RsG
gnj1Yz+86lEVwfeLqOZC4+YR8dURNOyWtvPMk27GPIMnsvcjeQjb163HPNqN
kfIZT/XCKbj3Vd3BfwGZb8RCg34ea8cd9g73l80dsNkeZ2lF8g6LWIsDJ+zI
3zmO8b3NQddElEmkLltTy6JQMTKOkX/6CXcZySO0dcMNu0keOoGxQi2keIUZ
yV8Gzzam6Xdh5Tj+2y+CuP0f/SP+6jnT/0PPudbMtLlEjOTvBf8Wmz+n/sWo
muQdf4/km4WHDo2MrqX+xag7JFW0tppBRIzSzhUI9/zFiJZ6xd+qyCR2Sedc
ottQcXccI3tx3IbGeUxi5b7FMttdqH8xPo29ymcuZRJDlR+M2hZS/2KkeKc4
nrFlEs/yryb2TO36izEcn/FyiweTWCXdXPkzrPMvxtiu79aC7+GbzJdVSJK8
bAJD3TLym6A/ZhRXWjiO5LMTGPEJy0IEeshv95QX3iTtExjhUwYsHwl07/sk
2uVJ+wRGTMIDc8G555BLPu06ef3ocQz61kOPBOc+Hs8HJv1Dju8dx3jk1T7P
kbSn5uYuThJ8Hz6OUabZ+VQwfo7NSo7gnKhkHOMWb6hM2Z3kxV3Sh3xiO6HK
/V8ME6EZCoGbmMS6eo+37652IXtsugBjH32UJngvcQJdUQL9WPtxDE+dGD/B
vs+YwgoVvH/zGseQqfJdJtj3GQ6JUoL3ErPHMdrld24X2DXsFlkL/KFzHGOJ
ptvdwGkMQvRIndO5jZ2gneJ09DeycKsteU1/LIMw4A7rLQvpQoZ6pIoek4mw
5NEV+0l+mnJDWGzQuB2tKVuclhxno3JPIiVmCpMIv3cTt0a7oGp2JlbMSqBv
8IXi8ZBBXHi7pGvXB5JnnS6qUT3OwvT5h4SmzmUSmsUbXtw/04lfJ3wsO8qZ
/+ec92+/PzO/4tQINybxJ6H4wuP9nVj4oPH3WZK/u1vtUnxH+s+DgWMN1EWd
uOagrHSb5PuSjjcb95PrXxzpV5ND7ovEOMaCM5ceaQn+j8bS6Ikl+fv8cQyj
vUdsBfsuLC6SLdh3w3GMSNsfPt7qJK8PGoph/e6Eu61+g96/TFQvn7/dM4FB
uLofy59uSIW0d8DU7TFMeDxXW+a+nEkY8Y0sDWd2Yb6JWNIQOT7zQtyZ96IM
4nB+bzQvsRvS7VajCqlMNEu93Jl4jE54qZpuPPCpBzzuMt2PeUw0/tHo8iB5
Zcdo2EMDMr6dfJyycOt7Jv5bX8u3E7qs+hO6rEoTuqzVE7qsdRO6rDETfS2r
JnRZ/SZ0WdMmdFkXT/S1HJvQZZX7NK7LWjiut0q4Teiv6o7rsaLggeiseGEm
UWUV0eQxlQrjn2l1UyyZmEPbfPuRC4MIk17iXbegF+9pmYbi2Qw4t3pPDthO
J2Rdz2g0t7TiRpu1vipZT1yJ+rhUZg6D8NSOM/KNasMo5UL6u3A2Pi+JiBH0
kbQz6bPStGqFKaO7L+c1Ga//WPXrrmQQ3ZPvpR+TaYO5Be+IdzwbptszXvUf
pRMDeSb01fUt0FfOdSwj8zNDNUsq6CODOHtJJSHoXTtm/cp7t9OXRda1i2oZ
+gyCxg5gzb9JQbTBwnnTMtnwqOg7LnGeTkw/ddDcxqQFqUZrt4a3cVB9d/aZ
z9OLiIjmvhsXTuZg5drlI64Jn6Dyh7XoRnUDQYtja0vIVEHnkoXyj+kf8eYS
MXait5XIjwzPVcqpx9lqVkVdZj+OTp12NdwkFYPrhZJ9i9OISdturbjH+gTd
gKz33vq9hLpdSU8fye8S9TXs9wr6Jgwdoi/QZhIxM8QnHQzoxMZ9h54ffMbE
toqMhG1lPYS/c/Tk0eZ2dOnuNOFFk/XR4976eUwq0Ztc7ZZV34OI9Ma+4MMc
pFe8sJd62kLUvLP9IRPWCxcFo5Wn1EieWPFqMKCAShTKidj4r6QjvHJSZizB
gn/OPKG2N83E0hhn1W1kHRScpNDfQ14n30qv0iG4nLjb+eMgpYqBn7eUCqjB
XNxSHZ5elNpMnLwT4yVMPudTRGavlj7Mgl/6B498w3Li5Hy9WT/c2MgLh4bV
MjYYI7OYrR7NRPfcqA0qqhwU3/jXVP8mA9r+w7uH6ssI7yCdyMgQLuirWuJN
Wsn5h/eWPSmJIObem16racCDjUOt5WgSA60l7k9E/OqJ1KDwxbaVrfjIGa3X
JfqxznNILsGTrItq/IlCJ7LO3NFMef3sGa56TjIWfU3HDQmN2cEfeAicanCN
mpyLAv7ZB8ZDNHw5H1sotYyPNYmQ//mjCOlr0h1WL6bhcen+wJ8efMSciLYT
iymHmYhcolQPA2WVwmpxU3gIDdX+13D4ObYKbZd3XsyAmW0vay1Z18z6NvOC
/mg+Mi5zjGZY0zFtX4CC1xseJN+bfIteX4piy0mKk3xo0AoeuV7yjYf8H6ZD
jO4qDKbVOHf8puPe6cF3Ivk8HG9z7rOyTEDqtkOKmcZ05O2O79uvwsdBC7Nz
q62zoKm8YZPiDRoG+k8M0MP4YA9rOa/zL0DqkPhgfGUvKhX6hzZ18vG4d56T
2q4S7NyqnXLSvougdoXvCSLrgB9TK6YVkfEqp/uzm/eGOkIvVrTR/Akb36f9
MqLpsMA1rfpyjpcFrZLhp2eZ/fDbKyGjKd+JkwFRnRuvdMNQJ6z17dE+xCRn
LQwdroD19LkutTNbwJ0pt374cj+yL9jRlGhNqPpEGA7tbYDs4Rfn9+8cQFLf
j93ds5uw8H7wbQd9OvyYi8XutDYQ2gZ/nnQWcCHvusf1aDYdosH1DsdnVRB5
kbNrm7bw8PvFqMymBCZi687mJoU0E/afqydHrmNjsVCwqBGbBc3YkmDLax8I
U84qi3YtNo5UpcvGP2CBOvwlTSHwDcFr9zniasrB5xHjRUJdbLRd6rULPOxL
+Gl2mh53ZSOH+LbwVy8Lac9Nn+1RzsfaWifxXQs46J/oO/PjP/rO/H/Z/1v/
mv8v+7A/ZaMpySNmv1GwD4jiwfH2+ZdGjf+CquJWdp/kC0blVSfHTvLgu/Th
CiOLFyh7qvdldDcDbZl671aR607ZNUQdeVUI7QSq96adDKwv9pm2/A8XOv7V
Z/yopVBbJe3jTs5bFLVhz1ySR6bNcwyTt6yGidv5JF9yXvu75775kPMGhnl/
+d0WAtcajUWGpgy0H0i+p3uah3PXeCaO1qlYmDmkcmYPA4FCuUvbd/JQvehk
5/BoHjIzV/mMWjOQPyr94aAED/Moyh67ekug0hXl88aIAUqjw6Hhci4uGGlu
l8+vgEv/PobzJyYUapeEdzs1oIOgau69w4Z7bMUfpkIv9P1DS29fa4DN9Miz
7jp8ZCTvCLbyY0LvyodOHcduKLp4Z2vZMVAj9OfX92c9MFf7xZ1/h4rMfdhs
Fs7BAWtb+y0BDGxa1NOiEsKEm8T829EcKvaPvYkWSuhFi1LiDovVDBwwWLPo
5RlyveYvS1rURMfZ1Tl+975yMBz2vf9UeBMsnHcvEs2h4fPGjZVB5mw0rjy8
ea4qFZSVSc+kvtIxsyF36fIlXMTHjBQ+VmyES7LE88PiHARJzrhYOKMZzoHu
/X4fGLgUPlwQ9pWF8Bw7l3W2NGC6rOsU8R5sb+x0u0HG0dtMao9XLxtVLZ4V
BVnNOCspHCwfUAW1/JT4zIuNiDg6sGaMM4AT6jnJFw+wYN8hapidyIGqVOhk
vchcaNBbcn6cIZ+XHT1zvNzZaBf/vmCDahFaaWMpXoEcvIiV1vguw8IvycS8
UqEyTI4X8ZQ4xkVkzYJ1G54J9GBCHKuKK+HY8dpzYAUPyj5fKq/0vSNsok67
+SxiYGz1SEo1gweZ7Zl1aXVxOLDpUtSVSjLe8fKzpzjykUB0ree+C8TuV1l9
vQvocIjcT1Mn453wtMBJX+uKMVp16Q5saDilkbG0opEPdeMLdWZP6pEUH6Bg
ntaN1/mnepri+PAIy1FMUeqAbrqP/2KlNuBjpHDqcx5yqzzTCxOvY+tWKfsG
eQZoqTWfzpH8ceaufLnRZgK3n37MvxRKR/rNgNi22zy4r19n7llWA5lled+N
X9OwXyF7EyeVCzE71tWf4hWgfVpseNKXgc6+q5++z2RC6+fzCw4fuTCPmf2i
c/ZdbGnePf8NlawffRLjerW4WH5gqZywXBJi2ZGJKc/IPJrFq/I9Ra7r3RC9
JxJZcI8+skL7MBunxopXxiWycXdb3zFXsdeoF7tWt06Zg3tyn5VHXrHgWagr
IulchIy+ukwJJgcHX152eGbAxI7MR576e6vA7VbdQvUkebq2j1JDJB2Hj2n9
dJJrhMSHRIpaKRct/cciWK97cTQqrHQysxUWU4wNfndz0ZNvq3jEg4on/neU
U8l6JNdw3vs+HgcJr4XbnRZREPvo69N2Cg3X7I2zBkg/3sFer36SS4en+Wbx
paPtUCnfpPpAigOzLepiYoo0VOm/mmKt0wXrK4doXDoH9BPLr6nc7cby2JWl
/g+pmOfD+vY4hotRPYk8jdYOrDc9/u4Fpxtize/3mftw0Bzv4Xp2Ix3tkiNr
mCUU/A+VHPH0
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  Method->{},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.607689990391265*^9, 3.607691047107472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"cube", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"nYAB", "[", "0", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "2"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"cube", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"nYAB", "[", "0", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "2"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", "Automatic"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.607689947314719*^9, 3.607689958896793*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"cube", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"nYAB", "[", "0", "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["uT", "1"], ",", 
       SubscriptBox["uT", "2"], ",", 
       SubscriptBox["uT", "3"]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "1"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "2"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["uT", "3"], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
8P8AOFHYLQ==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt00eMj0EYB+DPX43er+yB1aLXGw5K9MVKtGX1EmtZlovOaglWOSJKSAQH
XSTKRUtIOOgRghsHhEREPJPvPTyZ7zAz38z7e6eovKJkRSHLsvHUpQ6F+K5g
JZWMZSLj6EIzWtCRDhSlNRY/THsY1xjXs5YnFPOUTrEmzb9LNff4w1Z+c5wt
bOYsB9jPL2bzg03MZQ5taUd7NjKDWZxkL3viHlVxl2NsYB01nGAnbWhJKxrQ
kEbcpz4PeEctbxnEYIbwnnN8pDfd6M5XBvCN/vSiD69YxUv2Ra3T2foykH7s
ZjnLouY96Bo1HE1nmtM6smhCY5rymXp8YRhDGc6jyO5xZFoce37iFi94xhie
M4KRjGJ71HNH1K86algVd6iMbFJGP5kUZ+4Z36WUMCXL+20CFynjKneyvG9u
Rw2mRR1SnjMj07Koe6r5NZZwnSNZ3iupTy4xn8tcYUHsX9CXH1JdjDeNS7nB
P87wl0Wxdh7nOcrB2CNlsZALnOZU5Jry/R65T458X2d5376hnG2x5/SYMzXL
38fhLH8jNTEnvYHa+Hf6b+qRQ6yOs+1iMf8BClxpcQ==
         "]], 
        Polygon3DBox[CompressedData["
1:eJw11VtQVWUYxvEPgqxonLIDtCuLbLygsWZyhpxoFx00qhEaJ8iwi/Ki0Rjw
optCy2qmhnLgqjgEdFaT6GCHsYKKDDMtKSMsCSVBoSIrCIIOUv+n7+HiN3uv
tb71Hd/3Xdkr1yyrSA0hPIo0VKMGj6EK5ajAaqzCebgOi5GNRchDJk7HVlyB
y/G6nyVxltt8hesxD1/gKlyNc3E2fvU9/R/Bg3jE83sI+W6vNlfiN4+ncf/1
/6TH1Rze9Dtq+4bv5Xnel2Gb13MN3sKHuBnL0IEvcSHmYy/u8nw0rzs836TH
1Vx+xgLMwY/+fykW4mL3l4NTsQdduAAn4DNkIYETcTw+wf1Yhx34CefgJAzj
DL+v/TzT+5xwP5lun/D9Ee/zXPehPe7EWlTiY7+T5X51nhN+rnYhJc6nFMXY
HmI8nO8+1fe3IcaL4mY/RrEct2IMQyHG2S4cR3+veR/vDDFedmOWnuFTvIsl
KMB7+AGzka7p8P7X/N6AG9GDz5GBk72/an8KTvN59LhtGwb9q2vF8zshxn2N
5694b8dNWIr38RFuQRE+CHH8QlwUYnz04nGUYR++wwbf6/V+3Oaz1H7u8HWp
z1oxpFhVfCu2fkFuiDF01GdU4j3VmSgvnsOzIeZHR4ixW+K2f/v5RvyDg3jB
c9LcFBOKjaTHG/NZ5XrsQa+zyHunPZzjM9DeKueUe7dj3Gvq9PxG3b/iTPGm
WDwSm/wf38PuT2dzSYi5M+6+VuB3r1lrX+Dnw3434f6ex6YQ61aV39G76/EH
HsAzaA4xj6bQEGJMK7aPoQVP4U+fsc5aNUC1QDFe7DPX2atGqFbkh1hbnsYr
aEUT6rEFL6HW/bb4np4N4FW8iH58g7tDjO3DIcZMme/p2du4NsQcUC4oRlWL
lWNtXk+jx9b8n0Sdx6r1/wbPo97rbvD9Sqvze/fhCe/XvbjH4yk3VCNVK7/3
fm/GIY/d7H1o8h43+75qVlpKbKf2077WHryM1JSYo6qFylHlrq6Vu6q5qpXK
KeVWjq+7Q8zHdu+XviGqfaqBXb6nvSxw227/1zdH3x7VHdWfDI93IMTY2eS1
9ftslCPKFdUg1SJ9I3eGmEMbfYZaT1+I9aLafWm++laoJqk2qKartqum7faa
tXbFhGJPOaXcKnT7afc94L1SjUv32KqXf4WY68pp5bZqbLnn0Oc2Oz3fIdN/
5Zxyb6bm6GwU/zM1UPGk2q2cUe48jMkQ81vfzZlv7aSfaQ6ai2JOsaWYmvK1
4qDV65vwWI1+/h+gbR6Y
         "]], Polygon3DBox[CompressedData["
1:eJwt0btLllEYAPD3+yota3BQaVDTLq4SfKK2pWbkaJORlV+X0UARS9DFwbly
VcFBu4ml1BhZEAT+AUFoRkgONiROpejvwDP8OPC+5znPrb74sLs/n2VZLcfY
4DULPGWN69yghwIXmWaKGSZ5xnvu84A7LPKGSzRzO7595wnPecE6SxS5yz2W
470U00o779imMepo4g/fGGCQD/yKvH30cpO37HIr8qR8B3E/xT1imBXKqI6Z
nOcUO5GvEHP4yxW6uMYF6vnMCI8Z4iP/mWWCcf5xjqt0Rm9V5HJZ9tW5Sjlb
8S/130JF3CulhBMphiP8jrpPcpTNqD31UBf1NXCWSk7HG8fZj51v8JO8R/ec
88xF7amHy7TRwRlqYndphy95xQ8+xSzHGOULh3SpRvc=
         "]], 
        Polygon3DBox[{{215, 188, 189, 112, 111, 214}, {200, 5, 14, 15, 13, 
         202}, {132, 135, 136, 137, 103, 99}, {97, 128, 129, 130, 127, 93}, {
         207, 39, 76, 77, 75, 210}, {149, 150, 144, 143, 116, 118}, {214, 111,
          143, 144, 145, 218}, {247, 131, 132, 98, 94, 246}, {44, 81, 82, 80, 
         76, 41}, {108, 138, 139, 140, 133, 102}, {185, 106, 107, 108, 101, 
         181}, {78, 84, 85, 83, 48, 43}, {18, 45, 46, 44, 40, 15}, {51, 87, 
         88, 86, 81, 46}, {191, 117, 118, 116, 112, 189}, {140, 163, 164, 165,
          161, 134}, {180, 100, 103, 104, 105, 183}, {203, 13, 40, 41, 39, 
         206}, {42, 48, 49, 47, 19, 17}, {220, 146, 147, 148, 114, 
         217}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     Line3DBox[{175, 176, 177, 255, 178, 179, 180, 183, 184, 187, 227, 190, 
      193, 194, 198, 197, 256, 196, 195, 192, 191, 189, 188, 228, 186, 185, 
      181, 182, 175}], 
     Line3DBox[{199, 200, 202, 203, 206, 207, 210, 211, 228, 215, 214, 218, 
      219, 222, 223, 226, 260, 225, 224, 221, 220, 217, 216, 227, 213, 212, 
      209, 208, 205, 204, 201, 259, 199}], 
     Line3DBox[{229, 230, 259, 257, 232, 233, 236, 237, 238, 242, 241, 256, 
      245, 248, 249, 253, 258, 260, 254, 252, 251, 250, 247, 246, 243, 244, 
      255, 240, 239, 235, 234, 231, 229}]}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  Method->{},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.607689939150096*^9, 3.6076910216006308`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellipse", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"YAB", "[", "0", "]"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["uT", "1"], ",", 
      SubscriptBox["uT", "2"], ",", 
      SubscriptBox["uT", "3"]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.2", ",", "0.3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.1", ",", "0.1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"24.999999999999996`", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.1`"}], "+", 
        FractionBox[
         SubscriptBox["uT", "1"], 
         SqrtBox["3"]], "+", 
        RowBox[{
         SqrtBox[
          FractionBox["2", "3"]], " ", 
         SubscriptBox["uT", "2"]}]}], ")"}], "2"]}], "+", 
    RowBox[{"11.11111111111111`", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.1`"}], "+", 
        FractionBox[
         SubscriptBox["uT", "1"], 
         SqrtBox["3"]], "-", 
        FractionBox[
         SubscriptBox["uT", "2"], 
         SqrtBox["6"]], "+", 
        FractionBox[
         SubscriptBox["uT", "3"], 
         SqrtBox["2"]]}], ")"}], "2"]}]}], "\[LessEqual]", "1"}], "&&", 
  RowBox[{
   RowBox[{
    FractionBox[
     SubscriptBox["uT", "1"], 
     SqrtBox["3"]], "-", 
    FractionBox[
     SubscriptBox["uT", "2"], 
     SqrtBox["6"]], "-", 
    FractionBox[
     SubscriptBox["uT", "3"], 
     SqrtBox["2"]]}], "\[LessEqual]", 
   SqrtBox["3"]}]}]], "Output",
 CellChangeTimes->{3.6076767840513372`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"YAB", "[", "0", "]"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    SqrtBox["3"], ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.607676613779182*^9, 3.607676623719653*^9}, 
   3.607676729832026*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.607676624811529*^9, 3.607676730302783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"YAB", "[", "\[Theta]", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["uT", "1"], ",", 
    SubscriptBox["uT", "2"], ",", 
    SubscriptBox["uT", "3"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.607675493657395*^9, 3.607675522560431*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     SubscriptBox["uT", "1"], 
     SqrtBox["3"]], "+", 
    FractionBox[
     SubscriptBox["uT", "2"], 
     SqrtBox["3"]], "+", 
    FractionBox[
     SubscriptBox["uT", "3"], 
     SqrtBox["3"]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}], " ", 
     SubscriptBox["uT", "1"]}], "+", 
    RowBox[{
     SqrtBox[
      FractionBox["2", "3"]], " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     SubscriptBox["uT", "2"]}], "-", 
    RowBox[{
     SqrtBox[
      FractionBox["2", "3"]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], " ", 
     SubscriptBox["uT", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       FractionBox["2", "3"]]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "+", "\[Theta]"}], "]"}], " ", 
     SubscriptBox["uT", "1"]}], "-", 
    RowBox[{
     SqrtBox[
      FractionBox["2", "3"]], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     SubscriptBox["uT", "2"]}], "+", 
    RowBox[{
     SqrtBox[
      FractionBox["2", "3"]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["\[Pi]", "6"], "-", "\[Theta]"}], "]"}], " ", 
     SubscriptBox["uT", "3"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6076755095756197`*^9, 3.607675523249041*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1296, 786},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 107, 1, 51, "Subtitle"],
Cell[689, 25, 150, 3, 28, "Input",
 InitializationCell->True],
Cell[842, 30, 131, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[998, 36, 275, 6, 46, "Input"],
Cell[1276, 44, 4435, 144, 131, "Output"]
}, Open  ]],
Cell[5726, 191, 2984, 87, 63, "Input",
 InitializationCell->True],
Cell[8713, 280, 968, 26, 46, "Input",
 InitializationCell->True],
Cell[9684, 308, 1128, 33, 63, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10837, 345, 104, 2, 28, "Input"],
Cell[10944, 349, 9109, 288, 107, "Output"]
}, Open  ]],
Cell[20068, 640, 91, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[20184, 645, 69, 1, 28, "Input"],
Cell[20256, 648, 734, 19, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21027, 672, 153, 3, 28, "Input"],
Cell[21183, 677, 158, 4, 28, "Output"]
}, Open  ]],
Cell[21356, 684, 6855, 163, 182, "Input",
 InitializationCell->True],
Cell[28214, 849, 7876, 190, 216, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[36115, 1043, 218, 4, 28, "Input"],
Cell[36336, 1049, 8096, 267, 372, "Output"]
}, Open  ]],
Cell[44447, 1319, 108, 3, 28, "Input"],
Cell[44558, 1324, 10927, 257, 369, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55522, 1586, 104, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[55651, 1591, 2973, 79, 97, "Input",
 InitializationCell->True],
Cell[58627, 1672, 4343, 110, 90, "Output"]
}, Open  ]],
Cell[62985, 1785, 200, 4, 30, "Text"],
Cell[63188, 1791, 2050, 53, 63, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[65263, 1848, 2695, 53, 46, "Input"],
Cell[CellGroupData[{
Cell[67983, 1905, 8502, 234, 116, "Print"],
Cell[76488, 2141, 8605, 234, 128, "Print"]
}, Open  ]]
}, Open  ]],
Cell[85120, 2379, 166, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[85311, 2386, 451, 11, 28, "Input"],
Cell[85765, 2399, 95, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85897, 2405, 2579, 55, 80, "Input"],
Cell[88479, 2462, 2742, 52, 468, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91258, 2519, 915, 25, 28, "Input"],
Cell[92176, 2546, 70341, 1187, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162554, 3738, 6398, 175, 282, "Input"],
Cell[168955, 3915, 185927, 3121, 223, "Output"]
}, Open  ]],
Cell[354897, 7039, 837, 23, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[355759, 7066, 2546, 61, 103, "Input"],
Cell[358308, 7129, 2628, 53, 466, "Output"]
}, Open  ]],
Cell[360951, 7185, 3430, 93, 142, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[364406, 7282, 1417, 33, 63, "Input"],
Cell[CellGroupData[{
Cell[365848, 7319, 6730, 183, 108, "Print"],
Cell[372581, 7504, 7176, 193, 136, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379806, 7703, 4118, 87, 148, "Input"],
Cell[383927, 7792, 2375, 61, 140, "Output"],
Cell[386305, 7855, 5432, 151, 120, "Output"],
Cell[391740, 8008, 9491, 270, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401268, 8283, 382, 10, 28, "Input"],
Cell[401653, 8295, 1703, 35, 156, "Output"]
}, Open  ]],
Cell[403371, 8333, 579, 14, 28, "Input",
 InitializationCell->True],
Cell[403953, 8349, 1128, 29, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[405106, 8382, 5115, 114, 148, "Input"],
Cell[410224, 8498, 3190, 64, 286, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413463, 8568, 127, 1, 51, "Subtitle"],
Cell[413593, 8571, 614, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[414232, 8584, 5103, 132, 123, "Input"],
Cell[419338, 8718, 62545, 1075, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481920, 9798, 1029, 26, 28, "Input"],
Cell[482952, 9826, 2101, 44, 180, "Output"]
}, Open  ]],
Cell[485068, 9873, 99, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[485192, 9879, 302, 7, 28, "Input"],
Cell[485497, 9888, 750, 23, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486284, 9916, 852, 20, 28, "Input"],
Cell[487139, 9938, 2699, 81, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489875, 10024, 1640, 42, 80, "Input",
 InitializationCell->True],
Cell[491518, 10068, 2165, 58, 90, "Output"],
Cell[493686, 10128, 2007, 54, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495730, 10187, 442, 11, 28, "Input"],
Cell[496175, 10200, 1689, 35, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497901, 10240, 2314, 58, 80, "Input",
 InitializationCell->True],
Cell[500218, 10300, 20523, 552, 248, "Output"],
Cell[520744, 10854, 14997, 402, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535778, 11261, 382, 8, 46, "Input"],
Cell[536163, 11271, 18088, 528, 523, "Output"],
Cell[554254, 11801, 16131, 457, 523, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570422, 12263, 601, 15, 46, "Input"],
Cell[571026, 12280, 11337, 336, 555, "Output"],
Cell[582366, 12618, 11079, 323, 555, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593482, 12946, 253, 6, 28, "Input"],
Cell[593738, 12954, 149, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593924, 12962, 1632, 38, 63, "Input",
 InitializationCell->True],
Cell[595559, 13002, 23363, 644, 1333, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618959, 13651, 162, 3, 28, "Input"],
Cell[619124, 13656, 1845, 55, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621006, 13716, 186, 3, 28, "Input"],
Cell[621195, 13721, 4693, 146, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625925, 13872, 360, 7, 46, "Input"],
Cell[626288, 13881, 4335, 135, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630660, 14021, 491, 11, 28, "Input"],
Cell[631154, 14034, 12052, 371, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643243, 14410, 183, 3, 28, "Input"],
Cell[643429, 14415, 113, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643579, 14421, 13116, 382, 277, "Input"],
Cell[656698, 14805, 48243, 812, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[704978, 15622, 1371, 41, 57, "Input"],
Cell[706352, 15665, 48242, 811, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754631, 16481, 870, 21, 46, "Input"],
Cell[755504, 16504, 416, 11, 237, "Output"]
}, Open  ]],
Cell[755935, 16518, 339, 9, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[756299, 16531, 1066, 29, 28, "Input"],
Cell[757368, 16562, 2240, 49, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[759645, 16616, 2038, 50, 46, "Input"],
Cell[761686, 16668, 3123, 56, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764846, 16729, 198, 4, 28, "Input"],
Cell[765047, 16735, 1216, 45, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766300, 16785, 1466, 50, 60, "Input"],
Cell[767769, 16837, 54007, 901, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[821813, 17743, 518, 14, 74, "Input"],
Cell[822334, 17759, 402, 13, 48, "Output"],
Cell[822739, 17774, 1857, 62, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[824633, 17841, 253, 5, 28, "Input"],
Cell[824889, 17848, 1857, 62, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826783, 17915, 2336, 70, 158, "Input"],
Cell[829122, 17987, 1604, 53, 45, "Output"],
Cell[830729, 18042, 233, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[830999, 18052, 3589, 98, 167, "Input"],
Cell[834591, 18152, 2681, 49, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[837309, 18206, 686, 18, 84, "Input"],
Cell[837998, 18226, 309, 8, 47, "Output"],
Cell[838310, 18236, 309, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838656, 18249, 1702, 47, 79, "Input"],
Cell[840361, 18298, 6609, 182, 102, "Output"]
}, Open  ]],
Cell[846985, 18483, 1332, 38, 79, "Input"],
Cell[CellGroupData[{
Cell[848342, 18525, 1384, 42, 63, "Input"],
Cell[849729, 18569, 2642, 50, 376, "Output"]
}, Open  ]],
Cell[852386, 18622, 160, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[852571, 18628, 996, 27, 46, "Input"],
Cell[853570, 18657, 2280, 36, 103, "Message"],
Cell[855853, 18695, 2281, 36, 103, "Message"],
Cell[858137, 18733, 3729, 111, 117, "Output"]
}, Open  ]],
Cell[861881, 18847, 318, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[862224, 18859, 881, 24, 28, "Input"],
Cell[863108, 18885, 5010, 139, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[868155, 19029, 6207, 165, 143, "Input"],
Cell[874365, 19196, 7872, 214, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882274, 19415, 2047, 58, 127, "Input"],
Cell[884324, 19475, 2953, 84, 105, "Output"]
}, Open  ]],
Cell[887292, 19562, 1142, 37, 63, "Input"],
Cell[CellGroupData[{
Cell[888459, 19603, 6526, 166, 237, "Input"],
Cell[894988, 19771, 172301, 2899, 365, 162795, 2742, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1067304, 22673, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[1067423, 22678, 395, 9, 46, "Input"],
Cell[1067821, 22689, 1058, 36, 52, "Output"],
Cell[1068882, 22727, 1568, 47, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070487, 22779, 751, 20, 63, "Input"],
Cell[1071241, 22801, 1049, 37, 57, "Output"],
Cell[1072293, 22840, 1111, 38, 57, "Output"],
Cell[1073407, 22880, 1050, 37, 52, "Output"]
}, Open  ]],
Cell[1074472, 22920, 283, 5, 30, "Text"],
Cell[1074758, 22927, 444, 10, 46, "Input"],
Cell[1075205, 22939, 553, 13, 28, "Input"],
Cell[1075761, 22954, 189, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[1075975, 22961, 467, 10, 28, "Input"],
Cell[1076445, 22973, 6304, 170, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1082786, 23148, 6194, 149, 148, "Input"],
Cell[1088983, 23299, 4799, 89, 580, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093819, 23393, 205, 4, 28, "Input"],
Cell[1094027, 23399, 228, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094292, 23409, 1868, 50, 131, "Input"],
Cell[1096163, 23461, 36671, 614, 490, "Output"]
}, Open  ]],
Cell[1132849, 24078, 126, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[1133000, 24084, 337, 9, 58, "Input"],
Cell[1133340, 24095, 875, 28, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134252, 24128, 365, 12, 81, "Input"],
Cell[1134620, 24142, 133, 1, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134790, 24148, 241, 4, 28, "Input"],
Cell[1135034, 24154, 515, 20, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135586, 24179, 188, 5, 57, "Input"],
Cell[1135777, 24186, 125, 4, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135939, 24195, 279, 9, 57, "Input"],
Cell[1136221, 24206, 178, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136436, 24215, 511, 16, 76, "Input"],
Cell[1136950, 24233, 151, 4, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137150, 24243, 107, 1, 51, "Subtitle"],
Cell[1137260, 24246, 1009, 28, 46, "Input"],
Cell[1138272, 24276, 969, 28, 63, "Input"],
Cell[CellGroupData[{
Cell[1139266, 24308, 369, 7, 28, "Input"],
Cell[1139638, 24317, 2926, 86, 63, "Output"]
}, Open  ]],
Cell[1142579, 24406, 580, 16, 28, "Input"],
Cell[CellGroupData[{
Cell[1143184, 24426, 34, 0, 28, "Input"],
Cell[1143221, 24428, 5822, 180, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149080, 24613, 117, 3, 28, "Input"],
Cell[1149200, 24618, 609, 17, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149846, 24640, 318, 7, 28, "Input"],
Cell[1150167, 24649, 488, 8, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150692, 24662, 533, 11, 46, "Input"],
Cell[1151228, 24675, 2353, 73, 77, "Output"],
Cell[1153584, 24750, 2355, 73, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155976, 24828, 601, 13, 28, "Input"],
Cell[1156580, 24843, 24034, 402, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1180651, 25250, 791, 25, 45, "Input"],
Cell[1181445, 25277, 37479, 631, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1218961, 25913, 75, 1, 28, "Input"],
Cell[1219039, 25916, 486, 14, 28, "Output"]
}, Open  ]],
Cell[1219540, 25933, 1588, 46, 46, "Input"],
Cell[1221131, 25981, 1323, 28, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1222479, 26013, 3051, 66, 63, "Input"],
Cell[1225533, 26081, 2400, 47, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227970, 26133, 132, 2, 28, "Input"],
Cell[1228105, 26137, 747, 30, 78, "Output"]
}, Open  ]],
Cell[1228867, 26170, 47, 0, 28, "Input"],
Cell[CellGroupData[{
Cell[1228939, 26174, 130, 2, 28, "Input"],
Cell[1229072, 26178, 825, 30, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1229934, 26213, 134, 2, 46, "Input"],
Cell[1230071, 26217, 485, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230593, 26237, 149, 3, 28, "Input"],
Cell[1230745, 26242, 347, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1231129, 26257, 415, 11, 28, "Input"],
Cell[1231547, 26270, 261, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1231845, 26282, 407, 11, 28, "Input"],
Cell[1232255, 26295, 216, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232508, 26306, 344, 9, 28, "Input"],
Cell[1232855, 26317, 496, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1233388, 26336, 618, 18, 80, "Input"],
Cell[1234009, 26356, 179, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1234225, 26365, 165, 3, 28, "Input"],
Cell[1234393, 26370, 311, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1234741, 26384, 370, 11, 46, "Input"],
Cell[1235114, 26397, 157, 4, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235320, 26407, 104, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[1235449, 26412, 2648, 66, 46, "Input"],
Cell[1238100, 26480, 1444, 40, 53, "Output"],
Cell[1239547, 26522, 835, 19, 28, "Output"]
}, Open  ]],
Cell[1240397, 26544, 471, 15, 52, InheritFromParent],
Cell[CellGroupData[{
Cell[1240893, 26563, 459, 11, 28, "Input"],
Cell[1241355, 26576, 661, 22, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242053, 26603, 734, 22, 28, "Input"],
Cell[1242790, 26627, 81828, 1397, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324655, 28029, 1320, 32, 28, "Input"],
Cell[1325978, 28063, 114709, 1888, 423, 90162, 1485, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1440702, 29954, 594, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[1441321, 29973, 831, 24, 28, "Input"],
Cell[1442155, 29999, 69571, 1132, 412, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1511763, 31136, 1379, 34, 28, "Input"],
Cell[1513145, 31172, 72267, 1183, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1585449, 32360, 337, 7, 46, InheritFromParent],
Cell[1585789, 32369, 1017, 31, 48, "Output"],
Cell[1586809, 32402, 556, 16, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1587402, 32423, 58, 1, 28, "Input"],
Cell[1587463, 32426, 441, 15, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1587941, 32446, 132, 2, 28, "Input"],
Cell[1588076, 32450, 1470, 38, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589583, 32493, 213, 7, 28, "Input"],
Cell[1589799, 32502, 570, 20, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1590406, 32527, 320, 9, 28, "Input"],
Cell[1590729, 32538, 883, 26, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1591649, 32569, 916, 27, 49, "Input"],
Cell[1592568, 32598, 9159, 259, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1601764, 32862, 1090, 26, 28, "Input"],
Cell[1602857, 32890, 113705, 1804, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1716599, 34699, 757, 22, 28, InheritFromParent],
Cell[1717359, 34723, 80578, 1308, 413, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1797974, 36036, 826, 26, 28, "Input"],
Cell[1798803, 36064, 872, 26, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1799712, 36095, 826, 26, 28, "Input"],
Cell[1800541, 36123, 13887, 236, 413, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1814465, 36364, 456, 14, 28, "Input"],
Cell[1814924, 36380, 1170, 42, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1816131, 36427, 279, 8, 40, "Input"],
Cell[1816413, 36437, 147, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1816597, 36445, 284, 8, 28, InheritFromParent],
Cell[1816884, 36455, 1565, 55, 58, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
